cset: moving following pidspec: 31803
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.228666286 seconds)
loading group "string"... done (took 0.459905162 seconds)
loading group "linalg"... done (took 7.550605976 seconds)
loading group "parallel"... done (took 0.169915411 seconds)
loading group "find"... done (took 1.166871112 seconds)
loading group "tuple"... done (took 2.080404394 seconds)
loading group "dates"... done (took 1.3188531 seconds)
loading group "micro"... done (took 0.243847186 seconds)
loading group "io"... done (took 0.649739054 seconds)
loading group "scalar"... done (took 40.563131071 seconds)
loading group "sparse"... done (took 12.435827134 seconds)
loading group "broadcast"... done (took 1.110335085 seconds)
loading group "union"... done (took 13.641310589 seconds)
loading group "simd"... done (took 4.760247514 seconds)
loading group "random"... done (took 9.615255566 seconds)
loading group "problem"... done (took 1.984887163 seconds)
loading group "array"... done (took 22.435009778 seconds)
loading group "misc"... done (took 1.415718599 seconds)
loading group "sort"... done (took 3.575435981 seconds)
loading group "collection"... done (took 19.378882797 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.510715805 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.136716875 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131024354 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146740465 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203163014 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143099026 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156058523 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.11385927 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.962336587 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.185887943 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153936868 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.511002267 seconds)
done (took 5.100734876 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.2236343 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094622513 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102633915 seconds)
  done (took 0.870910831 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077260531 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147227957 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094292662 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077875867 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094526726 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.0777845 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09491725 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077464686 seconds)
  done (took 1.343741616 seconds)
done (took 3.200247471 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.730213966 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.276227095 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202698318 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.460487641 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194794071 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215259739 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674646867 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.354528017 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252390678 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100278814 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142779265 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387680551 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134884715 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679586732 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092005962 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123423611 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178532804 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.45062423 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084457459 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110304365 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116303217 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142068719 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128367221 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090340687 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183722856 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083625378 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193478791 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107657078 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.08013842 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289451367 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201264404 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.678099009 seconds)
  done (took 10.856706855 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110422977 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13320283 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09727318 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137596645 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133336698 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098506203 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083596534 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096476946 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120947876 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174408011 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113766203 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136455972 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094268882 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082222911 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114912429 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243820669 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118858745 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103720859 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099897864 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103044778 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122032746 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112071619 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107888256 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09328331 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165627625 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220755263 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112376636 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126911764 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096430245 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111552226 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142637426 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141825702 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09512509 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079894786 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172683342 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125386596 seconds)
  done (took 5.118050618 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186772957 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120409629 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167701723 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163496666 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.140974482 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.15932167 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113286822 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244178723 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.121201097 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.159321225 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17335084 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13945457 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09945729 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096604245 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081283437 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096874323 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.666352693 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161463017 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.11489953 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116033068 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103938435 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099771241 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362611959 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086784589 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095308351 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081092833 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081583152 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.076832583 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157989267 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098763351 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.140505027 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121068478 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082020761 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134551758 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.208329499 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109374836 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134762912 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094930761 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078967289 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178377317 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10665939 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079255208 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120822802 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133892345 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133856578 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096464714 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080622311 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204419387 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095247643 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.077941587 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114482248 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.955899042 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179829147 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.102511596 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095328276 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.321415665 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098270516 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097305036 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077576636 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.259801069 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.183552197 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097879968 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080578526 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097272566 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081445782 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400374993 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080412678 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.996193029 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081826896 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106208507 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082202889 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096940703 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103627614 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087245044 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114157115 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07922841 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09962355 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079493137 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096335602 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080913441 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108513156 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101122221 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081692198 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166552943 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079128995 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114277578 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126252251 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083071137 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095801703 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129874456 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082748542 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097712775 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132549544 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080448423 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108883532 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09346908 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127389182 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098643924 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095938109 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.19760265 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081449594 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125216006 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098210965 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113688594 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111926608 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098481754 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0838906 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096162603 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077517283 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164391646 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079135292 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09688758 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080074258 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110218532 seconds)
  done (took 22.842265827 seconds)
done (took 39.497517213 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.325491294 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102072921 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102201093 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.1015202 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100003637 seconds)
  done (took 1.482995308 seconds)
done (took 2.211734472 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287172659 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17200866 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094428017 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165311378 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09254003 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173349099 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158256518 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111634359 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218272437 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076994102 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162351126 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094031815 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076308345 seconds)
  done (took 2.634502993 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094310742 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114955307 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081933654 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109891139 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076285978 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11116037 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092532499 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117360696 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108565075 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084327076 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092817203 seconds)
  done (took 1.809164065 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093745962 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115219525 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081122447 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10920264 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076301132 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110209397 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092352492 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116119742 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108761049 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085658621 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092495954 seconds)
  done (took 1.804684382 seconds)
done (took 6.965110717 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090773348 seconds)
  done (took 0.808739264 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.916218702 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.926496704 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112128416 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148513629 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.299117032 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192446543 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.476932514 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12439295 seconds)
  done (took 11.12402409 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.143556718 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085640999 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103345693 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085029787 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101004309 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082796948 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099346286 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101787211 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082438156 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.10110428 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083062637 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100747012 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098310157 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083297323 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102205688 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082961615 seconds)
  done (took 2.32348604 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118998742 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117726577 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106200698 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108345696 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087431408 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10478173 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105409176 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088798766 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101592432 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103782568 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089560621 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105027847 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103320036 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078721843 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105349044 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107887579 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085371117 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105151117 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105441551 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.08988083 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105105329 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095106109 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086484062 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105611907 seconds)
  done (took 3.242460938 seconds)
done (took 18.221309482 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159533208 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107949625 seconds)
  done (took 0.996904757 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094315 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112834814 seconds)
  done (took 0.939081394 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096948976 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094955593 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120690252 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109165473 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079763055 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095588444 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118536049 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080444008 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095524134 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079931112 seconds)
  done (took 1.707181851 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081493956 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109176215 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101526822 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094598841 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105263194 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094495215 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087563867 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098007136 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109208911 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076848918 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102525224 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114007402 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08501959 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116897025 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104543232 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083455166 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101086627 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097890103 seconds)
  done (took 2.500819678 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079074339 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09648707 seconds)
  done (took 0.912440661 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081445966 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093422334 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080463896 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096904386 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094034056 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076276198 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093779058 seconds)
  done (took 1.352273528 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.469197615 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134592726 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.251020713 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085594384 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119004236 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301945571 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097950066 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083591779 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102402568 seconds)
  done (took 2.438113458 seconds)
done (took 11.581399576 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.091960467 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117626689 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112096485 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.465601845 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106367391 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097154661 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159896162 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.250240545 seconds)
done (took 2.141748807 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.14958503 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324497621 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11302696 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067094312 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094437825 seconds)
  done (took 1.342511132 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080124743 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100080285 seconds)
  done (took 0.922832348 seconds)
done (took 3.160373465 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080020176 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.131309965 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079784354 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095710046 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07958654 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.095754497 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077292673 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.094616926 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077057029 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.095868974 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095924659 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.079537512 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.095952466 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079683081 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093691197 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077459449 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096100853 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077527061 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093938702 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.078855357 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094296582 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079160955 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093855463 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077681781 seconds)
  done (took 2.897983556 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099611039 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097771799 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102577972 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085443014 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101392993 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085168554 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102265175 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096673866 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08593284 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098954669 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100789835 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084012824 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099116098 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084149925 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099375012 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100502725 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086585797 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098217721 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083241391 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100906167 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101371714 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080611296 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10120594 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102001605 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083710404 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101128071 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082746218 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097452856 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101776295 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083901134 seconds)
  done (took 3.575393748 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084700724 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093368118 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077673733 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101396764 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077504828 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096322573 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077230581 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095131745 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078698738 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094404593 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079454117 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094209158 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077192871 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095711471 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078986546 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097912652 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107206381 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077586904 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094226465 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077859236 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097769114 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07711943 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094485215 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077505778 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094262738 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077281165 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095652264 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077863588 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095768476 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077129961 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097448194 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080769107 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094493652 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084220576 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098700671 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077532849 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09774325 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.0948055 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079851532 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093947685 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07704176 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.09408722 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077160235 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10044288 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077785438 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096630391 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078108144 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096427129 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077895016 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09852542 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077760471 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094598024 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.07962384 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095287849 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098571525 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077173869 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095981131 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077482977 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095788252 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077965166 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09416556 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077376667 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096059284 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077767612 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110389176 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085044333 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094806894 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07972018 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096454929 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079915328 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096599991 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109474414 seconds)
  done (took 7.113818563 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083654459 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105983219 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079911829 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097252779 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075772032 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095703691 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098072442 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078554725 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097403865 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08524061 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095106488 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079809858 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096803733 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107599648 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078241522 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09663777 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08462329 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092921882 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078119117 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099652986 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078451293 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098593525 seconds)
  done (took 2.735888514 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207702781 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105227068 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14171016 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106885146 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084778364 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106216904 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102252105 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086395333 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102450314 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08312598 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100203052 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102035363 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083369011 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100031051 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100446491 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084125573 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102117854 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084632504 seconds)
  done (took 2.639763056 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092725676 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097797637 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102500507 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097926985 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097935972 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08283565 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103288926 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106988926 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08338537 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097428821 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090186566 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099203499 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100501448 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081018899 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100068083 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081118527 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100856375 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081088614 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106751937 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10308378 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103402379 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090452089 seconds)
  done (took 2.858233999 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096682897 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100559461 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117476142 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083006394 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094782862 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078880566 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104797023 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081233521 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106952479 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099057591 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080425039 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096496538 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087525554 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097547758 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103472957 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08102223 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100484844 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080284175 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100023829 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076826481 seconds)
  done (took 2.624847797 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102463601 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099216772 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099289099 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09142189 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099622656 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082188749 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108717528 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099874317 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082841266 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124171031 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099448585 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082190909 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109342705 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105503245 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099626 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091689613 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108141053 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109039395 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082652045 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099088271 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125191412 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082914874 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108888843 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.208697269 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083504854 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099848501 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098925409 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088863666 seconds)
  done (took 3.632414118 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080068853 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097945969 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078302567 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095948565 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078270433 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096429708 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078421263 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095575843 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080540656 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095736416 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080579392 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09745157 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081063315 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098583581 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080965176 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097739808 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082642975 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095221748 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078792162 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095631054 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080287301 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097490121 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08093977 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095753786 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07894788 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098051561 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078183276 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095738194 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080866381 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095677792 seconds)
  done (took 3.408992002 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090421942 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105644155 seconds)
  done (took 0.957561229 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078378687 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113884537 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078361934 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102057948 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08603451 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09867617 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107757525 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086269917 seconds)
  done (took 1.511763015 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095500638 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109706731 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082998264 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111182896 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109236777 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095231353 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159575939 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100465597 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087487516 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097727937 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112590624 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080204814 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104692674 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081513604 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104932031 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087791637 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097209896 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087141473 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101983867 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098261142 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084489822 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109965943 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085054964 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096213948 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082905569 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.10948017 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109209999 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083387609 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102739396 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108223743 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086803548 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093771788 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082159422 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100522079 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079576807 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.1084971 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111834674 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08465016 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107464 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083783514 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110809594 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09503416 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08699552 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104709846 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091800426 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099876854 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082411378 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093876771 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096981999 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083633636 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095228227 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0823147 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093802025 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089274008 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103764389 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112144955 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080890924 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101177861 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084734914 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102752854 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088246836 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10185865 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084062072 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097714706 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106010804 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085366008 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107471423 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077459776 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093980412 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079530616 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107466317 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122206348 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089758303 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100701953 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083149677 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097382282 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102465643 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082796792 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10682955 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090443352 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099011282 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106388877 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090143987 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100264779 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083999899 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107148633 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097083213 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084099234 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096762758 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096267302 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09838373 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.07983841 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098046388 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108164214 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085340659 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099453473 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079890447 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107446619 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079229741 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101084492 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083416687 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100943477 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108433498 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087835631 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107224612 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107478462 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089842492 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100129031 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085529288 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096349145 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083457964 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102270743 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106152505 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07657041 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102097017 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083828737 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101281147 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088631681 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098377722 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.08188771 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107018325 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10704309 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081316552 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097000435 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085194257 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099739978 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086247238 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106665712 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098913752 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07665053 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095231745 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.08567252 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10071074 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086744001 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105277013 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103361074 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076479966 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098364348 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086771057 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107374373 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100624814 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083060879 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105171542 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083618897 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099071688 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087266971 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101938354 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08143739 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104722015 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101998096 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077327702 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10408943 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084792914 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098886808 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086253791 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104553953 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102831059 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083375966 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099433645 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088139858 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101767863 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08206625 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100180164 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098846315 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091695708 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103280339 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078248867 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097613309 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090593969 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.0980645 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081543923 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099445193 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102792119 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08365785 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098838146 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081963607 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101415936 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112362724 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087440089 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102625992 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088372588 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109588851 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082141272 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101909354 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099771389 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083517319 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.10200698 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089616697 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105343196 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106800437 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084115832 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096608134 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088692776 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107900303 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081479609 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.09821493 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081731516 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10346219 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106698264 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086042374 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100606057 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081025183 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101218507 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104735884 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084660509 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.10021183 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081436442 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105961302 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081796912 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107053746 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101507469 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091461828 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103633648 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077283394 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103777816 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097843245 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088294708 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095352868 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079685705 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099054252 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083662872 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099620152 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084545188 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094731592 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088918696 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108325734 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100728255 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081661696 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.1007238 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090685271 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102143285 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086375994 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104255312 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106625097 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095182105 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099771238 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085714911 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110360607 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101522984 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076450578 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105673447 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081569438 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100070385 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081906235 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098325449 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085712808 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110144025 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105326189 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077077009 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104268816 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080961734 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100077793 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077842165 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.106889089 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104676357 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084192769 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109906294 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084051921 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101727722 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104308111 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082067008 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102243732 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083523518 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103795042 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083307256 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103015583 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081094449 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103927228 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099641967 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080875712 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102486063 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083161852 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101148634 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088766775 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102419988 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082813281 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104088323 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102763489 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083506827 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101884052 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082524531 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103947026 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084737938 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101286444 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085188749 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096150961 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108581049 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082508263 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10895978 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082942778 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097693166 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088921056 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104449389 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106077717 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084161452 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102090649 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084058984 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100427088 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086486016 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109539723 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098937377 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091225853 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107031415 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083303149 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104222571 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083714124 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102309137 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099854771 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084808178 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102246751 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083395807 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101109816 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.08784588 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.10352791 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082714425 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102660466 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102329125 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082963015 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102196841 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077426097 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100090127 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082759241 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101526737 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090652468 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102088055 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103711129 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081402156 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102330233 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08242727 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097756748 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091023867 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110718068 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102126766 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091358957 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100828559 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08439818 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111691143 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095769014 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081398503 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099899303 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081001691 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110045938 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084238102 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110838205 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100559804 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082213051 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09898366 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084109752 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099793701 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077871296 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.10004986 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086342906 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.10387742 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082094881 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102757929 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103629447 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084780578 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1082432 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082493367 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102831858 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.083473965 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098375464 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081910323 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100405666 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104942069 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.0840578 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098652021 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080174488 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101093933 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084763405 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110521312 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082517052 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102579887 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090842998 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100579532 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.10445652 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086723768 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095787446 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.08610632 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101305245 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082567577 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100292829 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.10536018 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086640759 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103253642 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090742269 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101500777 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084125023 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101818741 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099374131 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083334613 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101541539 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082965003 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101272918 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084451731 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110280381 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080806882 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103834689 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100678521 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083165684 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105987887 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084698853 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103204828 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109635587 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086334479 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103250534 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.08974166 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105336519 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086293746 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102872163 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102823272 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089426758 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100278843 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091030926 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101675388 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083692108 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103762304 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080138641 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101761618 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101007132 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081652966 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106675333 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083885283 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.10100867 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082850716 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09927231 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085357504 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106054583 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109959535 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085396289 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104471778 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.07905553 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099090693 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084914115 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099913841 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084028466 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103879201 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107726358 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085765777 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102236836 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081678099 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109999312 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107850496 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088432216 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099639371 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089035705 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102239999 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.0867715 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103366665 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083202047 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104106218 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106944488 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085330751 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101624909 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091988507 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106129354 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085010087 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10352218 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.101717804 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083315002 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098232127 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084519174 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104489049 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089517058 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104644188 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10170754 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09258266 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101345094 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083275417 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106301664 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082584724 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108281931 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097096448 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083777131 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103446654 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085032002 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097903975 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083075933 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099626954 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086506307 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101982955 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079107712 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11190731 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108946675 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085182035 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100646145 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082606411 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097803305 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079353073 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101723858 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103146928 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085259301 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110346734 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08338856 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101317356 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078805889 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102282932 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087039384 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10485088 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080441884 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098516903 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100610183 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085623721 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109382052 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082706002 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102815147 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086870474 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104619512 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081114003 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106945786 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098624443 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088059243 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112633699 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083990479 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103198738 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.1073015 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091563669 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103368576 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078909948 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103437076 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085416145 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103366043 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103581074 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085109819 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117975879 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086316292 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101375611 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082773373 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105616179 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101248371 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090358692 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103814292 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085313733 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107654946 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084805326 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111140386 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104648682 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089483401 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104526892 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085753783 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101633303 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101864254 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081912236 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100922629 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085621289 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104468619 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088180974 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110206127 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.10121546 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093644076 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110749132 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088713158 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099716766 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082579993 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101814571 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.07847045 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104259169 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099960492 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.081188788 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100628471 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082538241 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10277776 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090098582 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103866257 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08486591 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103158102 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096724664 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086592918 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105059674 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084312458 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09860114 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084355865 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104237392 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089534318 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110383583 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10327945 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085284794 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103695972 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084939909 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098413733 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090193077 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101864979 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086285798 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102496782 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084247302 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104906424 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106606511 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090075201 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105051137 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08584461 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116017618 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105236255 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081764908 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100083449 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089781273 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101377663 seconds)
  done (took 57.549916989 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146412922 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081362555 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098267002 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078852579 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113203002 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099761122 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080235869 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099195661 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080677426 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101972201 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079291728 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098355078 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10950794 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124228775 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093215381 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103844683 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097853198 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08157631 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097979732 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081375045 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108895128 seconds)
  done (took 2.867428143 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104336219 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117754111 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114937706 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118954257 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089763992 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114996801 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115494363 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115893073 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099736065 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111442066 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118910944 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115365575 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091863025 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110056958 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1104657 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094189595 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11920149 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10925122 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115677797 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095319888 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114477435 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115437378 seconds)
  done (took 3.225438698 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084107405 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102298026 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085444678 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097641908 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082872484 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097411873 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088131475 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101309051 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086805084 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.10127148 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081554648 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101795807 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103929924 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078999127 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10147094 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081622182 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152658276 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10635628 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083452555 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104959128 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098912799 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086358255 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098852123 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08019406 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101562945 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088423081 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103272633 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081760421 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103455976 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082438632 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103265949 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081209619 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104646207 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103080903 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083314885 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101707701 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083803759 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102407958 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079876144 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100879884 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084564928 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099778111 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08432599 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104605902 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081905733 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101500938 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085039055 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103346966 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098215182 seconds)
  done (took 5.450416505 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104867249 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160418755 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086671929 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143639262 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121495114 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113535871 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088245405 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14184256 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10233536 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082181839 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123672595 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121139257 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104621281 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090072739 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110439021 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103605477 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085649699 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102939331 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108586292 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08499785 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108666776 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090442305 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118895988 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11763763 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108481374 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083533192 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103533635 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10815869 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098507551 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109879388 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109180904 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09128637 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120756717 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104934198 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083398293 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106765203 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122222589 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104633509 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086918645 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100848442 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087224418 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110080098 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110574706 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102337548 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104389184 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108365548 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084401079 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100982128 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117936241 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087692682 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113032331 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.11965985 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108363662 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08483144 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108984941 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120792042 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.0852899 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10209298 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.08802912 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117675632 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101572604 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08873013 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118677683 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106040709 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.11282101 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098622128 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109640103 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108888471 seconds)
  done (took 8.122439492 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093927369 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111493416 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120718827 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121306676 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091938664 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112182384 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111256053 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090920893 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111188677 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116315367 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111232299 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134430646 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086421298 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115033788 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110563279 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091742357 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111002364 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111915532 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092274522 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111821555 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111486705 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120564175 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092789811 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121452374 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141214119 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105611309 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091175716 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111674572 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121554661 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11091438 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123055024 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091415914 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111012503 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120486711 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124058398 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091084775 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104219195 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110013424 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091198449 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112209202 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106038778 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12150608 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090941514 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10580094 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110853001 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092138259 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122574891 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124646153 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114912331 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098570531 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111836264 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120886475 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110956994 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091441349 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120445158 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146855265 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121048369 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120893218 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11121104 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120226207 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102212238 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128167947 seconds)
  done (took 7.684779011 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108101438 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115691187 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117833569 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100026543 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082770042 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108589183 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083124819 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10264011 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114361171 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095532769 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117061693 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109091072 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112507884 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097260578 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10880253 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112453514 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089039885 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108416504 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113897342 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108991208 seconds)
  done (took 2.93418784 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093806734 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.1246493 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084858568 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111695745 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107877292 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091549464 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10771792 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107152607 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085541277 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107311428 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096292121 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117068784 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105518535 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092122633 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115973014 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111474087 seconds)
  done (took 2.491854465 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096282856 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117017983 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120384104 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085349835 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103727245 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080774823 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105647281 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100353931 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081703322 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121494762 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085291327 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108084794 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104618717 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083744187 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100783734 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087888105 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101317069 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082421373 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105685743 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121556516 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095978196 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104628863 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105341243 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.0868598 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105264536 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090038213 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105251277 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102415358 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083340087 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105312057 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085065235 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113261438 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101183781 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084725685 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103116747 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08261685 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104438364 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085398009 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10896902 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104619848 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083793196 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105336898 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085767259 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106748264 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080835892 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105420001 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100948717 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092039634 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103732602 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085189192 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105345216 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.10716692 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086736618 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116263782 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088774254 seconds)
  done (took 6.241458843 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09905631 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110221696 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080326248 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102897389 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087841333 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107205595 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108538933 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087862511 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107089481 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083060294 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106614924 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089397659 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108268171 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108272015 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087656526 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108602526 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080113244 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106802728 seconds)
  done (took 2.612105422 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09074874 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10522157 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09278572 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10541431 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084948937 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108661892 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08018985 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104139741 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102767611 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085796856 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104531903 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.08741744 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103227446 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.08764836 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105801061 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084798841 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107502443 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103547381 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085609213 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10050616 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087662521 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103794876 seconds)
  done (took 2.957610616 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118087381 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124878272 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092704774 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228382148 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104448635 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132779884 seconds)
  done (took 1.637563204 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109538794 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120907801 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106317688 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106522899 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115831535 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10748459 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087430205 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107982394 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117881372 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101577337 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108123652 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118798787 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118339193 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097013315 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115955551 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115858514 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107457212 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088123856 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106559233 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129309972 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087746027 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118564525 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108376027 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088284393 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108098194 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11796592 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117207537 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121743759 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087888404 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118207038 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114046802 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087614791 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118687654 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12292346 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10800109 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098297479 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108118511 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128112267 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11422471 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096662069 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109598782 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115625509 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09846913 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115019897 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118254345 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10714319 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092825409 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107808714 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107296735 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136406413 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0946465 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118833204 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115407666 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118324029 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118067206 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135831322 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10220078 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117982203 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115345948 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122955176 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117666465 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094939975 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118349477 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124197769 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115119966 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117299464 seconds)
  done (took 8.156328485 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103078463 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126006405 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108359929 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123061856 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097372189 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108091084 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108082497 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088123421 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10883781 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106370645 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15286053 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088889642 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118250525 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11767677 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108382168 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087300134 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108603235 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11697133 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087117578 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134661058 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109049529 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118112758 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11778763 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097663682 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124397322 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114917513 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108420741 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088095621 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108928341 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10870159 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09388348 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109168259 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118090615 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086734463 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118245387 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109381271 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088016283 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115398225 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107866178 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115038874 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098054985 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128999469 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109015248 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108116683 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122865993 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088413222 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10802296 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086785364 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110049786 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107135913 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123419069 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102347375 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122900486 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118725877 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108019507 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088950415 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109249571 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108385897 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088869304 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11588751 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118098114 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10818549 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135862369 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088423961 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10855519 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118524868 seconds)
  done (took 8.034252666 seconds)
done (took 154.664599032 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098419373 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13610695 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096214577 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168283988 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10629693 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119636758 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137861501 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097897796 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.10659554 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08608848 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106732906 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088080249 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171539659 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085277371 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106842638 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107914168 seconds)
  done (took 2.664289774 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.201034123 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254375285 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102748243 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106650637 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088697752 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11016164 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105062789 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090996068 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109274058 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086347009 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108966203 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086260412 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105256905 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085996656 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109935243 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088176415 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106435044 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087629844 seconds)
  done (took 2.881809834 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113789124 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146176183 seconds)
  done (took 1.117313781 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118467801 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180031148 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319087003 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155505767 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106549155 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128665201 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156677902 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130575461 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197665845 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123252221 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122727647 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097676415 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140778267 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116070886 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094172829 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118622986 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142009389 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093244225 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116094801 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115771222 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117692607 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107045907 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115669679 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093847491 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180783263 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119736152 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084351537 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106668232 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11634853 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095273202 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.11400297 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126295873 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098264348 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175500981 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102267078 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177599841 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098647637 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113171992 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114964715 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091662876 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.11849283 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118913752 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104708312 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119408273 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086830191 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118787837 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105394893 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085470572 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114980512 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097181854 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115105762 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113165162 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156396299 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118060203 seconds)
  done (took 7.548806833 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794216015 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164530466 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091142417 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.885505203 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138706768 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104652192 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.78436318 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133857718 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234362598 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.761840652 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134088396 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121928122 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229616354 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.239464682 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.964683862 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314039344 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.669935787 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102023672 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149517732 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153721547 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119093829 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138802888 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130715486 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431236213 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095436337 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112800965 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11732119 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100431423 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159923094 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125697801 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114147454 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179904543 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.270787917 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.186336273 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116825029 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090208901 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112232518 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170167773 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265450266 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217711529 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181343872 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087018058 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112080655 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122211447 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111495061 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.1099141 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164181426 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.196417427 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173223135 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092260852 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121961604 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120198989 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121295143 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165841091 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120432471 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.303552027 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313026183 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112405243 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120861145 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106966691 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262071728 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123434077 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225090926 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119267277 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212666459 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111841316 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.75635007 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191377429 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09026244 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118952075 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119637042 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09504251 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122279062 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169443399 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.408362017 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126379213 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093104524 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112043003 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.208381436 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.127038192 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111475222 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163477729 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115857896 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099515998 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126149619 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122870306 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170290027 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.229601374 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124209486 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120515329 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094669525 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125722823 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116996384 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212092196 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220805711 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163087077 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211300454 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123796535 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186378475 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169904033 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098562984 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.195573366 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098033053 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126200973 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122955497 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218315368 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146574477 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123792418 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094736039 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119903238 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149524189 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127905879 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097702416 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191928805 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.4606691 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166696994 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109437446 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127397877 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098940489 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184125316 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097200926 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262852895 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122953496 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170045448 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119755901 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088000727 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121568433 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165624635 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12417959 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121008302 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101422277 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120507609 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235512252 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219831988 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124152551 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22329502 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18495723 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119854816 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172534944 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12243982 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168773284 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121444135 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121552276 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096003574 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789352471 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125401196 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099025628 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116715362 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188862447 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111537174 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103303934 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125286968 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109233796 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78138948 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128315209 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121876362 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102029178 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118615091 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121396761 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11756391 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095455434 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162555099 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231947653 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121907493 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120082108 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103544258 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183545747 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095191443 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126340089 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126501792 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125640996 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100793565 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11615081 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124661718 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171045777 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.16343561 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22298368 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.591619044 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091399494 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12660244 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23008296 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089455794 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290129536 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120649994 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228403762 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167261896 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122039252 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310111232 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167095236 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187534576 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127574019 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.176027485 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086782773 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11938174 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165417799 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113169243 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118443589 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164507133 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125557034 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102674106 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.96329781 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113151587 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228409459 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109405106 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172789702 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11665046 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099737263 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.297417151 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112283943 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107828359 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187684824 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092989734 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126634668 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.87039659 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104929694 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122813089 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118326537 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225209149 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165660768 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118977132 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099036096 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122321197 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.16513888 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.212006342 seconds)
  done (took 44.363928454 seconds)
done (took 59.425985338 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.274565402 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213457288 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258280904 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173192079 seconds)
  done (took 1.873877088 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170107138 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148200923 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120772905 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108357829 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150818361 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085190218 seconds)
  done (took 1.66323904 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.352675363 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.27060801 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23941467 seconds)
  done (took 1.748746903 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.288795226 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.251078067 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.35632813 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.419171586 seconds)
  done (took 2.320744713 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208200079 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133110129 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111415766 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104551188 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196634365 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250612402 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140722598 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202028646 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122038038 seconds)
  done (took 2.400376759 seconds)
done (took 10.891840073 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.250081869 seconds)
    (2/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.173569931 seconds)
    (3/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.192110163 seconds)
    (4/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.15315404 seconds)
    (5/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.159009795 seconds)
    (6/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.264830701 seconds)
    (7/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.222102671 seconds)
    (8/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.2124688 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.092878133 seconds)
    (10/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.213139321 seconds)
    (11/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.186582313 seconds)
    (12/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.10209774 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121822857 seconds)
    (14/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.183918984 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093300004 seconds)
    (16/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.11588229 seconds)
    (17/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.170385008 seconds)
    (18/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.132917035 seconds)
    (19/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.262435407 seconds)
    (20/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.122140228 seconds)
    (21/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.094666469 seconds)
    (22/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.189442707 seconds)
    (23/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.185234631 seconds)
    (24/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09437339 seconds)
    (25/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.120496357 seconds)
    (26/286) benchmarking ("sort", Float32, false)...
    done (took 0.172409472 seconds)
    (27/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.097892721 seconds)
    (28/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.226838843 seconds)
    (29/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.18910645 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.225227859 seconds)
    (31/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.094124167 seconds)
    (32/286) benchmarking ("sort", Float32, true)...
    done (took 0.232282131 seconds)
    (33/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117579062 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116562633 seconds)
    (35/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093210101 seconds)
    (36/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.180906427 seconds)
    (37/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.191460484 seconds)
    (38/286) benchmarking ("sort", Int8, true)...
    done (took 0.222057041 seconds)
    (39/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087401159 seconds)
    (40/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.182195674 seconds)
    (41/286) benchmarking ("sort", Float64, true)...
    done (took 0.23198957 seconds)
    (42/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082360453 seconds)
    (43/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.125396568 seconds)
    (44/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.195625163 seconds)
    (45/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.092978141 seconds)
    (46/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.115412326 seconds)
    (47/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.088857976 seconds)
    (48/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.185089416 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093745661 seconds)
    (50/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.091559004 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.178888253 seconds)
    (52/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.198733263 seconds)
    (53/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.139972012 seconds)
    (54/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.09091273 seconds)
    (55/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137708386 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.135749601 seconds)
    (57/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.113858545 seconds)
    (58/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109336477 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087750038 seconds)
    (60/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.176346386 seconds)
    (61/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.227123968 seconds)
    (62/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118393599 seconds)
    (63/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.14781361 seconds)
    (64/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.110121184 seconds)
    (65/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.093446016 seconds)
    (66/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111947344 seconds)
    (67/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.221745631 seconds)
    (68/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.129203433 seconds)
    (69/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.133730044 seconds)
    (70/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.120222948 seconds)
    (71/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.107626291 seconds)
    (72/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.099535401 seconds)
    (73/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.201577752 seconds)
    (74/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.119801478 seconds)
    (75/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124944272 seconds)
    (76/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103016772 seconds)
    (77/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109986461 seconds)
    (78/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.191510193 seconds)
    (79/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.198740633 seconds)
    (80/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.097271771 seconds)
    (81/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.089391594 seconds)
    (82/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114838115 seconds)
    (83/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.119367787 seconds)
    (84/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068380361 seconds)
    (85/286) benchmarking ("sort", Int64, false)...
    done (took 0.110991843 seconds)
    (86/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220138383 seconds)
    (87/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067974089 seconds)
    (88/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.215666282 seconds)
    (89/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110658097 seconds)
    (90/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.11495944 seconds)
    (91/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.168903997 seconds)
    (92/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135589719 seconds)
    (93/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.134214754 seconds)
    (94/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.169112018 seconds)
    (95/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118508404 seconds)
    (96/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.134640873 seconds)
    (97/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.182581754 seconds)
    (98/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.117767849 seconds)
    (99/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.150441626 seconds)
    (100/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.182582533 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.133144884 seconds)
    (102/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097575308 seconds)
    (103/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.120370554 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.134670821 seconds)
    (105/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.082709515 seconds)
    (106/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.150426982 seconds)
    (107/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.098733354 seconds)
    (108/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138008906 seconds)
    (109/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114626767 seconds)
    (110/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093883625 seconds)
    (111/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.154816834 seconds)
    (112/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.077677626 seconds)
    (113/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.118718405 seconds)
    (114/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.162126438 seconds)
    (115/286) benchmarking ("sort", Bool, false)...
    done (took 0.191871107 seconds)
    (116/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.121017236 seconds)
    (117/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.096860815 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119202519 seconds)
    (119/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.162892339 seconds)
    (120/286) benchmarking ("sort", Float64, false)...
    done (took 0.171107779 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.11036589 seconds)
    (122/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.092955036 seconds)
    (123/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102091483 seconds)
    (124/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.137158405 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093133105 seconds)
    (126/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.090047525 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094743699 seconds)
    (128/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.090453549 seconds)
    (129/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069062652 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117841 seconds)
    (131/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099035902 seconds)
    (132/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109387645 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085949154 seconds)
    (134/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117610979 seconds)
    (135/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067893922 seconds)
    (136/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.138808716 seconds)
    (137/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.18725001 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.097323692 seconds)
    (139/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118249136 seconds)
    (140/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.130461373 seconds)
    (141/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.121444518 seconds)
    (142/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.092572162 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.137882292 seconds)
    (144/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.174067179 seconds)
    (145/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091919136 seconds)
    (146/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112482714 seconds)
    (147/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.085701523 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109352702 seconds)
    (149/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175540357 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086520307 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109080975 seconds)
    (152/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.161415501 seconds)
    (153/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.0896748 seconds)
    (154/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.06687566 seconds)
    (155/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.111109937 seconds)
    (156/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068095962 seconds)
    (157/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.088034237 seconds)
    (158/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.109556227 seconds)
    (159/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069161396 seconds)
    (160/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.135546293 seconds)
    (161/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.076749306 seconds)
    (162/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.13873164 seconds)
    (163/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.188787918 seconds)
    (164/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.128167177 seconds)
    (165/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.172868942 seconds)
    (166/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117803213 seconds)
    (167/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.113897953 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11644662 seconds)
    (169/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095075459 seconds)
    (170/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.183073864 seconds)
    (171/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066239606 seconds)
    (172/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.09052303 seconds)
    (173/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068328109 seconds)
    (174/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119474767 seconds)
    (175/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067572543 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.110417462 seconds)
    (177/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.113525396 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.108988066 seconds)
    (179/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067910805 seconds)
    (180/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.110570683 seconds)
    (181/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.151249466 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 0.223648417 seconds)
    (183/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.12076667 seconds)
    (184/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088069588 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.110203362 seconds)
    (186/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.076069677 seconds)
    (187/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.090376821 seconds)
    (188/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06743973 seconds)
    (189/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123602862 seconds)
    (190/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.08849247 seconds)
    (191/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.07571423 seconds)
    (192/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.09171096 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087095783 seconds)
    (194/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.090585634 seconds)
    (195/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067618577 seconds)
    (196/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.181343363 seconds)
    (197/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096138232 seconds)
    (198/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117855361 seconds)
    (199/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068678661 seconds)
    (200/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109052609 seconds)
    (201/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067628634 seconds)
    (202/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163652752 seconds)
    (203/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.121618171 seconds)
    (204/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.089966561 seconds)
    (205/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.09118452 seconds)
    (206/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067472674 seconds)
    (207/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.100914224 seconds)
    (208/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.088573489 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116526909 seconds)
    (210/286) benchmarking ("sort", Int8, false)...
    done (took 0.189109409 seconds)
    (211/286) benchmarking ("sort", BigInt, true)...
    done (took 0.234950765 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085451767 seconds)
    (213/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.314085002 seconds)
    (214/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088530082 seconds)
    (215/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.091478975 seconds)
    (216/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094499427 seconds)
    (217/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.089552253 seconds)
    (218/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.0669367 seconds)
    (219/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067582957 seconds)
    (220/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134542382 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086962879 seconds)
    (222/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.090375909 seconds)
    (223/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087887784 seconds)
    (224/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.092753558 seconds)
    (225/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.099193095 seconds)
    (226/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.09353571 seconds)
    (227/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086499036 seconds)
    (228/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066428442 seconds)
    (229/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.090719756 seconds)
    (230/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.067520227 seconds)
    (231/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.115324282 seconds)
    (232/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.148512406 seconds)
    (233/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.11112164 seconds)
    (234/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068323049 seconds)
    (235/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.090624984 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093569153 seconds)
    (237/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.11550078 seconds)
    (238/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067651054 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119253348 seconds)
    (240/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.089753957 seconds)
    (241/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.116011556 seconds)
    (242/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.104760241 seconds)
    (243/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.089705274 seconds)
    (244/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093212965 seconds)
    (245/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117080459 seconds)
    (246/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.076916076 seconds)
    (247/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11608488 seconds)
    (248/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.113748093 seconds)
    (249/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.119072418 seconds)
    (250/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.0673938 seconds)
    (251/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.123218991 seconds)
    (252/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067342084 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.109398471 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.086799047 seconds)
    (255/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.118042397 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086631281 seconds)
    (257/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.066658329 seconds)
    (258/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.109620332 seconds)
    (259/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109892146 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095207623 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108642657 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086011244 seconds)
    (263/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.117961783 seconds)
    (264/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.140220029 seconds)
    (265/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118719427 seconds)
    (266/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067188674 seconds)
    (267/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.111893403 seconds)
    (268/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066936351 seconds)
    (269/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066932108 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111350878 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.114741361 seconds)
    (272/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087768067 seconds)
    (273/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111887518 seconds)
    (274/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093385962 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109609206 seconds)
    (276/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068083994 seconds)
    (277/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067509113 seconds)
    (278/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.091829851 seconds)
    (279/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.067799731 seconds)
    (280/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067305349 seconds)
    (281/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.091034435 seconds)
    (282/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.234080898 seconds)
    (283/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.087964248 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117087247 seconds)
    (285/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091342503 seconds)
    (286/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134740511 seconds)
  done (took 36.096419491 seconds)
done (took 36.985709314 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100101164 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148136675 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09717665 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135762675 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124369421 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091551155 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118180214 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098276219 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124022581 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125082628 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09942859 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093879694 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097826042 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120645734 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097309239 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139412795 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124004677 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093958655 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118628654 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086012901 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119867202 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086825927 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111244419 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069831145 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121994496 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094100695 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116638259 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120494838 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086716415 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110506686 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092965762 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117850135 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086535251 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124854331 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09305051 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118492072 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096610711 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119977925 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111834885 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086765208 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118794743 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086175978 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117332762 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094293454 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114935201 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092490722 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118782305 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099549495 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139422433 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115789436 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095140306 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120988262 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.098119658 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.11790106 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090486512 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119140205 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091821723 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139730708 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119384703 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092395324 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118709247 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095009651 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116971887 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094337346 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119507102 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121110784 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098114475 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115848088 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096465628 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116516381 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086687111 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119266502 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090276963 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110702873 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096251804 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120942842 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109395713 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092500255 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11761362 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093028803 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110303837 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089152472 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111899099 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094073123 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113248227 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070048462 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115052883 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094077615 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111330773 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096165596 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117871124 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094272113 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113197283 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098939888 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111098906 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092379941 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111904057 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.08806403 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113093313 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090556624 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110704614 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090169434 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120902975 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089400788 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117182486 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123573265 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087384795 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116881407 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086850761 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110786354 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101587377 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121169138 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087477601 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116651437 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086107456 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118369078 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086093791 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110662229 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110313258 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087792755 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.11737913 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.086743121 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113599357 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.093649353 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125492098 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086830691 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114647824 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090282815 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110956664 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.0932235 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111683379 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086595437 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113083572 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078839768 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113743518 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087145279 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118809896 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090341184 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119576346 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089157602 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120362355 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092806341 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117782208 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092573545 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110994229 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074759372 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116990359 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089686358 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114096926 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087086889 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113995308 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087276201 seconds)
done (took 16.950724705 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087633425 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183513909 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151953225 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142584095 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107288419 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111874606 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122983488 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119192624 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11424662 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143134853 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110524851 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132216828 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148230754 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087328665 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112644091 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092518156 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113186752 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102314974 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146066653 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133578484 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165188896 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08689512 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147087602 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136026225 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121369427 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114402484 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112338189 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092257529 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115445557 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102834817 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133411535 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115469264 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087821676 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134037551 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104894198 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120091481 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08743877 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11908448 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087674845 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112210904 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140958485 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133791205 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092725299 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117649128 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091471435 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114683368 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089375172 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122156023 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097938984 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116185262 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127067239 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155743349 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090934373 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122586544 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087307717 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122853545 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.1216658 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090516612 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112515756 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090684306 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111925933 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092068095 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127762873 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142122815 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092096594 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122099285 seconds)
  done (took 8.624480927 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104710473 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.14014471 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105685396 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.13168049 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111492573 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088794592 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112927583 seconds)
  done (took 1.747455825 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088281919 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135034025 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111625979 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136684986 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132963258 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.113508014 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12409037 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088895388 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133042445 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.09046952 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134163874 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150346454 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089911459 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120954919 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138212614 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088973358 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138287755 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088715468 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117344658 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112788309 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117038656 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135539977 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090627918 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113385116 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103647045 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114436071 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162684587 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094296012 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114808768 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092841494 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112894791 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152316905 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103382172 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124878305 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089116528 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130857148 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128844439 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086815418 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.12652434 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094032205 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128721124 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090046612 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115520544 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087724631 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118412536 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.09957049 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118683392 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115155701 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.110122424 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133676541 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090692043 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128361951 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089169059 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118756173 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090951393 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12005649 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098337445 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115073708 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133298603 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091399377 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13085547 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106318006 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128536667 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131272549 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09210743 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128173973 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103389096 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117742665 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091401188 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118300966 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.10619463 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112905138 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11529239 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099545696 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11610873 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113315403 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138110545 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091254366 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12517217 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11451859 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089624661 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114601878 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112958505 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118645371 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090003763 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117707524 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09246426 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112871265 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088787541 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11872162 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087717042 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116347589 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092609586 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114682293 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09171386 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131758106 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11514812 seconds)
  done (took 11.859251196 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090568185 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115018741 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092374588 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114522212 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091492547 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115454583 seconds)
  done (took 1.579074699 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117105542 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117279939 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104711902 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120930742 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15676548 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104397251 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130181741 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124384139 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108363477 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128018402 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130790495 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105490654 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136198038 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12161263 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104318284 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120967979 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129994659 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100368243 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127692203 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096748529 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136892826 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.12144139 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097454606 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132578758 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118527926 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.09541822 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125636228 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102439832 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129516851 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123702219 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096758349 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118770596 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096741112 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123289649 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130046051 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096750153 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121368205 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119659846 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10089218 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118067969 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104828695 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121487865 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127431877 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094988041 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124389975 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121292263 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094521739 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125107751 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103705365 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119341561 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119921364 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095566754 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120922863 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094530811 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123278351 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1268668 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095300424 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129920762 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122201982 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096884622 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11872403 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093514799 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125089917 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117921131 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104522152 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119974888 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121329776 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097633112 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123248698 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095754983 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119326535 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09308038 seconds)
  done (took 9.246822405 seconds)
done (took 34.005269297 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686611285 seconds)
  done (took 1.644175824 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.815377833 seconds)
  done (took 1.774601101 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.18273788 seconds)
  done (took 18.174273855 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.49140411 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.575130972 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.992776506 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178563973 seconds)
  done (took 3.200694018 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.949985166 seconds)
  done (took 1.92970571 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.28257984 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234726184 seconds)
  done (took 1.483772819 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.766257217 seconds)
  done (took 1.741713199 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.360951815 seconds)
  done (took 2.325407681 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326494253 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18367594 seconds)
  done (took 1.484657293 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.547276198 seconds)
  done (took 1.521218198 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.965338567 seconds)
  done (took 10.945191074 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267221388 seconds)
  done (took 1.25302577 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300143105 seconds)
  done (took 1.276941642 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.492656954 seconds)
  done (took 4.474045019 seconds)
done (took 54.200067825 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098375185 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126855599 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101297963 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124356706 seconds)
  done (took 1.425836437 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100641076 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121100187 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100509103 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12076568 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12623553 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096616278 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123813026 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101315229 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120912393 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096694533 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121267187 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.12058622 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099022941 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123094186 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094478312 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124607272 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099166872 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121709283 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125167877 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096651274 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118691918 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097996026 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124590586 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095154467 seconds)
  done (took 3.653698104 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100186805 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119423981 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095818363 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118416433 seconds)
  done (took 1.421410115 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099991451 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131935368 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106166398 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125100424 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131632014 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105757461 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117534532 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.09214213 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119606591 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099789377 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115408676 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138912287 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106269272 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124550487 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102221612 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114672435 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091583622 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131065538 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124286951 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100943095 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118477983 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099886389 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115236916 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108476397 seconds)
  done (took 3.704213833 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.173347586 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128389834 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139665891 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095246606 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160171267 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141270246 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089267667 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141576736 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08827818 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131079135 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118916571 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133809108 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130054035 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089354344 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113448695 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088599116 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129003363 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128753787 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092375325 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128160547 seconds)
  done (took 3.431260955 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09774 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117609416 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088571468 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115948756 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099340882 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120346979 seconds)
  done (took 1.631040258 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091057876 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114062527 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090056881 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114462743 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09474635 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115098389 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088650806 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115046766 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090087477 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115027946 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089897784 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113258905 seconds)
  done (took 2.219777517 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.504643165 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119950756 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120242626 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089117056 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122054399 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089504566 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129689466 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092393654 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141087962 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089149088 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115877422 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.093132048 seconds)
  done (took 2.69484266 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236694347 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125552777 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282870912 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365095134 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155396115 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164287489 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276944234 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16188632 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198261423 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149978241 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229979792 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197314785 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152074422 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192448117 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138110763 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144711051 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188055658 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250155259 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152030952 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210931991 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206159559 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167290759 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18028108 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150674594 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112402579 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192312186 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094659107 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128925922 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20607332 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204242168 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189953831 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16104984 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147085384 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236302967 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247590928 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196393215 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278455803 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133389919 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.164479765 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.143021898 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264459794 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138842418 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232310058 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154886421 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103984738 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220364 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166055382 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176583203 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.145821006 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138248594 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198277595 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24078473 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192558536 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138038957 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299254608 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148149173 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157332475 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189453263 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251997209 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226260579 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189105633 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120784511 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189295828 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190781649 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211283939 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.12590213 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.209213893 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147157032 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187126697 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189576634 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165157765 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204350287 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180273623 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139065777 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170443273 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172516495 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172572134 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257881973 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186567517 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123228897 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168718083 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149157249 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104113545 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194240156 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125350295 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215110457 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143142483 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163709729 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208729311 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158861678 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160713483 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218573534 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184450068 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14840348 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084103098 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153067769 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155520585 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175676195 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139298983 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159150197 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1576501 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129760154 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168534996 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098474228 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209897491 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09159127 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173789461 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184301839 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126720952 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161342809 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153496695 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151148724 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177935191 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19908094 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140453069 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133043503 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210809155 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180109933 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141115017 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176814116 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227362861 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117517477 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148516393 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22706508 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216893784 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140463876 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228481106 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152710986 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109330794 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133899041 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181596769 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156522774 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160780652 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131835599 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.18281804 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205497872 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125324743 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138086205 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196327142 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134157056 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131989918 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15418606 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121097327 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.137629534 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142916761 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144741666 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175351094 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179520234 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154970406 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166094385 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149517518 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249168584 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139895628 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150140858 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122634034 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121316353 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193217869 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225395352 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103711624 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232406367 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170869408 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199977592 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196117857 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108039819 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177607853 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131123261 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.0937809 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220908095 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1674984 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162780015 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197398033 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221298103 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180987717 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.183375045 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165211955 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201265031 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.139144564 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155551003 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.137243555 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160599303 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158920785 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123255899 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.112260683 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134433136 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149585452 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14296152 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106043668 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224965863 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170062526 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214288009 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159030256 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122319693 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18213911 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128919901 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175980546 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.205113364 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11930019 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.225148304 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193623389 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185118806 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143371767 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226159375 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.092856637 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125271547 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143698273 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169518402 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106852465 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136083681 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1616378 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181747061 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206921935 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17125835 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206066702 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200084679 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191190753 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095053106 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168394996 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185175855 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176169224 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.178384756 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139691433 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150591452 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176565455 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155241579 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253845645 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166058154 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175196818 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207682763 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.151097059 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132507519 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149989764 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17773336 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153753477 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176622722 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146215248 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139419014 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160230816 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103204311 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159240089 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212325157 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162445141 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188274258 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.14972121 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187144638 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128584482 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162489844 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159352631 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164375808 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081412868 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202720552 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203775384 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147171038 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167705729 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187859867 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132508057 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.304361746 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233932603 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195340122 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137508953 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154955234 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15981073 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162471593 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171127646 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178655188 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158976643 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187739926 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1599658 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13586836 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111161181 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15083205 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152507118 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132791792 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148916036 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177912017 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138024101 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189587517 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155600942 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160396875 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17192163 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149593245 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116754152 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14996784 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242964966 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18433187 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238739509 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.12353224 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.204459907 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206809867 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125884253 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104423613 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134094019 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177964666 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136175337 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191238313 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.212692294 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200367206 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180487046 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203984903 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112593489 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120045908 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156890896 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167375985 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203254598 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148723039 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.146944215 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230145005 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110205202 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131679873 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167028261 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288353334 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14537672 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195658125 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106800742 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.279576212 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100352881 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131561612 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162262612 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233988034 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109184942 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.176995673 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170317965 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161905568 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164048301 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149593488 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191873842 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236479367 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199383971 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210125021 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105317302 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157042711 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175292647 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219366247 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155345802 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111661994 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231056858 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195296291 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195422366 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14219087 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168182637 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168802588 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158496147 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212887487 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107409319 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233472324 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106662682 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220202019 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153005262 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13748039 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175845904 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.187587701 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139966166 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186645877 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209524462 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108422158 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133774305 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166248117 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177358947 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153683852 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128337933 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182408118 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125185944 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193509308 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262676926 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132958355 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127049283 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146945736 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136250925 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15549672 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157748186 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139009569 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140046181 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227830262 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134009839 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19070383 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201049901 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198822021 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174031848 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145171647 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.6931509 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102791808 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221920168 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120207281 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234655237 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150556568 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173888311 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15839622 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168651866 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194593369 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161549661 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232394035 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220201262 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179800416 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131582393 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157381979 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154613954 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117140332 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152580327 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16748134 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159198455 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145727443 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177752859 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189746324 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.10844682 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140669824 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199816074 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148255792 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185814305 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179855934 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139504008 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173231209 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214172496 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105565339 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.207148823 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207340434 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14266726 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149294664 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133890469 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.12156335 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2614479 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124573866 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189639718 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183923274 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15921377 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168325232 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146267829 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220324154 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159219453 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186078529 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141755243 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159069396 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156392361 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138297838 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102723069 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156606134 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166905501 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150459178 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159597759 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.162548015 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19619244 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095515048 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145095122 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306941509 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177808126 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216476105 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136340752 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134892768 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161621578 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122158966 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.202709521 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179731694 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135808969 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108048573 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137328069 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.12787225 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136442944 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155011745 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1927448 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165518998 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207143588 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137651369 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279952466 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140002784 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155491995 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089898652 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132372158 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151074135 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11803419 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155032635 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220771232 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261313946 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.119834777 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.134672728 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149416896 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12504998 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109278297 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164615013 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165013877 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178949821 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145791672 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.108674481 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156401998 seconds)
  done (took 82.298023385 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162475174 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131553125 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146597919 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200941332 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176828028 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269514092 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209451737 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253113557 seconds)
  done (took 2.622308429 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093703626 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145700125 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156359009 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132680048 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092007997 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119115021 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.342276783 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132756889 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.115766405 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121566051 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172713371 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094881603 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.547490578 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090881755 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119134472 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107216272 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092680159 seconds)
  done (took 3.74263455 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.108556126 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.491632305 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.87118801 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.192772424 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158859814 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.116529155 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.694528855 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09520816 seconds)
  done (took 11.807029778 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115727567 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135474023 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.124306283 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.15203408 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140526153 seconds)
  done (took 1.755047713 seconds)
done (took 123.383124015 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097213371 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126992119 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098769954 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129653169 seconds)
  done (took 1.518690754 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094612155 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071008287 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100533889 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075335705 seconds)
  done (took 1.417389287 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189593822 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.168050434 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.38332946 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071950176 seconds)
  done (took 1.566968145 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114906931 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131883486 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105098584 seconds)
  done (took 1.438696251 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105986808 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128953701 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102912709 seconds)
  done (took 1.422279042 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106545393 seconds)
  done (took 1.190550388 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107957446 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137152995 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108482272 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135781014 seconds)
  done (took 1.573206085 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098894241 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126718768 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109176811 seconds)
  done (took 1.417304951 seconds)
done (took 12.979904832 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103241644 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.417448767 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413898085 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1172109 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722188459 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381879288 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.071761661 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145441494 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165253649 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093668563 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138911835 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674468921 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.024887774 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.372886084 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.979656847 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.370938528 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.683771244 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120844642 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119900901 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093813795 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.056091327 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091993666 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121449988 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092473471 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.717285378 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42480029 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094765214 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.369408966 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092839838 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126212276 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383436677 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121915895 seconds)
  done (took 16.979372586 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094923313 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173712809 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098712796 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136600984 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122767774 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094987321 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124035531 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093124933 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178861378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122450239 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111498253 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120985928 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125529799 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094474559 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14119951 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094211586 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125224288 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092360388 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121081851 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121136272 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112494372 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120825211 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093936426 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121461347 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094344122 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134983298 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121795414 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093417471 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11963344 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098442739 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126926092 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094653842 seconds)
  done (took 4.804680136 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140579664 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182619974 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128279572 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125890814 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167497407 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123770933 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19865886 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117740075 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181524449 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122375952 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139032943 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093044502 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155449481 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121867404 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114112808 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120014887 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09688066 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12163942 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092409808 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122786372 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139564739 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093228819 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121115342 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093738078 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123007322 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108508847 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123376713 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120311131 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093478142 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125636854 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100134259 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12262274 seconds)
  done (took 5.122431627 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097127969 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126158316 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108679119 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137662179 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094882097 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124587061 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097202866 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123445742 seconds)
  done (took 1.998753614 seconds)
done (took 29.993512776 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110969907 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126199765 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.10702721 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133693295 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102479274 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131614207 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091580958 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132553964 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132843225 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102058558 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136753654 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091950256 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121950876 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091638705 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134462646 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097409406 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133091523 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102286947 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134178787 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131343605 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094886384 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132722274 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102368681 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131996709 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104223832 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132347645 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136520899 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099452311 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122774279 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094012477 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125035816 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103828547 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123868323 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105553532 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126795464 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096707586 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123472436 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094464703 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.13216841 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132472522 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100106383 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132539555 seconds)
  done (took 5.976286094 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107641461 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.13923406 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105586078 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080914309 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116456902 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080664752 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137030138 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079543023 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109412991 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108009444 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074420585 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106040635 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07876532 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100974791 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07756258 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07546899 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107151972 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075876454 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07641391 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105813836 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08025972 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072447745 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107633447 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078893189 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074457577 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.10959926 seconds)
  done (took 3.560818187 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100132268 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134096893 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113589328 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182626119 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160882484 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099939347 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131144704 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139228288 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109714806 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119757967 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096878992 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148896587 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109837028 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129829642 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091846599 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137184568 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135148042 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094421882 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127352564 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113181214 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138621383 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103199934 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140434056 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132047631 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093470001 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123785544 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097327726 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134555172 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097813448 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131856124 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097334209 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124996959 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122752825 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.10485876 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125589533 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094316541 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141136967 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103207372 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130574496 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120306392 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101151894 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121467653 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113595796 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160778545 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091591541 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128676727 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124333849 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103692779 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121680771 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111195411 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130991187 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092650123 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124956471 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091534272 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121777506 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106388609 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123358007 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095772027 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131475834 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126626034 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105747275 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125998688 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108424741 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121991904 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100185415 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121300562 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093401664 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121461365 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143581774 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09426153 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161363154 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093675 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123749045 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101163145 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129805424 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127401373 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.0939446 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137596552 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102978656 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124701342 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101537299 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125894603 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095137217 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140083416 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123827205 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095611352 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12259106 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099696222 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124039125 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094807782 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135668406 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092897594 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124935578 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110631278 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121606218 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.121955619 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099773902 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125622996 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092659126 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13443105 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098399335 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122349364 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131183367 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093601772 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124193927 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103484949 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125827497 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092407234 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127144734 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.09965619 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122962152 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093788769 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126242885 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095081519 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132862773 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128490131 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098971974 seconds)
  done (took 14.793873901 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228679609 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215314414 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206296491 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.291600585 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13644956 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113989035 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212190568 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156243343 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123938569 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.16059587 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171587224 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182028628 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139519131 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.21047131 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169734691 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093615872 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143128903 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.135811981 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.244810736 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.257063141 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.152393854 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131577815 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.133048499 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160016144 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136988848 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132123256 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110521745 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.13346511 seconds)
  done (took 5.799348453 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109309731 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155036908 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098417763 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144653799 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148767857 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092739176 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127505163 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094776911 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135395616 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135974992 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093234961 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.1293041 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100556406 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131976087 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123152594 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103521749 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132505552 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09524145 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126515944 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098138118 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.13426959 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102777607 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127044391 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121522347 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103288408 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122314845 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086378324 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143608737 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123149945 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115629994 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120720037 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102856005 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136546995 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094075461 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122380949 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.09531894 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12553158 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095619053 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.1242839 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092015711 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122553581 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078157517 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121601552 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135749139 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099960048 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080220276 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12993385 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128210764 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.0950577 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119868285 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096445817 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125781903 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097560627 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130274836 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096228594 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12364896 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096841184 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115499941 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100584805 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124244775 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.08480191 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120812952 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098672969 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118955458 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102553898 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127602356 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092307708 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125653803 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097561498 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129029055 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095748841 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129387557 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091327731 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125605339 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096458506 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128983107 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.125606984 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093432939 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122372466 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094634475 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075648116 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12312527 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074052606 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126033754 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091710009 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121749406 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094788328 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.12975457 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137377515 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095440655 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132566559 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094315765 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122304487 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097238367 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113438304 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096955556 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139868799 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141435292 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09376209 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121146847 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10816016 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125844092 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092845944 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105830572 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101783495 seconds)
  done (took 12.960072549 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130462078 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153162955 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124333267 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.111763963 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156231574 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156940876 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100802141 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130027604 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095012748 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141327729 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093565208 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132433001 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094480022 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137275814 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155852649 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103312165 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125141108 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108318484 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127683234 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168650302 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112368443 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142216373 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110234638 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124185242 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.127731474 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110513295 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160783161 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108117504 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136300661 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14230559 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.10818154 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160955071 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143117214 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098352582 seconds)
  done (took 5.460664249 seconds)
done (took 49.640150926 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.207110163 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.406479656 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.184710588 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.122060537 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.240134893 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.226897587 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.197244451 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.184944541 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.604957955 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.18381972 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.439862026 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.725860441 seconds)
done (took 59.84001922 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.279560128 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.345146281 seconds)
    (2/2) benchmarking "String"...
    done (took 1.513645932 seconds)
  done (took 3.970064878 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.754295267 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.119483278 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.447152752 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.184296563 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.187025368 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.474095146 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.86041244 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.510222519 seconds)
  done (took 27.901335975 seconds)
done (took 42.019603681 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.18906513 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.247583698 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.226744184 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.163213228 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.290692948 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.211211972 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.572023381 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.228455367 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.197598304 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.168657376 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.202591557 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.205123178 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.188104858 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.531413423 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.183335112 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.203203362 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.200769698 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.720198469 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.586365937 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.194224198 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.226630401 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.206765243 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.199416299 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.202922518 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.241046257 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.185206941 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.192171173 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.181695083 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.491162006 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.188193224 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.281953104 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.759656629 seconds)
  done (took 190.176809362 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.179044332 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.156055365 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.237756092 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.221476106 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.60368602 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.380158594 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.317286938 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.67996745 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.200134098 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.210574381 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.422123162 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.187553355 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.490773487 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.155022747 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.211145188 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.242321815 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.475737965 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.484863406 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.219236258 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.332702887 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.201682691 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.416082732 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.322721504 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.371584317 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.228362407 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.28135249 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.227739459 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.215584425 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.373353256 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.394567128 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.187743522 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.219791348 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.746715993 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.03511127 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.206229255 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.201189146 seconds)
  done (took 149.147563805 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.17746253 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.17847458 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.17792673 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.212324823 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.177639909 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.689785827 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.690313866 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.676655505 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.535171931 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.181706762 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.34683332 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.403422986 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.181451776 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.268392419 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.191026543 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.178452598 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.193961026 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.217750121 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.183097539 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.178591751 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.682402271 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.195237398 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.217112536 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.357189573 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.192689105 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.206921132 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.56482497 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.177900119 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.178700317 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.207790942 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.498179852 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.222357854 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.178384224 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.501426372 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.280524274 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.289164663 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.181199159 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.207008221 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.179695182 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.452352962 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.180364154 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.180677125 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.183426372 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.800700628 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.182790195 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.687538169 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.187608466 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.079527712 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.179909258 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.179831709 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.180769231 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.569150279 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.708428216 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.194507019 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.179195769 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.182856135 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.1797306 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.178610681 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.209892392 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.340526034 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.272600092 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.193727178 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.182472168 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.207586275 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.179554913 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.373710804 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.178677733 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.810506841 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.251135699 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.300592453 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.667213571 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.181703668 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.273117665 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297143682 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.178267061 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.177628461 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.177936894 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.178609242 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.283489171 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.178626126 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.543305132 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.341349051 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.192035777 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.294385085 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.273380242 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.178254861 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.482118269 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.181307182 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.182229051 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.849270457 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.270906607 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.177095986 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.177898441 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.178808613 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.53508091 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.178651444 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.349243343 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.665976183 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.181652125 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.356598081 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.183575803 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.553373432 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.653476175 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.750063652 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.17897287 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.285694166 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.34186109 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.193166131 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.177499862 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.279607089 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.18625723 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.237795468 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.179334263 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.571514039 seconds)
  done (took 360.80066919 seconds)
done (took 701.237993354 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.778765041 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.768314966 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.867294916 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.762164479 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.726384721 seconds)
  done (took 10.00826744 seconds)
done (took 11.114150999 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.347990799 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.350241116 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.233085935 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.347673759 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.209640133 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.362363858 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.328893925 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.20125989 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.272249112 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.25051073 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.272376155 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.226855224 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.211622692 seconds)
  done (took 17.720458426 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.522443366 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.497357984 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.246625904 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.488298023 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.223144493 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.492405783 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.377015653 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.383396368 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.387478151 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.213469966 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.194755481 seconds)
  done (took 16.133030658 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.483492384 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.502070044 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.24918608 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.474665923 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.226184602 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.491946148 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.37905805 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.392493449 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.395111058 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.212997706 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.195403034 seconds)
  done (took 16.109895085 seconds)
done (took 51.06972682 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.190473381 seconds)
  done (took 2.298075195 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.222351678 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.382162141 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.206769005 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.198357824 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.191581988 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.192063329 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.198574979 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.192103273 seconds)
  done (took 10.892781576 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.191277324 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.191112572 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.191510703 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.190389787 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.188554907 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.189281492 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.188586251 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.191439867 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.188372036 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.190796544 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.188806111 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.192025678 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.188744256 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.188855329 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.192740777 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.189604227 seconds)
  done (took 20.150525693 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.191233176 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.18866197 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.189948301 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.189800574 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.189921069 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.190024672 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.190764167 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.18931449 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.189671693 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.189627235 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.190140338 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.190052923 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.190660215 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.189528207 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.191437533 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.190802688 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.189400048 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.190431831 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.194699744 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.190441695 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.191299638 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.190476113 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.191205255 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.191420287 seconds)
  done (took 29.682488695 seconds)
done (took 64.132459386 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.755952574 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.630911768 seconds)
  done (took 6.496853963 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.192206881 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.192997625 seconds)
  done (took 3.498466698 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.192024835 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.192557182 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.19321227 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.193332841 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.19190636 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.192962857 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.192241509 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.192882897 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.193011133 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.193785677 seconds)
  done (took 13.037909604 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.193534091 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.19302876 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.190688034 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.193616841 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.193813044 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.19167645 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.193824482 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.193535963 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.193375888 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.191183414 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.194530867 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.192867145 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.193938513 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.191978337 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.193794067 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.192725489 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.192860895 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.19206614 seconds)
  done (took 22.584288671 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.194675519 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.194912813 seconds)
  done (took 3.501131226 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.193248948 seconds)
    (2/7) benchmarking "second"...
    done (took 1.192299159 seconds)
    (3/7) benchmarking "month"...
    done (took 1.191913843 seconds)
    (4/7) benchmarking "year"...
    done (took 1.193254938 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.1922388 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.192931625 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.192226345 seconds)
  done (took 9.460344373 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.196638729 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.374560982 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.454801865 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.813744611 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.196926627 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.199210527 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.042308201 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.198817005 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.201384733 seconds)
  done (took 13.790301844 seconds)
done (took 73.480548993 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.177905134 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.202006836 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.339119641 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.190318064 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.203787953 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.53154813 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.222644378 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.331763087 seconds)
done (took 37.313065546 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.197988618 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.177315961 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.799039693 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.181356724 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.179375501 seconds)
  done (took 18.450171233 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.134106725 seconds)
    (2/2) benchmarking "read"...
    done (took 1.523988492 seconds)
  done (took 4.771918543 seconds)
done (took 30.534128689 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.196900166 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.197403856 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.197463476 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.195322959 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.197480145 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.195339707 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.195731158 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.194656139 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.194903029 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.197767789 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.197698766 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.197992177 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.198238433 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198231486 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.195996912 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195176614 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197396477 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.195003754 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195503609 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.199347596 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.194822244 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.198824461 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.195102795 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.194933782 seconds)
  done (took 29.832632849 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.198319871 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.197121714 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.198737004 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.198854229 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.197188735 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.198040618 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.197985851 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.196137736 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.199571923 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.198802389 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.196902376 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.196556324 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.198798256 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.197030534 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199207458 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.197021133 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.19870802 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196792437 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199182209 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.197915462 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.199735837 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19685326 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.196561879 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.199170808 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.197257522 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.197815633 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.199844336 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.197962927 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.200032245 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.197672473 seconds)
  done (took 37.057572987 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.204408672 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.205396061 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.200927576 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.200182694 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.199601598 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.199791096 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.200637626 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.200009653 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.200124397 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.199956895 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.201279213 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.199575832 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.200547658 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.201525155 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.200452249 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.202055386 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.201510033 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.200726009 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.201282777 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.201693686 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.201472598 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.200402095 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.201702406 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.201534222 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.201023494 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.201054547 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.200979637 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.201229365 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.201554124 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.202728285 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.201581197 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.201954598 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.201286702 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.201901814 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.202696796 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.201979721 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.2068197 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.208461041 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.202839529 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.203303966 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.201983446 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.201833155 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.202610253 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.202256016 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.202537064 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.201861947 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.202648955 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.202134825 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.203125406 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.20244735 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.20288791 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.203686858 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.202595313 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.202511212 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.202967176 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.202676352 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.202506155 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.203080081 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.203048455 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.202579075 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.20350025 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.202768384 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.203397744 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.203904617 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.203349675 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.203558888 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.203657745 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.204368999 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.20445592 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.20413005 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.204521476 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.204197458 seconds)
  done (took 87.684258722 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.204501626 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.201863774 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.201830204 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.201140416 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201958014 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.204174175 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.201463937 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204778825 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202246031 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.20416242 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203866602 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.20252856 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202178412 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.205610556 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.204947326 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.202894453 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.205095732 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.202824771 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.205087016 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.205309992 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.204980061 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.203135253 seconds)
  done (took 27.598151756 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206742647 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.207702582 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.20240087 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.206788272 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.20444044 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.206185964 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.205734207 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.206911306 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206704636 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20303467 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204003857 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206637415 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.203921525 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203547834 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20354717 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.205855942 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.206153456 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.206660644 seconds)
  done (took 22.819459604 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.205705775 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.204487267 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.206863667 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.204533819 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.204721478 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.208072968 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.204361565 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.207787516 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.207391045 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.204113216 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.20789214 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206460557 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.206904479 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204673937 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207088407 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.205076861 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.207280749 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204450385 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207575297 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.205062894 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.205301266 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.208005775 seconds)
  done (took 27.657320766 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.208554454 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.207003613 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.205718549 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.204918898 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.205082153 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.207729332 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.207267831 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.205867885 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.208788788 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.209017982 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206566343 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.208972182 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.208081219 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.207451619 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.206964824 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.205974879 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.209448642 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.20836672 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209148145 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.206710868 seconds)
  done (took 25.271971106 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.2086843 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.210646812 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.209157694 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.209856165 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.209500969 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.20954161 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.210609551 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.210543534 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.210627766 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.211719575 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.210481482 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.211009725 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.210388158 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.211158419 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.210982292 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.210795639 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.210671105 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.210980916 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.211610014 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.211875196 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.211303849 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.211345108 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.211358018 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.211600837 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.211842217 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.211762407 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.211939319 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.211530882 seconds)
  done (took 35.02962194 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212101433 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.21079512 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.209279964 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.209249132 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.209404176 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.208454922 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.209182776 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.209801838 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.212416599 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.209321581 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.212147331 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.212410926 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.211988072 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.212082146 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.212555347 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.211472207 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213481758 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.210577979 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209267726 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209809541 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.212648695 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215593418 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.215663614 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.211226919 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211020556 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.215731718 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211701954 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.212742305 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21300226 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.210655709 seconds)
  done (took 37.474456092 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.231298906 seconds)
    (2/2) benchmarking "in"...
    done (took 1.232280102 seconds)
  done (took 3.592172903 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.210255743 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213463754 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.213749937 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.210533648 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.211628001 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.214640669 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.213376717 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210975077 seconds)
  done (took 10.827826363 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.213074497 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.213944023 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.21483833 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.214837227 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.215474685 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.213830843 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.220549453 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.232135102 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.215380387 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.215538178 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.218887067 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.219501517 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.216493413 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.214431381 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.213445193 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.215846579 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.214770078 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.21475996 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.216875736 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.217494917 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.216191862 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.217344085 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.216881636 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.213820967 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.214987157 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.223916798 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.236329843 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.216329516 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.21441851 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.217846422 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.214445452 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.213489918 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.216252026 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.21699688 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.217002811 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.21658405 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.224972325 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232589488 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.221230973 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.233773739 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.21824643 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.214158101 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.21685415 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.217900158 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.217332056 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.21727332 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.218791492 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.215761663 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.215754694 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.218044941 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.220731203 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.216857087 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.213606606 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.219000792 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.216816769 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.22335724 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.235001071 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.219245717 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.223718816 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.225791551 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.245654005 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.238998971 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.218350038 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.218033908 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.225792989 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.237094484 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.224331678 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.233612303 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.216192477 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.219431312 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.223790561 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246237575 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.240522954 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.221136041 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.221617265 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.220690166 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.218735551 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.219450559 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226485136 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.238436957 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.219877264 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.221574597 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.226676389 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237737383 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.218078418 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.219228698 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.219145851 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.219762904 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.21838562 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.228253432 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.237727885 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.220920071 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.218994338 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.218780499 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.220051703 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.221278606 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.219526537 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.220533005 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.218366434 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.220512145 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.221086611 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.22182592 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.226982311 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.220743738 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.221668833 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.226240087 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.238641373 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.220046071 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.226137298 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.221847751 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.221686429 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.220630987 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.225973555 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.218966747 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.222273367 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.227009598 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.222055337 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.222121824 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.221693012 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.222777206 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.229279419 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.242961967 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.222640188 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.222524138 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.224833018 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.232835767 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.222641756 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.224112368 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.2229051 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.220859533 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.221081564 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.222965789 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.22303713 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.223680381 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.222437741 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223057049 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.221197203 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.223364777 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.223477032 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.224063795 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.223564035 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.222836595 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.223084122 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.223722249 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.2246336 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.224206928 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.228813874 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.240315793 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.224645058 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.224362735 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.221050766 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.225213962 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.223180672 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.224403306 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.223720812 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.224290979 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.222265 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.224211929 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.224295114 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.225222617 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.225589012 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.223769654 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227720443 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.224406782 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.227430242 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.223702815 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.223227716 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.225315439 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.226465324 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.223275986 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.226888657 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.223415634 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.226545335 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.233016541 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.226202516 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.225665185 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.226292966 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.225185355 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.225531447 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226027177 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.226418591 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.230880032 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.225666463 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.231512699 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.243784194 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.227591304 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.226436398 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.225307394 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.225490846 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226596538 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.227681066 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.233206881 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.235952196 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247155436 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.22600513 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.230694414 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.226380552 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.230185986 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.229469876 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.226919118 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.227867788 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.227690498 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.227223788 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.227865038 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.227488226 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.226897027 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.226337176 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.227183973 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.228655934 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.22866654 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229146881 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.226864075 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.2271016 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.225363207 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.22822415 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.227859696 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.227583876 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.225894543 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.22598381 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.227031425 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.230033231 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.228508972 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.233161988 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.226465555 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228248599 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.229043542 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.227680348 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.227568092 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.230324512 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230351664 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.227796982 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.235393666 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.245297311 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.229087909 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.235011599 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.244289844 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.228505312 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.230978858 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.230948588 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.228571615 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.230434635 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.236603959 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.231456949 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.230167898 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.23022428 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228881832 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230634367 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.234502692 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.24528671 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.229040466 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.23177383 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.23098089 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.229089557 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.230064811 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.229923507 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.231197032 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.230622771 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230851576 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.231809997 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.230555215 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.231597586 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.231668667 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.231785408 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.233006359 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.237159089 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.234763135 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.229034467 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.232412632 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.231559697 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.236106921 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.230447925 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.232269323 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.230776323 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.241355374 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.253349881 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238266284 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.250087571 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.232736564 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236820073 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.249652578 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.234270354 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231196751 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.232495951 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.23175928 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.231025685 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.230299939 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.232181182 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.233858499 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23259821 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.231596728 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.237057838 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.23320669 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.231575725 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.233161049 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.23326396 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.235512609 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.231679908 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.23405133 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.234490097 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234133409 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.232327713 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.233443933 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239285339 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250746526 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.23378606 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.232155989 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.232409658 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.231862448 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.233722663 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.234864759 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.235586926 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.240715453 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.236079441 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.239747414 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.234029266 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241324011 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.234450357 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.236065683 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.241055705 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.234026021 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.232394987 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.23392532 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.235404916 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240850435 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.253009124 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.235647519 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.238675579 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235001704 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.235476213 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.236486526 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.236768718 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2363166 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.235318746 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24216317 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.250866775 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.238219585 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236065104 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.233485965 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.235342724 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.235726621 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.234022948 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.237985604 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.236113159 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.235149566 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.234501614 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.234952326 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.237616552 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.237080394 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.237238963 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.233559865 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.237180238 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242418032 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.256219525 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.240525327 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.237635278 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.241993671 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.255183395 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242513872 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.254771739 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.237387955 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.238611129 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.238144973 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.238348565 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.236376933 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.237467371 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.23732187 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.236295316 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.241380853 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.238080365 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.2389621 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.238133691 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.239116652 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.23647254 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.24669539 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258172709 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.238665529 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242484582 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.23676132 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.238522182 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.242822709 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.239287949 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.237273735 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.240142558 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245509342 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246792989 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.238148461 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.23931761 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.238549439 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.239568289 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.240167526 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.240859328 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.240255907 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.240727216 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.238558919 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.239150263 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240718298 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.240432806 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.238531352 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240043004 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.239334563 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.247996708 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.25819568 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.239520124 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241227688 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.24152359 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.239616792 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.239286254 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.240538553 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.239494621 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240663771 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.241094639 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.246561798 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.244643481 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.242170431 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.239876569 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.240504145 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.23915658 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.240021458 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241469097 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.241217131 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.241291552 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.241746767 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.240848217 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.240314542 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.238584665 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.242529025 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.240903256 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.241600582 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.242992348 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.246878509 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241426344 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.239683113 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.242042011 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241555394 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.239747926 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.241997138 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.248130219 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261458024 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.249633407 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.247826192 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.2463892 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.241508289 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.244196775 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.248407793 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.240999778 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.242826764 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.243565054 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.243699578 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.242110589 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.244707541 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243374684 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.248498065 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.25962336 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.242419144 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251130224 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.259863456 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24346253 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.244155019 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.247239388 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.242503784 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.242969429 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.244692235 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.243288108 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250427214 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.261111805 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244562585 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.245383277 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.242584745 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.243857373 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.247204939 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245315699 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.244354766 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.2426535 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.244035995 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244642778 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.245649019 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.243724662 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.243599201 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.243820094 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.247032583 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.248586752 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.24331318 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.245918728 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.244440586 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.245516903 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.245851887 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246295792 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.243513485 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.243137843 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.244270669 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246654429 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.244071341 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.247111569 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.244178738 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.246250798 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.246714407 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246568563 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247711098 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.253872237 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.252673864 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.244799036 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.245683746 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.245131073 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.24875478 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247554357 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.247255709 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.246758927 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.246713944 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.247477788 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246904395 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.247146977 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.249253186 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261333764 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.265082847 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246932212 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.246476009 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.249101754 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.248983095 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.245428353 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.249345718 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.248857417 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.25063153 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.253825727 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.248348214 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.252432947 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264713018 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.248444912 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.253243143 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.251014933 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.252913268 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.249681606 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248933348 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.248887053 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.251686386 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.263572481 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.249740138 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256771032 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274805102 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.266045649 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.248336731 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.250327818 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24763526 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.25021371 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.249864861 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.249661601 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.251342405 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250432309 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.249563868 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.248473869 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253271698 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.24914562 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.250552081 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.250395001 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.248676382 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.250001427 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.248455469 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.251405187 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.25174548 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.250801227 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.251023279 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.250718157 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.249736649 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.261281499 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.271964196 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.251624682 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.250951516 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.247712695 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.253147855 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.252144753 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.258294345 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.257505142 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.251912835 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.251651929 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.251788804 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251033186 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.250505467 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.250759129 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.250973857 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249516588 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.250462722 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.262138974 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27444363 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.255242645 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.250691204 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252673624 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.252865693 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252445268 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253588458 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252593545 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.251621876 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.2523866 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254822615 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.253042399 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.253767628 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.253253657 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.259295038 seconds)
  done (took 737.612150066 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.251086954 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250610556 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.251515058 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.251554401 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251469246 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252185561 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251500733 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.25144588 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.25281161 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.250944038 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.253107666 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252008127 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.25198435 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.252107351 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252806551 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.251832708 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252660922 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.25164289 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.252665314 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252167867 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.252457537 seconds)
  done (took 27.456162787 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.25523267 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.253169665 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.252639179 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.255974852 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253202155 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.254652399 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.253288276 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255488451 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.255724866 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252899038 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.255405293 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254871009 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.252120346 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.252938117 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253048132 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254883324 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.256339905 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253267076 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.255396639 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.253466351 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.256215859 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.253713384 seconds)
  done (took 28.761262017 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.2559687 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.25553134 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.254236863 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.253989163 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.256410159 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.254695181 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.255663149 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.256363078 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.256752026 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.254509818 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.254758883 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.256423236 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.260271708 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.259529998 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.25623273 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.256253168 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.400534748 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.25642731 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.257014292 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.256895807 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.254759514 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.260951116 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.273430391 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.255555434 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.255072652 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.257450747 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.256654177 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.257466131 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.257855352 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.257595061 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.261514041 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.257143964 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.256467664 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.259920507 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.255357437 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.257995702 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.2614591 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.258030483 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.255502909 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.258339639 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.264925427 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.27586183 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.258251036 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.262321755 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.277080496 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.259504047 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.259347731 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.264089626 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.256045983 seconds)
  done (took 62.983398655 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.259511517 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.257642758 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.256443106 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.258946936 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.25948611 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.258378457 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.258686841 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.26053659 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.256312894 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.256953138 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.259454727 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.257416749 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.257756939 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.259268052 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.259528309 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.258689675 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.257420482 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.257108242 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.257053172 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.257031626 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.258213028 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.25974515 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.260660422 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.2579952 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.259990124 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.257977003 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.259582689 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.260224829 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.259809316 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.256517473 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.260810135 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.260560702 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.260734305 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.258846661 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.258783128 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.260617964 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.260776464 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.261026434 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.261469868 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.258386322 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.260972728 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.260725784 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.261275953 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.262067412 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.25903814 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.259289997 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.259284929 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.25962758 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.260295259 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.262246842 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.261759602 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.260306157 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.262780642 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.260490819 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.262333953 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.262489175 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.259330813 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.26017882 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.262706942 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.259509462 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.259648829 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.262238028 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.260056086 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.262388057 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.262291358 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.260707701 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.260977308 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.262370756 seconds)
  done (took 86.836183463 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262324692 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.261983508 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262035536 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262196388 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.264264714 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.263891039 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.263447183 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.262919154 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.261764943 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.262351448 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263092864 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.262755664 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.26304642 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.263381356 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.264003452 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262907065 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.263093172 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.262995888 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.263472933 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264482513 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.263995821 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.263563418 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.263847158 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.263995748 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.264385377 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.265227041 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.264141706 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.264710292 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264445471 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.264345096 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.265212878 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.264098582 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.264703969 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.265096353 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.26523584 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.264382263 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.264084121 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26389996 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.264386489 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.265201751 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.264814131 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.265091521 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.265558138 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.264461381 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264553471 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.264635527 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.265232845 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.265467804 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.265343292 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.265631232 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.265485837 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265454803 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26546117 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.26573524 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.266123752 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.265468641 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26573096 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.266065321 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266150808 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.266935316 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.265683705 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.266803348 seconds)
  done (took 79.56764446 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266015183 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.267384285 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.264682994 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.264467082 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.266596347 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.264405681 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.267630707 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.266891342 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.266471395 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.267486144 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266833739 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264407903 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264750411 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267226141 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.264501639 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264743257 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.265337537 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.265245358 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.26855556 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.265094329 seconds)
  done (took 26.497417029 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.264791043 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.267616422 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.265655975 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.265678967 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.26783821 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.265630471 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.268553161 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268494253 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265425513 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268942231 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.269022977 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.269574089 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26636385 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.2671897 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.269601629 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.265802148 seconds)
  done (took 21.455180909 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.265884441 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.268827736 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.268710079 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.268501387 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.266910434 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.265532011 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.268775854 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.267016291 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.266431837 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.26899052 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.269327544 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.270062399 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.269680967 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.269193354 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.266884705 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.269611967 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.267612603 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.266798473 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.269840113 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.269491135 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.268283878 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.268820057 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.269845857 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.270887458 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.26755667 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.268572952 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.268205694 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.267407922 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.268527287 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.270528516 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.267726681 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.269344066 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.268080106 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.268672317 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.270643231 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.269614609 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.271300658 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.271463025 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.270754895 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.270896689 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.27141215 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.268619782 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.271543046 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.271348745 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.268618343 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.272052979 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.268961769 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.269339376 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.269784306 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.269755451 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.272091817 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.271501886 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.272478022 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.272597269 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.272799184 seconds)
  done (took 70.995128277 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.272540587 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.272758976 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.270202785 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.272705975 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.272165528 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.270732708 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.2720138 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.271761992 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272202825 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.274899297 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.273273353 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.275862193 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272994581 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.275042506 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.273581162 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.274471803 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.272335146 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.271631064 seconds)
  done (took 24.09406668 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.271164071 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.271747715 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.275411124 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.271120362 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.271400238 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.274227186 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.271475028 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.273742462 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274483268 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.272549497 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272045075 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.274805881 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27436228 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.275370001 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.272387682 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272081322 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.274154476 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.27405104 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.272061714 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.272202556 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.275807085 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.274902148 seconds)
  done (took 29.195873592 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.273543949 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.272305479 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.272341655 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.288101926 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.289552655 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.294183479 seconds)
  done (took 8.87467238 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280280309 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275188996 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.272623085 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276563187 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275274012 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273695839 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273093344 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273682875 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276340165 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273565829 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273037999 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276568072 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276146023 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273067317 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276945444 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276526563 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273663725 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274009603 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275010649 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276797723 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274306604 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275923498 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2737435 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274280266 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274250367 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273957893 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276925713 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274723934 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274883902 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277645023 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27756355 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275701551 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277888394 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275252678 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278282674 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277787975 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275465481 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278039016 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277527821 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27560944 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.27909888 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277977418 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278078191 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276597658 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278891491 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275519394 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276306443 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276307465 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276470571 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278869898 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278460356 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276981983 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280235711 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279341079 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278638382 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280147963 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276720463 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27684992 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279241275 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277316704 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276888182 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279184197 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276532626 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277155011 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279802529 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276845097 seconds)
  done (took 85.453329552 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276762621 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277118178 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276622152 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278017041 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277138074 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27697858 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276983573 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277487053 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277455494 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277004857 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280832089 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279163353 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277366618 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278621953 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278394423 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277673426 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278319036 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277895059 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277798892 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280372665 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278202414 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278825181 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27848712 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279344581 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279527472 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28078684 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278501589 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278266182 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278457635 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278639237 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278244426 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278125174 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278697718 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.278399613 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278647686 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279097081 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279437058 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27960226 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279247317 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281732826 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279248308 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283495343 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280410333 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279800666 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279970987 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280483073 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280385788 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28019642 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279967308 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280564601 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281680936 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280936939 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28129339 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27862191 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280284427 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279974943 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28028491 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279918096 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281197998 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28345307 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28090653 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281344423 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283244055 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280892933 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281096513 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281250125 seconds)
  done (took 85.630882325 seconds)
done (took 1721.3739614 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.444521312 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.397246601 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.280564358 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.28422455 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.280084671 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.28869657 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.274837367 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.280579822 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.280178229 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.280667936 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.281159077 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.465075026 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.275604403 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.282254146 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.282048349 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.375775937 seconds)
  done (took 42.247997351 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.309551056 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.287738458 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.390143926 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.308567506 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.309593183 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.459426083 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.334893914 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.291711381 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.441629617 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.326356413 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.720427745 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.309285803 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.286464304 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.307683407 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.30223922 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.459569907 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.511476014 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.726192683 seconds)
  done (took 29.2772412 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.69414024 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.284809045 seconds)
  done (took 9.173861486 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.304268981 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.28711123 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.28699649 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.285897 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.277482752 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.283282713 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.285258262 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.280512916 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.59528894 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.405600773 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.293197321 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.293968071 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.303978464 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.287204802 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.284977559 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.321564944 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.427693789 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.285523608 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.284355857 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.292621783 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.28721449 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.367498388 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.32493173 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.285001567 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.39980691 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.605534647 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.29524397 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.293558149 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.409518284 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.286504242 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.286829262 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.287153704 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.288074003 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.889569095 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.710219033 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.295895701 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.309778276 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.296584444 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.286211173 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.430710082 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.288869948 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.294088274 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.290797215 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.703156375 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.430883905 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.396415451 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.455848346 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.310411603 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.289459093 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.346884923 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.289079676 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.288992814 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.316374228 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.038151327 seconds)
  done (took 107.951943326 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.327814057 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.68072311 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.448020176 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.298677263 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.102571222 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.041729216 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.296309953 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.544767789 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.330977188 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.284630855 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.606149064 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.766841919 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.303495906 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.301203315 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.855466299 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.369161848 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.283478363 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.123629353 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.298041883 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.288366088 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.75618686 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.288724446 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.285875289 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.458664482 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.318963951 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.713647465 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.560969984 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.845403141 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.30358112 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.284021056 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.72854966 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.313906416 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.330990248 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.285992613 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.535002858 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.62621642 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.611037533 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.303846342 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.32378296 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.286471989 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.296881483 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.708367667 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.616123111 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.300339569 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.283816071 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.71319697 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.30002444 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.287575291 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.285100273 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.490947699 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.161200068 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.28607782 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.551597161 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.291384244 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.648295548 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.362905739 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.36050026 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.741769761 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299434458 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.471617745 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.321756231 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.286394173 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.291679556 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.286024809 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.289517432 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.607361545 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.420830037 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.287917243 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.605748459 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.740264149 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.305841478 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.809125875 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.19245604 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.298494876 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.383301674 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.285794044 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.973469608 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.755518058 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.332082348 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.285346242 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.592144699 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.302810541 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.595867777 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.301362318 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.287559688 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.787559556 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.297188499 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.289597561 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.28673779 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.306626324 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.065192966 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.290184853 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.559230299 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.300800116 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.287120518 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.288170193 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.305762007 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.287686195 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.287850825 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.289986789 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.788719074 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.310808569 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.248301025 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.304819144 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297165026 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.293861433 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.286804286 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.287647688 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.511078543 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.765371248 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.310125066 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.289310966 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.290274692 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.296035845 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.471337429 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.292535383 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.570538182 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.305244096 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.288351143 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.293918657 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.963192621 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.334743786 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.288603184 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.306421331 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.185054153 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.493668406 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.306226891 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.290248362 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.290874729 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.305166557 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.446327215 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.307895819 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.314486392 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.28988602 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.972385091 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.317300024 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.314599234 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.831251815 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.295517805 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.114320121 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.321765019 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.288965473 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.571258619 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.545635454 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.336215772 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.292995842 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.312294371 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.950604729 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.305257322 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.434708299 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.307257739 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.315813157 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.486809159 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.683655656 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.291028754 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.92170029 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.291999716 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.511506227 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.291100725 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.59998094 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.758987134 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.312458784 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.298382241 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.975244365 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.974837119 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.974581633 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.297487932 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.605254757 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.273835076 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.768696772 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.291725783 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.291414746 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.894471616 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.29427036 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.298165277 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.291387371 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.291973956 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.357059687 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.463899067 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.512021775 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.298383192 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.719158724 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.366559758 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.292920335 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.303743398 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.29610688 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.643047654 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.37708615 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.297575034 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.334010539 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.293927153 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.295261716 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.741216304 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.237201499 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.296311724 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.443696054 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.901105818 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.314976211 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.294059371 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.930341182 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.540933332 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.814762421 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.359343323 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.577727325 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.313317755 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.329994238 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.057349909 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.328219271 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.778553285 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.311162342 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.294929938 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.868844207 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.309773096 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.651202236 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.294337979 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.293688611 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.828442898 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.31228042 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.297712852 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.45637896 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.312957626 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.570825451 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.295438816 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.324990834 seconds)
  done (took 1101.108278266 seconds)
done (took 1290.953427314 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.296254128 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.300813389 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.281025226 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.304797062 seconds)
  done (took 26.395112201 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.324691844 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.299440412 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.302527517 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.29959579 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.304965376 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.29950961 seconds)
  done (took 9.043512969 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.334529688 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.300262955 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.300090409 seconds)
  done (took 19.145847287 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.49078903 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.500901287 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.610119822 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.329059225 seconds)
  done (took 10.14447125 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.303540254 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.303010419 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.303042468 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.304240048 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.326211152 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.327839918 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.305362204 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.305557457 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.327433778 seconds)
  done (took 13.018964571 seconds)
done (took 78.960850472 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.632875875 seconds)
    (2/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.346472085 seconds)
    (3/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.857306101 seconds)
    (4/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.408145424 seconds)
    (5/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.588468228 seconds)
    (6/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.001270304 seconds)
    (7/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.276841763 seconds)
    (8/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.671742493 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.547071738 seconds)
    (10/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.65099065 seconds)
    (11/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.277962209 seconds)
    (12/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.383562429 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.338196962 seconds)
    (14/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.278091718 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.324345347 seconds)
    (16/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.755609562 seconds)
    (17/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.283605567 seconds)
    (18/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.320701356 seconds)
    (19/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.281109248 seconds)
    (20/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.332984727 seconds)
    (21/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.079318075 seconds)
    (22/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.790073366 seconds)
    (23/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.277674097 seconds)
    (24/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.34057362 seconds)
    (25/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.383594094 seconds)
    (26/286) benchmarking ("sort", Float32, false)...
    done (took 5.265132897 seconds)
    (27/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.328246465 seconds)
    (28/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.283361606 seconds)
    (29/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.424300209 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 6.297168777 seconds)
    (31/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.278728782 seconds)
    (32/286) benchmarking ("sort", Float32, true)...
    done (took 6.313839602 seconds)
    (33/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.325817865 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.401898381 seconds)
    (35/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.32555113 seconds)
    (36/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.315180103 seconds)
    (37/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.748728332 seconds)
    (38/286) benchmarking ("sort", Int8, true)...
    done (took 6.312647767 seconds)
    (39/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.315317377 seconds)
    (40/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.292399197 seconds)
    (41/286) benchmarking ("sort", Float64, true)...
    done (took 6.306597005 seconds)
    (42/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.305023709 seconds)
    (43/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.427072017 seconds)
    (44/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.490732452 seconds)
    (45/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.40434405 seconds)
    (46/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.005913335 seconds)
    (47/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.406998603 seconds)
    (48/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.312155541 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.413106828 seconds)
    (50/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.308509155 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.576783529 seconds)
    (52/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.279657971 seconds)
    (53/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.315941463 seconds)
    (54/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.37142158 seconds)
    (55/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.713222672 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.133364521 seconds)
    (57/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.993372533 seconds)
    (58/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.028083544 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.358052334 seconds)
    (60/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.646692805 seconds)
    (61/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.912375245 seconds)
    (62/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.442132664 seconds)
    (63/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.279683228 seconds)
    (64/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.811027001 seconds)
    (65/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.617519854 seconds)
    (66/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.365355029 seconds)
    (67/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.112188203 seconds)
    (68/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.063508846 seconds)
    (69/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.311938448 seconds)
    (70/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.300262901 seconds)
    (71/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.029096446 seconds)
    (72/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.313863322 seconds)
    (73/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.282223675 seconds)
    (74/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.502971073 seconds)
    (75/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.421910324 seconds)
    (76/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.412368902 seconds)
    (77/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.62070413 seconds)
    (78/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.282632009 seconds)
    (79/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.286861863 seconds)
    (80/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.451910175 seconds)
    (81/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.28185257 seconds)
    (82/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.360286144 seconds)
    (83/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.358850935 seconds)
    (84/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.284268718 seconds)
    (85/286) benchmarking ("sort", Int64, false)...
    done (took 5.439401687 seconds)
    (86/286) benchmarking ("sort", BigInt, false)...
    done (took 6.301790895 seconds)
    (87/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.320940094 seconds)
    (88/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.78744512 seconds)
    (89/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.30131773 seconds)
    (90/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.156526579 seconds)
    (91/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.298515953 seconds)
    (92/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.40759207 seconds)
    (93/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.281955791 seconds)
    (94/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.393161432 seconds)
    (95/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.312583849 seconds)
    (96/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.590638855 seconds)
    (97/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.42004425 seconds)
    (98/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.408555668 seconds)
    (99/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.285912947 seconds)
    (100/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.53625796 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.528140234 seconds)
    (102/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.314098681 seconds)
    (103/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.361948965 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.693475889 seconds)
    (105/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.298207552 seconds)
    (106/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.679043656 seconds)
    (107/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.321629542 seconds)
    (108/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.315519299 seconds)
    (109/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.396283503 seconds)
    (110/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.107251755 seconds)
    (111/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.490827921 seconds)
    (112/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.675255438 seconds)
    (113/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.330025545 seconds)
    (114/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.320689072 seconds)
    (115/286) benchmarking ("sort", Bool, false)...
    done (took 1.812721982 seconds)
    (116/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.456054422 seconds)
    (117/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.646690217 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.343102432 seconds)
    (119/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.323120135 seconds)
    (120/286) benchmarking ("sort", Float64, false)...
    done (took 5.575372374 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.562186051 seconds)
    (122/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.283572376 seconds)
    (123/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.580858875 seconds)
    (124/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.668002112 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.021539321 seconds)
    (126/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.654148643 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.587631494 seconds)
    (128/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.29821386 seconds)
    (129/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.324706501 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.410715344 seconds)
    (131/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.33136247 seconds)
    (132/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.028865026 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.019227453 seconds)
    (134/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.332673946 seconds)
    (135/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.108593528 seconds)
    (136/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.305700776 seconds)
    (137/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.300615198 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.920540553 seconds)
    (139/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.334472184 seconds)
    (140/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.54725871 seconds)
    (141/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.176150269 seconds)
    (142/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.333303897 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.880091274 seconds)
    (144/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.286677305 seconds)
    (145/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.322455101 seconds)
    (146/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.452660328 seconds)
    (147/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.388203865 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.126920311 seconds)
    (149/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.290565217 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.185222202 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.881322311 seconds)
    (152/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.286016251 seconds)
    (153/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.095703749 seconds)
    (154/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.650832373 seconds)
    (155/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.391922501 seconds)
    (156/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.287080553 seconds)
    (157/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.43387579 seconds)
    (158/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.389823432 seconds)
    (159/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.29199316 seconds)
    (160/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.68094375 seconds)
    (161/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.024707449 seconds)
    (162/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.175749328 seconds)
    (163/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.78759138 seconds)
    (164/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.482966158 seconds)
    (165/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.301163011 seconds)
    (166/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.340607721 seconds)
    (167/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.140428356 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.351344878 seconds)
    (169/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.316978203 seconds)
    (170/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.398861438 seconds)
    (171/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.632790061 seconds)
    (172/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.058065005 seconds)
    (173/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.672306219 seconds)
    (174/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.370527841 seconds)
    (175/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.370365216 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.953936782 seconds)
    (177/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.554912762 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.874875392 seconds)
    (179/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.491218799 seconds)
    (180/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.321444825 seconds)
    (181/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.29569145 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 5.389921847 seconds)
    (183/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.409453079 seconds)
    (184/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.31919034 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.370306641 seconds)
    (186/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.645722173 seconds)
    (187/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.249192015 seconds)
    (188/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.303246453 seconds)
    (189/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.010753964 seconds)
    (190/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.341436786 seconds)
    (191/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.67612268 seconds)
    (192/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.80565383 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.651378769 seconds)
    (194/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.112300275 seconds)
    (195/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.298800573 seconds)
    (196/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.304425437 seconds)
    (197/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.943438355 seconds)
    (198/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.527337239 seconds)
    (199/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.847676808 seconds)
    (200/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.030406293 seconds)
    (201/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.538632966 seconds)
    (202/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.335084823 seconds)
    (203/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.878011368 seconds)
    (204/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.128099702 seconds)
    (205/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.392352761 seconds)
    (206/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.773957111 seconds)
    (207/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.517667079 seconds)
    (208/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.439052616 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.333336547 seconds)
    (210/286) benchmarking ("sort", Int8, false)...
    done (took 4.332114671 seconds)
    (211/286) benchmarking ("sort", BigInt, true)...
    done (took 6.310796889 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.351504248 seconds)
    (213/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.288685493 seconds)
    (214/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.393396586 seconds)
    (215/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.290158 seconds)
    (216/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.335500752 seconds)
    (217/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.512598347 seconds)
    (218/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.741106513 seconds)
    (219/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.812048483 seconds)
    (220/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.332782921 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.710250041 seconds)
    (222/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.250791398 seconds)
    (223/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.366923017 seconds)
    (224/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.777302661 seconds)
    (225/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.311844727 seconds)
    (226/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.556996948 seconds)
    (227/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.527276358 seconds)
    (228/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.091621807 seconds)
    (229/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.08598013 seconds)
    (230/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.907453994 seconds)
    (231/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.444615186 seconds)
    (232/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.462892592 seconds)
    (233/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.323481716 seconds)
    (234/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.307341638 seconds)
    (235/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.292111403 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.338525892 seconds)
    (237/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.554909942 seconds)
    (238/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.97867231 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.709257541 seconds)
    (240/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.392569133 seconds)
    (241/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.382143769 seconds)
    (242/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.606582018 seconds)
    (243/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.972056543 seconds)
    (244/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.357257479 seconds)
    (245/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.340245873 seconds)
    (246/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.513454455 seconds)
    (247/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.340219886 seconds)
    (248/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.555831555 seconds)
    (249/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.326765459 seconds)
    (250/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.295226648 seconds)
    (251/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.42236189 seconds)
    (252/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.292224873 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.206255625 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.828941139 seconds)
    (255/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.338639223 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.188450307 seconds)
    (257/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.887819657 seconds)
    (258/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.521188361 seconds)
    (259/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.341722975 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.40464191 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.397203959 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.425664291 seconds)
    (263/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.12613581 seconds)
    (264/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.333790214 seconds)
    (265/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.34329928 seconds)
    (266/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.294316078 seconds)
    (267/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.434776769 seconds)
    (268/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.466076417 seconds)
    (269/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.566663202 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.733685513 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.371997912 seconds)
    (272/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.313943162 seconds)
    (273/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.337946214 seconds)
    (274/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.406517341 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.714550154 seconds)
    (276/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.340460903 seconds)
    (277/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.298493392 seconds)
    (278/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.113061578 seconds)
    (279/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.492579203 seconds)
    (280/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.39415113 seconds)
    (281/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.312278144 seconds)
    (282/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.330291837 seconds)
    (283/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.34888277 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.346893497 seconds)
    (285/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.334577833 seconds)
    (286/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.332057716 seconds)
  done (took 925.093154346 seconds)
done (took 926.306761743 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.348235538 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350064022 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.326100514 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.348555086 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.444374717 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.349642018 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.337545917 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.328097119 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.374042012 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.376490843 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.331158951 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.348449621 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.33364344 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.332854093 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.326756067 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.348211805 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.325743343 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.335039033 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.350675956 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.336371696 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.348975713 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.332000568 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.376012362 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.348148368 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.330114276 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.329652588 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.336161307 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.352104534 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.445937288 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.337350915 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.330544549 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.345105567 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.32542682 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.325852163 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.322221633 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.353246706 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.345977494 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.337091605 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.331580451 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.366783335 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.702080177 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.348828763 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.335928667 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.329429609 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.328920796 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.33196655 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.335292449 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.335359265 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.349252298 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.350479746 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.690708943 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.365375468 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.338307218 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.329051837 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.340043093 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.335544882 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.331611388 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.352908225 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.355965427 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.35413438 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.31008059 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.33367494 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.331322444 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.35217172 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.344239392 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.731386505 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.341116187 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.334013588 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.703910661 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.35174256 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.726946528 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.361046407 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.332508046 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.351289701 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.368478239 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.327949447 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.325358859 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.32977229 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.344035595 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.335759482 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.339976528 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350730725 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.335474622 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.331658552 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.352254908 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.354977624 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.341890036 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.337848725 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.341845813 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.357592535 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.346152549 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.349021777 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.334261682 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.327392984 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.341148268 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.335908069 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.341629096 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.341053868 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.337969366 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.342592377 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.703740721 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.373613553 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.328965333 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.328418393 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.332618218 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.352684118 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.706874562 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.354600953 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.355067972 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.380607095 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.334728832 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.314904776 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.3426698 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.357644352 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.347090608 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.337369917 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.33098323 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.320077292 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.698840524 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.373260403 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.334852914 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.34148736 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.358631004 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.337233902 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.331371057 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.337095456 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.334578295 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.355271704 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.462255367 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.345469606 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.373554724 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.340019266 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.338306236 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.361737624 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3587595 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.372979525 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.33757503 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359255305 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.356965193 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.332793417 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.354614206 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.347074842 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.33697546 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.341238213 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.329612943 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.361666691 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.356092871 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.356672534 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.355981773 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.46322255 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.334095259 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.321389116 seconds)
done (took 224.733142637 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.394722643 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.333722217 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.426823603 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.332876181 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.432563993 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.431949722 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.331155908 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.331009357 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.3302502 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.708119564 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.330840696 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.33160211 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.325440026 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.331341011 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.414731 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.33439283 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.331155687 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.673850434 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.333971294 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.412402523 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.331837469 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.331826286 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.333462849 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.716627727 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.331982095 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.331302261 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.407076801 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.334774427 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.681462918 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.329445842 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.32875759 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.681865958 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.426669798 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.352176009 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.344939716 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.343032465 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.433928587 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.352483978 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.416997297 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.41663358 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.428138979 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.373718867 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.329436253 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.333076255 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.337076017 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.336260275 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.332353604 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.362810307 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.332969818 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.334378541 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.675825572 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.345703321 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.333939167 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.334680412 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.334666426 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.365145513 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.334360112 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.33684153 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.433686377 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.337402677 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.400135816 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.718923814 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.71468079 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.336468877 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.333494355 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.335353181 seconds)
  done (took 148.51242684 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.401819603 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.409681536 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.444704699 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.358768585 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.385546034 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.449003245 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.358674364 seconds)
  done (took 11.051054316 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.342914534 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.338610426 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.385458417 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.385239419 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.337867339 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.515938596 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.339960714 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.34873152 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.336846911 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.390554256 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.341593731 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.338751683 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.345063581 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.330747693 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.385034043 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.34955126 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.451749086 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.338059003 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.338905124 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.498831488 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337692381 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.346212762 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.390133007 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.350610116 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.340954905 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.34371003 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.157026947 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.339532891 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.336314452 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.33953526 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.337694601 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.416354394 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.340615531 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.336500681 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.337301594 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.454849143 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.339180516 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.336929741 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.340430831 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.337642796 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.340026091 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.34084979 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.341321364 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.338816599 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.339422972 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.36236593 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.34191767 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.340661149 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.33974209 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.340966659 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.389534676 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.341221454 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.338692021 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.338457175 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.394669989 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.34795513 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.341694176 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.338526192 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.341473197 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.338016326 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.50081733 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.386549879 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.340865535 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.388058724 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.34282023 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.341380471 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.34094268 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.340203163 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.393922921 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.341577619 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.388714858 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.340202997 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.525794894 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.364440022 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.345323516 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.342734853 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.34282963 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.342741053 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.335998554 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.346119502 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.341110246 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.342429809 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.346518169 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.340206113 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.340209928 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.515484671 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.450783648 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.341457563 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.354643119 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.348295351 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.341610838 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.394809153 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.343875509 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.340372286 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.392278149 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.456926059 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.394395974 seconds)
  done (took 154.260269517 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.346720831 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.350973741 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.343486941 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.359659804 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.343859921 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.342945586 seconds)
  done (took 9.335140999 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.343897279 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.345107766 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.344207655 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.344288582 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.346204835 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.345723758 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.344066387 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.343692291 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.348096169 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.343788197 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.345657823 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.346585183 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.345429364 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.34458329 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.34472031 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.345357856 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.344917362 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.343298238 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.345236196 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.345171406 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.448107592 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.344836665 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.34607547 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.345419298 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.349902258 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.345508751 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.353050637 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.345888783 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.346655139 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.350450221 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.365257721 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.348407042 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.346545228 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.350870041 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.351683766 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.346589284 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350593857 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.349870437 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.344042429 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.347426123 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.350435838 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.347170555 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.347254127 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.350790264 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.346760706 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.351273799 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.354973558 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.3542179 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.348588071 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.349659056 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.350525545 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.348159254 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.349781373 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.351066165 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.34874664 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368274527 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.355225693 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.347465716 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.348998572 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.348344716 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.349845237 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.349592416 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.349124194 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.352679715 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.346222369 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.351656566 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.347579197 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.353793506 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.348377913 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.348593184 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.351876267 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.347263332 seconds)
  done (took 99.44397527 seconds)
done (took 423.843929824 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.629428766 seconds)
  done (took 7.885240393 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.497916256 seconds)
  done (took 7.756484111 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.268222205 seconds)
  done (took 21.526936098 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.399994085 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.460371014 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.354164661 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.348253356 seconds)
  done (took 26.819553681 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.581322169 seconds)
  done (took 7.835734681 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.344794573 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.342618955 seconds)
  done (took 13.945939997 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.39257974 seconds)
  done (took 7.646919462 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.034193423 seconds)
  done (took 8.295626624 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.364105503 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.3601124 seconds)
  done (took 14.245405376 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.320723525 seconds)
  done (took 7.575868909 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.279288404 seconds)
  done (took 11.53575732 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.346242325 seconds)
  done (took 7.603610342 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.351273967 seconds)
  done (took 7.606578182 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.110750273 seconds)
  done (took 9.366441048 seconds)
done (took 160.912081601 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.342192444 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.349364543 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.351676401 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.350313366 seconds)
  done (took 26.649705314 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.384154107 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.383383669 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.386060399 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.394700417 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.387414001 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.383780084 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.380137538 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.387035232 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.395340406 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.387358264 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.387631748 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.38716536 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.384928768 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.377313453 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.387885212 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.38655618 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.396556266 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.387673799 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.376785842 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.388748048 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.353671221 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.396891049 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.388906744 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.353276065 seconds)
  done (took 34.482731225 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.873024555 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.424062649 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.50405348 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.402643913 seconds)
  done (took 7.460164267 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.404340794 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.406033513 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.417016982 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.45651026 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.491382957 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.4159056 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.379582789 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.374502166 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.360658729 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.406796899 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.48102371 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.422274425 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.509939533 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.353335201 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.537067292 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.353482849 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.353348152 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.406602394 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.457886392 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.470770426 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.354290125 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.406171575 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.409651852 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.423784958 seconds)
  done (took 35.310470593 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.354034443 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.372308397 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.353321192 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.352870003 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.3605939 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.352939619 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.353504145 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.354009039 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.353492468 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.361227868 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.354151796 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.366702118 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.353348628 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.352876465 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.360479666 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.355599087 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.360435814 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.353909766 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.354869522 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.360274314 seconds)
  done (took 28.398970871 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.346556981 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.20003653 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.698399844 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.602761664 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.346897291 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.346296954 seconds)
  done (took 27.800101088 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.418797334 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.5721289 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.353860873 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.69266235 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.784135374 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.371229231 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.355193208 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.58722903 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.887417336 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.883821078 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.417243994 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.419710476 seconds)
  done (took 20.006059164 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.353762089 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.356573833 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.35589835 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.371225668 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.406820405 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.375533519 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.362891338 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.349608499 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.416238715 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.427291068 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.374652712 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.409583708 seconds)
  done (took 37.822073069 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438119064 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.396860908 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.277750475 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428090373 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.089217471 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.563375457 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.423461944 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.05799768 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.375024542 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626355277 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352808857 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44740177 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.606512253 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365710338 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360135863 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.293234413 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594435117 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816926191 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361853256 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.366959019 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385561977 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363153235 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.309238937 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.582791103 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.589583833 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.331259743 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.613702739 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.128388036 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627764084 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.37490645 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363766785 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353480736 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628179614 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006858949 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467722417 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.55765883 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37803969 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.899840761 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.343953997 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.238618162 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36927899 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.362977414 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364596925 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354838348 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.288727092 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354677836 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056290013 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.378571742 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.064083041 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.354734312 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601879494 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457848808 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.35891257 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.346654486 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394696555 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.360500885 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.359092736 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445076473 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945731652 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.472658024 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364946193 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.312999922 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.355458125 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.223770724 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963732781 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.377189172 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.359329233 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.358433117 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290423097 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.228643895 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378510522 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503046727 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.381225834 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.006550101 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037723688 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.376184323 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.293852899 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89052216 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365901193 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.29997425 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584708933 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.13309966 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292874022 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.301252489 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.29278877 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032247637 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373318995 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.719753367 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.377458537 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.068506575 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.581848322 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400763156 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380691886 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.580582677 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.235006254 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357065758 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.363612919 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493656221 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379336739 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.050145719 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311344215 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.36269714 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614055056 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.569856053 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364391354 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.306482315 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839099896 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376764003 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.380209598 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.361667182 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.571439642 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.943558574 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397659727 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.485800545 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382543097 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.137280171 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07438193 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374758801 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.370542008 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.359656289 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628298704 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.089921393 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.527410115 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428005341 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364947728 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.361060378 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.287937631 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.21723527 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.241767827 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.548196598 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391268736 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.377125998 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.360520458 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305111996 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.369622904 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368313226 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.147434798 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.583510655 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371791214 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643314541 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294945864 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508589568 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.37075564 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.584057299 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.518009969 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.383060931 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620754634 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361704493 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373511021 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379891111 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379979192 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461157075 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382827341 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.36508341 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.625074715 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.366046929 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.365406621 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.406912641 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.147011804 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364912761 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.368197166 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367810506 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941460032 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356319243 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368285347 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.252228223 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.376940862 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42997892 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.369372085 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.569276711 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.532718092 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389334568 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.385248483 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.361027107 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595572545 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373127356 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.238704273 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449488811 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.823973172 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.941777138 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399980885 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.297802044 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.074883159 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.056531413 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364253996 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.559543321 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.362471419 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.569218885 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.403123633 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373632926 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.927503868 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38965124 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.261985364 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.376329908 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.375730486 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.369884951 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364977933 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.524184369 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.52916562 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378845077 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.382602684 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507708029 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.378975199 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.298653903 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.881575448 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370529412 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365899055 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.140780905 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399114314 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.255983212 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159200802 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643000997 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375356326 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615379266 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.351859538 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.404554963 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.361404429 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374700481 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378235658 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.379421974 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373876785 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.377934264 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.258520682 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.811351115 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937020382 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076213732 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904560905 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.630180518 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.386330384 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.28832743 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.067060223 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319465848 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.023742824 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599641146 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.080236132 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330570705 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.83303464 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.547533292 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123986505 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624163333 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60365682 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.609857701 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.391365022 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627619806 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587014624 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402673998 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.369428322 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.303557854 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.647715815 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912170228 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389070251 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455625738 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069746289 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397791702 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.156684752 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.415742605 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.049890108 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771561014 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.939253665 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.756832669 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.370240126 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376767654 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172145192 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.394805938 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.89332171 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975797767 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400579578 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.839550355 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323323643 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.57742677 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.405636432 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.366088692 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.860431759 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.379601544 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.633254172 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621900618 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312972225 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382299089 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889943618 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.243201194 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.375217803 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371039233 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091854224 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379853418 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65616011 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.383698259 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.547262838 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398103253 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.306139258 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306209926 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.064470051 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.377136958 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373446329 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844786075 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.390861891 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394500047 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377970682 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226846718 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.627999985 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.386778758 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.935719747 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613608677 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390572395 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395038201 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.375508425 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378987425 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.360261724 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.271586682 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.60878182 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400188101 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.5976276 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.324566842 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.286390785 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.406673872 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585125249 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.255101349 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387875246 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618967064 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.109699027 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.394988209 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061898659 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415217284 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.825583863 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.391901995 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.371932139 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393149468 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46248428 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581922487 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.409000895 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.383560194 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.770189987 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391969797 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396730069 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.385444672 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46724135 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.53433955 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.560428547 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.153839813 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940910829 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092725417 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.959919541 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644367229 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.375080941 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377103996 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307322354 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521613305 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.899322717 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646759137 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502475618 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.373791786 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396188501 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372745202 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384765485 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59213546 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649738594 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.243421299 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381902638 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.040735554 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.255228258 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384699124 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.584723449 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852202508 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919540289 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492318459 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.383819128 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.082030832 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665965551 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.466006614 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374232861 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.967604936 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.38115498 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.071494591 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.388270337 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375704564 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521833485 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62777348 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029724481 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.403310233 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.531140763 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.148233391 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.305178758 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.63143464 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.816253149 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.586803782 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969642149 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.076396908 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639671028 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446015345 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586037686 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.505404289 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523579149 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.377885212 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.258868726 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376775792 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.219710839 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.086374194 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.385809762 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951174776 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656111971 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.381438253 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.380326821 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399860517 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.387434746 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.599990525 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065140643 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610572664 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385993316 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382302185 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.367260632 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948598227 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647283146 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320981041 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.380958448 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614058294 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.639041365 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403083742 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.830263567 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.088301326 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917540552 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.357358248 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400630284 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382112515 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.066324436 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959959561 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.588038175 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869425783 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.044586294 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378594908 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65847629 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.38309532 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380508362 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662322099 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.382595297 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380590281 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597301963 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.974234994 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148432703 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.391612479 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.35322778 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.324679073 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.604735175 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377855489 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334600327 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380506813 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.786731673 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400106156 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510867516 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391927507 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.388292222 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379976611 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.160088674 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653662176 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.385738508 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.372687298 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.361076781 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.421146691 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480504543 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931950574 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402371749 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.056610001 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.73030198 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.635361079 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.386526533 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.368545584 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.38591375 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382480574 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.099392578 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.351040771 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382061495 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931895849 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.391758526 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.399725166 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384578812 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.598236464 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592780395 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382784479 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617771447 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420026301 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403649854 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.281065297 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.149989946 seconds)
  done (took 1670.964445411 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.383783318 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.409813122 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.400870796 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.4305571 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.419711812 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.517615476 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.472320375 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.460206804 seconds)
  done (took 52.786235182 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.383539373 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.539007017 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.413361212 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.386331954 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.390948943 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.383478917 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.838208626 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.399477581 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.391728347 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.391200408 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.397042851 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.395710875 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.038312837 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.39202285 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.385823827 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.371982753 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.39029448 seconds)
  done (took 66.195121369 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.372617466 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.712732468 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.003473244 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.44254767 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.391358217 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.396884682 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.851431875 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.410678989 seconds)
  done (took 58.874288364 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.400133573 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.400790635 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.401823746 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.401621551 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.401467693 seconds)
  done (took 8.298910635 seconds)
done (took 2076.310414598 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.389741127 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.391177311 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.389639291 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.392264669 seconds)
  done (took 6.856437264 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.363951076 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.121074354 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.373026024 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.387261459 seconds)
  done (took 18.538874514 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.405276548 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.416273292 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.055123512 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.010822557 seconds)
  done (took 5.362252786 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.135920873 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.149192452 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.132810535 seconds)
  done (took 7.716999572 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.386884167 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.39125936 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.393495232 seconds)
  done (took 20.465956908 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.671373311 seconds)
  done (took 2.969649507 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.532029325 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.581369026 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.701877774 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.706186897 seconds)
  done (took 7.815140786 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.771784654 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.767768928 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.576421065 seconds)
  done (took 6.409612209 seconds)
done (took 90.251110194 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.105460456 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.387627025 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.598959671 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.073590386 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.62305115 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.600458208 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.7803726 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.042678937 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.582173479 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.573918435 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.081100664 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.628518887 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.502348676 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.386586628 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.502149363 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.630092662 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.644371581 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.148571274 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.793934979 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.961383257 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.78767611 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.712863096 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.903601544 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.731778412 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.657284519 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.541208709 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.311016923 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.388017052 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.969201884 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.327362745 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.541892143 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.134281881 seconds)
  done (took 190.948611003 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.384820051 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.387206663 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.403723125 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.386539176 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.405668913 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.411583853 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.387515101 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.402739672 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.38711078 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.393576702 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.390623379 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.386530764 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.404029928 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.416616099 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.39012359 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.402924639 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.403544741 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.396406034 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.40312428 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.386654709 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.407001861 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.396873076 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.395719373 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.38814968 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.396117079 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.387788913 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.388195778 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.410346717 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.402831392 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.388746619 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.412795617 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.396441731 seconds)
  done (took 205.999404135 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.389890229 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.388626567 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.388917097 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.387999027 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.400870235 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.390010362 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.389859499 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.398146722 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.398537515 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.393639958 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.388704832 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.39362599 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.389869041 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.390878886 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.391089554 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.39012599 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.405611727 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.405105989 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.388974282 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.395981938 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.399190176 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.389330824 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.389636652 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.397142299 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.389905706 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.404592938 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.390695151 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.390652778 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.406450602 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.401182831 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.391789668 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.389786664 seconds)
  done (took 205.906447336 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.594177019 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.398716702 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.398857109 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.35550824 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.398881123 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.398639359 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.395069533 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.589202997 seconds)
  done (took 14.82999857 seconds)
done (took 618.979866526 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.65644676 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.376366011 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.598845782 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.41921205 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.155926404 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.43713809 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.420563589 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.586162737 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.318736082 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.592005217 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.615721798 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.433086617 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.75584589 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.419047339 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.675315842 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.518761618 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.308702186 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.432323542 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.731584941 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.946244355 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.680595985 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.867441691 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.605140785 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.303096196 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.776820138 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.880703775 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.132775652 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.296721207 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.435565762 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.742621094 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.9986138 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.359498622 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.478589024 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.47604266 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.534558782 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.513986478 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.348301018 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.474482343 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.625078739 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.640353715 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.927722653 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.140183874 seconds)
  done (took 93.938290619 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.383821528 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.382370079 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.381255298 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.383308678 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.384356702 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.383432906 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.384962611 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.382803382 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.381907388 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.383250036 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.383148403 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.384272305 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.383780625 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.384364243 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.382779758 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.383349535 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.384604741 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.386301194 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.383973635 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.384717454 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.3837408 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.384285903 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.385910892 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.383794984 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.384925395 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.385001974 seconds)
  done (took 37.284994646 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.405298096 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.649012269 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.813284838 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.412539259 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.403800243 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.408109774 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.479813083 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.406928945 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.406881275 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.406909743 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.571826645 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.407696553 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.438632931 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.839947004 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.407261004 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.406156089 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.405389074 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.403950648 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.658048834 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.414213804 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.502751551 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.407066512 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.480794967 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.413545104 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.427732306 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.405032604 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.409574518 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.972734962 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.422964743 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.572491 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.176994923 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.485959176 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.913925202 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.834158498 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.173012985 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.415156972 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.407419436 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.577762823 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.407012943 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.404611001 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.480933894 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.406172021 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.818391471 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.067246579 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.424129242 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.407511647 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.991814516 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.595850772 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.642420533 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.421849527 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.837533611 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.411736273 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.410074063 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.408336468 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.643219055 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.421405783 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.407165408 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.971627056 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.430848635 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.483309442 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.417940672 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.408084073 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.666635213 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.407701343 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.653672087 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.409320713 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.415197873 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.426703026 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.820605847 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.410064033 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.080926318 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.427577334 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.40988445 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.57395327 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.654467564 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.021782802 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.429037372 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.67081452 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.931582331 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.498327565 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.413006555 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.967277583 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.504267006 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.414266925 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.412064711 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.411157545 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.410600107 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.460465946 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.480668882 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.020624489 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.089990839 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.996432953 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.505009895 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.428579244 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.410256015 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.975197555 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.429901243 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.410950583 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.818927055 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.084159114 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.427733975 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.417483325 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.084518035 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.42954569 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.487281235 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.415603484 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.826319993 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.411747002 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.462743351 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.410543219 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.417616319 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.431606118 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.486165174 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.416937403 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.412385928 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.063338072 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.603187741 seconds)
  done (took 185.130589626 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.406391204 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.421938876 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.405382787 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.405121362 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.404493472 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.412545664 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.404857785 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.411822604 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.410019689 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.404705641 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.405965586 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.405523848 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.406884974 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.410720076 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.41650176 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.412717008 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.061337552 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.406706304 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.405819423 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.422823097 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.204348262 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.415072577 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.405820689 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.408132458 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.405286906 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.405682281 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.413699485 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.40830811 seconds)
  done (took 154.221568703 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.413876672 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.962309878 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.440062621 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.539444278 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.439978618 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.412672259 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.537234403 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.476078729 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.430984749 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.41328161 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.412376354 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.703966325 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.416258497 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.909805964 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.600270666 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.559051534 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.91690122 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.43133664 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.41320906 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.412954329 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.54228713 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.420857445 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.705573546 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.958477477 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.433809455 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.958660977 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.398184551 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.416549357 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.414744857 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.961539224 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.431062923 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.708590224 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.497911483 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.472192531 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.982247685 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.936294344 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.928630949 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.560369863 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.422913112 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.41460224 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.41469795 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.398084311 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.967091464 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.443588642 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.416020781 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.957498191 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.443977266 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.417550455 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.42396969 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.414924947 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.473277704 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.491937901 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.728626934 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.979216187 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.517068638 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.429119263 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.541965274 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.820722547 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.419057413 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.91284263 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.398309748 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.968592021 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.436074425 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.398050672 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.418518523 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.422427656 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.562119695 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.552985706 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.922745366 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.434535613 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.913036784 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.580446882 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.418757838 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.416730662 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.420130339 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.968186514 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.931582411 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.581703399 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.554750404 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.608024502 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.404125476 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.416254289 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.400638393 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.492881609 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.417089025 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.970417618 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.930988526 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.436422665 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.419024561 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.419941602 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.420069582 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.588739031 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.993578686 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.510389654 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.904045299 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.731223666 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.714373193 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.419951367 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.47588562 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.434925289 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.714476978 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.421543302 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.476571756 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.883215716 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.716556494 seconds)
  done (took 167.958442628 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.649663668 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.56714977 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.506920932 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.561643802 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.008624689 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.974079314 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.676930392 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.553260022 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.528241784 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.671833934 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.542337619 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.510543169 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.62676097 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.49171429 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.145368303 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.502962983 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.528056219 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.563551038 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.569953369 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.412067503 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.081650298 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.700485799 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.607413002 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.271377676 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.512081827 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.178363419 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.971486955 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.995816401 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.591924853 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.688447918 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.929182794 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.536414519 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.360793613 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.105294147 seconds)
  done (took 67.443929372 seconds)
done (took 707.278574494 seconds)
SAVING RESULT...
DONE!
