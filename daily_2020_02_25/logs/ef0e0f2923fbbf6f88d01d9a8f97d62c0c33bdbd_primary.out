cset: moving following pidspec: 29975
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.366447605 seconds)
loading group "string"... done (took 0.662606232 seconds)
loading group "linalg"... done (took 7.904184601 seconds)
loading group "parallel"... done (took 0.16515464 seconds)
loading group "find"... done (took 1.268247002 seconds)
loading group "tuple"... done (took 1.882863763 seconds)
loading group "dates"... done (took 1.321410795 seconds)
loading group "micro"... done (took 0.22950686 seconds)
loading group "io"... done (took 0.982767517 seconds)
loading group "scalar"... done (took 39.256705049 seconds)
loading group "sparse"... done (took 12.404687938 seconds)
loading group "broadcast"... done (took 0.995762845 seconds)
loading group "union"... done (took 12.844096535 seconds)
loading group "simd"... done (took 4.709880167 seconds)
loading group "random"... done (took 9.454739445 seconds)
loading group "problem"... done (took 1.856699855 seconds)
loading group "array"... done (took 21.773333256 seconds)
loading group "misc"... done (took 1.775817233 seconds)
loading group "sort"... done (took 3.433845834 seconds)
loading group "collection"... done (took 18.017546907 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.567214816 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134313602 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136429289 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.128974067 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.156327452 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.12422378 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.13549646 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.09528789 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.834532828 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.162247459 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.126358406 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.445197724 seconds)
done (took 5.559613939 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.182149135 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090976404 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09117804 seconds)
  done (took 1.335420907 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.073729028 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.133772747 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.074984383 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07580059 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.078273928 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074148795 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.075008323 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.074125104 seconds)
  done (took 1.742567849 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.080856944 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.076941638 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.075193661 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.076636993 seconds)
  done (took 1.467968009 seconds)
done (took 5.966195524 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.810141483 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.220699536 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19708484 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.423240352 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.13703766 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.181999201 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.654954874 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318037063 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.197496117 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.083864116 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11714643 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.353189485 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131150924 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.651927022 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.084217898 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09904969 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.147073749 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.434481495 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075030247 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09025648 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.096563254 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.136042644 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.095041245 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.085432452 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.155312198 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075164953 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144689733 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087894638 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.073940159 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.228072894 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.180222195 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.667193571 seconds)
  done (took 10.628947173 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.107959487 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.10834027 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07711754 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.134501417 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.108493631 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077678027 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083516025 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074922182 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.098228475 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.141286635 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.100418606 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111426686 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073102571 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.076722024 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.093506848 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212856127 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.088684568 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.090170577 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078842737 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.085815764 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116363784 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.085731199 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088990391 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.088352916 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.136138556 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.186257951 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10368319 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.104713246 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.073660482 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.090943242 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.122127187 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.136030797 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073700503 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073673891 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.136309408 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.102629707 seconds)
  done (took 4.935686238 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.056152394 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.153994874 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.098871872 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144145989 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.072716005 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.117737368 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.073321322 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.091196607 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.219204403 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.358944112 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.638645715 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093755887 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118539889 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11426894 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075193939 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.075944788 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075526089 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.57813754 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.106185262 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116640075 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09043605 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.079136726 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.077526726 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.37486929 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076936816 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.07323038 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077066049 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064788783 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.133354433 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076253898 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.986039481 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.170236166 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074566455 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1083983 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.298595027 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100130553 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.153369967 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076868609 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.073135526 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.165385977 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07979165 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075881274 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.092872502 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112049552 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.125942407 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.073754656 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.075007295 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173696698 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.072491465 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.073120731 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.088825162 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.144055914 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.163996071 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.084971337 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.072930457 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288458995 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097915956 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078432817 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.073205993 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.189305117 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135844665 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.075949541 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07487002 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07680247 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077663272 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.371947395 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.077337768 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.091512201 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078818035 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.084259583 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077450415 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077345786 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081435419 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081162919 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.096460761 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.074721054 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.083137995 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073954869 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.074728147 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.07479279 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.091346897 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.409478159 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074653831 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.076549331 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.175280049 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09813106 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104466934 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.075578247 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.074643682 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107580365 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07658224 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.074915614 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.120102799 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.075009093 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.091095082 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.077731435 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.120668246 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.074978438 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.112047808 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.100926338 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073864108 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104957563 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.077723851 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106991555 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.091554883 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076257146 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.452826983 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.072049479 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075954614 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.073590823 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.076265481 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.074125191 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.075939991 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.075065938 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.087125154 seconds)
  done (took 22.967320192 seconds)
done (took 40.746491521 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.262749508 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084398305 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081177701 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081061166 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08154401 seconds)
  done (took 1.837950694 seconds)
done (took 3.067120438 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.132013595 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109042625 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071990649 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105727837 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071933263 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110168921 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109504736 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08527207 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109086367 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.072092737 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107181357 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072191269 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072358871 seconds)
  done (took 2.475930241 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091877987 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092668743 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077795399 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091557931 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071221435 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09129294 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09033036 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097909911 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089871782 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080508245 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071499346 seconds)
  done (took 2.168558525 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090998508 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092794471 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077800966 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090952634 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07237217 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090328874 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092628403 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094507678 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090647195 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08241668 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071690726 seconds)
  done (took 2.16594142 seconds)
done (took 8.025802729 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.085489147 seconds)
  done (took 1.295797845 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.600721982 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.174612775 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.089318975 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.119745439 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.202295192 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.126682106 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.279248587 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.094856156 seconds)
  done (took 9.080452326 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.110024699 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.079728846 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08150419 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078433371 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079925854 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078799577 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077308941 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.079867446 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076031874 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077495279 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.08018962 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076401389 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.078079378 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07596832 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076626869 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.075697484 seconds)
  done (took 2.564742404 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100876435 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.10064859 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.081018615 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.082672264 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.079754064 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.080218889 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.08232853 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081708232 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.079188462 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079970988 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.082425497 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.081435114 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.079397883 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.071994182 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.081708784 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.082349802 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078583461 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.081712222 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.081924837 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.08314257 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.082496422 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.071633372 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.079280589 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.081624225 seconds)
  done (took 3.288829043 seconds)
done (took 17.449341493 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113989756 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075446276 seconds)
  done (took 1.409660117 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.089584672 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09042563 seconds)
  done (took 1.405623609 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.089918197 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.073569253 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.096823792 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.085168786 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.073430825 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.072924071 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.094866538 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.073838635 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.073789613 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.073893767 seconds)
  done (took 2.03422487 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.076006984 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.084850461 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.078056125 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.088733562 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.081072426 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.071629136 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.079747971 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.075270913 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084957197 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.070672441 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.078918745 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.090598092 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07969897 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.092502247 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.079485854 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.075917913 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.078242074 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.074873329 seconds)
  done (took 2.670340179 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.073197289 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.073871756 seconds)
  done (took 1.37940719 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.073822827 seconds)
    (2/7) benchmarking "second"...
    done (took 0.071437673 seconds)
    (3/7) benchmarking "month"...
    done (took 0.074266014 seconds)
    (4/7) benchmarking "year"...
    done (took 0.073869381 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.071606182 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.069889349 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.070737486 seconds)
  done (took 1.734150644 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.391938814 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.126541016 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.328925496 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079245422 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.089761371 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.274256782 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.073555144 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07857696 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07918262 seconds)
  done (took 2.795352956 seconds)
done (took 14.663273322 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.088591608 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.094905344 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.104725557 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.393588625 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.099523374 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.074172849 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.121298324 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.196448088 seconds)
done (took 2.415947177 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.220917793 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.708341685 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.452140599 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.221586322 seconds)
  done (took 2.617001022 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.362399471 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09756886 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066105251 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075005507 seconds)
  done (took 1.842664203 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074589578 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07828667 seconds)
  done (took 1.393666181 seconds)
done (took 7.317383045 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074368408 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.094192221 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074180276 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.074238137 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.072210082 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073835783 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.07151832 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071336197 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073792074 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.074158449 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.07373408 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.073898911 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074164168 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071330291 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071075811 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073451896 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071318338 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071532768 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071324308 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.071238675 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.179751389 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07378096 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071210758 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071329281 seconds)
  done (took 3.147649514 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.093028172 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.073367365 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.079709934 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.079321083 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.077592862 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.078705193 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.078966061 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.073683144 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.078682621 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07690554 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076833202 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.0776403 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.076340774 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.076836109 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07604731 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.076829208 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.078791957 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073549226 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07592136 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.077477437 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.079258271 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073416114 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.076812782 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078464862 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.077261689 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077331395 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.075949693 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.0739785 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078626777 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.076694728 seconds)
  done (took 3.571971725 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.078197469 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07233316 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.071494528 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.079163782 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.071998089 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.071793975 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.070842299 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.073037447 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.071660658 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.070703798 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.072578996 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.071184884 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.070884176 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.07181573 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.071701531 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.075120727 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.087231669 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.071370366 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07095086 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.071622333 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074472839 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.073421636 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.071015589 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.071146894 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.071298061 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.070925585 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.071448552 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.071314613 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.071928123 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.071418879 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.074508922 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.075119628 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.071127484 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078449317 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.075654603 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.070800534 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.075688534 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07113825 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.072090859 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.071782424 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.071119824 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.071219515 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.071101813 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.078431426 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.071155199 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.073164574 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.071647368 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.07276956 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.071855604 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.073861214 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.070451379 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.071862941 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.073166075 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.072756893 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.075309066 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.070670514 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.072508096 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.070833805 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.072272684 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.071103605 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072056633 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.071060189 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.074276394 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.072083448 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.08713707 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078494939 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.071456114 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.072825822 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.072308521 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.074352761 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.072688151 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.086548826 seconds)
  done (took 6.523922777 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.099004971 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094881749 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073017651 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07369259 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069323779 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071550011 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077180384 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071640284 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073755777 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089369704 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071790405 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072711855 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07334331 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075103606 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072041089 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073408982 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080286858 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069590932 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.0719332 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074999848 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071897028 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077352884 seconds)
  done (took 2.937860581 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.162295632 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077777866 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.114298957 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083073275 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077495781 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082470591 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.077188923 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077547123 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077337605 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075901397 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075030024 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077320058 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077219916 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075229197 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074732312 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075109252 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077607652 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075215522 seconds)
  done (took 2.767531733 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.084353828 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.073840528 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.095668517 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07339005 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.073409542 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075759945 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077896097 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.081422886 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.075603336 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.073483712 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.081898892 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075814892 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.07646816 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073480189 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075827455 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07365486 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.076121134 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073835655 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081628084 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077737033 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077626694 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081174854 seconds)
  done (took 2.965069236 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087509764 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07570897 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089112973 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.074984055 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.069122974 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071566892 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.077736298 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.072994664 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.078486084 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.075274511 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073742367 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.072013602 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.076023327 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073637414 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.076498595 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073203434 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07521631 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073670925 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075664015 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069574736 seconds)
  done (took 2.767382127 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094220253 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076388075 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075817685 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083583663 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075543978 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075820004 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082464082 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07544231 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075821641 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096709229 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07559216 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075856085 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082426711 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079869806 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077536849 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08310847 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082425883 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082646073 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075311507 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07544959 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096379244 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076105787 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083620651 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075534272 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075626069 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0757994 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07524087 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080049684 seconds)
  done (took 3.499070791 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07440847 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07445867 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.071353878 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.071498688 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.071220574 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.071047108 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.071205487 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.071368986 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073587277 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071150432 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.073626212 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.074289308 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073608996 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074049648 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074465434 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.073334513 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073433209 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.071318088 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070945219 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07116629 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.073868572 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074379725 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.073602542 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071221257 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071141643 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.07396717 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072376478 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071665783 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073408181 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071229437 seconds)
  done (took 3.440949788 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.082835537 seconds)
    (2/2) benchmarking "in"...
    done (took 0.080458895 seconds)
  done (took 1.426740005 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.070927636 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08802621 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.070987221 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07842401 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077061382 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074656858 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.080452919 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07753765 seconds)
  done (took 1.87757615 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09051562 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.086598909 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.076813079 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.087654879 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.084647525 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.091474922 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144676343 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.07521308 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.080310072 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.071815296 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08758147 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.073250259 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.08053496 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074433531 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.080013896 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081115712 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.071538299 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.079173043 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.076231389 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.0721482 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075648291 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.083360982 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077364172 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.069510166 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.075954875 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09706812 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.085278288 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.073602849 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077451879 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.081428711 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080922793 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.067944503 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.07415726 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.074791801 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.071896499 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.085104446 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089107495 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076947171 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.08320734 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075052187 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08374061 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06897813 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.079199451 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.081001867 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084946449 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.074756845 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.075533345 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.069459576 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.072225423 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.078887265 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06993843 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07431203 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.069062968 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08208329 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.078378253 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.085197309 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.073416439 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.076323059 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.077530368 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.077524167 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.080758284 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.076637392 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077116694 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.073961203 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084438713 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079362697 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083076745 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.068993836 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.068124696 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.072387567 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.083963295 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098267264 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.080233548 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.074840016 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075192355 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.071796246 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077716039 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075174203 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080468226 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.08129974 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.074414245 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079309986 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081693643 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075084758 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.076691414 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.082303678 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.073360878 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.076738972 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.072763507 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091098292 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.073010788 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.071692372 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.071954756 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087251721 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.077705174 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.07356326 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.071689165 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081377275 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.067569062 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.073527776 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074256769 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074174135 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.083475041 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.077475796 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.077573617 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.081909677 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.080893153 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074097486 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.076137274 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.19397631 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076923201 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.074658191 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.083598433 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.068463451 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077335188 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.076609944 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.075677071 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.082720571 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.073336614 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.074063977 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082354365 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.080336688 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.073552394 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.070939281 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.077577091 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.074172332 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.076990457 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.083692258 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.073331681 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.069611556 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.069651243 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.078680211 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.073811649 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.078803226 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.078877067 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077652748 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.068769871 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.072159772 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.079980852 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.083784679 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.07445979 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.075942397 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.080266033 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.076098781 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.073629022 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.081078961 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.077276626 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.073540033 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.080305346 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.075089555 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.069494688 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077648658 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.077298416 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.073773324 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.078740994 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.077983607 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.077478175 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.075072049 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072641883 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.080806261 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07434163 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.073974396 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074819744 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.073354647 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.085128746 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.077406835 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.069435238 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.071072779 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.083276429 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.072736652 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.073958748 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.073442018 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.076798732 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.074905981 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.071949687 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.073890319 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.076317095 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084077065 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07832869 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074691285 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.080091964 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.086086594 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.073755073 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.076719467 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.074508619 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075280291 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.075101325 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.083904399 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.080488989 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.078771824 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.077629203 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.071103544 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080094321 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082379657 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.07346778 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.071908806 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.073259663 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.077990749 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.080377246 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.078783245 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.075306207 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072690479 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074904569 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.077326575 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.076923766 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.073938279 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.073170702 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07930427 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.071892898 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.079833482 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074044256 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.083435005 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07719143 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.068132259 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075326063 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071573741 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.079553358 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.068349842 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.071553669 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.072664849 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.073848421 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.072109964 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.075919397 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.194979897 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083561173 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083807513 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.075337816 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.074693819 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.074614267 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08312518 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.07600919 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.079154884 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.078751951 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.080810006 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.086005135 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.074020574 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.078503897 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.084672912 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.074671151 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.068267835 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.083767118 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.074408414 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.07323192 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.073962892 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.072209777 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077551265 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082685269 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.082157422 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.068216363 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.077544003 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.072660813 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.074534697 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06956323 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.079216101 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.077080957 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.075315173 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08216674 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075046655 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.075392984 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078068753 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.073814347 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.07568475 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.075452257 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077172062 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.075502622 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.076003688 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.073781158 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.077524488 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.073322925 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.071913381 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.076289467 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.074267304 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.074952837 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079374212 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.074596031 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074662413 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.077331182 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.074564578 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074675571 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.074497508 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.074180753 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076968609 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074911454 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.074846336 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.076809899 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.069570713 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.082015726 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.074351505 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081926203 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.075423924 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.071458757 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.080767149 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.076490565 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.079529572 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.074775125 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.074685704 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.075988825 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.073711315 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.077774952 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081809914 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.072219876 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.085230889 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081843047 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074983028 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.076976613 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.074863032 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.075953368 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.073687336 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.075273003 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.074842939 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.075863571 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.074024315 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.079268866 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.076745104 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.074980283 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076053447 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.075401722 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.075145403 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.076165285 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06903909 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.074173185 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.073986471 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.073776933 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083700472 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.074911855 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.074036684 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.073453662 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075359481 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.073515208 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.070497073 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.080414452 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081624554 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.074305471 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079874499 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.07269196 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.074830962 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08380635 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.067470027 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.071449632 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.203347586 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.07418655 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083503804 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.075721242 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.085010991 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.07598444 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.074867752 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.071431382 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.075389067 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.073086616 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.069727009 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.07208848 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07917085 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.07439203 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073971016 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.073833152 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.077659936 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075970048 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084255183 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.074719596 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.075430028 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.075049235 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.071853163 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.074299695 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.073776132 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.078135086 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.07471617 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.07347648 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.072519175 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.074011848 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.076529258 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.076882718 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.07503782 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.078141991 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081727608 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.074585861 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.077691944 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078130107 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.069175069 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.079153219 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.073837306 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.074666793 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.073577144 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.078488903 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077399413 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07580182 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.083257966 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.074242707 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07819186 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075178608 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.072215249 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.07367645 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.074029014 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.074459997 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.073478578 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.075581486 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083111057 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.072534881 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.078019293 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075086954 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.074586118 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.08103938 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.075527458 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.077197808 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.081263891 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.075829596 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07689623 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.082531276 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.078407288 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077996126 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075590843 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.075985154 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080187832 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.073371966 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.081324017 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.075271997 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.074816701 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.075786754 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.072941826 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074192702 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.074296001 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073569127 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.080517236 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.075998749 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.073600588 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.073876217 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.072677042 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.076024407 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077139581 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.083747023 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.076949652 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077426171 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.069714729 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.071872826 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075586169 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.072719798 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.076824929 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.077012343 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080435551 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.076242678 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.0743306 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.07332288 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.083753934 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07996924 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.077836124 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.072292661 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.077414872 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.075118045 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.075643893 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.075023782 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.073466214 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074542872 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07758525 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074659454 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.07246672 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079982421 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.076853468 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.206563968 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.077653977 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.077360703 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.075842984 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.070499759 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.075644112 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.077131098 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080654112 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.076913694 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0748835 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085519617 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.07276232 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.076170893 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.078043073 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073518192 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.08002835 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.069862018 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.076096373 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075735162 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075734853 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.070459527 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.074930635 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.07294986 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.077740302 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.073934552 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.070090275 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085744471 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.083937078 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.077471536 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073703707 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073738419 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.069578185 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.070596538 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.073968116 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075855723 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.076785125 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.084934932 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.073575349 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.073979063 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.069390032 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074662221 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077596584 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.077637295 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.070782408 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.069623342 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.074733811 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.077662605 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.080505278 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072780076 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.074157784 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077899258 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.076968243 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.072316587 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07775556 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.071559591 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07867021 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.087284902 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.074470542 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076006737 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.081205378 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08140399 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.074384456 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.07068675 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.075738695 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.077470981 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.075750022 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.074861749 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.076202729 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09003947 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078088178 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.073845316 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.073091339 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.077445637 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.074140132 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.083652488 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075311173 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.075221685 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.079651239 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.078742017 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.082510315 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077703139 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082263823 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.077929622 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.077606819 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.074260903 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074931316 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.072919123 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.07370149 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.075625667 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.074825486 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078428048 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.081904641 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.074907079 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085365526 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.084600301 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.076452713 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.071278212 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.073641574 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.073801957 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.069530133 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.074733355 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.072389891 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.072458631 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.072779948 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.072928657 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.075437397 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078913361 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.075126134 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.074193972 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.073449665 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.067558829 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075808192 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07601186 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075470489 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.070386997 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.073558497 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.207020873 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.080630189 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07835286 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.073014615 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.077226282 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.077587405 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076122177 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.070220324 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.08146285 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073721183 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.077047798 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.073706529 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075780272 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.075300611 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078497489 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.080321466 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.076439188 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.077421374 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07923348 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.077048623 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.072177231 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.071621729 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.080429564 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.072787881 seconds)
  done (took 47.549063496 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108231421 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071576429 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069713864 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069087885 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080386074 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070238633 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069329912 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070476712 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070180767 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07262405 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069550427 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069549068 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077675733 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084460809 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080413977 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073684412 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06920048 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071220895 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069670945 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070355865 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077672504 seconds)
  done (took 2.910606514 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.08147362 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.085021891 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082824243 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089240767 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078288301 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07740409 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082404524 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077640009 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085626176 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079648624 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085770445 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07756663 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07951769 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.079704065 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079607253 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077750881 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085700065 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078404505 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.077775813 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082363797 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078023295 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082287984 seconds)
  done (took 3.118799324 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.074942319 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.073768203 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.076609553 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06942185 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.073023 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.068816846 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.076843194 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.071545602 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.076277669 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.073519946 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.072535094 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.073127426 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.075391298 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06883232 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.073930187 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.071865932 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.1144283 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.076633048 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.07366545 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.074285072 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.068890891 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.075822505 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.069161233 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.069227289 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.073401502 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.077182289 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.074493454 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.071666141 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.073278955 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.073397943 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.073793676 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.071538376 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.075277827 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.073858699 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.072480624 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.072972141 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.07331025 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.073980231 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.069183223 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.071452449 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.0742053 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.071498231 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.074415551 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.074783911 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.071942284 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.07121786 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.075750284 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.073481699 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.068456963 seconds)
  done (took 4.957180319 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086676511 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.117757659 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.075118925 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.097176494 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08704305 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.080311865 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.077551408 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.097571455 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.070915244 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.071533996 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.088181997 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.085870079 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072929105 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.077333334 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07768709 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072422721 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.073613248 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071502062 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.076380913 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.072694997 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.076451991 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.079695432 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.086935389 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.085748408 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.076554857 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.07235366 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072440472 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.076980274 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.084931408 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.077130674 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.077747717 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.078222665 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.087334313 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.078359527 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072223861 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.07500698 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.088134564 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.073120596 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.075131333 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.070643693 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.074962036 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.077371666 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.080068586 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.088816165 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.073270252 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07782905 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072858353 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.071219393 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.084907352 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.07532112 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.080569789 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.086636094 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076579208 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.073138394 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.077284602 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.087532133 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.072917996 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.071367083 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.075984503 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.084471083 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.07168868 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.077152054 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.085874879 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.075318829 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.08041781 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.086046357 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.078077837 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.077318189 seconds)
  done (took 6.871631973 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083533979 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103666824 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091534478 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089732564 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08246571 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.083784099 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083114258 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.082966285 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090146363 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087134402 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083612179 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.124125939 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.078664342 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.085294087 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083461117 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083276445 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.083735038 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083463442 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083344303 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083156401 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.082955223 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090013465 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083243842 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.090487418 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086382263 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078830803 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082500804 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082880343 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090044499 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083961495 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086959381 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.083213667 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083183562 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.090467091 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086980712 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.083451262 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073292072 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083278938 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.08319751 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082988225 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08106397 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090013305 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082730907 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.078291929 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082756509 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082346189 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090180971 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086691289 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084950584 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087726967 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.08290557 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090280748 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08314245 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083132668 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090383113 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.092948047 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089716845 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090134472 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083444451 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090410192 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090346252 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.09336598 seconds)
  done (took 6.70570724 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089988601 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081117013 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089874985 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.069213688 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071638911 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079159182 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071658242 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.072294992 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081308137 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.083592057 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083650085 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078856936 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081863242 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083980836 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079199917 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082071913 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079959082 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078842706 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081347523 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.079407726 seconds)
  done (took 2.956677316 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.081716734 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090678737 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.074421728 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079336727 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.076632037 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.079100816 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.07602861 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076277394 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075159293 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076548254 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.083345942 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083518461 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074187935 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.079715047 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082884409 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.078480974 seconds)
  done (took 2.616954523 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.092250446 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.080990083 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.088219448 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.073905531 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.074668189 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.069912939 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.07318379 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.068892597 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.069820089 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.086247226 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.073374235 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.083679176 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.0732827 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.073416611 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.070095274 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.078829175 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06975927 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.070408213 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.073053873 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.085765799 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07690562 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.071767875 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.076544691 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.073529528 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.075760449 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.077987371 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.072136986 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.073382916 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.070547589 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.073705138 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.076246903 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076873286 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.070699313 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.071168097 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.072661962 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.0705368 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.073842153 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.073971165 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.078462951 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.073366568 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.071699814 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.075471476 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.073297739 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.074768457 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06977572 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.073517237 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.069349293 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07536075 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.071065405 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.075878825 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.073586942 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.075488625 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.073648007 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079848986 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.076239416 seconds)
  done (took 5.469554912 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088045783 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07770533 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.070127776 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.070809812 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076624296 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.074904753 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076967474 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074572567 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075153259 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071642142 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074711928 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077180874 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075434814 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076921443 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074928095 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077795395 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068900796 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07467578 seconds)
  done (took 2.718659166 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078348833 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073402279 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.08034679 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073401483 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.073281699 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075911103 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069392063 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.072377098 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071997098 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073240969 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073269528 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.075563306 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071978695 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07632788 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073402488 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073805974 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.075851108 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072174191 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073355059 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069260926 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076081693 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072220251 seconds)
  done (took 2.979956335 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.103410672 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.090902847 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.146912557 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.08622871 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.093686176 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.079399404 seconds)
  done (took 1.956627436 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099632746 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108687359 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073468392 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077513177 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083199957 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077585303 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077045657 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077576422 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08527141 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083164129 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077730367 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085934049 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085520641 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084560638 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083529231 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083061766 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077390077 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079946839 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074874583 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09068758 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077722207 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086286602 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077990706 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077276994 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077334746 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084613871 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085495991 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082698329 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077109402 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08565942 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08265872 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078056265 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086110849 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082701852 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077875388 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085636555 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077901341 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090779769 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083624715 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08465689 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.077084554 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082990936 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086367156 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081915698 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085969596 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07779526 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082168066 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077650374 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077741674 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092998952 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083261734 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084724333 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083155894 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086009627 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085983014 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09271157 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083299418 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084929402 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083168169 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082924696 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085054247 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08314699 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084747066 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083677953 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083509049 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085385131 seconds)
  done (took 6.843880554 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112220705 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074816815 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078116575 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083265882 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084831067 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07824884 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077791516 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077671365 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077669782 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074864156 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116654337 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077987147 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084451365 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084937848 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080367276 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077602119 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077270479 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084472944 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075326851 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092822107 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077668039 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0852613 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085211753 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084760783 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08324854 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082759264 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0777895 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077572397 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077255205 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07760198 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081928824 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077597179 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084647876 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074314071 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085148229 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077768823 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077458571 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082460054 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077709935 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083197135 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084926386 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091266397 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077609755 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077737355 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082927547 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077958928 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077510107 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074731438 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077652445 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074356084 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083130666 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083118575 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082985583 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084817803 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077751725 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077746484 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07766329 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077689392 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077841511 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083194805 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084828818 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077594884 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092669172 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077848885 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077354552 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085196782 seconds)
  done (took 6.752958674 seconds)
done (took 140.576837081 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.197101843 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175854452 seconds)
  done (took 1.723189275 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076508368 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106974217 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.085128894 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135997832 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.074399771 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.107950506 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.107432428 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.085729571 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.074038128 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073900839 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073747489 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076866913 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.138981897 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.074075478 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.074276709 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076010373 seconds)
  done (took 2.805732008 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107281176 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172589699 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111751444 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.074141908 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107725678 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.0799565 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072478321 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082558614 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078928492 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073696817 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.08008166 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078249051 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072934376 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.078028454 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.080761264 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080105668 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072813047 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080130549 seconds)
  done (took 2.951156965 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106063292 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09937842 seconds)
  done (took 1.575701808 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.16277301 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.139793309 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.210819813 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.360743183 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.173375772 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.156028289 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.153764676 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.152982537 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.1226066 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.145991421 seconds)
  done (took 3.143662982 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.108447039 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.162491207 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.282044787 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.125901259 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.080291033 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.103043043 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.128327323 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.086473131 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087668024 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.087462238 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.087748074 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.084302727 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.108516182 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.080620281 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.081896433 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.084077876 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.111578844 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.080848597 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.082681465 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.083635973 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.109234168 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.073599019 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.080617153 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.080804675 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.085046015 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.085387226 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073675795 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.073597806 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.083647444 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.082892809 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.083981714 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.100552465 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084895264 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.113722631 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.078881457 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.114962605 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.084343912 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.081531491 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.083214498 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.080891381 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.085703599 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.085448253 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.08155638 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.083897059 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073255251 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.085295143 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.074048799 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.07404705 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.084908421 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.075417735 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.086558814 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.084304244 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.113899437 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.075354224 seconds)
  done (took 6.429070278 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.112396747 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.116920611 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.080035144 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.122136268 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112924449 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.079995879 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.113546401 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106515416 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.113654677 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.078011944 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07612882 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078687885 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09009349 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.090019925 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.124401639 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.116695899 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.081180853 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.078639873 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.116293846 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.115069819 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076179149 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10738918 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101456426 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.114007044 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075313493 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.078035931 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.075944725 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.078496357 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.084465004 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085626268 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077865247 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.088861538 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.092322222 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.085946848 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074845058 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075721802 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076391671 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.087359127 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087021245 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08677281 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.085409002 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07576981 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07611333 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.077873753 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077715692 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075551083 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.086259097 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.088328772 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.087474729 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077667242 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.078072519 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.076166215 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.077715655 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087648181 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.085066374 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.088622808 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.087166788 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07619401 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076714126 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.080195021 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.088134149 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086740839 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086791343 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078260043 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.087180184 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.076648168 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087650658 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.091486075 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.076699709 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077895862 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.076311491 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077742548 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.079927009 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.085361517 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.085953565 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077402826 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077669502 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077121442 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.087480079 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.0867964 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076816459 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.085160379 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075700271 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07657216 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077211043 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.078287171 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.084637694 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.087362761 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.077157301 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075891918 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07699297 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075791341 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074517849 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.082834306 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.085793431 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.084971635 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.084466878 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076419983 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.08479644 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.216464456 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078950569 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.089574228 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07784094 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078942667 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.079717407 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.087012284 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.086480409 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088246956 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077131986 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.076574647 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.085997137 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089137959 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.076883718 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.086710407 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.089105528 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.087870678 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.076549512 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089392773 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076745846 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.087111084 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07810985 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.088538209 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076911113 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087383145 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077184208 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.076683673 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.077153697 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.087538235 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078670892 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077450676 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.078237417 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077383926 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.086817489 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.09020043 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078538801 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085741335 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.08493302 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.078860508 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.086297375 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07741946 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.086601105 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077598627 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077697505 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075166439 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.091018083 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076330091 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07624377 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0772422 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.088091455 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076983543 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088970796 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085132144 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076905344 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088359978 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088543324 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.085296968 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.087117881 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077844904 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.076811523 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076249025 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077575437 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.085330611 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.086652598 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078121571 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076897276 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084897641 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.086481629 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.07537351 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.085624565 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08699792 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.086376774 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.076865996 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.078216934 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088216291 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.088048648 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.086053164 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.08571467 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.086394329 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.077460265 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085967804 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.086727396 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076678851 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.091918098 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076707348 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.090395929 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.087519773 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.0841472 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.086160228 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.087507615 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.087363542 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.087462286 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.089259447 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.075054996 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07503831 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.086315475 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.075245379 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076233881 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.084646306 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.077032649 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076158621 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.223069127 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.077709973 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.088432802 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.076918518 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.087771372 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075828227 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078761639 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090990696 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.076671291 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078340356 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088751858 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.078980014 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086148249 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088845315 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.087248264 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.077393292 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078640445 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08750222 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.087399187 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.079442916 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077338103 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.079645795 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.086900911 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.084907037 seconds)
  done (took 20.489519084 seconds)
done (took 40.4945766 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.218904662 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.16192393 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.181098624 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.126917239 seconds)
  done (took 2.159342087 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.124542203 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108854092 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.100216416 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.073792604 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.106936079 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.073495291 seconds)
  done (took 1.995698851 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.319779109 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219479715 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.196295217 seconds)
  done (took 2.139791953 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.219297073 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.20218902 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.456748219 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.283716704 seconds)
  done (took 2.675101999 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.154050919 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.096565752 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.075816163 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.092181174 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.141118912 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.168456819 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.108257688 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.133459246 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.087694518 seconds)
  done (took 2.514407236 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.156969373 seconds)
done (took 13.049320766 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.256942759 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.104276264 seconds)
    (3/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.082211053 seconds)
    (4/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.234871617 seconds)
    (5/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.155077577 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.142233088 seconds)
    (7/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.086647794 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.09215052 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.124550113 seconds)
    (10/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.234030534 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.079873444 seconds)
    (12/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.242329937 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.112637356 seconds)
    (14/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.168674832 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.086943596 seconds)
    (16/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.18976104 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.082311849 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.09135187 seconds)
    (19/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.077913898 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.119955632 seconds)
    (21/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.211758562 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.241288799 seconds)
    (23/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098087414 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.13510804 seconds)
    (25/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.077518751 seconds)
    (26/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.218444424 seconds)
    (27/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.187435367 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109856551 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.209415193 seconds)
    (30/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.189396051 seconds)
    (31/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.113745828 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.074102688 seconds)
    (33/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.085500881 seconds)
    (34/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.12300694 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.43112855 seconds)
    (36/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.123093896 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.10085367 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.113923409 seconds)
    (39/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.175972826 seconds)
    (40/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.085474492 seconds)
    (41/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.132530841 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.101501732 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.079645962 seconds)
    (44/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.188492893 seconds)
    (45/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.205087189 seconds)
    (46/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.080678605 seconds)
    (47/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.164039061 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.205988655 seconds)
    (49/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.082936223 seconds)
    (50/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.05833523 seconds)
    (51/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.230465539 seconds)
    (52/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.187396985 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.081261195 seconds)
    (54/309) benchmarking ("sort", Float32, false)...
    done (took 0.143096216 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.107438625 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.08061122 seconds)
    (57/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.15246323 seconds)
    (58/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.192021423 seconds)
    (59/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.058887841 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.198313376 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.195438037 seconds)
    (62/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.085035292 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.108376277 seconds)
    (64/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.100707926 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.07524932 seconds)
    (66/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.192860849 seconds)
    (67/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.165508608 seconds)
    (68/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.07385855 seconds)
    (69/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.081534905 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.098748872 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.058089684 seconds)
    (72/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.083699561 seconds)
    (73/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.060552078 seconds)
    (74/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.069659907 seconds)
    (75/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.122356709 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.100920999 seconds)
    (77/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.215539074 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.058066404 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.30380871 seconds)
    (80/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.059172846 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05967828 seconds)
    (82/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05950808 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.099384299 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.074327879 seconds)
    (85/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.059345161 seconds)
    (86/309) benchmarking ("sort", Int8, false)...
    done (took 0.153984683 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.075569664 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.099581067 seconds)
    (89/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.08401004 seconds)
    (90/309) benchmarking ("sort", Float64, false)...
    done (took 0.140946726 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.074731179 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.079946401 seconds)
    (93/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.080044063 seconds)
    (94/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.059369499 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.084126816 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.099431814 seconds)
    (97/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.082132261 seconds)
    (98/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.089226491 seconds)
    (99/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080313384 seconds)
    (100/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.208767178 seconds)
    (101/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.088442918 seconds)
    (102/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.162555993 seconds)
    (103/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073894779 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.084072141 seconds)
    (105/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.165745522 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.10349658 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.097445468 seconds)
    (108/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05937276 seconds)
    (109/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.123862521 seconds)
    (110/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.060030728 seconds)
    (111/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.060038181 seconds)
    (112/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.120652083 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.101128429 seconds)
    (114/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.096998865 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.117058174 seconds)
    (116/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.082242377 seconds)
    (117/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.166010689 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.097050888 seconds)
    (119/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.085395038 seconds)
    (120/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.079868902 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094468117 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135693469 seconds)
    (123/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.091328851 seconds)
    (124/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.081029293 seconds)
    (125/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.059509004 seconds)
    (126/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.10275916 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.155683844 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.098531107 seconds)
    (129/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.058633152 seconds)
    (130/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.082104581 seconds)
    (131/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.163961451 seconds)
    (132/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.059302623 seconds)
    (133/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.166329961 seconds)
    (134/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.109268321 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.096471004 seconds)
    (136/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.058104772 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 0.148690507 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.081512666 seconds)
    (139/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.080827286 seconds)
    (140/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.160496319 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.081088695 seconds)
    (142/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06162471 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.074804488 seconds)
    (144/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.191575968 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.079706965 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.080940345 seconds)
    (147/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075058687 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.100745545 seconds)
    (149/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.080986675 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.080361613 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.148010138 seconds)
    (152/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.123409224 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.07489164 seconds)
    (154/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.071490307 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.152874972 seconds)
    (156/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.190718584 seconds)
    (157/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.060201036 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073381436 seconds)
    (159/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.059960465 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.081389437 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.085315483 seconds)
    (162/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.081723234 seconds)
    (163/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.060489279 seconds)
    (164/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.060229 seconds)
    (165/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.173615813 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.081794321 seconds)
    (167/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.122644766 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.186108542 seconds)
    (169/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.082610396 seconds)
    (170/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.078057919 seconds)
    (171/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.125243124 seconds)
    (172/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.059251728 seconds)
    (173/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.084852307 seconds)
    (174/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073239532 seconds)
    (175/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.0580463 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.073063667 seconds)
    (177/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.059553088 seconds)
    (178/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.082854293 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.060126373 seconds)
    (180/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07640777 seconds)
    (181/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.079836041 seconds)
    (182/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.058076416 seconds)
    (183/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.078511583 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122435948 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072842089 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.079867149 seconds)
    (187/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.268489519 seconds)
    (188/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.088222861 seconds)
    (189/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.157963702 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.074981301 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.083652064 seconds)
    (192/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.08007403 seconds)
    (193/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.060011947 seconds)
    (194/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.059561561 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.073769657 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.100222772 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144434939 seconds)
    (198/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072966242 seconds)
    (199/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.058936275 seconds)
    (200/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.085953366 seconds)
    (201/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.085611588 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.073229554 seconds)
    (203/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075074733 seconds)
    (204/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.059989734 seconds)
    (205/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.058190914 seconds)
    (206/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.079251875 seconds)
    (207/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.058954392 seconds)
    (208/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.059985973 seconds)
    (209/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.21700099 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.073298211 seconds)
    (211/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.100195881 seconds)
    (212/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.059555789 seconds)
    (213/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.080591651 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.083586012 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.081509972 seconds)
    (216/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.07066278 seconds)
    (217/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.084052179 seconds)
    (218/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.110120652 seconds)
    (219/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.098557079 seconds)
    (220/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.059749078 seconds)
    (221/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074954297 seconds)
    (222/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07473525 seconds)
    (223/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.058215526 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.079134512 seconds)
    (225/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08856093 seconds)
    (226/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.058531392 seconds)
    (227/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.165540765 seconds)
    (228/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075481884 seconds)
    (229/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.106068388 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.071563431 seconds)
    (231/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.082409418 seconds)
    (232/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.058918043 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.073858499 seconds)
    (234/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.08261609 seconds)
    (235/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.061247652 seconds)
    (236/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.058252945 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.097899676 seconds)
    (238/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.059611159 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.151585721 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.149845306 seconds)
    (241/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.058576352 seconds)
    (242/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.060438228 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139144908 seconds)
    (244/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.061441114 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.073435912 seconds)
    (246/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.072600822 seconds)
    (247/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.058919767 seconds)
    (248/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.082812584 seconds)
    (249/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.059255478 seconds)
    (250/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.184215458 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.134829965 seconds)
    (252/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.076399009 seconds)
    (253/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.081580011 seconds)
    (254/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073992456 seconds)
    (255/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.061167187 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073558878 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123018989 seconds)
    (258/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077543535 seconds)
    (259/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074461072 seconds)
    (260/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.069666299 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.185220608 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.072878699 seconds)
    (263/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.088174317 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.058436124 seconds)
    (265/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072903909 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.080241653 seconds)
    (267/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.058292906 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124574258 seconds)
    (269/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.0727107 seconds)
    (270/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.075715081 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.082095149 seconds)
    (272/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.073781048 seconds)
    (273/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.05915579 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.06084028 seconds)
    (275/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.058276128 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.18889794 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.148225848 seconds)
    (278/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.075272947 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.072895852 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118434874 seconds)
    (281/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.086868787 seconds)
    (282/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.094623426 seconds)
    (283/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.070147688 seconds)
    (284/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.075595818 seconds)
    (285/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.087091352 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.081346947 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.071587274 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.072787329 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.095256464 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071712442 seconds)
    (291/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.060038836 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.072918891 seconds)
    (293/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.059586005 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.080521761 seconds)
    (295/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075219505 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.136050575 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.099246742 seconds)
    (298/309) benchmarking ("sort", BigInt, false)...
    done (took 0.20305733 seconds)
    (299/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.073555177 seconds)
    (300/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072604848 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079458623 seconds)
    (302/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.058182192 seconds)
    (303/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079563871 seconds)
    (304/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073064885 seconds)
    (305/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.085143175 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.243488981 seconds)
    (307/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.060236599 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.077144376 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.074615251 seconds)
  done (took 33.86274496 seconds)
done (took 35.278962014 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.091158687 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102070773 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.084157892 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.102815916 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.09021882 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.084435195 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.081580336 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.087756967 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.089357616 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.090876268 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.086155863 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.062526475 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.082861029 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.083839582 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.0846082 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100661588 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.087978182 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.082040846 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.081764292 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.073385994 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.081956086 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.073877442 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.075729631 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.062466017 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.087404675 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.080801803 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.080827663 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.082313036 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.073676159 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.074258697 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.077669991 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.0824471 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.074233346 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.087567769 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.080730182 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.081956726 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.083321891 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.08596832 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.075802689 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.073910611 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.083454197 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.074031974 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.081615841 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.082509623 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.080989625 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07954033 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.082441801 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.08560183 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099940874 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07600659 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.084427285 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.084652343 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.083640266 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.081653165 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.078099578 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.081673714 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.078683442 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09932014 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.082268118 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076151739 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.083732609 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.082920154 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.079481288 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.081360385 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.081745099 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.084184599 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.085553082 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.079335439 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.08335644 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.080225746 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.073409118 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.081885761 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.077370336 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.073578155 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.084334804 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.085999247 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.072827858 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.079908804 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.081401744 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.079483313 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.072828383 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075436898 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.075370668 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.080513729 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075852496 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.064248058 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.078133472 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.080635256 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.072707598 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.081799259 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.080783054 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.081914806 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07578798 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.084595419 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.07319286 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.079052098 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.074478171 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.073831333 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.075258402 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.078573359 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.073290894 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.076127535 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.083666544 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.075639346 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.080422682 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.086899097 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.073231425 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.080285335 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.072104259 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.072413283 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.087501816 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.083350199 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.073520931 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075348642 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.072259935 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.080215126 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.072428213 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.073484193 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.072926524 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.072843184 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07930404 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.072454852 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074460778 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07978005 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.222835661 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.074045493 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.079119071 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.077274017 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.075154651 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.081386769 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.075194194 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.074999701 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.075746527 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.070781489 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076517678 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.074486199 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.081245947 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075933269 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.082291309 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.076021959 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.082512587 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.079066591 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.079697444 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.079945724 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.073031844 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.068051799 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076500989 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075800201 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.075204472 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.073942672 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.075594258 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.073909828 seconds)
done (took 13.751524706 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.075116216 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148264377 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.106467331 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.103879225 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.093940222 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.075421775 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.083763353 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.108411237 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.076075647 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.109851109 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.096539497 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.094951045 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.123068635 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.072700282 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.073960056 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.078167972 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.0751342 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089633076 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.108070062 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.095623294 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.123513711 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.074205064 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.100596793 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.097798796 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.096696454 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102067857 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.075196877 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.078028537 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.077582173 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.110328819 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.097080907 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.079034934 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.074664778 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.10629612 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.1018649 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.091548414 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.074926532 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.091323915 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.074776104 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.074049847 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.076108298 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.107228839 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.088176182 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.088843876 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.078592704 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.085400625 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.07537772 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.091921552 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09789991 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.087442843 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.094197603 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.109123279 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.076946566 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.092621046 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.072762705 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.094468085 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.085138418 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.076802069 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.074825794 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.082615566 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.074580938 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.078278363 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.0889966 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.088527822 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.078725689 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.09315906 seconds)
  done (took 7.409859915 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.093680885 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.102213028 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.093271668 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.091703508 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.073752031 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.074437679 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.075315746 seconds)
  done (took 2.117373717 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.075059885 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.096959399 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.099077942 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.098911363 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.090397334 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.096508197 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085918244 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.075354511 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.100050283 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.07642163 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.096136224 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109229941 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.078529523 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.082255344 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10002431 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.075180299 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.100322117 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.074559817 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.0781389 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.099394612 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076724017 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.105183975 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07814551 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.074688371 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088970157 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.075054922 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124259577 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.079134997 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.076834731 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.077654058 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073201279 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.116309705 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089376153 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082978947 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074845895 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090528739 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.09033553 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073979426 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.091820014 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.083734042 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.089713309 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.075148636 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.076211638 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.072809884 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.079847723 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.085562557 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.076843146 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.075678051 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.077715228 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.09605964 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.076106827 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088778372 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.077800341 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.080436287 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.076523756 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.082103789 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085651027 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.075712711 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.09570141 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.076740638 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09210039 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091973713 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.089436375 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091656023 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076998472 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089186324 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.089275704 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.077576437 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077234394 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.078568158 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091730399 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.0732184 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.076663167 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.086743127 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076991338 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09913446 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.098826574 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07668791 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.088581917 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.075862924 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.075317932 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.075217572 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.098637182 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080457027 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074911768 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.079334319 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078466075 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.073152311 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.074728409 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.079243752 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.072864699 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.076459816 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.078249326 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.078246042 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077843445 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.09238336 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.077818878 seconds)
  done (took 9.676862702 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.077348778 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.076406726 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.077417348 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.075961996 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.07606508 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.077325697 seconds)
  done (took 1.992899863 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101596511 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07697028 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.088342549 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.08061436 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.114037091 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.095682862 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.095552002 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.086265934 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.091839123 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.087386184 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.095425721 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.096706398 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.100865586 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.080054984 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.095473324 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.079403752 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.095379178 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083056597 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.086417499 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080950373 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.094211888 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.080197376 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080763825 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.089922907 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.084120617 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.080386651 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.085873072 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.086880061 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.086459424 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.086383487 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.080230853 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.084250592 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.078568804 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.086421385 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.095963386 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078362262 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0791632 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.085718103 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080646897 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.083879125 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.096167723 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080694591 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.081910135 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.085384372 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.086060249 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078458003 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.085653113 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.087679973 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.095918438 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.084738612 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.086729383 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.080596629 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.083392472 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.085088844 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078788237 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.085874963 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.084928371 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.095765898 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.080293753 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07850801 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.076719662 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.084340146 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085497725 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.084201294 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.086024469 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.085285683 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07881925 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080376474 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0806102 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.079634361 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.085397022 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.07676738 seconds)
  done (took 7.697148472 seconds)
done (took 30.396386003 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.546241237 seconds)
  done (took 2.04526758 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.640917274 seconds)
  done (took 2.161825773 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.496440758 seconds)
  done (took 8.013567677 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.406221361 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.514096559 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.751551079 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.142649244 seconds)
  done (took 3.369660982 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.729216072 seconds)
  done (took 2.254036067 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23652904 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224625976 seconds)
  done (took 1.998349413 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.389482459 seconds)
  done (took 1.907843942 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.154290529 seconds)
  done (took 2.675375236 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.269698583 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.188047846 seconds)
  done (took 1.982157889 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.49296359 seconds)
  done (took 2.016380182 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.885229323 seconds)
  done (took 6.409846647 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224549011 seconds)
  done (took 1.793764541 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.246403035 seconds)
  done (took 1.771815615 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.766296279 seconds)
  done (took 3.292117143 seconds)
done (took 43.219711186 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.092530128 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.09476203 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.093657769 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.090143021 seconds)
  done (took 1.885928561 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.085891222 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.081433129 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.084835452 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.081060369 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.085522294 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.080902744 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.082548059 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.083715457 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.081606453 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.081603049 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.081281645 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.081781738 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.083516238 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.082767682 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.079785854 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.083710697 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.084558402 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.081154698 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.084768115 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.081316432 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.079355422 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.083711488 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.083554359 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.079919404 seconds)
  done (took 3.509646994 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.087547028 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.081688339 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.083887799 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.080537545 seconds)
  done (took 1.86859941 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.086427686 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.101698387 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.098352013 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.087431697 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.101169481 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.095661871 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.077483647 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.077465723 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.078985136 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08659544 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.076605844 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.105011311 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.097651662 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.086674726 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.08846551 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.073988486 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.076786184 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.09647038 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.087026882 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.087274483 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.078859958 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.086382896 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.076864613 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.097283233 seconds)
  done (took 3.639065911 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.094706295 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109915474 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.09004613 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.097735192 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.099674186 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.073521215 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.096518361 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.10003262 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.13617284 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.073781141 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.078874343 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.074653535 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.081749531 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.073889789 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.089645737 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.117845237 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.122373961 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.077151602 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.106266183 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.074554475 seconds)
  done (took 3.410044091 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.081721888 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.077501875 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076382442 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073825841 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.08740239 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.081658128 seconds)
  done (took 2.022424545 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07733831 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.078954887 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.076628773 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.074926419 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.080377557 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.07615464 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.074495627 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.076383185 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.07644549 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.07540722 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.075156772 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.074406345 seconds)
  done (took 2.454932593 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.209154875 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.075852116 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.076814829 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.07390069 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.079134422 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.074573117 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.090491737 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.075906853 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.101069724 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.07534407 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.075808007 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.076730466 seconds)
  done (took 2.62512034 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216365991 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084485434 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247176279 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161272183 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119850896 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124672682 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121540713 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121800296 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.150351516 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109257786 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175847753 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175668178 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11677964 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145516921 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097626256 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.109905989 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163241004 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172443995 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115170034 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174187975 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154577066 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135162589 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156623832 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111352182 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114721326 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130777004 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.080229552 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088637747 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178811124 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142413382 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152916372 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119607352 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101156458 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185779504 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181380849 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149310629 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158846088 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093517651 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.111478665 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.141903116 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208353258 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09671284 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169976243 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259459136 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090285503 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141964434 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127992525 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.128214623 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.113865793 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099443096 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154864226 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19302608 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.145799257 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096447374 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135829845 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122052807 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.122780679 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121728849 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191603443 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169374694 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136069746 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.079405896 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117257129 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160862451 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141456199 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.116828417 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.134439586 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100366665 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143447926 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162797938 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132023586 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152265609 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126096406 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097598176 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126991549 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150894675 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135842116 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16840754 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132568742 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.081138405 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13167275 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110069366 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088689993 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.15667216 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083294894 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182405472 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107480752 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.114412361 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134537186 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117426224 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117560934 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166067298 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.295236886 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113601612 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.075010117 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114133357 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12929361 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154563499 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095178735 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118232694 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124011064 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.085845996 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146035527 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.083800018 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130849626 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.083465734 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134183495 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138332145 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.087422041 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131592802 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112413707 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.108972985 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14153976 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16768745 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097665733 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090775452 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177546605 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130687424 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.110733778 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152997112 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164226671 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.107141601 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108779133 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158585241 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181032 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098384343 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171332565 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11496374 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0922016 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.096403984 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131890973 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120415398 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.132828459 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09039833 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.126213627 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176917753 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.083400422 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103810735 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141954199 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086687948 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08888807 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11400615 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113055003 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.104424049 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.108381513 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.109952415 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1433479 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273749056 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116839651 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134100829 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107754464 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181884894 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096817641 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.111818528 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112422296 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.077938538 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.144359921 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167405092 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088415146 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173211309 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.130698526 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125539324 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126162042 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092634881 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14925441 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087028609 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07830301 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1544067 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119045168 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118764982 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.157977172 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124708074 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.133787383 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.126534399 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140500572 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139502565 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.138101907 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114268842 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.096833759 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119661753 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135372544 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.081704694 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.098559735 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.088274755 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113448746 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104339024 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091827135 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149762025 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132287768 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11904385 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120512817 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105385309 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155533719 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.084375782 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136025512 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.126467485 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103469834 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15975635 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15879041 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138671687 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106442497 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290147753 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.080308132 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083271072 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09697307 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131873437 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091912183 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091988301 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12502414 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15654505 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137807277 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144217097 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132230026 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129584598 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165309771 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.079294005 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.127958607 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15356066 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129520165 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.114702866 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099023548 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.108415203 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151978004 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115707165 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190149825 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121881837 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130600019 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160753827 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.109298847 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088081623 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110973235 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143383359 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111416002 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15098359 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107517695 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097146129 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117080203 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.08323796 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106364145 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135476693 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127005826 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14275066 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.124144234 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141629911 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086079939 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123855978 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131420089 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128408492 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.071785181 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126687005 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167413368 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102951918 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125425228 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30395351 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091253863 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.146060657 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184044133 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154448825 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094560985 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116831491 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129458495 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137501117 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128027883 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148773267 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115650812 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146890531 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118662263 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.093902936 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096893466 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105562026 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115772216 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.103669807 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.112985665 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.122688503 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.103143946 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140672515 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111987728 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117402144 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126181696 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.108192782 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.100211048 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105551818 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185650293 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125733035 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178988412 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.107596225 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.150701036 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171278908 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083314902 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087079216 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.085970442 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148626297 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092868745 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137865629 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.116388452 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128909629 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132115919 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151063636 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104199228 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07674427 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116217845 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140449167 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132987663 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106144494 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.111046597 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169871174 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.107901059 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086860025 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120384748 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270614638 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113890345 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179214119 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.070371967 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115818901 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085969089 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089977121 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136676944 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162877145 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.088718888 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10824253 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127929429 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121343197 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136931422 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108916694 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119464556 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136048816 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158611331 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135459526 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.097224505 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120643899 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135488222 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1639643 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109907265 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.105769689 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181527517 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158843728 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.167587546 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.096146826 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121196912 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120627314 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118379708 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145383051 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092239044 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170596739 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090320793 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145741847 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111720106 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096684268 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137441207 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.117478477 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096788167 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156031044 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124196867 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090699542 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085370665 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125511214 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126611934 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113229665 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.083219338 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145280722 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.081001202 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287128089 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169001295 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090449452 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114592687 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10426346 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089935388 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115157797 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111906142 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095510512 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.10655865 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180587396 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.094248192 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156534504 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142005508 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121000205 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142568139 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110346544 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.647950811 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.085698991 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158157924 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123693296 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182755178 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109543835 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124067559 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11651812 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130472527 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1542655 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11216526 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.192377432 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141297793 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.123573833 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087660212 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109906621 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111807012 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095415146 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116204598 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120859217 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123249638 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.101691646 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.123987012 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132117953 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.090802272 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104640911 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163432158 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124243561 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1516311 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147830832 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093479442 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124673077 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143834289 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087656111 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.274906947 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163651183 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114664323 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109066644 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.090400211 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.109290938 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168102756 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.082455466 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168159705 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128229112 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117998273 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122398934 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.12188669 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142893846 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116991653 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130341189 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1010469 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.116825622 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122639774 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090701129 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.086554108 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11441006 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120045207 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.106115154 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105193619 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.107034469 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15855903 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.080213478 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106447193 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12320441 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152343184 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182350613 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.0967606 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091663284 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126802492 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1229421 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.120542265 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129379342 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08724788 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09027359 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.088094341 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.087085049 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.117498894 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121827656 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123942286 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11950507 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171466342 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.091696614 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.246301456 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1034264 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111695024 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.077956902 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.085221979 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103586281 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104857464 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113907715 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11717083 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314623672 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.104521294 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.098422156 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100577185 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.082950193 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093281965 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136583864 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118169545 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126810756 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110647031 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.070561813 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116962209 seconds)
  done (took 63.117959721 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.116681103 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.09123144 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.10448503 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.152979641 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.131001179 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.21031665 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.161414412 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198152678 seconds)
  done (took 2.817708138 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.076863462 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.104032299 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.111652449 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.09235559 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.075889997 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.076678562 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.239756952 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.091005383 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.075082592 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.105983765 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.087319118 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.077817832 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.444652186 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.073683571 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.076667625 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.069918127 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.075461415 seconds)
  done (took 3.597605095 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.41657409 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.625145055 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.367743037 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.084742372 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.939603519 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09929251 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.123740682 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.142665539 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.086567655 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.543754045 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.416736071 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.136239501 seconds)
  done (took 18.635821497 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.089649974 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.083050688 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.097449282 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.097876974 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.086356771 seconds)
  done (took 2.103376192 seconds)
done (took 113.271097185 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.089871014 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.629777881 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.061389039 seconds)
  done (took 2.367810789 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092040991 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.09431906 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.093645381 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.091839566 seconds)
  done (took 2.02506074 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.083409297 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.084271278 seconds)
  done (took 1.816308868 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.245169421 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.176180084 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.105216418 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.092053109 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.087735626 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.087458489 seconds)
  done (took 1.918328261 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.079930891 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.083522319 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.081584351 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.084586323 seconds)
  done (took 1.974894584 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.08541551 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.059696923 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.062446324 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.064867381 seconds)
  done (took 1.917828438 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094680729 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087856539 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.086160768 seconds)
  done (took 1.92105428 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110777118 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094843508 seconds)
  done (took 1.858247291 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.090880966 seconds)
  done (took 1.743874425 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.103597018 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.109923107 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.140262524 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11941865 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.147814261 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118030555 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.093137271 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.093272443 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.084531206 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.094391291 seconds)
  done (took 2.756105198 seconds)
done (took 22.562090261 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.086756702 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374531125 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.368957835 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09793598 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.677340749 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.364573625 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.978777724 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101012813 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124078593 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075534104 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092572046 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.657151079 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.96916104 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330492607 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.955251503 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.330200013 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.658337246 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076566692 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075646936 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075317454 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.964973046 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.076110502 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075475994 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075805476 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.657562847 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.380091672 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076209639 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.345204779 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076182142 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078201845 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.362992085 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076754004 seconds)
  done (took 16.355541411 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077977637 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129309518 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080829815 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09226445 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.078779745 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.077326833 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07969273 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.077550346 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130651941 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075645675 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.093552396 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07537982 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.079479609 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.076735467 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.095870108 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.076644621 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076741798 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076246029 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076194693 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076452913 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094807559 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075982633 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076019 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0762471 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.077526142 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089306667 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07663683 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.076009777 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076768737 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078763774 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079059466 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.077469979 seconds)
  done (took 4.319988335 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123984171 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.136726732 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.082790275 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112336875 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120120588 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.077864863 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.152300486 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.102272273 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.136012715 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076211595 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.093402145 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07603848 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.111495371 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.076488901 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.097701605 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.076496383 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.077126561 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076594156 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075895014 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076561281 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.095843307 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.076888674 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076596854 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076616826 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.076645999 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.091381959 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076901164 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.077591895 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07659951 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078461927 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.080137073 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.077514742 seconds)
  done (took 4.583446824 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.080736182 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.083369551 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.090925296 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.092412786 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.076978303 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.080549535 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.081572892 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.077531956 seconds)
  done (took 2.329634827 seconds)
done (took 29.247916648 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.087531348 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.077683472 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.080752855 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089920288 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.081035534 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.086902795 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.0752055 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.084051901 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080567123 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.081483383 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.08367573 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.075052695 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.079295644 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.075211839 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.082058621 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.077609757 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.088422147 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.080276679 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.087483061 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.088367957 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.078680409 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.081582209 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.083222519 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.087670561 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.087839817 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.087597141 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08573165 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.081491141 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.076566508 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.078876737 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.085109078 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.092372385 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.077480435 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.088249602 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.075961203 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.075433424 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.079891089 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.075908095 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.088101622 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.08489293 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.077825367 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.084213431 seconds)
  done (took 5.101688712 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.09590215 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.101298741 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.093123709 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.069364796 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.075068859 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.073567318 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.097627563 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.067712548 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067315146 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.096377615 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063870434 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.067398404 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.071204122 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.061601472 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.068689739 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064716178 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.070331053 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.063303093 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.068453524 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.067585241 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.097713776 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.061623975 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086175748 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.071592677 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.06397875 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.069795929 seconds)
  done (took 3.628290615 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.083381974 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.09353167 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09800406 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139339126 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.11457187 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08739457 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.0878649 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.103881533 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097351946 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.074975698 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.079058972 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.101534148 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098398668 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.082019117 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.075342031 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.094780546 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.092433454 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.077306409 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.08168617 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103280724 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.095812465 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.094004959 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.104432392 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.091629381 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.074851618 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077930936 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.079450212 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.091262892 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.078836036 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.08586785 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.078483467 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.079963349 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.077526647 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.08748882 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.078330912 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.077115957 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.103114833 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085818896 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.089972673 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.076991175 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.083536816 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.076696042 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.100787655 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135828165 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.074813331 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.081691612 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.079640086 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08590749 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.075208148 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095705929 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087286031 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.07524073 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.078956181 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.074852042 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.074847584 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078910331 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.077620951 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.077654304 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.085159253 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.081345673 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.100727139 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.080279705 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.093162679 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.075485666 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.084387713 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.075035853 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.077101636 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.07464087 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.104054684 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077651221 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.120510575 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.076743226 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.076612293 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.085673805 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.084107648 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.082711726 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.075518865 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.092407079 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08643292 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07932082 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.083929462 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.079372703 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.078383676 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099378603 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.078177154 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.076978358 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.07643648 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.081568666 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.078683053 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.076978663 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088930218 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.075753512 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.078423481 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.092939259 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.075235714 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.077230342 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.082109671 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.080122708 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.075418433 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087576881 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.080480366 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.077027859 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.085926461 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.075271268 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.078871249 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.088078204 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.082605702 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.073925388 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.079571538 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.080727175 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.076398375 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07703764 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.078188022 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.077933596 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.083672083 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.082253272 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.080118885 seconds)
  done (took 11.617009601 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.175677169 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.16785422 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.078763656 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.158392495 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.084967006 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.087271964 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.163409995 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.103373411 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.076074313 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.076473477 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.077893361 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.119783984 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.115223315 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.124987939 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.08747219 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.075880049 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093173135 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.123890329 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.162484256 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.157271634 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093194352 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.085663999 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.077739053 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.076682492 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.078538162 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.08704053 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.093957438 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.08533853 seconds)
  done (took 4.698508367 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.088519316 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.114077746 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.083237956 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.10009674 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09848476 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.075524083 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07793993 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.078090702 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.090272606 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.086180612 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.075508927 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.08241203 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.082490632 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.079010802 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.077561561 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.082988807 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.083183901 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.076974974 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.079322492 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.081463651 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.086815484 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.10077823 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.080718074 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.07528987 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.081039965 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.075745732 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.071514496 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.092588897 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.076295909 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.104157613 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.074071909 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.0817972 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.091444222 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.076847089 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.076303692 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.075459949 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.075855756 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.07598182 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.077490769 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.076192757 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.074194329 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.065238489 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.074778264 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.086968185 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082462449 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.064350046 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.080688556 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.081169326 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.081974763 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.073337109 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.078772638 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07873543 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07913683 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.083825931 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.079838186 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.081555384 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.077584836 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.083044784 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.08599105 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07550516 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.072839999 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.074237473 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.080930165 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073193039 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085131678 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.08149555 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.07410782 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.075774225 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.078003762 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083074878 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.075999279 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.08036957 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.074189762 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.077934509 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.080653044 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.077701582 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.079661674 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.074429001 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.075954589 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.076227641 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.062971377 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.076051891 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.061471788 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.079787509 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.074109899 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.074159046 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.075588649 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.080861064 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.087973622 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.076784112 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.081863988 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.076881048 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.074546638 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.079056851 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068604985 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.078687726 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087427967 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.09038651 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.076207941 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.073378897 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.089827228 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.080649736 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.074854185 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063898252 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.081373758 seconds)
  done (took 10.064355431 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098508696 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.077876443 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.092633391 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.10004255 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095487316 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.0825457 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.086089147 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.077952955 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.092013536 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.082265179 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.08525874 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075653925 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.086002245 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.08577494 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.077618581 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.086323789 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.08068646 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.092628762 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.092274613 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.076592413 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.084862182 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.089595852 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099285572 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.090428482 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.089248666 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.089951573 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099693082 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.085721383 seconds)
  done (took 4.166174337 seconds)
done (took 40.936644122 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.768937542 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.93337715 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.752779623 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.07581556 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.917960511 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.77194915 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.843600964 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.745378008 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.899992753 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.788470586 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.042494366 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.953018257 seconds)
done (took 65.314443791 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.786536579 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.88963402 seconds)
    (2/2) benchmarking "String"...
    done (took 1.983621067 seconds)
  done (took 5.557836809 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.025448684 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.39527482 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.998461443 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.751738512 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.755801515 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.066749485 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.56087382 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.268890115 seconds)
  done (took 30.482033389 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.899624104 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.975165588 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.448842387 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.478963149 seconds)
  done (took 15.543906807 seconds)
done (took 63.281531684 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.738928415 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.766371369 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.786099935 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.732494492 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.809781414 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.76898307 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.331006538 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.870364215 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.750763355 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.735527816 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.752399534 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.221310655 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.754667904 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.282068751 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.754403354 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.762651826 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.775186083 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.413114828 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.910916489 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.765869743 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.773425075 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.81539691 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.756139321 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.766868558 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.758913131 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.75639577 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.144891462 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.75916773 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.376091147 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.754766318 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.786504764 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.333969574 seconds)
  done (took 204.151228581 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.752314374 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.637823322 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.70621747 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.782664178 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.086082709 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.925756841 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.845063546 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.133630144 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.757718665 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.782356604 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.952307879 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.753352056 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.967178147 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.730588674 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.780652274 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.822219836 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.928888024 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.971041245 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.785186792 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.919751178 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.767152149 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.977526771 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.935833465 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.922461943 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.772849144 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.844542101 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.924406214 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.762243714 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.948606329 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.902748903 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.779642418 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.793243747 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.972175719 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.624754551 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.756259318 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.761899412 seconds)
  done (took 169.152768696 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.929988455 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.751910772 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.751463791 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.752772927 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.763659866 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.752351388 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.881381508 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.882329902 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.399761037 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.329323863 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.80703196 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.752438795 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.559346505 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.753430827 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.820121118 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.767387099 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.756328306 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.769078923 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.782126924 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.753350458 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.753443491 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.881928677 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.76717429 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.858029949 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.762752227 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.753102527 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.759605139 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.124531308 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.754493213 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.760236296 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.008574008 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.754901862 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.754179024 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.603716412 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.286673661 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.838034004 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.755973823 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.760472018 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.754428081 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.970828431 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.755045802 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.755416434 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.757439934 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.886829918 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.756769084 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.881626189 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.756117368 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.236787079 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.754278007 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.75420079 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.755692978 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.406343326 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.350707916 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.75832419 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.755937702 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.757190264 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.755197007 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.754125053 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.761195524 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.426915751 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.835468074 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.7570013 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.759682778 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.761371348 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.756867741 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.97775182 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.755298584 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.965304717 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.808753373 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.883822065 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.879060116 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.757667328 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.822849965 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.849533925 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.759084242 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.756127444 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.756353067 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.755943283 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.836562969 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.757316807 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.890497512 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.763410141 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.757762213 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.808186971 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.825803403 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.757226425 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.611434344 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.761063108 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.758109399 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.030774277 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.824227648 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.757646179 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.758802243 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.757407122 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.885819091 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.881134918 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.465830898 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.759724836 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.407828992 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.766395637 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.756567658 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.893132303 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.757968873 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.904520652 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.760308839 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.838121145 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.762864937 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.758423978 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.75827589 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.75686389 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.790428857 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.758365902 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.813744948 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.762320399 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.132685204 seconds)
  done (took 399.551403409 seconds)
done (took 776.525967538 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.413123808 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.385921301 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.482453274 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.403854547 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.377654084 seconds)
  done (took 13.755733633 seconds)
done (took 15.448572905 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.847532081 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.853715138 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.783416908 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.850055664 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.780184099 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.850588278 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.833617188 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.785375792 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.820194767 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.785644474 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.821267261 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.784798267 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.771502763 seconds)
  done (took 25.25955408 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.000830505 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.00685225 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.83153978 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.006229231 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.807293608 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.001933203 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.927875315 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.919056777 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.922495299 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.776944498 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.773613747 seconds)
  done (took 22.66707972 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.008914666 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.008795601 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.837819444 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.006881664 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.810666969 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.011141008 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.930158766 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.92282333 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.91752831 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.778561416 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.773553697 seconds)
  done (took 22.701210489 seconds)
done (took 72.319980803 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.768962633 seconds)
  done (took 3.461957648 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.797370369 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.963474152 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.77545918 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.772582095 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.769173953 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.770637746 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.772932992 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.769566848 seconds)
  done (took 16.085380028 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.769637322 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.768829722 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.769738439 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.768906267 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.769182357 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.770195 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.766388741 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.770145106 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.765653146 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.766982175 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.769865384 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.767026832 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.766856291 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.76713677 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.768384719 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.766898949 seconds)
  done (took 29.98672431 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.768563761 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.767217743 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.766931573 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.767622925 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.768303906 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.768147006 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.767444644 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.767597839 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.767202668 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.768233754 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.767706649 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.767055917 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.767808693 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.767796486 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.768316862 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.7679984 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.766974965 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.767442235 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.772495715 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.768488598 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.768497016 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.767931046 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.767744934 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.76852235 seconds)
  done (took 44.130036146 seconds)
done (took 95.357112871 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.574657953 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.444232441 seconds)
  done (took 9.713945373 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.774198113 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.770401721 seconds)
  done (took 5.300572848 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.771364266 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.770632765 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.770816161 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.770326469 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.772158534 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.771193569 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.772403367 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.771946846 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.772078792 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.771797217 seconds)
  done (took 19.41090929 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.770886627 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.771755399 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.770095369 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.772466695 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.771729974 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.768968166 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.770982569 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.772810409 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.772237983 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.76905533 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.771529134 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.769463671 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.771480646 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.770046948 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.771589884 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.770019159 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.768935444 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.769186409 seconds)
  done (took 33.570642361 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.771888702 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.772717178 seconds)
  done (took 5.241645378 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.769930996 seconds)
    (2/7) benchmarking "second"...
    done (took 1.76964184 seconds)
    (3/7) benchmarking "month"...
    done (took 1.768739482 seconds)
    (4/7) benchmarking "year"...
    done (took 1.769292811 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.769552645 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.769283259 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.769099487 seconds)
  done (took 14.08318602 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.772974433 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.960712374 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.015780584 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.403957464 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.77396177 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.775990354 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.723372436 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.776591141 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.777345489 seconds)
  done (took 19.678752128 seconds)
done (took 108.697554331 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.566521181 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.768639908 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.991501024 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.829188236 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.829079158 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.066003496 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.808751793 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.071696492 seconds)
done (took 42.630921274 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.863408617 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.131554723 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.138651345 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.793924987 seconds)
  done (took 16.763343586 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.753768216 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.287042946 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.810633022 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.358599255 seconds)
  done (took 19.937040175 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.14105148 seconds)
    (2/2) benchmarking "read"...
    done (took 2.122616802 seconds)
  done (took 5.967330563 seconds)
done (took 51.231958204 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.773558935 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.774433911 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.773519321 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.775091162 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.772774844 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.775725626 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.771569033 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.771337723 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.774489079 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.775612894 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.773773256 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.775489105 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773969091 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.77192612 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771098714 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775627187 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.772076307 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.772126345 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771661806 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.771183872 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.773628761 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.77690048 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.772757912 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.773362202 seconds)
  done (took 44.263296312 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.775881785 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.773529656 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.775360622 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.775676948 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.772302634 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.774853573 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.776795748 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.77305252 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.775710028 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.77534231 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.77207748 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.774067468 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.776416808 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.774356552 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776199305 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.772711346 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.776485876 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772825682 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775665726 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.774331537 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.776425678 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773673521 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.773583583 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776782841 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.774723802 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.773029716 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.776815607 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.774051252 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.776289045 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.775120892 seconds)
  done (took 54.946541959 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.782014866 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.783628159 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.77699242 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.778197925 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.777725796 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.775995844 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.776517318 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.778179264 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.776874762 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.777886211 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.777342484 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.776885697 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.776649849 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.777539916 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.778085055 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.778642701 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.777373537 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.777850635 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.777505956 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.777890834 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.777958042 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.77955398 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.778254753 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.777940145 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.778106868 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.778565331 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.778273278 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.778926757 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.778022078 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.777960504 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.778358688 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.77898645 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.780636001 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.778155363 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.778870769 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.778473084 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.783406573 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.786467433 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.779948603 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.779019474 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.778981625 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.779169658 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.778567111 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.777477724 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.780075614 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.779209876 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.779175818 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.778833535 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.778384583 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.783502252 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.779345749 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.778869126 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.779743878 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.77924983 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.779471694 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.781397319 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.779117134 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.779180889 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.779515307 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.780711038 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.780948139 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.77930483 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.779702694 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.780155683 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.781317786 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.779878646 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.781987976 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.781044293 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.780199979 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.780154165 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.780702991 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.781156332 seconds)
  done (took 129.807620618 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.780875872 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.778872848 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.777722526 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.777794103 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.778796524 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.780820741 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.778598201 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780353832 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778248874 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.780873733 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781284537 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.779714084 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778727654 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.781583065 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.78192162 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.779576622 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.781748507 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.778386388 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.781104726 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.781949525 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.781434916 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.779057126 seconds)
  done (took 40.867711361 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.782542962 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.782110744 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.77853945 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.781801225 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.779312098 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.781237516 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.781320083 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.78236677 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782093078 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.779421351 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779178688 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781562402 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.779996365 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.779664676 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.778751292 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.780601427 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.781827824 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.779706676 seconds)
  done (took 33.759557274 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.779539161 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.779577502 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.783039736 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.780005796 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.780050899 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.782424996 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.780023081 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.782378843 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.782439712 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.780316155 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.783261569 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78227549 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.783163679 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78040528 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783999653 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.781406622 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.783439931 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781272157 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.784883456 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.781357015 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.781069045 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.783251115 seconds)
  done (took 40.908199071 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783846525 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.78484885 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.780340831 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.780774409 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.780867737 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.783198139 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.783286143 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.781693261 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.78460375 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.783934002 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.78117411 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.784672267 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.781898625 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.782373157 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.782620231 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782204672 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.785146358 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.783382538 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784582624 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.781446002 seconds)
  done (took 37.36672206 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.784622417 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.785707091 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.785647511 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.785369838 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.784628399 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.786172847 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.784786679 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.785956979 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.785663004 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.785554391 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.786373287 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.785799662 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.786338629 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.785838548 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.786700666 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.786045899 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.786669901 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.78660729 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.787046689 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.786099668 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.786879389 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.786688107 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.786676017 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.78704868 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.787066632 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.788186292 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.787474886 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.787156556 seconds)
  done (took 51.725607667 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.787172074 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.786572614 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.783510221 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.78333262 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.784334169 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.78398841 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.783637175 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.784183398 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.785536875 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.784525086 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.787794529 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.787668984 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.787900983 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.787183621 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.787103903 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.787595543 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787000018 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.784129777 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.784885201 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783560424 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.787509964 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786330091 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.787040957 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.785035832 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784020399 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.787435245 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.78444366 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.785058145 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787206831 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.78444851 seconds)
  done (took 55.282954365 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.805891913 seconds)
    (2/2) benchmarking "in"...
    done (took 1.806288466 seconds)
  done (took 5.325759555 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.78649774 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787758647 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.78694731 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.7854122 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.785520864 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.787964422 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.78800983 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.785493574 seconds)
  done (took 16.00621417 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.787799735 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.788519601 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.788846278 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.788190534 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.790566986 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.78810327 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.793262746 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.788306318 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.790995689 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.790832706 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.793064198 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.794082112 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.788137239 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.786980564 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.787313469 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.788014406 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.78695983 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.788407763 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.787451236 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.787755777 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.788002149 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.789056457 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.789630578 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.784476336 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.788264716 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.795966725 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.79018744 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.787325539 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.786387439 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.789890959 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.786595594 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.78450604 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.788706273 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.788291956 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.787586251 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.788051646 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.793844992 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.788955263 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.791615057 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.787051262 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.78864452 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.784079942 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.789229234 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.788950132 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.787723138 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.788251941 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.788880837 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.78540439 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.789000041 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.791558388 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.791781196 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.786760483 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.785548694 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.791248523 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.790798645 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.795067019 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.790002764 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.791854598 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.796970545 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.797774267 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.80082967 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.795390418 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.789618792 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.790180511 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.798084021 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.811010279 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.794377057 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.787206794 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.786150491 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.788627711 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.795542823 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.802416829 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.79886932 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.789284673 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.790018536 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.790516486 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.79132287 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.789701063 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.794436 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.793239887 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.791928101 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.78991521 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.799556407 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.810908052 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.789499456 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.790643131 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.791752925 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.790520314 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.792776492 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.800181587 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.791405252 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.791263247 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.789792014 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.791088634 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.792267823 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.7919062 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.789175943 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.791230321 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.788055889 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.790806657 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.791305384 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.795368145 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.798235871 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.791072116 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.791851103 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.79847574 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.791939845 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.790256326 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.79691141 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.791112445 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.791458873 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.792268259 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.796665086 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.787872352 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.794750211 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.798788303 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.791996868 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.792735277 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.792682602 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.792265327 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.800980543 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.816704511 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.791869158 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.79215924 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.797353276 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.803854991 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.794084757 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.794833793 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.794177431 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.789330159 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.79031803 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.792868219 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.79354266 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.793072908 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.792971152 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.793480906 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.791119661 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.792915851 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.79382971 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.794270701 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.794132587 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.792844421 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.794743141 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.794731163 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.794294086 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.794243534 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.798942677 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.792673425 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.794284833 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.794825438 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.791097794 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.794043043 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.794455998 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.793706118 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.794144445 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.794904547 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.793254196 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.793573896 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.79364174 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.793519172 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.794704584 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.794857287 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.797982425 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.795043096 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.796632931 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.794274101 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.791391672 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.793890896 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.793757898 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.794395022 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.795303868 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.793393776 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.798047979 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.801583308 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.79408438 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.794568386 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.796629383 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.795070239 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.79494355 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.795873758 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.800148647 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.803434029 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.795978544 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.802385712 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.795629703 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.796519707 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.796244747 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.795698027 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.795448206 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.796662036 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.798694675 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.802455156 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.807223609 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.802879432 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.796563224 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.799123851 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.79703928 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.79930525 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.800560052 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.795373271 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.795159302 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.796504397 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.795730273 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.796040803 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.798478876 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.79656987 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.796509037 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.795623352 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.796565293 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.797074987 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.796850199 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.796188836 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798590388 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.79337217 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.796403045 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.797720464 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.79630699 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.795206761 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.79666131 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.797035109 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.79782483 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.798427401 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.80463898 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.794104989 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.79817749 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.798728505 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.796938655 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.79639281 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.796815855 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.799101155 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.79762312 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.804208787 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.798436875 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.798362668 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.802787284 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.797253709 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.798232207 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.800906764 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.798635534 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.796560301 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.800638184 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.805563739 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.797897881 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.799922844 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.798478616 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.798712818 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.798792183 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.804602277 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.797717272 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.798676077 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.799847078 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.800325818 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.797568584 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.800091558 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.801038483 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.801200857 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.80027908 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.800167591 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.799855125 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.800979601 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.800334218 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.800308746 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.799521688 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.801993433 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.806832032 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.804020972 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.800083162 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.802011085 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.800587226 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.803802496 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.800597557 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.800773537 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.799442486 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.812262779 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.807824554 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.804678648 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.802591431 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.800277566 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.805327851 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.800845934 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.803850758 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.800019726 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.800603253 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.800962065 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.799260965 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.797092272 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.801300877 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.800917765 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.802689865 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.803891588 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.804670823 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.801041618 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.800517425 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.803019598 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.802185123 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.801425023 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.800648198 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.80098974 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.803052391 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.803889388 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.801032953 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.800587472 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.807678763 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.80169051 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.802709352 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.800653472 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.80211868 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.800034032 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.80249026 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.802867686 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.806043815 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.810205456 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.805098833 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.811692895 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.803209354 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.810934592 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.801777839 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.805657274 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.810143669 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.801033251 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.801421222 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.802281537 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.803966025 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.807954989 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.802721423 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.802844468 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.808239986 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.802553816 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.80339498 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.802845414 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.804626624 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.802463366 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.80403638 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.810871374 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.804115094 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.805473253 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.805429783 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.80011041 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.803486007 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.804469506 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.801692899 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.806273099 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.803513581 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.805760319 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.80264747 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.803327305 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.804649508 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.805073153 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.803653706 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.80101955 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.803494213 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.808970047 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.805509688 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.808835088 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.804719399 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.811815841 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.805313031 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.81039045 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.805342737 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.804746243 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.804492606 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.804127155 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.806052472 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.805863129 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.806098745 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.805641685 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.806478842 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.808757076 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.80461723 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.80639387 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.805005195 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.807431035 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.80523404 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.81356208 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.827496502 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.805365709 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.808413047 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.80283766 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.805917475 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.809625633 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.805384109 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.806325995 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.808332707 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.815784455 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.814114793 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.806152408 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.806428239 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.806362289 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.806060269 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.806614078 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.806433654 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.806590054 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.806155726 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.80660214 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.807717727 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.810150766 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.805692385 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.806522721 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.807863898 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.808074477 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.815820066 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.806735031 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.808147397 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.806843401 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.806267919 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.806826076 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.807520375 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.808224987 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.808098923 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.80826775 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.808875575 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.814192215 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.813305736 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.809926187 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.806928383 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.807758665 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.808050865 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.807744604 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.809687486 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.809133896 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.808287075 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.809123646 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.807795117 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.808552456 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.805620863 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.807880923 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.808772953 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.808052475 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.810912312 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.814616785 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.80771911 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.805138218 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.806979243 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.807859689 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.806804146 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.807565652 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.815728623 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.810703333 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.817593759 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.817221715 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.813717235 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.80804881 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811490927 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.815981285 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.808949373 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.808886408 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.808730622 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.809954395 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.809857847 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.812143598 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.809599932 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.814784802 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.809143102 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.808777275 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.816513599 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.811379963 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.811312921 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.810738174 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.813156248 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.810088226 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.806903335 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.809726802 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.809400503 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.814520353 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.810556561 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.809578971 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.810524878 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.808016996 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.810332169 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.814397144 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.809969918 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.810754227 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.807440953 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.81162418 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.81055142 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.811836746 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.807223343 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.809905025 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.810632387 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.812485665 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.816712254 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.80762137 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.81148658 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.811354034 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.810935288 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.811346831 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.811159649 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.80817532 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.808424767 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.812725495 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.811869896 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.810868235 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.815332413 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.809359584 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.8126209 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.811434225 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.811530004 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.813743683 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.822007521 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.818496267 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.808738758 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.809984152 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.812194453 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.81430687 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.811855188 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.812021693 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.811799999 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.812597278 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.811858046 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.811859364 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.811309635 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.815779704 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.826561446 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.812498782 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.812225524 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.812217683 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.815471704 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.813374292 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.810532741 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.813863563 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.814821496 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.815448795 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.821604244 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.814121495 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.819357338 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.814273053 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.814529263 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.817475925 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.816312952 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.820906425 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.815828679 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.814976987 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.813958228 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.819524839 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.828149097 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.813556485 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.822401687 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.840360596 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.814627299 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.814544687 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.814869719 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.81379308 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.815222546 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.815778226 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.813921394 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.81559707 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.813551521 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.81416586 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.814786678 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.818954842 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.814896354 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.814373835 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.814860298 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.814222453 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.815509575 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.812745017 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.81570566 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.814112506 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.814745422 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.814744502 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.814865557 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.815492552 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.826337067 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.824046389 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.814750383 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.815062497 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.811667999 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.81793927 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.818007323 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.825666775 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.823372187 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.81749261 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.816018812 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.819108748 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.8174442 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.814103103 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.815630309 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.815500552 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.814686668 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.812938932 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.828209911 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.823532608 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.81978999 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.815577836 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.817623116 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.816351759 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.817019446 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.816915114 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.817852024 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.817672996 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.817693545 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.82000436 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.816174252 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.816306324 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.819380109 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.82380549 seconds)
  done (took 1076.363016344 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.813989183 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813671499 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.813333011 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.812447572 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813315529 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.81400273 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813858536 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.813788597 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.815703285 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.813858686 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.815109541 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814754269 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.813901203 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.814054219 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81448359 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.813716254 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815478584 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.814613297 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.814287526 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.814355115 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.81455797 seconds)
  done (took 39.83911312 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.817692084 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.815368361 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.815290493 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.818823938 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.815148216 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.817221756 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.815000264 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817821271 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.818454556 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815400624 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.818467628 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.818824154 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.815807937 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.815047589 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816423895 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.819456618 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.818376584 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.816827431 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.81893845 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.817506367 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.819101641 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.817467188 seconds)
  done (took 41.722410349 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.819697572 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.820551552 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.817863938 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.816324525 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.818607893 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.817101907 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.819434241 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.82081143 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.819346118 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.819562134 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.819510769 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.82014511 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.826593077 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.825942393 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.820950856 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.820166989 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.962887922 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.820066021 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.819614692 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.821142544 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.816689258 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.824997359 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.817362406 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.817244218 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.81959962 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.820611274 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.820024915 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.819737176 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.820173757 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.821626078 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.826013045 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.819584191 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.821300204 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.821453897 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.819947668 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.821709637 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.824829129 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.820215573 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.818110767 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.820556893 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.830050215 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.839720511 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.822296383 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.827982837 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.821698992 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.822610607 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.825964479 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.829784364 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.819608202 seconds)
  done (took 91.147207057 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.821080151 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.821678455 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.818683804 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.821265609 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.823209505 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.822186276 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.822510094 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.82244024 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.81970829 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.819338727 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.822742248 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.818646032 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.819919827 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.822421482 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.821708409 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.818712028 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.81969589 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.818994143 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.818314434 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.818998876 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.819373227 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.822281825 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.821781789 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.820157474 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.823508786 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.819468463 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.821285659 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.822196362 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.820309674 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.820735456 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.822160366 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.823468167 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.823141115 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.820238194 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.820583268 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.822920524 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.823898973 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.821872435 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.822880554 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.81939543 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.823714002 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.822436578 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.824519199 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.823922733 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.821697878 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.821648997 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.822881265 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.821084747 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.821881508 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.823035228 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.823811527 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.820989696 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.825035786 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.821291829 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.823025079 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.824544061 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.82121303 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.821983303 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.825227063 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.823533233 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.822456453 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.824749538 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.82245558 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.825498745 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.825543509 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.822074467 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.822641 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.823976018 seconds)
  done (took 125.641689437 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.824519953 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.826318064 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.826377433 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.825725151 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.826598172 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.826452302 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.827503843 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.826635849 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.825691885 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.825835233 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.826369873 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.826423585 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.827870881 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.825298175 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.82730367 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.826911576 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.826409384 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.827402188 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.826377878 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.826618138 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.827094087 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.827138107 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.826672071 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.828504785 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.826954355 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.826248127 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.828483595 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.827714689 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.827960438 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.827836638 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.826457475 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.827541385 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.827317769 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.82783426 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.829079316 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.82738178 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.827869152 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.827974433 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.827856069 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.82923623 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.827968939 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.828294737 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.829402044 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.828711132 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.830287497 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.828892112 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.828462699 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.828452572 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.828360791 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.827893984 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.829777394 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.828381597 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.827880337 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.827730845 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.828205253 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.828248822 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.83011978 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.828327069 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.828135559 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.829601171 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.828543357 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.829011604 seconds)
  done (took 115.064076935 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.827637645 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.827738939 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.825158312 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.825279419 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.830408161 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.826491032 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.828162426 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.828585269 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.828486577 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.829863189 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828656979 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.825421435 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827204898 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828299063 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.825692 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828693902 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.826771466 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.827140789 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.830405013 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.827779567 seconds)
  done (took 38.306364498 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.826730245 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.830060845 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.828303487 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.827011318 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.830556202 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.828949672 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.83058498 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830409436 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827418017 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830299054 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.832464657 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.829916459 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828522455 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.828288257 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.830922175 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.827960406 seconds)
  done (took 31.023748046 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.828197122 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.832026613 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.832195681 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.832632938 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.829131585 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.827995328 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.830324263 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.828301037 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.829551907 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.831136737 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.831204481 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.830732372 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.831739602 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.831986466 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.828123089 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.831525437 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.828357468 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.829104899 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.832345543 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.832147727 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.829821748 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.82889285 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.832239417 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.832530192 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.830433215 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.82979756 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.829491904 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.829548307 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.829183173 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.832559761 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.829535025 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.831177612 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.831123073 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.829817044 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.833504614 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.830408082 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.832191099 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.832598644 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.833409544 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.83159109 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.83328466 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.831080983 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.833052859 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.834093158 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.830445515 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.833308925 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.831255598 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.830944488 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.830283328 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.832315956 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.83312849 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.833564892 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.834222274 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.83459695 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.833904236 seconds)
  done (took 102.47622564 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.833866057 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.834871141 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.831334073 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.835038584 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.83472761 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.830167629 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.834414212 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.830833618 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.831638876 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.834244923 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.831759204 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.834007371 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.831256084 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.83383825 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.832061353 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.835295217 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.831657974 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.832901824 seconds)
  done (took 34.754041533 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.831915262 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.83208236 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.834312544 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.83144449 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.832653482 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.835207272 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.831887714 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.834628281 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834432575 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.832927152 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.8323875 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.83505978 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834939099 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.834952143 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.832089656 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.833530085 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.835553119 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.835789323 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.832572578 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.832463689 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.835967453 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.834680402 seconds)
  done (took 42.10168727 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.834661697 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.835601088 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.851446197 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.857153145 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.857583544 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.870165977 seconds)
  done (took 12.867579391 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833085806 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837407212 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.835206351 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837224865 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836322036 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834156983 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834175733 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834513765 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836277215 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834937527 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83382742 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836512289 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83611128 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834296624 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837506087 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837222692 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834486963 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834199807 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835529192 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837484412 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834663313 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837234123 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834003433 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834022329 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835469098 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833415378 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837817764 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834484487 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834529216 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837239799 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837840517 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835249861 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837695061 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835335771 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838262288 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837632063 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835264725 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838213042 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839338972 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83623661 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.838400155 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83878425 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837926341 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836931749 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839818479 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836294292 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836218529 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835263027 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836573926 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839042434 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840225129 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836571546 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839911294 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839489114 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839617894 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83900718 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837702801 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837637876 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83974915 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837044731 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837127079 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838719332 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836659291 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837434184 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840011006 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836387355 seconds)
  done (took 122.986835511 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837980969 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.837749932 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837101464 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837039836 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837376909 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836738717 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837258099 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837228467 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837458058 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837273405 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840706073 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838127601 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837760253 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837477386 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838024406 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837271676 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83776142 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837769533 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83668608 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840553226 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837069737 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838852612 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837785721 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838325645 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837971516 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840194648 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837897208 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838675506 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837859009 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838337569 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837825997 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838742514 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839943906 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.840217449 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839019954 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839036475 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838951415 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839483964 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839992862 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842131094 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839499881 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842011634 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839680818 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839057016 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839437555 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839189017 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839610203 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839650603 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839240674 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841128405 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839728184 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840078167 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840360281 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840866816 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839873802 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840623634 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839815752 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840367761 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840562641 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841736296 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839785247 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839549032 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843165488 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841219798 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840211825 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841392503 seconds)
  done (took 123.148713239 seconds)
done (took 2509.408679905 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.833350136 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.006382097 seconds)
  done (took 15.606373931 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.004608747 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.958280857 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.843233191 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.860914539 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.843521725 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.866553965 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.863799219 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.844212346 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.843433691 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.843672165 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.843491666 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.030472589 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.897218747 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.844341921 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.843720937 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.940215893 seconds)
  done (took 51.944210505 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.846526966 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.847947828 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.857291626 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.849643616 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.846501899 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.862336305 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.88133351 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.850439323 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.910499564 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.861100442 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.967153101 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.857731708 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.846770513 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.906511646 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.861373499 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.861823486 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.941744676 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.925605241 seconds)
  done (took 35.552976562 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.926339123 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.849268319 seconds)
  done (took 10.553664771 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.86953139 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.849344448 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.879922884 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.850281665 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.856329128 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.843569742 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.864187942 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.870144543 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.859318834 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.87618968 seconds)
  done (took 70.395351887 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.851769301 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.848188679 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.849438607 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.846211065 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.839624801 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.843187335 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.846920946 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.841867252 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.525261899 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.884336377 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.855741103 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.854634604 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.84710105 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.848958925 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.844860487 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.871116252 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.941480291 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.84503044 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.84468882 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.853501848 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.849022341 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.902210135 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.862582809 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.85108743 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.878298669 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.524244665 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.857515604 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.853124957 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.942028591 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.845738588 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.849083765 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.848435633 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.851653774 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.243202719 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.152001498 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.851213734 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.864349606 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.856044676 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.846405119 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.941173563 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.848688837 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.853426875 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.48159112 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.128880686 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.944272017 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.892015332 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.173355392 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.866365323 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.85109106 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.876125134 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.852463509 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.851124278 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.862488561 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.326237096 seconds)
  done (took 131.03850188 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.845023652 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.200629887 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.016880759 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.848517051 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.136279916 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058517839 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.846139642 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.896987803 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.848164209 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.078363262 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.106345815 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.958573268 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.847328675 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.843780005 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.847277381 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.842612131 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.00823564 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.921657811 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.847178377 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.843210502 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.87801417 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.092678226 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.975099621 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.847188097 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.877299544 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.062092617 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.974402855 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.956627541 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.619822284 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.844462958 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.91389281 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.848431038 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.846405753 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.844860696 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.006884005 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.946733737 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.935383733 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.848865265 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.846285161 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.84326837 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.520695278 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.050805858 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.94657544 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.991636076 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.047981769 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.059386709 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.630097247 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.845365402 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.589914432 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.013935543 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.08179935 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.082025937 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.974350582 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.849474593 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.172678363 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.845200009 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.845828833 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.101431909 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.99651012 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.952493108 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.849128254 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.847119992 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.846720096 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.096961971 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.848929511 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.94731452 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.848791733 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.848655546 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.951087629 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.954696584 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.993491755 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.066071826 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.881765686 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.794930925 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.380269371 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.101190139 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.920592633 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.104834752 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.849475831 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.847315122 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930903896 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.700573484 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.106050413 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.104462184 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.10768829 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.889561897 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.574916768 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.84784719 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.082668054 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.076230735 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.103653379 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.057493077 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.089729455 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.171537469 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.848785819 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.847632897 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.072522494 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.988905679 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.85179184 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.200256393 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.087558972 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.419136913 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.871090636 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.161954816 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.986020062 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.852090054 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.492826791 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.848055128 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.07696695 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.893878242 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.849994318 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.848309697 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.074388603 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.827073712 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.848589286 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.705220934 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.916839899 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.854615804 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.088148401 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.851734648 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.116105865 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.854092964 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.092652282 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.952281746 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.885459379 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.030078647 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.059937972 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.852711669 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.102090192 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.10231527 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.9717451 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.12974458 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.75241886 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.851284133 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.143695321 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.854260858 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.849214014 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.02422585 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.851972617 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.002358597 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.85480408 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.140251472 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.879585098 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086657369 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.855654522 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.1112534 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.890231136 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.90704823 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.853420075 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.986899956 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.854524123 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.684796607 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.013199192 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.851668978 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.851998258 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.417802153 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.851657622 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.003938454 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.090191085 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878339117 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.929193104 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.521732967 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.852410683 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944916656 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.881131559 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.246011276 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.85076769 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.111000231 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.855936957 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.85196958 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.851579856 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.098825881 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.093879227 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.853998324 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.851789242 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.751092437 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.851376982 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.852776344 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.038827116 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.216941267 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.8514897 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.060160503 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.857339531 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987546338 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.857144041 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.934296353 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.190630742 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.851784703 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.852250704 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.853882144 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.851785452 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.852601549 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.067915127 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.884760687 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.394925834 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.99471265 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.128316752 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.169793756 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.108810842 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.903978002 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.857459394 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.118183176 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.85780033 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.921727514 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.856940942 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.879262288 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093116768 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.858402822 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.069539929 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.143627168 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.898963402 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.906620922 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.857798278 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.854690219 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.854489348 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.003462794 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.950288252 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.858635496 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.855230859 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.97462029 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.983382447 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.071928078 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.85620956 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.900481516 seconds)
  done (took 899.608207784 seconds)
done (took 1216.46651449 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.855522879 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.853589646 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.843972143 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.856585932 seconds)
  done (took 29.193380177 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.8644999 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.86055762 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.86125715 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.860463396 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.862648464 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.861303509 seconds)
  done (took 12.955339977 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.889266704 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.855369818 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.85717181 seconds)
  done (took 21.387609002 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.930058328 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.251575585 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.97211806 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.751024504 seconds)
  done (took 10.690431369 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.864779355 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.862555529 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.863619219 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.863601981 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.863710291 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.866234362 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.863310175 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.863540542 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.865007917 seconds)
  done (took 18.564312019 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.287695397 seconds)
done (took 98.862392219 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.229394754 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.009405718 seconds)
    (3/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.881918138 seconds)
    (4/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.05026036 seconds)
    (5/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.858129853 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.842724127 seconds)
    (7/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.977846056 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.083091079 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.245527491 seconds)
    (10/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.281023125 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.01154807 seconds)
    (12/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.432362752 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.481030315 seconds)
    (14/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.843831801 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.909431919 seconds)
    (16/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.072548938 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.89042519 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.018207635 seconds)
    (19/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.925188275 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.781262623 seconds)
    (21/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.04893008 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.845171229 seconds)
    (23/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.227436559 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.841953329 seconds)
    (25/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 3.370085531 seconds)
    (26/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.969223717 seconds)
    (27/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.95671977 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.155232429 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.104060488 seconds)
    (30/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.487242988 seconds)
    (31/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.70564569 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.243752863 seconds)
    (33/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.021685534 seconds)
    (34/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.112374324 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.866610079 seconds)
    (36/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.865561998 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.777329667 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.512471254 seconds)
    (39/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.334859981 seconds)
    (40/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.869326387 seconds)
    (41/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.03813506 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.052419573 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.035102587 seconds)
    (44/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.95392528 seconds)
    (45/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.290721972 seconds)
    (46/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.963397145 seconds)
    (47/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.098245472 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.168474777 seconds)
    (49/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.869713743 seconds)
    (50/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 3.093863208 seconds)
    (51/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.362922454 seconds)
    (52/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.997981936 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.021204947 seconds)
    (54/309) benchmarking ("sort", Float32, false)...
    done (took 5.570472256 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.905424332 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 3.066704828 seconds)
    (57/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.881733522 seconds)
    (58/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.182558089 seconds)
    (59/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.940224379 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.866472606 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.048184412 seconds)
    (62/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.868149867 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.027984265 seconds)
    (64/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.945520468 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.921595319 seconds)
    (66/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.864552269 seconds)
    (67/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.966737672 seconds)
    (68/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.867822438 seconds)
    (69/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.051158064 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.021608126 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.218461057 seconds)
    (72/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.871159529 seconds)
    (73/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 3.672099371 seconds)
    (74/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.96039875 seconds)
    (75/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.081970295 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.229236666 seconds)
    (77/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.269706011 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.036362417 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.859831117 seconds)
    (80/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.153774448 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.216363436 seconds)
    (82/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.169346812 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.782471217 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.540020001 seconds)
    (85/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.956953944 seconds)
    (86/309) benchmarking ("sort", Int8, false)...
    done (took 4.815319204 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.542888533 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.232057692 seconds)
    (89/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.957888869 seconds)
    (90/309) benchmarking ("sort", Float64, false)...
    done (took 5.601864112 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.852131929 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.424915219 seconds)
    (93/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.947150571 seconds)
    (94/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.834966642 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 3.154529136 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.910491582 seconds)
    (97/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.99780663 seconds)
    (98/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.982927148 seconds)
    (99/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.941149787 seconds)
    (100/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.828793807 seconds)
    (101/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.625212243 seconds)
    (102/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.967018101 seconds)
    (103/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.933728639 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.942551676 seconds)
    (105/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.99572644 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.969592205 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.7545535 seconds)
    (108/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.223033013 seconds)
    (109/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.010264773 seconds)
    (110/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.144292675 seconds)
    (111/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.173467201 seconds)
    (112/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.294016362 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.535477546 seconds)
    (114/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.877753761 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.852265656 seconds)
    (116/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.869578959 seconds)
    (117/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.946635044 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.79946902 seconds)
    (119/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.864170274 seconds)
    (120/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.224587299 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.03438663 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.914341695 seconds)
    (123/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.690030313 seconds)
    (124/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.873548087 seconds)
    (125/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.919128062 seconds)
    (126/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.845206637 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.942794792 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.117869892 seconds)
    (129/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.228346157 seconds)
    (130/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.899361246 seconds)
    (131/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.39681215 seconds)
    (132/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.968175578 seconds)
    (133/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.940230874 seconds)
    (134/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.968322594 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.995746573 seconds)
    (136/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.113135043 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 2.096700572 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.890475383 seconds)
    (139/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.892414798 seconds)
    (140/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.910255239 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.123415124 seconds)
    (142/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.852074198 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.133417222 seconds)
    (144/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.923708966 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.088953354 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.119386512 seconds)
    (147/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.9168521 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.673262147 seconds)
    (149/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.147493297 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.970583712 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.867393525 seconds)
    (152/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.090944917 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.873198499 seconds)
    (154/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.123137103 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.884654792 seconds)
    (156/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.866177521 seconds)
    (157/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.358049554 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.101014717 seconds)
    (159/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.851660111 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.530929755 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.194505445 seconds)
    (162/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.897284682 seconds)
    (163/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.256721423 seconds)
    (164/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.319013051 seconds)
    (165/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.072889657 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.885867028 seconds)
    (167/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.045768736 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.788443652 seconds)
    (169/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.885853873 seconds)
    (170/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.947690607 seconds)
    (171/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.850647458 seconds)
    (172/309) benchmarking ("map", abs, Int64, false)...
    done (took 3.0717261 seconds)
    (173/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.87160222 seconds)
    (174/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.201260712 seconds)
    (175/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.131170039 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.174279352 seconds)
    (177/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.393245997 seconds)
    (178/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.962452671 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.851779808 seconds)
    (180/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.935008001 seconds)
    (181/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.884074638 seconds)
    (182/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.942955346 seconds)
    (183/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.893777151 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.941002602 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.121166829 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.896031315 seconds)
    (187/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.989629421 seconds)
    (188/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.57254547 seconds)
    (189/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.156167295 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.163172586 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.901630186 seconds)
    (192/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.280799291 seconds)
    (193/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.955733305 seconds)
    (194/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.97114694 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.192762526 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.965737351 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.959200844 seconds)
    (198/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.959277927 seconds)
    (199/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.213007298 seconds)
    (200/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.862923287 seconds)
    (201/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.072403092 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.920463528 seconds)
    (203/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.8615243 seconds)
    (204/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.870227176 seconds)
    (205/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.106281677 seconds)
    (206/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.884815474 seconds)
    (207/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.203949358 seconds)
    (208/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.278672462 seconds)
    (209/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.843349464 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.226768533 seconds)
    (211/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.888796509 seconds)
    (212/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.770559197 seconds)
    (213/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.879462072 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.654881845 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.076235169 seconds)
    (216/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.009450817 seconds)
    (217/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.885352681 seconds)
    (218/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.388064773 seconds)
    (219/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.977658721 seconds)
    (220/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 3.10010742 seconds)
    (221/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.955734836 seconds)
    (222/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.87468634 seconds)
    (223/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 3.008542242 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.880511172 seconds)
    (225/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.763326849 seconds)
    (226/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.014143064 seconds)
    (227/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.833328399 seconds)
    (228/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.039573145 seconds)
    (229/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.853813244 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.888482407 seconds)
    (231/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.84897916 seconds)
    (232/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.943648694 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.173498211 seconds)
    (234/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.859080604 seconds)
    (235/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.158033352 seconds)
    (236/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.13032806 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.808378111 seconds)
    (238/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.913594141 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.839123774 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.720679468 seconds)
    (241/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.078224965 seconds)
    (242/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.310184303 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.933370608 seconds)
    (244/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.157220631 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.213513087 seconds)
    (246/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.765483097 seconds)
    (247/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.177255182 seconds)
    (248/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.864909078 seconds)
    (249/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.81299775 seconds)
    (250/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.920030256 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.859624784 seconds)
    (252/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.890197838 seconds)
    (253/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.826878027 seconds)
    (254/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.200137448 seconds)
    (255/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.63959618 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.046301779 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.903758284 seconds)
    (258/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.906819196 seconds)
    (259/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.93304735 seconds)
    (260/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.274356159 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.943818303 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.920067363 seconds)
    (263/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.341360691 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.122625917 seconds)
    (265/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.957417491 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.850199181 seconds)
    (267/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.95054028 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.920557855 seconds)
    (269/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.204084095 seconds)
    (270/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.010495302 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.159534013 seconds)
    (272/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.819105916 seconds)
    (273/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.943098163 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.804358118 seconds)
    (275/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.332999885 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.823122609 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.821449943 seconds)
    (278/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.918456596 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.211036714 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.808328239 seconds)
    (281/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.624191978 seconds)
    (282/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.842723456 seconds)
    (283/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.943259572 seconds)
    (284/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.913975173 seconds)
    (285/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.391755156 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.949131451 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.901423135 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.490671138 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.779895193 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.97220668 seconds)
    (291/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.13986065 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.203504968 seconds)
    (293/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.807902315 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.645904291 seconds)
    (295/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.924204438 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.118782662 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.465495068 seconds)
    (298/309) benchmarking ("sort", BigInt, false)...
    done (took 6.829886239 seconds)
    (299/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.825258849 seconds)
    (300/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.258160093 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.8579416 seconds)
    (302/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.392391068 seconds)
    (303/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.914362965 seconds)
    (304/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.821246007 seconds)
    (305/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.431106574 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.852151211 seconds)
    (307/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.927227253 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.06642574 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.257962013 seconds)
  done (took 1001.172938517 seconds)
done (took 1003.013858565 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.855754316 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.84881612 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.831567267 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.853233998 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.943861563 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.860460496 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.84230557 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.834691996 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.879637394 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.881826228 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.83158035 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.859053748 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.834290684 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.83349041 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.832274939 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.846493334 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.152090177 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.865150949 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.850875196 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.841389067 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.848705892 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.832102319 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.882369188 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.858992173 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.837302193 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.83687763 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.837333205 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.853716097 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.945911179 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.835550244 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.836311678 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.84447554 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.151974441 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.862648556 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.82891805 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.853726311 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.845339778 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.842403572 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.836613867 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.865413695 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.243744329 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.874380899 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.835440469 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.834209762 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.8359943 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.837628554 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.835465453 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.840965042 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.846991135 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.848087788 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.23894842 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.890388765 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.837407402 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.834662739 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.845967803 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.835018518 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.839626709 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.850329529 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.854089853 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.850685403 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.142540484 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.868794047 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.837528942 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.853043923 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.842447969 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.276926735 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.871785667 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.839031371 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.243541766 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.879408524 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.27761174 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.88513562 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.836807892 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.84951963 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.868936602 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.153242287 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.862653409 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.83579393 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.844003961 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.835549307 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.845725592 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.849918982 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.842200697 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.837432763 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.850001588 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.864306531 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.846868841 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.837972996 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.845274581 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.856280252 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.843914794 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.846429405 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.839737464 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.831948754 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.846562598 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.840702107 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.839629296 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.840136426 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.842912762 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.848109872 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.244475757 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.895476795 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.834474735 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.83443718 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.835934422 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.85111021 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.245720349 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.879538281 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.858737087 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.884851627 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.839655134 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.143920879 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.872873348 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.853906315 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.8467473 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.84229716 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.832968563 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.144318908 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.272213531 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.892400979 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.838718872 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.835658494 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.852614703 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.836110475 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.832591254 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.153361312 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.867465235 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.851835331 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.954892307 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.844142545 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.864645875 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.832408975 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.841791182 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.860306545 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.848254715 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.864387989 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.835410289 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.848226934 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.849969801 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.827055633 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.840316254 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.840863348 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.833134456 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.837631197 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.821444371 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.855718395 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.840386992 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.840465921 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.848495335 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.949529599 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.821212385 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.129674769 seconds)
done (took 288.693087502 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.893071749 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.816204675 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.918004217 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.820344533 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.898799858 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.900262271 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.813896731 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.814129025 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.814221976 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.189016235 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.814807361 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.813465563 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.812448162 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.813012796 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.8963525 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.817472475 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.813162081 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.150635774 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.818199355 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.887417838 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.812381406 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.812182211 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.814345629 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.188941394 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.81145527 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.810817059 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.8823782 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.809925571 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.1468373 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.80813529 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.803552414 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.142057457 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.898740491 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.823436918 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.816548048 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.810522246 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.886490551 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.80720124 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.88292982 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.884459943 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.903606915 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.841181721 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.799119772 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.795751685 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.802302681 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.800750492 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.793974774 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.824613537 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.795566325 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.794702502 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.132516564 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.808219167 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.805321856 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.795467869 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.795066519 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.820358485 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.794692862 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.79946522 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.890340931 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.799513645 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.859389567 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.171438165 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.169476355 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.798045506 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.796976364 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.795958728 seconds)
  done (took 180.09713873 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.865536208 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.870027421 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.864649181 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.802348834 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.847278311 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.866603091 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.802993827 seconds)
  done (took 14.640840839 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.804391504 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.798985168 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.850754933 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.851377783 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.799448998 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.966167229 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.799659589 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.809737603 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.797402179 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.851320891 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.800388724 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.799397191 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.806044835 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.797787008 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.849788597 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.81140699 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.917252269 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.800243814 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.800900509 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.951843285 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.797201367 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.806716456 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.860860512 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.810854832 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.800012176 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.806225494 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.394102348 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.801337218 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.79651813 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.799876789 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.797885722 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.842119515 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.801103615 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.800114201 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.798388032 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.91731109 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.800616129 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.798421257 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.800154461 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.800451194 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.799478323 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.799744703 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.800087254 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.797518885 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.801893163 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.82453413 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.801110904 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.800411889 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.800474663 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.802373902 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.858388684 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.800892753 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.797914245 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.79836585 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.85700151 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.80793479 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.802419509 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.797978063 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.802399934 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.798187218 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.952904259 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.852765634 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.801842705 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.8517194 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.802575484 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.801930295 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.801201878 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.801777236 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.898767717 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.801821375 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.852626972 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.800062264 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.961509916 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.826902172 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.803337255 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.80595753 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.804446532 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.80420888 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.799841513 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.809966779 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.799663111 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.804156933 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.808696995 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.800071286 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.800511578 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.915885823 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.909689335 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.801153829 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.815844544 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.810710025 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.800997403 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.862018758 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.804033202 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.800380324 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.860701664 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.921096229 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.858100747 seconds)
  done (took 199.178111481 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.80919586 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.810634119 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.804170368 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.820026483 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.803327348 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.803005282 seconds)
  done (took 12.576286149 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.805811529 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.804738972 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.804603211 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.803297343 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.804200813 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.804394477 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.804511549 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.806499323 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.808828867 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.804548581 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.804510858 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.804979423 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.805914907 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.805380161 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.804934727 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.804048375 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.805245584 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.801520928 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.804499808 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.805759717 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.95618474 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.805528257 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.804640039 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.807106957 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.809656492 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.805005635 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.815012031 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.806254486 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.80492589 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.814453107 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.808794007 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.806267481 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.806882654 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.811427361 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.810453891 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.807071654 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.810269152 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.806370408 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.80259427 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.807436682 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.807098809 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.806981636 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.805615229 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.808010943 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.808848781 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.811310893 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.81136119 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.813963406 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.80631488 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.806678589 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.807169989 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.806045185 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.80718437 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.807716302 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.808693303 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.812054823 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.812577831 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.808072532 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.806234474 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.808236757 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.80667434 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.806674009 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.809234821 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.812911033 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.813577271 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.808170396 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.808881397 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.81189427 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.806547568 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.807658117 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.808855954 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.804819265 seconds)
  done (took 133.009501925 seconds)
done (took 541.264223545 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.938820983 seconds)
  done (took 8.668018082 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.86187857 seconds)
  done (took 8.648095646 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.324560616 seconds)
  done (took 10.074440825 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.849414047 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.843698949 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.830270116 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.826944751 seconds)
  done (took 29.121947133 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.857611712 seconds)
  done (took 8.605578481 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.840288328 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.813669848 seconds)
  done (took 15.429710559 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.821844779 seconds)
  done (took 8.565912139 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.252415194 seconds)
  done (took 9.014614459 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.833314284 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.835475256 seconds)
  done (took 15.423582802 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.790817087 seconds)
  done (took 8.524425134 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.30532763 seconds)
  done (took 11.138418621 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.820843174 seconds)
  done (took 8.661313939 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.84903576 seconds)
  done (took 8.581829152 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.90152861 seconds)
  done (took 8.635188166 seconds)
done (took 160.823463843 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.800322158 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.802648079 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.795727088 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.795681551 seconds)
  done (took 28.924481377 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.834709371 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.833776793 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.835184317 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.844992182 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.837270141 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.833493113 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.827077973 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.82683815 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.845229969 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.838035819 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.835894265 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.836323631 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.833952565 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.827604392 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.83664263 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.836772689 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.846649995 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.835628692 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.827166005 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.836539646 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.800989622 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.845613728 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.837877309 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.80268883 seconds)
  done (took 45.717342814 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.001036304 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.875504432 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.954690256 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.85262052 seconds)
  done (took 9.407371426 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.852716408 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.854571629 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.866103243 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.904580695 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.927666549 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.86453706 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.827976066 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.822186176 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.809407575 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.854710225 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.930479437 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.847736781 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.943992716 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.802346537 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.988580706 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.802500602 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.801259237 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.853652324 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.906121884 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.919081757 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.802570014 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.853295599 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.856659956 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.849820559 seconds)
  done (took 46.466952989 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.799730822 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.806834668 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.805711934 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.799073391 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.801370962 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.79654854 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.801445678 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.797643813 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.817357691 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.798646109 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.797381235 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.794227198 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.794079033 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.795411025 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.793987697 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.808248858 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.805694225 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.79338561 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.795432099 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.798475451 seconds)
  done (took 37.726156508 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.786377068 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.639845293 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.138072615 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.041528323 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.785148507 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.786475191 seconds)
  done (took 30.893919039 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.806199698 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.798270388 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.792669773 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.850313499 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.933732772 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.800584367 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.793192357 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.805373495 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.84182722 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.857063457 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.815259979 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.82289622 seconds)
  done (took 23.63099327 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.788771545 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.795054982 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.789891615 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.810657291 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.804151513 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.801931937 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.799966641 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.784258699 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.804939607 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.80899397 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.795601925 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.799649493 seconds)
  done (took 43.303894576 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871790026 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.670999203 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.820544998 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.502664076 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.321155531 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.9889813 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.305438968 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.12069916 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.779789307 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.050024698 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.733812473 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027766866 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.03126232 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.776976229 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.848349562 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.228791165 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079613322 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013498032 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.806816175 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.451927908 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971458018 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.406057845 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.649651968 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.980087571 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.0602371 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.97623341 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.107619529 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.806936714 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984958752 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88785559 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861290114 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.848321898 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.125788582 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22812351 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961837921 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855625453 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.507777717 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.56846238 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.835607741 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.641181375 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.733215902 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.990297424 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860123811 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85098635 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.78843788 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.293015343 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307891826 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.86189319 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.556279603 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.855217007 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.868045235 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947518598 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.86134805 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.673564654 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809870178 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.132140425 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.849265572 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863503063 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.42893277 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.952070405 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414916512 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.902939234 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.953988829 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.555812094 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.34593769 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.015036502 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.868170101 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.869582619 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801055651 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.635985373 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995879019 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.012618332 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.886544829 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.517051202 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190733162 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.909052519 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.955364277 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164706455 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.577807592 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.915517833 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095080319 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.82688046 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801699107 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.733265137 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.802168622 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140751879 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907390671 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.496757544 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909192954 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.21026232 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.880412941 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890955508 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877280815 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.094691452 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.748473006 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868620589 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.613848281 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.157110246 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888591468 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.208030716 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802326109 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.87202628 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127245855 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.081170087 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.032710561 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.427509022 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037068279 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868901227 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.953980569 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.731097699 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.990963741 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.155965279 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925823527 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.963423599 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016128934 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.836323864 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185648354 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906255938 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.051049965 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.849180487 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153740283 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.201748749 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.137517828 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961330378 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.879842638 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.881930373 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.646716139 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.510301058 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.103172752 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.882011545 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.301949117 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.997932867 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.88215037 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815424288 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.540021626 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.837385135 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.00417371 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.104695931 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.743963513 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2656522 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812302716 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.02560186 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.990705059 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.102079051 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.539446921 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.962934442 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141884925 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354556519 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.155995399 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00165591 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898560081 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972804146 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901903198 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.235063357 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.246132372 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.885000426 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.885279787 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.607876958 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.953924611 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886665244 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.890675013 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.745284873 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17176326 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.914232492 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.891024396 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.774274693 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.899610095 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952277071 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.889207825 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.89575658 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.392191776 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.636796385 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.8964992 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.55510254 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117530091 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895871905 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.5677301 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087450347 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.973267774 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.177431934 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95284016 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.822981564 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.591513404 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.590239996 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889918631 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.824848678 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.889267514 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900482468 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899156471 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.090783089 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.184101886 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937121123 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.574249614 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.012050002 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900276785 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.896724748 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891859764 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.386754697 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.994254803 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.453330142 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.011786389 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028633367 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.90360912 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.8281696 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.895080352 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.897464224 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.892119993 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.858620653 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946842126 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.577090979 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355737969 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153020962 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.54667689 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911378866 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.602398873 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.029811491 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.914019618 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.6544814 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916141755 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.992308093 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958916785 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.905269972 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.577238531 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.666350258 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.464651818 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219820525 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.216587933 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345939273 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.300781765 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.225217526 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.237275673 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133989393 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.424761572 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.959216887 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.245478309 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84828261 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990249356 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.553358755 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.259619905 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910269362 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124120947 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295096669 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.716758512 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063867845 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10714397 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931057277 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.754728298 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.934156747 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.099115001 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053849737 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.659273856 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134644744 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240717507 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.664990583 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.015977621 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.89450575 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.598943101 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984634701 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.608099225 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.262209373 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.357995218 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.986181551 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406645537 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.906751192 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.344851875 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253133456 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.15830555 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.101208007 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833117793 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.90859593 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.910931851 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.897534142 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.87737167 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.814179579 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.172474152 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908670183 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13412335 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.113959513 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.272480208 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.807796744 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.903223991 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898504355 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205942071 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.618252243 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145761636 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.271460458 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.482401195 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908913218 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.833237185 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83347492 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.60114305 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.901510369 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.877033959 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130246136 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.030075726 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.851916878 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.32380039 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216511719 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.156913694 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.91460116 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.181622577 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.179433352 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.640481326 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930783599 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.000786668 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.646895111 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.608397992 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.122747514 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.13590764 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752579609 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.13331305 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.945346693 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.872905648 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.900250667 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.118669366 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.123208169 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.888035192 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162603758 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.62734922 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.906189087 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282160243 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966154214 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.873659042 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.122813282 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.99666275 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915378446 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983342051 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912157966 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.913826022 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.912400479 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952518506 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.879245698 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.043185605 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.914460908 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995828583 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.003033854 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.493523636 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.912756615 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188385267 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279205373 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.245750867 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967059398 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.903731499 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909580217 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838849183 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040965535 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.348580561 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17817919 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.03550547 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.046715788 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927871541 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.644850266 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.249337776 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221199366 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179162616 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.798314963 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90314038 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.992724369 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.130524156 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916259639 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.117211059 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140382978 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233779309 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382526645 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.1005979 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351219347 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178190331 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.274745676 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.906153502 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.495725223 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.911019261 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.662666401 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.951123029 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.88629336 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198588116 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917460746 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.292174264 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.932588542 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.09976364 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.421727921 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.606042077 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.277675243 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.902651403 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.971017381 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190393113 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.316058374 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226953421 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973976406 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921992369 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.605940698 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046262679 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.856069421 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.17207215 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.909754732 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12132546 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.622282157 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.917807466 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200520271 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223676175 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.905076108 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.889899089 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970519651 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.917622299 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.132957686 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.181856072 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.167269482 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921229433 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.912365608 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.732837175 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.20219937 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972546501 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844149274 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.91281219 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010162792 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.15626957 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927244754 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.427705282 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.613053731 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216588657 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.833904952 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929295707 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35717265 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367738854 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257940759 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.436327127 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150325507 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.476227499 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.782174522 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.29029547 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.915552894 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.365682836 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.299062781 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.914510379 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.466551506 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033281898 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.192742923 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243323534 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.922366305 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.75452687 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.964090525 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135943457 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.517304661 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856327794 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.921233437 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.97447925 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.915351559 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.044343314 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928117687 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.925277945 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844190278 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.771191248 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.408179239 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.914745066 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.901517317 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.685744417 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.514436431 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027694129 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074280677 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921306651 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.646257375 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.211550526 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.171134255 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.462761475 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.991780524 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.918272297 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913420663 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.844921404 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.120138888 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.11574179 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216387232 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.304257252 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.028488853 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.916431328 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.127276025 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127756516 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.85371497 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078401972 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333148007 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028381286 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.834532915 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.631182847 seconds)
  done (took 1696.099992557 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.936537931 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.212298491 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.92171121 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.915183434 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.944449256 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.933952276 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.921458437 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.920635693 seconds)
  done (took 57.544911491 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.912628292 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.141899256 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.922584969 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.913469705 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.954190944 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.91382211 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.15135 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.924578347 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.944932351 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.924394761 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.912681981 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.917339684 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.293100153 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.94150801 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.915203146 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.940575052 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.955187477 seconds)
  done (took 75.419633202 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.917295918 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.248724453 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.934083209 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.934935482 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.807867621 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.918265827 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.903972184 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.965000351 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.921351917 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.094269589 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.254053417 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.92568863 seconds)
  done (took 90.657388943 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.933941269 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.919470073 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.920557647 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.920553679 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.919879133 seconds)
  done (took 11.458140674 seconds)
done (took 2198.99353283 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.166370885 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.139342385 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.149637731 seconds)
  done (took 6.121763863 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.061462188 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.107996387 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.243763017 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.251999719 seconds)
  done (took 10.501145144 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.205955849 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.293596529 seconds)
  done (took 6.326715276 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.249561392 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.945423673 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.292757989 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.910333755 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.909609707 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.91080997 seconds)
  done (took 22.564266567 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.916161677 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.917425291 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.915902168 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.92028281 seconds)
  done (took 9.499809507 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.897170303 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.629357132 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.894839622 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.912046944 seconds)
  done (took 21.160950925 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.666570709 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.313628372 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.662200102 seconds)
  done (took 9.47276055 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.568956393 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.24733051 seconds)
  done (took 9.645000099 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.162662376 seconds)
  done (took 3.99017657 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.944442017 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.186409463 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.456020451 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.479302461 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.573923444 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.155568993 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.259443832 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.152050014 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.364973684 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.407117355 seconds)
  done (took 25.809378443 seconds)
done (took 140.574873292 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.557562415 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.938818095 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.116736375 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.291929757 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.148265838 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.116863625 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.125573065 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.294668701 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.818595511 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.813451104 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.333799683 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.146128013 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.08183334 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.944292376 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.088955643 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.93565683 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.145997167 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.368237922 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.999537161 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.186425583 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.14287142 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.930591813 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.120140248 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.94215902 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.152428374 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.071994273 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.475612469 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.934251777 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.138221981 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.483893502 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.085546048 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.329091244 seconds)
  done (took 170.090640664 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.916313771 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.915361626 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.914496628 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.915009395 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.205265503 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.914761922 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.913356313 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.913626569 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.969005132 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.94703431 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.916375825 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.200605203 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.915413986 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.915891551 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.918425041 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.913808996 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.116352656 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.915935146 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.915552325 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.914579472 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.914334445 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.065581853 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.918186914 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.07888627 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.078084568 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.916817291 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.91758602 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.917107455 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.917771864 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.914138657 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.915245588 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.91555934 seconds)
  done (took 208.475505263 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.916934133 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.918047424 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.916196456 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.916458303 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.919300724 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.916345106 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.919731462 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.915421665 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.401891974 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.398907163 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.917862407 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.918878171 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.918470014 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.916243764 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.918353113 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.915347011 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.916858756 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.915335813 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.91853872 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.918992074 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.919052341 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.542108071 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.918440681 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.563018972 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.919035306 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.919288571 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.917666797 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.923367916 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.924309032 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.925904851 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.932049561 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.917482233 seconds)
  done (took 221.474233672 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.118201403 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.925234952 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.926015867 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.843889373 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.926908234 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.924672338 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.919250362 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.109881911 seconds)
  done (took 19.551637136 seconds)
done (took 621.432703435 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.434239073 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.278237946 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.111022038 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.950615273 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.241910383 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.987830179 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.9439829 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.016058663 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.681735773 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.021932608 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.633806703 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.971403687 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.727931852 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.974563909 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.067999689 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.007076168 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.493516924 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.588916594 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.128848685 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.044326822 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.124013731 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.910660125 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.033115701 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.711441798 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.748376688 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.957281261 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.129774257 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.501839177 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.958324826 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.105398659 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.760659195 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.356842374 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.962454983 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.943754286 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.002515107 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.979560775 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.301851348 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.958976316 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.071224587 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.717231157 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.051373752 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.564320683 seconds)
  done (took 105.991759567 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.91558839 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.912642528 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.914427431 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.913377989 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.914322516 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.914084404 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.915158563 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.913246129 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.915420356 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.913922319 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.913663183 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.915037612 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.914109773 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.916919862 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.913572791 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.915456424 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.915370076 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.918087619 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.913337297 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.913959928 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.913989663 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.91377659 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.929713137 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.91445608 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.914145404 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.913922511 seconds)
  done (took 51.646442196 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.929954989 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.095520765 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.169820523 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.949982171 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.928887494 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.933776099 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.947488887 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.931920175 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.931993931 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.932249833 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.023624681 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.936083049 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.949781845 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.170795986 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.949457992 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.930850721 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.93253272 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.930180651 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.104395921 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.948006712 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.949716675 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.937271803 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.94978592 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.947639042 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.933068837 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.930458982 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.935238208 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.429534877 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.939790282 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.024246398 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.991880561 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.958607853 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.376217268 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.181201259 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.990496873 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.943797 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.935222901 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.027963815 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.938376391 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.931168262 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.951266045 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.937538113 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.17312364 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.430502899 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.946856717 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.929677268 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.440695095 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.035644773 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.972509705 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.942402713 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.172846159 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.951396929 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.931477432 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.930738942 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.970043608 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.939714922 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.930287631 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.285215136 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.945028761 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.95155977 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.93909562 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.936124019 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.111476837 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.944277008 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.097310526 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.94473638 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.941445759 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.93271175 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.174015151 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.951795528 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.432393461 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.949526857 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.932593153 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.02516695 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.102172429 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.467115873 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.947616606 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.109526769 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.396274639 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.960318967 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.942244823 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.422569683 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.964685842 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.943143578 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.936869101 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.936338084 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.934312125 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.97901897 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.953187006 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.371758224 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.439745397 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.304349769 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.962628484 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.949960478 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.934651531 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.287432447 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.94510085 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.934351051 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.171164383 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.443482059 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.951521323 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.944170639 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.424445494 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.954002739 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.953721348 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.941855701 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.176916332 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.956038601 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.978924857 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.937989986 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.944811834 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.937490316 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.955985263 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.944393893 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.936648555 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.414707054 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.049727475 seconds)
  done (took 239.947388078 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.933824062 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.946245634 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.931329348 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.953351509 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.930246613 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.935402679 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.929292634 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.929416891 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.934709589 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.928543551 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.930617977 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.930684077 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.935343199 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.942923577 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.045926704 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.938121444 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.542725108 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.93272933 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.932721558 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.93316527 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.68202642 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.938999873 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.930912953 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.94570114 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.931514707 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.932533631 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.93466961 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.033041373 seconds)
  done (took 169.60053414 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.939051328 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.055550509 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.957106703 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.963808621 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.948117641 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.936127559 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.961511769 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.952402612 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.943708621 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.934514432 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.93614589 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.998647382 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.949014713 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.036653732 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.969143707 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.968297588 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.041604827 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.942813793 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.936113149 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.936245952 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.96724276 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.930808283 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.000615697 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.067143221 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.955118853 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.055222843 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.945141283 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.940777863 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.939014561 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.058880943 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.954615219 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.998000598 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.967690924 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.956444197 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.062071798 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.057246507 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.04400663 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.966320272 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.942442841 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.936344215 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.935622038 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.924318513 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.055949603 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.958053319 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.939520689 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.046835425 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.956258552 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.941327624 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.947816895 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.938288063 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.949652009 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.955069807 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.008000253 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.074331916 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.971280594 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.963400524 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.963643544 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.241848954 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.948943014 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.039950393 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.930579848 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.058866797 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.958547515 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.924814841 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.938422509 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.943225525 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.967028388 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.977281807 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.042093613 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.946135465 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.040179045 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.972815757 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.950076018 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.938274141 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.940719981 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.058866632 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.056909973 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.973286188 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.976048159 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.970516915 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.935143392 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.940766652 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.925549363 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.956473234 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.942372261 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.056759988 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.057125529 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.945522137 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.941548313 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.941762914 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.94182915 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.967559895 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.067516223 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.975780198 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.036105786 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.007674557 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.016184937 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.956928212 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.954330524 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.94312814 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.005571934 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.95548116 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.950493354 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.296802042 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.01368181 seconds)
  done (took 209.962130796 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.396188773 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.995832978 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.999356163 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.260292467 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.365769523 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.812939513 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.989180977 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.989604818 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.012571046 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.18317625 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.058817583 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.011193044 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.978959938 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.964521423 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.991410622 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.01034023 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.998942002 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.314830076 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.129467724 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.085972653 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.971923368 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.253061265 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.315738823 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.387522939 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.026786989 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.333896084 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.670451653 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.135535832 seconds)
  done (took 63.504964982 seconds)
done (took 842.488223515 seconds)
SAVING RESULT...
DONE!
