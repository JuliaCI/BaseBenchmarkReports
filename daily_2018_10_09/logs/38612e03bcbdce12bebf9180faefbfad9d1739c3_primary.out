cset: moving following pidspec: 29430
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.24195549 seconds)
loading group "string"... done (took 0.467559414 seconds)
loading group "linalg"... done (took 7.61607761 seconds)
loading group "parallel"... done (took 0.173309119 seconds)
loading group "find"... done (took 1.169293498 seconds)
loading group "tuple"... done (took 2.106602899 seconds)
loading group "dates"... done (took 1.342480906 seconds)
loading group "micro"... done (took 0.250089251 seconds)
loading group "io"... done (took 0.657945195 seconds)
loading group "scalar"... done (took 41.811371948 seconds)
loading group "sparse"... done (took 12.570945446 seconds)
loading group "broadcast"... done (took 1.110083008 seconds)
loading group "union"... done (took 13.894059728 seconds)
loading group "simd"... done (took 4.774624146 seconds)
loading group "random"... done (took 9.638956599 seconds)
loading group "problem"... done (took 1.974719696 seconds)
loading group "array"... done (took 22.512124637 seconds)
loading group "misc"... done (took 1.435420223 seconds)
loading group "sort"... done (took 3.589461963 seconds)
loading group "collection"... done (took 19.42546409 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.512638508 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137273205 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132560491 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147438578 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203853312 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143186685 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15696654 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113194501 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.988260564 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180203759 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154938008 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.511392467 seconds)
done (took 5.129898565 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.224267285 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093811963 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102851941 seconds)
  done (took 0.869950362 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077854152 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144856703 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094498974 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078193076 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09532756 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077826292 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094959478 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077548207 seconds)
  done (took 1.342756771 seconds)
done (took 3.196936361 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.730299383 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.277271402 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203037815 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.460997113 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.198329712 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214034787 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680643603 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.333110296 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252401527 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099379458 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.14414924 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388069702 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13598082 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676121792 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089292665 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122823636 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176617247 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.434282006 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082206039 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110268633 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116353557 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14171578 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128558536 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091586135 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184961413 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.084023256 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194597023 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108794391 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081067157 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289938495 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200319512 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688724422 seconds)
  done (took 10.834659235 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11087365 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132374825 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097482107 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138537435 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135868947 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099350389 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084858668 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096356697 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121672697 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175599863 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114107995 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.137462755 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093856392 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082610222 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115096334 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243913023 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119447252 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103724876 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100360433 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103289167 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121033759 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112991238 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10715632 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093491235 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166040615 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221171042 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113412748 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126348523 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095765259 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115225608 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145118546 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143599654 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096468105 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081425719 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171869927 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124537111 seconds)
  done (took 5.135324866 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.12652766 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188167049 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.103864121 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.183331239 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162354718 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.13898554 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.159094944 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112707626 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.232872173 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.190612429 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.180486525 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141397973 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115304734 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081735709 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097595737 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.080935964 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.659500137 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.162470825 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133064496 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09804875 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104263652 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100364581 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36355097 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08795206 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095935257 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081812541 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082560595 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160500743 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082025101 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.254607837 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.105883695 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.100843352 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10002028 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131531747 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125576056 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117381165 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096994083 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095777226 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177229459 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087909928 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097272137 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102735479 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.110779421 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13780903 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136794635 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.122164647 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097284625 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204341294 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081432568 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095451481 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098424786 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.953684701 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181482232 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091152849 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097427432 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.333047433 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099888115 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100349919 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078997876 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.26745893 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.187577746 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100525506 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081247156 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099195876 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083325862 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.356295423 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097776682 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.695224558 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082611232 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106378579 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082213855 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096072391 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103210462 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087213719 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113777894 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079526175 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099238177 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079414138 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096864658 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081203589 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107857049 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101165616 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079934325 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162837014 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079064572 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114210139 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126939668 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08366163 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095006822 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129529421 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082938023 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096692112 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132774125 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080603527 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109402389 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098564581 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142487251 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081410198 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.17742262 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080579516 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127786965 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098559759 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115085311 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112774218 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098315935 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084658508 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096336034 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077437971 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164806452 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080695193 seconds)
    (111/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093443896 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080554092 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099738557 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.07685467 seconds)
  done (took 22.618747741 seconds)
done (took 39.267194223 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.328734147 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102298041 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102933271 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101885398 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099769206 seconds)
  done (took 1.483656264 seconds)
done (took 2.207979593 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.290406464 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171721373 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096471812 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166793632 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093481027 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.174473741 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159985073 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.11145752 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218717724 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077583195 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16346978 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093741943 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077103885 seconds)
  done (took 2.645023078 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093862039 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114703487 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082117924 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.1112591 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077103046 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110696314 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093161204 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117617637 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109201319 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084515055 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093285118 seconds)
  done (took 1.812412706 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094438412 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112514386 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082693096 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109738308 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076078202 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110313475 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093563629 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115622424 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109620326 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085844247 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093621385 seconds)
  done (took 1.804568671 seconds)
done (took 6.976335649 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091343385 seconds)
  done (took 0.806222181 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.924067135 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.007573572 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112250996 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149495699 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.298640543 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.194859393 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.483302923 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128658936 seconds)
  done (took 11.224470844 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.146093369 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083377816 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103679526 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083532693 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099863244 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083389576 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099760981 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101528569 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082558184 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102200273 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085392374 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099636219 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.101589542 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086084801 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103091648 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083295667 seconds)
  done (took 2.33076798 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120459273 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118553877 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106381237 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109295657 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087217746 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104502477 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105875357 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089401145 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102407971 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104176689 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090797056 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105721066 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103425205 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080083052 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105468148 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107974127 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086411817 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10516783 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107526444 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090348466 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106612854 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095786499 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087448577 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105902239 seconds)
  done (took 3.257594333 seconds)
done (took 18.338959271 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160554189 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108292916 seconds)
  done (took 0.994323229 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095330731 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112732496 seconds)
  done (took 0.939732408 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098288415 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094785763 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122088754 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110372862 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080081487 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095810726 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119876682 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080645098 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095225131 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080301027 seconds)
  done (took 1.713810462 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08163496 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108796017 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101903988 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094944228 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.103929875 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095102753 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088146014 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098447351 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109657165 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076880785 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103650062 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11420006 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085754184 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115904747 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104854427 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083616663 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101678706 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098515502 seconds)
  done (took 2.505051018 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.0796329 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097626686 seconds)
  done (took 0.913746379 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080728107 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094467932 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081203234 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097337089 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094115054 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076412918 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094305041 seconds)
  done (took 1.355804014 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.469047643 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135250377 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.252478064 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084073811 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119130341 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302112945 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.09728154 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084766454 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102369115 seconds)
  done (took 2.438935053 seconds)
done (took 11.591883435 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092263717 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.11730071 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11145374 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.465874935 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107361753 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097319134 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.160760561 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.250967898 seconds)
done (took 2.143293361 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.150617632 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324100879 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11406042 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068116998 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096702463 seconds)
  done (took 1.346278013 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079493128 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100311478 seconds)
  done (took 0.918928716 seconds)
done (took 3.161613591 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08050787 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.128763539 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080347595 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.096612461 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080193631 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.096001622 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077492839 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098421415 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080525723 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.096699247 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.096862024 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080212068 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.096625653 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077815421 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094040286 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080288726 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097499092 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07762547 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09438745 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077662119 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097251245 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077202714 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094316903 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078144166 seconds)
  done (took 2.909633576 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099445462 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099279828 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102423129 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08503473 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102978892 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086564767 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101860379 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096902258 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086230831 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099833527 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100494455 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085041183 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100222061 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085254952 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099543265 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101215909 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086340478 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098271319 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082923854 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100986094 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102980915 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081386533 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101681586 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102580685 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084625391 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102304559 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083565005 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097734016 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103474653 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084717206 seconds)
  done (took 3.59077946 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085556046 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094497617 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078487534 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102449865 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077930095 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097653546 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078941832 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096083275 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079789155 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095883388 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08068006 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095045624 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078920912 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096808444 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079776926 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098673454 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107776804 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077889938 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095597762 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078995368 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099410516 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078593298 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095098309 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078749649 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095947663 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078390133 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095688436 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078538468 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096021822 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077986434 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098155286 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082091572 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095705457 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085535057 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09896935 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078431239 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099482094 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095005111 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079437068 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095071103 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07749026 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095318907 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078162616 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10167886 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078877001 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097461572 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078083885 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09646734 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078790504 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097981575 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07800686 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094588805 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079436202 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096269402 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099252811 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078373873 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095982567 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07774007 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096582303 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078271795 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095166199 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077679709 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098274543 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079852802 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111662823 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085031485 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094701134 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079807558 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095703854 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080561059 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09743348 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.1085484 seconds)
  done (took 7.167902634 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082728714 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106948395 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080385951 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097226033 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076919406 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096724416 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0995236 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078209541 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097426494 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085512956 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095022505 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079597322 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097690727 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107411702 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078789639 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09716844 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085398657 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093639509 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079014975 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098976196 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079269976 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099661052 seconds)
  done (took 2.746012338 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210473055 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104433067 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142349542 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108041752 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084041767 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107019556 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102722215 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086505533 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103054639 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084521193 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100101195 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101965571 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083843293 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101092294 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101092167 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084919716 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101936031 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085036688 seconds)
  done (took 2.649855984 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093643477 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099402849 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102914642 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098242126 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099051833 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083759682 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104817016 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108349745 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08388908 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101474961 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092768479 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103005379 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103815106 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082080513 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10329163 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08355227 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103267838 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083854132 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111685767 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107405951 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106837797 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09241736 seconds)
  done (took 2.908328701 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096376212 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100704321 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118559474 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083753878 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095330557 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080291362 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106257724 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082960435 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109419773 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102580589 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083868939 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099444854 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090223912 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099919165 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106551133 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083716538 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103499254 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083774572 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102670942 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079651059 seconds)
  done (took 2.671014871 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10291207 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100104823 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100124255 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093177829 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099750718 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083289196 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109160451 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100412151 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083149825 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125407728 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100284282 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082253452 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109856297 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105965287 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099785741 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092234454 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108876385 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.1093001 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083309851 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100049546 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126195251 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083370398 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109296944 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.211675293 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083338028 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099868273 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100483909 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08901484 seconds)
  done (took 3.655548362 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081138829 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098929014 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078693724 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096554844 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078775523 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096535482 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079079243 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096453719 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081956092 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09824608 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083223689 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100935153 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084006998 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.10116163 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083660944 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100985172 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08618595 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09936695 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081224116 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098496544 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083828408 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1008233 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083873292 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098922683 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080968819 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.10068051 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081204958 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098664807 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083721066 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098748387 seconds)
  done (took 3.48169831 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090648138 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10619241 seconds)
  done (took 0.962941765 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079139487 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114886264 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078865361 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103070005 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086749793 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099245956 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108223406 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086668032 seconds)
  done (took 1.520754777 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096558604 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110487166 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08412136 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113522026 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111091116 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098016083 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163795907 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100714337 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087814851 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098324949 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113973516 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081763617 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108138137 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084036927 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109109524 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090255476 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099859938 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089743193 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104910033 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101276309 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085645494 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113477451 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086868049 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099702369 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085660564 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114565878 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112837802 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.086351004 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106054535 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111334783 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090185555 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096355569 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08473851 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10379392 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082561921 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111626636 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115935383 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086736089 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111815839 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085430994 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114580225 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097627296 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089456598 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108978817 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09464885 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102912151 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085135309 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097999782 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.10014455 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086313699 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097422417 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081908957 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09421451 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089703084 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104249645 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112471989 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081064377 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101640951 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084668465 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102642364 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088717675 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104154804 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086969994 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101705408 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109992899 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087911327 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110181237 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079279468 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096314182 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082458053 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111452835 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125709611 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093601659 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103547506 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085276203 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100814748 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106337228 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085548544 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110743572 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092835589 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.103308824 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110553187 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092540348 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103457091 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086984032 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111995199 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.101349409 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087624032 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100547478 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099594166 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.102371241 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.083473334 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.100735586 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111794023 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087553156 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103707917 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082611096 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110871988 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.082445155 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.105576222 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086388418 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104054111 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111960654 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091748734 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109477782 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111050412 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091963709 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103491242 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088011649 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099498628 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086546366 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105926891 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109438605 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078223504 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106445738 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086629145 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104616741 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091444214 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101231673 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085417142 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111471889 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110697758 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083806427 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099813946 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088539952 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103120033 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088544067 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110141831 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102369851 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.08040134 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098334732 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088150806 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103130765 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089297997 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109118497 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107455277 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078869451 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101418474 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089624294 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110749281 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103644897 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085059111 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107292559 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085823999 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.10276828 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.090493671 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.105228733 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083625555 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.107371555 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.105511769 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079584431 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10760389 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087736381 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102001477 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089161112 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107268406 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106149222 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085867114 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101408948 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088026397 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103248478 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083691596 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103441031 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.101664019 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094650949 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105800818 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080446981 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100189055 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092419028 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.10110069 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084991186 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.10294671 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105903579 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086524904 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102168532 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084746774 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104751516 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116791599 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089570678 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105809626 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090927549 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.113280148 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08473066 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104993605 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102181871 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084487869 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102178679 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089900115 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106001505 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106139625 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084988599 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097753407 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088874308 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107925506 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083804372 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101175274 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083637408 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107299062 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110843638 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089127715 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104479645 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08318862 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104061892 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107734565 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087643186 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.104322587 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084018648 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.109265083 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084880836 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.112024605 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105243228 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094930764 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108464652 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080951164 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109175683 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101988362 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092030946 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099595641 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082752772 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103555548 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.087351944 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103190183 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088206463 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.098135285 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092634655 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112235055 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103541534 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085435349 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104054749 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094348796 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.105326043 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088644928 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.108297938 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109868696 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099201375 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.103328755 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089407883 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113382272 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104670829 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078730185 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108725655 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081249379 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.1003721 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081898263 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099215355 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086849623 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112307429 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108631195 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079831296 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106163853 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08447148 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101761495 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079000003 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107254001 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104581529 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084706062 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109647752 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084178632 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102034829 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104481556 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082914142 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103094203 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083966352 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104808431 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084018874 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103339789 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082292668 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.10353516 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099619382 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080545512 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102686547 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083786669 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101242346 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088109846 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102572088 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082646588 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103488575 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102217829 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083808541 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101780703 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082184764 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104565654 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083701439 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101619049 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084891744 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096572179 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108799253 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082366396 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109172556 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083506889 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098090731 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087593935 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105225955 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10685508 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083838943 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102492056 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085011941 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10088857 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086300298 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109668662 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.09928939 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09298669 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107414338 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0841933 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103852523 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083047832 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.103789767 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101066538 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085202216 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102548328 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083050615 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101284271 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087990175 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.10445082 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083187292 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103528494 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10284379 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083483071 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103171261 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.078110024 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100516945 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082515701 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102089537 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090471553 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.103457764 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105069329 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082118438 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103389097 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082905442 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097574083 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091736877 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112025493 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.10248959 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091425428 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100694419 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084910773 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11202763 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095248498 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081917311 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099692905 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081604286 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110324138 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085677409 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110463207 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100774704 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082880161 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098941632 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085000289 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100769097 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077842317 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100490715 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087509596 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104399561 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08214139 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101857946 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08623803 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102433263 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108900356 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083349689 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103633798 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084230117 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099114452 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082077624 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100448619 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104823309 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084359591 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099866812 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08091659 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102146246 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085291606 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.111333971 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083029702 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103629092 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09089626 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102461257 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104591514 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088030032 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095900479 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086828507 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101965534 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084013324 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100010079 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105426318 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086680373 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103111426 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089871961 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101175084 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084131537 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101807156 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099674373 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083401734 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102027125 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084118492 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102087911 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084678368 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109885491 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081541379 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104166988 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101724881 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084096483 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106839735 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08549791 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103398405 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109948674 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086382748 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103389253 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089758658 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10576051 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086507008 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103485892 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102910445 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089520356 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100578422 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091291818 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101730068 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084841998 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103265438 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081174807 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102467201 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101552434 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082487422 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107337498 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.0849095 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100762939 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082659358 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100230482 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085189615 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106166376 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11044896 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086258039 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105239842 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.07934738 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099561802 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085137982 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100627693 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084462047 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10549477 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108427147 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085934032 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.10314236 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083057365 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109464344 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08923661 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106888199 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100824609 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088195987 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103168868 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086517926 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103220155 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083472853 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104580528 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107107349 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084823977 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101717518 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092479805 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107459309 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085194861 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103862289 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.1021486 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084444772 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097610351 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.08510042 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.1045772 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090401724 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104714799 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102106337 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092939843 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101960214 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084499585 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106551165 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083568804 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109377201 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.09725196 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084386626 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103333573 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085608023 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097704263 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082485791 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099997526 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086787694 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101489732 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079054494 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111774876 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109984876 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085859833 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100449218 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082008945 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09810052 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078814932 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101579657 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084663342 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104102942 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111649863 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082913567 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101680554 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079485507 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102458073 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087509503 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106383172 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080517439 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098849148 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100894147 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086845116 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109228197 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083280231 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10250841 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087306972 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105474947 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081828459 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106804101 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099437 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088478155 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113311685 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08452114 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103748475 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.108283354 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092475754 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104164496 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079927878 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103863783 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087071104 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103287463 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103385851 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085879482 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116801982 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08673222 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102027424 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083001477 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106351922 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101415135 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090663563 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105056298 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084968551 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107203094 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08598975 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112351366 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105774391 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089973902 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105512369 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086680234 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101719128 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101917535 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.08173308 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100779129 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084593606 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10422502 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088797201 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111211137 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101642467 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093778845 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110376555 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08889545 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099108902 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083664786 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101925769 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079217433 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104509942 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101193293 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082633018 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101023224 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083330379 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102779804 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089836699 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104550353 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08551835 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103934198 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096952349 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.08599353 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105380512 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085635316 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099352122 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084093771 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104339159 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090613673 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109595096 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103562969 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.0859186 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104324763 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085031931 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098213763 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090115412 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102646179 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086930127 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102236358 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08449656 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105558458 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106031094 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090934386 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.1045985 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086298461 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115728361 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10526846 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081327058 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.10025552 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089334794 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101369046 seconds)
  done (took 58.376295953 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147317096 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080802899 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098514335 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079949575 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112728478 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099561551 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079225449 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099416365 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081116088 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102274401 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079739025 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098987897 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109103821 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12574046 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094269545 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103587187 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09809848 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081526015 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099169492 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081630605 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109403818 seconds)
  done (took 2.875523321 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105072252 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117046444 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114684738 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118965395 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089925247 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115145089 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115008513 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115433881 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100469434 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111307475 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118854745 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114731293 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092014078 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111695261 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110841225 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094114772 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119325972 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109018752 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116459538 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095206926 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113543205 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114946453 seconds)
  done (took 3.226449664 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084381004 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101991913 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085356716 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098258736 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083427852 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098255695 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087604577 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101164247 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.088197688 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103088698 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082174064 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102854496 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104523902 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079261834 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101874394 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082046409 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152418334 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107319496 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083463211 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104437195 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098719374 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085984556 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098481079 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079801803 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102161158 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087926858 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103053708 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081662365 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103531289 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082567419 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103497184 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081680875 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105420399 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103726039 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082654685 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102118563 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08415066 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102014456 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080500893 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100421676 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08448312 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098876903 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084401113 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104505972 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082077227 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101085797 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08524181 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103232384 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097312748 seconds)
  done (took 5.459297868 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104826946 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16137416 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085520923 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142951126 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120635588 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11332465 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087638797 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142448957 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102334973 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083450728 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123446674 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121489334 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10324458 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090094967 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111635578 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103555581 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085607687 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102666074 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108663724 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084664011 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109097705 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091606645 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119528091 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.1190634 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108441064 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083630215 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10413013 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.1086261 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098618678 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110408142 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109225261 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091062654 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121448377 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10914086 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10329674 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087064568 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122393255 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104315208 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087288873 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101471655 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087081965 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110469014 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110460356 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122028003 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085360172 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108486102 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084093284 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101640629 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119021903 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087463355 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113441294 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119157532 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108545364 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08516971 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108423418 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121186715 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085806284 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102014454 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107736094 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098461881 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100933432 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108234146 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.099967111 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.10584514 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111933837 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100167252 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108911544 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107791267 seconds)
  done (took 8.13476782 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093068883 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111123845 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121776665 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121330095 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090755076 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110828801 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110980354 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090393591 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111130241 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116627213 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111322775 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134015476 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086994358 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115334569 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111851492 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091913779 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11067332 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110716234 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091495873 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11322547 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111497181 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120599493 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09165358 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120322679 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142612735 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10591146 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090943046 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111633743 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121414366 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111378368 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1235957 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090782775 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111385054 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121888211 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124849971 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091338149 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10396918 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110237316 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09138636 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11101364 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105657798 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120753387 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091759971 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10593892 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111551527 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091803854 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121276936 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125096747 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114392607 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097878531 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111784291 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120697563 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111903305 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092239123 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119840308 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147416856 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12124415 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12152569 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111196531 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.121426659 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101783451 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129680779 seconds)
  done (took 7.688255304 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108718851 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115643265 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119030958 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100451903 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083783341 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109093854 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082879344 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102184302 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11463786 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094684825 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117078594 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109100914 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112144009 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097534528 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108808996 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11320143 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088983491 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109218304 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114924835 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109385793 seconds)
  done (took 2.941125636 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093473877 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124432397 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085019561 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11285966 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107838202 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091570929 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106436081 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107557554 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0857384 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107632054 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096551408 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117129044 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10551072 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090847189 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116144613 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111152544 seconds)
  done (took 2.487121471 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096132514 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117724583 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12069716 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08513681 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103965964 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080351826 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105411229 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099912855 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081267853 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119929851 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084827152 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109176225 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105256277 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083010492 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101113926 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087469636 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100929277 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082672316 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10536481 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121403693 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095648578 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103539341 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104848221 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086712052 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104045762 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090293037 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106129969 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103278765 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083693904 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105710001 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085010084 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112834176 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101383847 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083462457 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103123881 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082647096 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105692375 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085430853 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107936639 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103767552 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083337424 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104490366 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08572781 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106691442 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081346041 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10548103 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100958127 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091827247 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102614604 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08550346 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104901954 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107043414 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086043404 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116109303 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088662648 seconds)
  done (took 6.228655468 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099344373 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108373492 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080275563 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103055709 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087160024 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108517178 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10864468 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087813361 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106516779 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083126705 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106974351 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089365711 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108059709 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108070787 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087539178 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107799522 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08077584 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106968871 seconds)
  done (took 2.605619564 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091156082 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10429412 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092836471 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105301752 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084584333 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108386099 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081101577 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104587962 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103079924 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085093716 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104794538 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087397752 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103490952 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087924917 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10551252 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084940296 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107626499 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103267169 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085867173 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101464772 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088598187 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103618745 seconds)
  done (took 2.96093706 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118452907 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.12527007 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.09249259 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228196669 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104584913 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131670064 seconds)
  done (took 1.636932054 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10982974 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121893243 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105966011 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107841554 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1156465 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107191383 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088445947 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107581949 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118465073 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102341182 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107812155 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119618359 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118018292 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098170634 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114460738 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114577925 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108634583 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088510801 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106590746 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129681788 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088171231 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118406229 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108247536 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087485194 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107922814 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117481998 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117145578 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122136734 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088048791 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118697924 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114350003 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088160791 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118886212 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123380846 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109231714 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098976531 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108627164 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129277369 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116008543 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0985963 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109941305 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114878116 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098215573 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114804378 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118652392 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107197606 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094333251 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107602943 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107985978 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136684247 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093728155 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117494771 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115114283 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118866194 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118753077 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136741795 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102909106 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118731754 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115379731 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12459234 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118468183 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095324891 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118043016 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123477261 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115444247 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118280138 seconds)
  done (took 8.175591153 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102829076 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126428435 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108806309 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122956591 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098827694 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108802026 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108620903 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087900725 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108616871 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106684019 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152764312 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08943088 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118961446 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118580892 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108321695 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08895956 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108652967 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118374685 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086783936 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135837847 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10954654 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118175586 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118389438 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099102661 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123691433 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115051649 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108705953 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088211228 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108924389 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108170267 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094482921 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109132995 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118220412 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086637157 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118644223 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108944819 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087116443 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115332025 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109108815 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116003005 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098417498 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129183101 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110215557 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108634535 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123275487 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08907358 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108231747 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087718339 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109277962 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108027658 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122795801 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103935956 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123151888 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118839848 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108861821 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08816119 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108801386 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107447276 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088366348 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115972921 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117993362 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108677222 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136432438 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089354451 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108838447 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119390752 seconds)
  done (took 8.053863067 seconds)
done (took 155.853292781 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.09880815 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136378841 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096232446 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169640019 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106823361 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119672857 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139052492 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09835169 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106873228 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086331692 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107412837 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087393587 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172300342 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085845737 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107171908 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108225475 seconds)
  done (took 2.673373686 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200179857 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256557351 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102812666 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106043071 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.110617198 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.089395631 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105280448 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091796116 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110142059 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086325079 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110057008 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087176844 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105365441 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086363521 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110522678 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088376672 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10731044 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.109121855 seconds)
  done (took 2.913830803 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112867043 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146585769 seconds)
  done (took 1.107722124 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119201181 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181667204 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296543294 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155210009 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118549127 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128201992 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156794129 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131879976 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198061994 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124237697 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123428208 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098673104 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140368803 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11611928 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094227431 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118765074 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143578876 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093405855 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116696748 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.11653015 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117662864 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10689881 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115354923 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094194369 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181426044 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119627362 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085545981 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107457569 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116580842 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095138432 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113664083 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125882266 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098697477 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176597628 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102954654 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178642997 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098084553 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112800227 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115164628 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091532901 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119148707 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119442648 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.1046308 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119077676 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087003295 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117990981 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105412041 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085462856 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114721467 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097697224 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116401316 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113280671 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156435694 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118505881 seconds)
  done (took 7.549137944 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795119571 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164541246 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090405525 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.885625702 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139721366 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104770097 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.780760621 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133456325 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234253853 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762792186 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135099307 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122176938 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230053457 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237636601 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.929522842 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311479502 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.674379328 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102655475 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150263425 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153987116 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119040217 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138460257 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130737622 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.453090669 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096246193 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113540815 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118100522 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100220095 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160323566 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.127388274 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115679475 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178947991 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.268289423 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.187466908 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116151027 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089575002 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112404158 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170240704 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266887652 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216878682 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182145396 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087789598 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112369697 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122857952 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111385006 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109177473 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165103836 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.196672744 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174855536 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093559657 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122561573 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12053443 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121743537 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167860614 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120873279 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.289655974 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322715595 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112989902 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121381479 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106232068 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266868957 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12398732 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225330982 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117935264 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213803897 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112881609 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779412641 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.192530751 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090642619 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119280236 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120430729 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096115915 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122547528 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172162618 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393789418 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124894527 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094556441 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112064604 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205355194 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126162567 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111308971 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163892363 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116917978 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100433171 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126286687 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123986441 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171905307 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.232370883 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124755474 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120229368 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095045196 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126935345 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116816035 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213050204 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222514371 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162697675 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.213552644 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124666703 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186525835 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.168762807 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099162457 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196416352 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098232639 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126463017 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123162887 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219164896 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147361285 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123406667 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095465115 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119112404 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149459214 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127625013 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098290326 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191623654 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483627117 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168045816 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109124998 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128046515 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098939534 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182529843 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097705981 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264263199 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122809781 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.172934691 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119676142 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088470261 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121134896 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.166486487 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123648382 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121399422 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102302914 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119520308 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235542734 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22137363 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124420362 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222839494 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184941663 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120554686 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174235536 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123639712 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169001923 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12072765 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121918405 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096263125 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.799071196 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125019356 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099429994 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115911104 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198887721 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11159183 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102628056 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12549423 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108652649 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.758000282 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128605094 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121770051 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104081176 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120729824 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.1219058 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118166039 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095225482 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162502048 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234835186 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122971431 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120979419 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104442727 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.184015181 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095361758 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126145089 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125615826 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124897715 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100876085 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116364036 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124533378 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171226295 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164037826 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223364599 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.59855231 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091814545 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126635845 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231261307 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089896368 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290095781 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121129511 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.226541049 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167223538 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122179436 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319961513 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.16796679 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.198268009 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128027849 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.177186089 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087371059 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120241618 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164990599 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11340246 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118264496 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.165911938 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126809112 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102346157 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.958105448 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113044405 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229488462 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109677866 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172614182 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116983462 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099834178 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29109017 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.1130147 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108065424 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.189150431 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094060377 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12638192 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.731775703 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104013551 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123675882 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118973008 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223549221 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166017169 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119168248 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098970912 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122179545 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.165797432 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209701344 seconds)
  done (took 44.315514492 seconds)
done (took 59.412197114 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276224316 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213052229 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259597835 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169131092 seconds)
  done (took 1.868354919 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170194461 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148763496 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121233969 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107843399 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149498651 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085536181 seconds)
  done (took 1.661874225 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.353042271 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271232712 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239845675 seconds)
  done (took 1.744765809 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.289129035 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.25336154 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.356338196 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.420439286 seconds)
  done (took 2.316807783 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208859475 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132057308 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111306467 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104849175 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196811816 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250110896 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142126024 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203688002 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122671083 seconds)
  done (took 2.40052812 seconds)
done (took 10.872986421 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.281730304 seconds)
    (2/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.23505195 seconds)
    (3/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.246878114 seconds)
    (4/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.149233832 seconds)
    (5/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.229058341 seconds)
    (6/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.190470488 seconds)
    (7/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.191687837 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.126923037 seconds)
    (9/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.215853796 seconds)
    (10/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.126459376 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.099798337 seconds)
    (12/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.190503726 seconds)
    (13/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.122985438 seconds)
    (14/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.100607392 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.118227032 seconds)
    (16/286) benchmarking ("sort", Int8, false)...
    done (took 0.198501231 seconds)
    (17/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.219572307 seconds)
    (18/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.162889 seconds)
    (19/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118581543 seconds)
    (20/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.093592094 seconds)
    (21/286) benchmarking ("sort", BigInt, false)...
    done (took 0.242546865 seconds)
    (22/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.146458325 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.135951705 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108757415 seconds)
    (25/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.100255378 seconds)
    (26/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117781409 seconds)
    (27/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.087369616 seconds)
    (28/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.137075822 seconds)
    (29/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.184820285 seconds)
    (30/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.15891997 seconds)
    (31/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.175104246 seconds)
    (32/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091360359 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.22568987 seconds)
    (34/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.211276354 seconds)
    (35/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.124372111 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.095924006 seconds)
    (37/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.12170588 seconds)
    (38/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.121471398 seconds)
    (39/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.190114062 seconds)
    (40/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.224394735 seconds)
    (41/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067286904 seconds)
    (42/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.135412485 seconds)
    (43/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.193010739 seconds)
    (44/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.098117621 seconds)
    (45/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.13607517 seconds)
    (46/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.193763062 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.149464185 seconds)
    (48/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.076431309 seconds)
    (49/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.161477664 seconds)
    (50/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.158183226 seconds)
    (51/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123021113 seconds)
    (52/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.189228251 seconds)
    (53/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092600986 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116795505 seconds)
    (55/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.19907781 seconds)
    (56/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.165448683 seconds)
    (57/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.139434857 seconds)
    (58/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.167818512 seconds)
    (59/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132694085 seconds)
    (60/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.099510903 seconds)
    (61/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.112401104 seconds)
    (62/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067679128 seconds)
    (63/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.17497815 seconds)
    (64/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.240128989 seconds)
    (65/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.093780241 seconds)
    (66/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.152135922 seconds)
    (67/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.08938326 seconds)
    (68/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117979808 seconds)
    (69/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.096095948 seconds)
    (70/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.116427736 seconds)
    (71/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.111153858 seconds)
    (72/286) benchmarking ("sort", Float32, true)...
    done (took 0.232610202 seconds)
    (73/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.159062614 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.119911288 seconds)
    (75/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087108135 seconds)
    (76/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.126678441 seconds)
    (77/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.097384112 seconds)
    (78/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126251503 seconds)
    (79/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117012779 seconds)
    (80/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.148561188 seconds)
    (81/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113661784 seconds)
    (82/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.184726297 seconds)
    (83/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.130074694 seconds)
    (84/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.184152595 seconds)
    (85/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.083128001 seconds)
    (86/286) benchmarking ("sort", Float32, false)...
    done (took 0.173669709 seconds)
    (87/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.083136605 seconds)
    (88/286) benchmarking ("sort", Int64, false)...
    done (took 0.110875765 seconds)
    (89/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090147061 seconds)
    (90/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.11199219 seconds)
    (91/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.189591462 seconds)
    (92/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.095644019 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.135480771 seconds)
    (94/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.190834837 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.111348457 seconds)
    (96/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137675909 seconds)
    (97/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067434533 seconds)
    (98/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.099230981 seconds)
    (99/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.087415902 seconds)
    (100/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109806676 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.135326525 seconds)
    (102/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.118559856 seconds)
    (103/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.185076413 seconds)
    (104/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.139536213 seconds)
    (105/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067345886 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086279036 seconds)
    (107/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.107402952 seconds)
    (108/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066324122 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.1097916 seconds)
    (110/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.175512407 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118156561 seconds)
    (112/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.171381304 seconds)
    (113/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.099129907 seconds)
    (114/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.122630726 seconds)
    (115/286) benchmarking ("sort", Float64, true)...
    done (took 0.232771167 seconds)
    (116/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.13216754 seconds)
    (117/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105969132 seconds)
    (118/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138537321 seconds)
    (119/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067668103 seconds)
    (120/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.116195476 seconds)
    (121/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067200748 seconds)
    (122/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.145929391 seconds)
    (123/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.185030703 seconds)
    (124/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103695558 seconds)
    (125/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.145355547 seconds)
    (126/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.0983717 seconds)
    (127/286) benchmarking ("sort", Bool, false)...
    done (took 0.181287953 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.116391022 seconds)
    (129/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096249497 seconds)
    (130/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.188965579 seconds)
    (131/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118401135 seconds)
    (132/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.172971603 seconds)
    (133/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.099791572 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109177635 seconds)
    (135/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.076692985 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116380834 seconds)
    (137/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094914079 seconds)
    (138/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.188678559 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086525901 seconds)
    (140/286) benchmarking ("sort", BigInt, true)...
    done (took 0.233569772 seconds)
    (141/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.090957778 seconds)
    (142/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112454437 seconds)
    (143/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.094699289 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086889715 seconds)
    (145/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.1186372 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08677062 seconds)
    (147/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116930187 seconds)
    (148/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.184893789 seconds)
    (149/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.088731274 seconds)
    (150/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.090369777 seconds)
    (151/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066650658 seconds)
    (152/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.090033375 seconds)
    (153/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.090210496 seconds)
    (154/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.119615333 seconds)
    (155/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119328511 seconds)
    (156/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.10001865 seconds)
    (157/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.100337612 seconds)
    (158/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.180861705 seconds)
    (159/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.087602254 seconds)
    (160/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066740601 seconds)
    (161/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.105727904 seconds)
    (162/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067764765 seconds)
    (163/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.119618739 seconds)
    (164/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094434483 seconds)
    (165/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132599621 seconds)
    (166/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.095902691 seconds)
    (167/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.120967802 seconds)
    (168/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067400682 seconds)
    (169/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137932143 seconds)
    (170/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.067092549 seconds)
    (171/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.092342428 seconds)
    (172/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.096514435 seconds)
    (173/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.146039275 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093357845 seconds)
    (175/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111945596 seconds)
    (176/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.118937885 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097937321 seconds)
    (178/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.0770472 seconds)
    (179/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116499307 seconds)
    (180/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078185086 seconds)
    (181/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.157313466 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109972532 seconds)
    (183/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.094291423 seconds)
    (184/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.11502226 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 0.223240516 seconds)
    (186/286) benchmarking ("sort", Int8, true)...
    done (took 0.222643325 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086285729 seconds)
    (188/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124562994 seconds)
    (189/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088868425 seconds)
    (190/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.090684194 seconds)
    (191/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.162004334 seconds)
    (192/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.136416182 seconds)
    (193/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.110389224 seconds)
    (194/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.078601797 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.086427613 seconds)
    (196/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.090627681 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.087473747 seconds)
    (198/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.117744103 seconds)
    (199/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175350938 seconds)
    (200/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067991545 seconds)
    (201/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.110784025 seconds)
    (202/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066859375 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096988014 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118475338 seconds)
    (205/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086133985 seconds)
    (206/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.14555762 seconds)
    (207/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.111569388 seconds)
    (208/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067828781 seconds)
    (209/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.1111285 seconds)
    (210/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.233906904 seconds)
    (211/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.094492581 seconds)
    (212/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.067519416 seconds)
    (213/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.311237655 seconds)
    (214/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067132784 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117655631 seconds)
    (216/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095045463 seconds)
    (217/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.108921584 seconds)
    (218/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.140145052 seconds)
    (219/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.117774391 seconds)
    (220/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.11559364 seconds)
    (221/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.134138601 seconds)
    (222/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067132868 seconds)
    (223/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108855908 seconds)
    (224/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116412541 seconds)
    (225/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.067794559 seconds)
    (226/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068149333 seconds)
    (227/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.090180979 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087263196 seconds)
    (229/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066340384 seconds)
    (230/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.182351257 seconds)
    (231/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110529735 seconds)
    (232/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181225824 seconds)
    (233/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06854269 seconds)
    (234/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.092608609 seconds)
    (235/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.091251636 seconds)
    (236/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.163969293 seconds)
    (237/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110616814 seconds)
    (238/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.112485014 seconds)
    (239/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068478114 seconds)
    (240/286) benchmarking ("sort", Float64, false)...
    done (took 0.173484912 seconds)
    (241/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067655143 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110035444 seconds)
    (243/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067365524 seconds)
    (244/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068059168 seconds)
    (245/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110335793 seconds)
    (246/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118480823 seconds)
    (247/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069307182 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094008111 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109801579 seconds)
    (250/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.067508673 seconds)
    (251/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.118044826 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096230336 seconds)
    (253/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.091135015 seconds)
    (254/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.089310634 seconds)
    (255/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.109601121 seconds)
    (256/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.089737503 seconds)
    (257/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.110426506 seconds)
    (258/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.126516085 seconds)
    (259/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.093246102 seconds)
    (260/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067993604 seconds)
    (261/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068324769 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.111863733 seconds)
    (263/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.067517022 seconds)
    (264/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.090255855 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095278841 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108790859 seconds)
    (267/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067589552 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108549822 seconds)
    (269/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067752843 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095650897 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116296753 seconds)
    (272/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077974417 seconds)
    (273/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.09063225 seconds)
    (274/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089932128 seconds)
    (275/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.138546752 seconds)
    (276/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.08693407 seconds)
    (277/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.136476677 seconds)
    (278/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.111399025 seconds)
    (279/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.08818821 seconds)
    (280/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067594214 seconds)
    (281/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.102865569 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093252954 seconds)
    (283/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125788812 seconds)
    (284/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.067430275 seconds)
    (285/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.090825758 seconds)
    (286/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089815232 seconds)
  done (took 36.124389283 seconds)
done (took 37.009447904 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.10081892 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148618176 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.097092592 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.13652859 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123364145 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092223673 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.11900107 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098853952 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124266406 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125198834 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099422909 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093683748 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096982333 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120258578 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096687258 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139214626 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123773443 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093755257 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118763482 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085591556 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118607885 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087131077 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111735154 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07006611 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122621414 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094083564 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.11707938 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119931983 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087395843 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110924581 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093079787 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117233133 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086730496 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123752256 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093120554 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.11940053 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09745619 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120438151 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111899198 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086843277 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118572838 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087561324 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117494059 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094905881 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116155315 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092768856 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119171267 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099984068 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139751651 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116121944 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09547694 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122305157 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096908309 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.11800472 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090821858 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119023588 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092383485 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139678068 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119598124 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092965436 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118434802 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095560534 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116826676 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095707075 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118712875 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121198005 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098656204 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116384779 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097374239 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115907739 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086858058 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119425434 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090479916 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111461469 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09658672 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12249257 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109617848 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092644923 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117662265 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092684158 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109605935 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090154836 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112234508 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093245247 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11272523 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070773453 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114273969 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093559423 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110349502 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096713526 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117025421 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094226905 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112791706 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098893664 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110661287 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092199151 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111374508 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087546702 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11372583 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091003088 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111601772 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09056676 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120213778 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112671345 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093833211 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123514469 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08739586 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117534239 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087794053 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111024846 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101808421 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122085859 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088515479 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116521541 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086967945 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118788717 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086750502 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111231161 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110205663 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086880561 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.11673819 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.08736705 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113672844 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095020949 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125690569 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087524818 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115155337 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090908896 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.11104586 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093005619 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112164989 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087965266 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113105246 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078021506 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113912714 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088050413 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119075549 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089907318 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.12002439 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089897139 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120560728 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092215916 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117440912 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116883001 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086695136 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074459636 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116441815 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089693687 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114142312 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088237864 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113312887 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087127405 seconds)
done (took 16.975355305 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.08769649 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184174962 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152248548 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142346305 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107269732 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112833007 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122250606 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119113949 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114892234 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144069399 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111007496 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132349585 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148154632 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08719175 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112730138 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091987969 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113362387 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102646888 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146258736 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133251809 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165900299 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087032984 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147907111 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135871648 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121474997 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114879034 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112741614 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092155308 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115716682 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104284433 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132842755 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.11603465 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089102298 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133949322 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105143698 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119663884 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087733052 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119888671 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08775804 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112543453 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14238898 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133241385 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093452347 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117893871 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092074777 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115359782 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090154515 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121434494 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098593339 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116706081 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127389726 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157020444 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090807546 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122039404 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086964989 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123333504 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121494174 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090564502 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11269284 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091041781 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111714032 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091873525 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127209886 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143014608 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091734027 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122074665 seconds)
  done (took 8.637093668 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105245744 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139814013 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106078153 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131703607 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111934863 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088779159 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113716399 seconds)
  done (took 1.745768714 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088369424 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135002902 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112659643 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136972925 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132559515 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.11275978 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123932509 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088954605 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133254277 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090509228 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135081496 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151277078 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.09084029 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12153919 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139055836 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089334486 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.13757445 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089859419 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116875929 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112421878 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117316955 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135820163 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091629663 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113826703 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103443375 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114672529 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162710905 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094229101 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115281887 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092707375 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112076554 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151906391 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103211102 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125480619 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089123075 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130318143 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128328094 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08762551 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126042341 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094918828 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128189401 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091101447 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115849346 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087561946 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118561311 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100115519 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118717974 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.107613448 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117347912 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133673084 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090013726 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127867265 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089854975 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118426963 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.09099683 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120240398 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.09926324 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114214725 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133654756 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090937411 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131041104 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105335955 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128591012 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130627131 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091962122 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128255511 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103797325 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117252127 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09169518 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119011598 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.106194843 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113282648 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.090792789 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.125490152 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116782115 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112721909 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137149572 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091288011 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125917779 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.088943561 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114654387 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114063391 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112958595 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118591471 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089955592 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118553802 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092800527 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112317164 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089273564 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118406612 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.0879216 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11611767 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092339727 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115106352 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092775561 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131735568 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116147427 seconds)
  done (took 11.865838643 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090475686 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.1156513 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092736845 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116295222 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090686651 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115092245 seconds)
  done (took 1.579940997 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117850373 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117877179 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10432684 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120644733 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156600128 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104581615 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130715288 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124072287 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.109648265 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128360274 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129747792 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105268009 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136058585 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121781546 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105675427 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120340547 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129805152 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100703393 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128062893 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097899976 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13852285 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121021758 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098078228 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132508151 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118649127 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095408066 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126092335 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.105027964 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127499471 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124195977 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097143314 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.11841388 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096123129 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123679839 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130036306 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096634539 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12080562 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119551913 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100279498 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117587232 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105130774 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122234864 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126863376 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095025414 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12475552 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121153818 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094827812 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126967911 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104142109 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119639442 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122419825 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096225273 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120950682 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094784411 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124456297 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124121235 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094932071 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130616549 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121936479 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097406605 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119101908 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093666541 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12415909 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118498603 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104945817 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120103222 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121840306 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097738013 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123387358 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095990174 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120491277 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093872816 seconds)
  done (took 9.263229886 seconds)
done (took 34.038245228 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.695874559 seconds)
  done (took 1.655370249 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.813427048 seconds)
  done (took 1.774577864 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.956462095 seconds)
  done (took 17.943849202 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.491684836 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.577241245 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.984351109 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.17976322 seconds)
  done (took 3.193875394 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.949687272 seconds)
  done (took 1.928729162 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283390056 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.236072864 seconds)
  done (took 1.485630808 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.769567872 seconds)
  done (took 1.745166671 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.427990106 seconds)
  done (took 2.392528647 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.32599033 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185458849 seconds)
  done (took 1.488696886 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.551433773 seconds)
  done (took 1.525617206 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.991378538 seconds)
  done (took 10.972998051 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.266749254 seconds)
  done (took 1.255712912 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301609011 seconds)
  done (took 1.281062676 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.495014811 seconds)
  done (took 4.477053753 seconds)
done (took 54.092873595 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099230721 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127106876 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102363977 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124079141 seconds)
  done (took 1.427387534 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101672822 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122282866 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100950894 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120866047 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126903456 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096183727 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123646082 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102108029 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121443155 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096311207 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121422979 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119996182 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099982428 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123853017 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093942931 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124591183 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125011587 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.09613239 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124673291 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097103779 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118829688 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097813247 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124967115 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094872492 seconds)
  done (took 3.657145119 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101316406 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119741445 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097024008 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119049552 seconds)
  done (took 1.423846618 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100703221 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131135945 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105785915 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125663872 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131316842 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106453883 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117158793 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.093093415 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119627599 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100340238 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116705615 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.140792985 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.107100455 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.12476818 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102793179 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113762261 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091386481 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131221221 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124778662 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101555133 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118998945 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099992385 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.116328625 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109499875 seconds)
  done (took 3.712711499 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171720675 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127523033 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139247855 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095223574 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16168664 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.14074843 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089255801 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140518604 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088681503 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131970443 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118406301 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133873046 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130058834 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088544867 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114000356 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088598405 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129507574 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129476322 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09227174 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128233198 seconds)
  done (took 3.429676442 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098880725 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118648336 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089170193 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117154936 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.1006605 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12139279 seconds)
  done (took 1.634440447 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09180956 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115067816 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091798551 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114836433 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094244747 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114858352 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088440547 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115323046 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090143513 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115926522 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090108574 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113405402 seconds)
  done (took 2.223926563 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.506116184 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120694129 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120742766 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090003007 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122187828 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.0901797 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129911255 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092945047 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141998944 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.08888045 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116810454 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.093268698 seconds)
  done (took 2.700551416 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237684387 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126204946 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28362484 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365834649 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15640879 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165421943 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278716055 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161079134 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199113163 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150373491 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231039385 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199293385 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152470455 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191685929 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138756063 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145068267 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190960206 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251591439 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153753316 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212405488 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207891249 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168898495 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181228903 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152195936 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112423649 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193648594 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095770582 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130209468 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235563676 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180490172 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190079651 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16205583 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148873875 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237662855 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249098858 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197118931 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279583936 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134814758 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.166561312 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.144176614 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264857677 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138669546 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235109054 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156891069 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105410053 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222229961 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167667025 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177773621 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.145948501 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139013784 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1985794 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245000794 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194226369 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140153012 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298486816 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148471237 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.159602427 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190135786 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252295951 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227837872 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190038371 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120879215 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188783022 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19190459 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211712383 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152924373 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183763018 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148437905 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184557582 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189607743 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167413374 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204820541 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180380445 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140736771 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172194923 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174707847 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174377101 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26026649 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186503311 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123182752 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171509892 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149576461 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131622172 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169373198 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125686583 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21553866 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144043467 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164161084 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208116672 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159657108 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161861556 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221713024 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184600985 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149379265 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084124648 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154924937 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155671807 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177845703 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140960092 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159090762 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15786149 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131221882 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171541034 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098191372 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212292008 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091797432 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174715397 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211206389 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.10057122 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16395322 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153091977 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151768673 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17850856 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199456476 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141628079 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135033703 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21153613 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179580802 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142226839 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17789823 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231031826 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117937824 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149103032 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228417656 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245120418 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113998406 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228885933 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154567636 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10892869 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134328056 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182066218 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156666346 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161966345 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133449756 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184684879 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232988262 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099887695 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139880261 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195946087 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135847464 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132634499 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156123438 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147390924 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110959882 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.1441174 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.14586796 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17778809 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178681442 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155678324 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168846711 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150527083 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252100473 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14059534 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.1502644 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122171383 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121955953 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193629181 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226947949 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103166673 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234805828 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17185232 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224549469 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169782889 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107932293 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177607487 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131370542 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120614191 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19425982 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168147697 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163368482 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196667754 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222708363 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181506209 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.210643761 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168246185 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17592225 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165953694 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157514925 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111745545 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16136217 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159526092 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123822289 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.140632577 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107777251 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150570095 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14332962 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134054595 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199367096 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17053592 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217568812 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159416267 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148855989 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181019614 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102154416 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20475162 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.181174207 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145779199 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199213005 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19339614 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214206143 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117526543 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229769471 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120525563 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100226234 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142317245 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171019406 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134399821 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108578158 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16272933 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20774303 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182542956 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173456029 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232791413 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176631305 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193168485 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094624107 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16905218 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183806468 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204368479 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155012882 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138953201 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152309914 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179399117 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156061767 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257094473 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168858192 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176943161 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234477774 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123759342 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13289678 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151055437 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178835952 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15439791 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175187572 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148140385 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140022862 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161869471 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103402907 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18904719 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186425136 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165784624 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186964663 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.14982348 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213473041 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101743063 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162114915 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161475584 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166277679 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108980304 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176348432 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202524836 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147934087 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167048427 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215667945 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105003901 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308089061 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236493564 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194974843 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138581162 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155464475 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162695555 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164001433 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171504458 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179824806 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159855496 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189038671 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15910167 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137313289 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140460965 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150312094 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125501777 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133423545 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149209737 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178563247 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138623116 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189560649 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155781332 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161575825 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172418573 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151250863 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144048062 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150995223 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218017004 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183911961 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241784614 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151597698 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179639286 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207228055 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126744124 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131341169 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106675057 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178758941 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136777452 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22009066 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.18885069 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200777373 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208528728 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179338552 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139546947 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.094450576 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159790196 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170431408 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229144373 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149281325 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.122240219 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231910376 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.108763992 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133100928 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167702812 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289162817 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145258158 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221989666 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080874941 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.28015759 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127380036 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105388832 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16387129 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235732574 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135967218 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.152563607 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166926498 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162355284 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164201064 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149604017 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217938077 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211164575 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227534074 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185114531 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104762508 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157287791 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203875767 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194478084 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157755702 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138899856 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208501615 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195621292 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224431327 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142750733 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169957752 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168142225 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158743338 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188707388 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135631883 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208964974 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135370611 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192617984 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153891364 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139507042 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17759056 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.214900924 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113937831 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216529316 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1845208 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135908883 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106271337 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193600643 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180249692 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154862277 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100041803 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21078816 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098378951 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220885716 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235545071 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135369255 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156594902 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146841866 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108938324 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155619369 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158382908 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13949577 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.165194472 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203555609 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135650446 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191029515 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231905185 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172649162 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17377542 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146807722 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.6940452 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131398429 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195616283 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14835296 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205978491 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152565726 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173659148 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160464333 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170077297 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224560769 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161045958 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23142907 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193197508 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179091203 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134001924 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158016688 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155847162 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145295338 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155417462 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168912198 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162201323 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.146191843 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180950958 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164953146 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.13438128 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112637287 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227643483 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120682173 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214153477 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181997173 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111525935 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200863601 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187501852 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133484858 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.18185012 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23842211 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114938142 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149915577 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13544596 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151689183 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260778415 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097055785 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219145256 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186383115 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161239511 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169462865 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148274982 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192528288 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158028095 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213096168 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116557281 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159309542 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157283289 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139298395 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130439499 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155927331 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17037333 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.122244205 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188390994 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139006259 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194529931 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125856142 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145508952 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284184171 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177279839 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245946554 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107506796 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137027435 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165541153 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150976417 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177730778 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178682739 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13674853 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136005865 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136748776 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129159163 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111880811 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155180343 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192893707 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193805947 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208174584 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137252528 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277916684 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112681106 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15707832 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115088318 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105895805 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150160051 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147334471 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156805336 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193674469 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262898597 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148186839 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.133081369 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150120313 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.099499497 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136903323 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163770575 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166100197 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181675707 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144922267 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081705437 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157181398 seconds)
  done (took 82.740660251 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162654029 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131813606 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147614016 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20485796 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176713551 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270773958 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209433081 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253818986 seconds)
  done (took 2.636297015 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.0934418 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145819066 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157351477 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133640142 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091610823 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.12022426 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.343314016 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133281209 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116472354 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121850525 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173707255 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094448693 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.548181213 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090947606 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.11966712 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107605274 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091752327 seconds)
  done (took 3.755492057 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.103452503 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.492279464 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.98470624 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195000599 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158388728 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.118150249 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.706057927 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094917559 seconds)
  done (took 11.931812047 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.11649554 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136413916 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.124057999 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152931016 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141251171 seconds)
  done (took 1.761151596 seconds)
done (took 124.013163357 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098181223 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128673983 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097511266 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131383699 seconds)
  done (took 1.525976425 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095139603 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071376217 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101023625 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074891925 seconds)
  done (took 1.421022057 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.190244046 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.167926496 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.384318302 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072033003 seconds)
  done (took 1.568316699 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114980676 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132466394 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104126035 seconds)
  done (took 1.443167399 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106480727 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129991492 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103575174 seconds)
  done (took 1.428442633 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106181434 seconds)
  done (took 1.194545351 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108532134 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136953292 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108920107 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136072602 seconds)
  done (took 1.579258648 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.09816611 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126576073 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109568359 seconds)
  done (took 1.421341154 seconds)
done (took 13.021534036 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10343079 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.416941328 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412557458 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110541561 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72219688 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381006382 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.067444718 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146484632 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165715716 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094093945 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139096637 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672224336 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.019932221 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.372383285 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.97961967 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.369801364 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676217586 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122021682 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091650394 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122462951 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.052670719 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092688078 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122427127 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092712018 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702135044 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.397308751 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122745056 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.369473939 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093238997 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125912759 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382800807 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123604611 seconds)
  done (took 16.939165736 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095249792 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173408619 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09887093 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12325822 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124446483 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095300694 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124048893 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093876232 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179805378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122635828 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111584188 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122039957 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124810127 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095226527 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143310621 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092825275 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125460179 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093315151 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121855033 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093902117 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140020642 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120118901 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094690869 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121138474 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094762208 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134937413 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094589629 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121376872 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120355102 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099219058 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127009329 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093634119 seconds)
  done (took 4.810032001 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140090627 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18202637 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127817514 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126813292 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168897366 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124099835 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198634511 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118121467 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182888216 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123449593 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139246762 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092933858 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157149809 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121618476 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114774242 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121961954 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097230377 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122601966 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092537162 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124071716 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138883917 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093032928 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121822079 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093500178 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122514084 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10845623 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124462857 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121667343 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094247427 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126762559 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099754127 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124821831 seconds)
  done (took 5.144817389 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097903423 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125832337 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110114259 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138405712 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094914498 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12543271 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09744524 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123962806 seconds)
  done (took 2.010176836 seconds)
done (took 29.993319368 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110746481 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126854293 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107598045 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134885527 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102363039 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131785715 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091215802 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133345843 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133518109 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102323926 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136776077 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093439719 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122157836 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09215925 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135605691 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09843045 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132782499 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102656305 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133719034 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131970825 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095387421 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132863007 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102960065 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132801904 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104444537 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133821649 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136563028 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099200742 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122162683 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095098281 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123882487 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104341399 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124063957 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105050457 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126921941 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096903894 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123602405 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094063298 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132568516 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132222836 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099721563 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132510232 seconds)
  done (took 5.993743027 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107554648 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138717951 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104685797 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08100803 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117252659 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080378533 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137867634 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078452867 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109860925 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107727897 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074173278 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106773908 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07804599 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100904639 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077646829 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075446763 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108457622 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075812186 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076229708 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105699298 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08056935 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072746982 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108363142 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078703098 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07490691 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109725669 seconds)
  done (took 3.57137355 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100706005 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134499492 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113902571 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184164579 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160689772 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100505369 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131365991 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140084668 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10922357 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119603853 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096471164 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.14907359 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11096686 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129400454 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091795131 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136775705 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135406924 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094233825 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127869991 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111561038 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138757294 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102428462 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141352848 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133087056 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092470626 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123208815 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098149545 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134291207 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098541053 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132060889 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097115776 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125779479 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123076041 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106062753 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12752499 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095261291 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142584798 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102757663 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131581466 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.121044069 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101230925 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121865119 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114083473 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162022247 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092007966 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129237 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124107749 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104275879 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121535707 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112951557 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132193785 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092304235 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126393723 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091743037 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121638808 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107101029 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.12440013 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095362404 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132011313 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126253826 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106367487 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124707969 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109678436 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121859008 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100009831 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122468094 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093301729 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120897386 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142757668 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09524538 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161395338 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093855256 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123771404 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102014709 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130869124 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128283176 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093607813 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137569393 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102723277 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126142589 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102409753 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126100875 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095470061 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.14032013 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123110858 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095717511 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122671162 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099671802 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123768419 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094732127 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136003703 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092001948 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125934467 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110606986 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121454707 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122611755 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100356096 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126927257 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092527737 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135341251 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098867222 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124016276 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131349546 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09358578 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124565977 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103022169 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126289122 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091998954 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126678819 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099770628 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123605104 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093870397 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12554895 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094305536 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132193035 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129140513 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098312529 seconds)
  done (took 14.832824729 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227956559 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214968582 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.235711573 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.264240355 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135812314 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114696255 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.244966736 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125309085 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124787278 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160067201 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172031882 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181281092 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170167935 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181690844 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170146198 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093223905 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143095198 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165083822 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214229775 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.257030943 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144140788 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.103450495 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161332164 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159529495 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137598604 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132761962 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110421983 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134929581 seconds)
  done (took 5.802125083 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108872529 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155674594 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098951816 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145830879 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149097271 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09284396 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128124965 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094177169 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135453121 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136512757 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093282693 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129486878 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100068412 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132580263 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123350653 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103623786 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132053318 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095410768 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126376493 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097418264 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133715963 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101628425 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127732116 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121513109 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103862971 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122745634 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087077953 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143708189 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123072771 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116816633 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121773317 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102222098 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137701013 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094309693 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123717063 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095596047 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126585476 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095752577 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125660827 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091735772 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122787541 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077701463 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122981321 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137202844 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101124996 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08080269 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.13070073 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129010311 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095210709 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120490913 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097122215 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125829791 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097166435 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130612488 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096772634 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124809957 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09705474 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116035283 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100667694 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124850764 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084891415 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121062526 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098966979 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118581549 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102013379 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129061974 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092701251 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125828735 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097761639 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129846557 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095139217 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129897958 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091597294 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125603534 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096066589 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128997168 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126204805 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093558229 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122511325 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094199241 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075348423 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123703164 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074272105 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127338639 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091528279 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123431387 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096045327 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130741628 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139000878 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095916048 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132429669 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093721848 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123190347 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096536919 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113730099 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096878452 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.1405833 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142244459 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094353032 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122793522 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108083496 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127204645 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092917371 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106951278 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102680143 seconds)
  done (took 13.005156078 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13137415 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154259091 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125092183 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.11366186 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15748045 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157966855 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101245367 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132211026 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095794619 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143121508 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.095300813 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132483982 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09419495 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138635555 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15734801 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104394532 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126307686 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108442095 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128680523 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170006288 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112252196 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143072031 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110314921 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124676448 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129237758 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111048224 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161649246 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107933843 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137384134 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142683557 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108819882 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161002647 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.14351061 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099178117 seconds)
  done (took 5.497837083 seconds)
done (took 49.800703139 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.221783875 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.415268399 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.193346349 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.06711499 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.266695494 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.217397553 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.222410288 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.193656907 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.863690189 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.193135367 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.435278506 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.717443895 seconds)
done (took 60.127820012 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.239822154 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.350865273 seconds)
    (2/2) benchmarking "String"...
    done (took 1.503168602 seconds)
  done (took 3.97706609 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.765225655 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.125402656 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.451837226 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.193012933 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.193701977 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.481547272 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.904635823 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.558422081 seconds)
  done (took 28.027676831 seconds)
done (took 42.131953906 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.20068242 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.219655341 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.222361447 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.174848785 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.305542496 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.233911471 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.513311827 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.215023531 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.218438239 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.177952106 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.214884705 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.194813358 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.218412655 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.537743043 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.210417227 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.197921091 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.269649236 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.683466407 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.598817611 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.20612979 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.23100756 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.218418498 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.226521461 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.212289178 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.26683572 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.200071972 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.197562145 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.195675712 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.724844458 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.198067535 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.206291179 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.696927388 seconds)
  done (took 190.508926589 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.19560012 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.371236491 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.41295931 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.23083829 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.673562074 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.401624476 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.345891029 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.757593448 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.215686923 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.205075978 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.441346843 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.200264946 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.520410496 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.169596806 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.227665762 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.258035131 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.413903808 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.520146627 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.237302323 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.354710343 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.214574857 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.483217355 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.552780856 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.398831381 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.21721594 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.238365414 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.209038056 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.219384722 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.390119224 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.35470348 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.25265726 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.23832159 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.825947998 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.050907098 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.205770229 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.227822948 seconds)
  done (took 150.355981676 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.595368545 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.19860232 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.196296883 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197875398 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.230714462 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.198756548 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.771315133 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.778939861 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.711219591 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.659194402 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.573435744 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.48483857 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.20119409 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.292608876 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.212204361 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.201594622 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.214901242 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.241953893 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199354285 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200103157 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.778358383 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.214746708 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.337192097 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.377730195 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.215090223 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232410564 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.590154758 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199194821 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.231243457 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.416109962 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.531590589 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.247903344 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199316786 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.589571662 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315888863 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.202231838 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232348074 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.200452432 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.480181771 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200496697 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.20010929 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.203368927 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.201005147 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.889986717 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.203548384 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.201068489 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.77592201 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.150512426 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.200929527 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.200719504 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200284225 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.600878052 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.886802584 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.220424659 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.200180241 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.203703078 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.200691801 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200953092 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.233928145 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.566584454 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.297663013 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.218615103 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.206115668 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233518028 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.201175698 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.378970115 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221179126 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.414643015 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.256383521 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.423228486 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.783001363 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206166682 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300766309 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322141931 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.201410722 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.201849965 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.20182613 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.202133157 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.313176877 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.201819414 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.614365542 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.378160277 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.219201807 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.589380595 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.302525949 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.201688244 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.62477488 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.206443848 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.202690062 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.952318742 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300129444 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.202840643 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.203810257 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.202466148 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.617831292 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.782474467 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.468142972 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.207067591 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.662058857 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.207216283 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.632875431 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.758655185 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.899220715 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.208449899 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316019889 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.37975365 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.220437945 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.203086629 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.586610253 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.207239945 seconds)
    (111/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.204046487 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.26135795 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.2073133 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.20317024 seconds)
  done (took 366.244753625 seconds)
done (took 708.230785673 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.792450276 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.790249243 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.899265735 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.781621557 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.749056638 seconds)
  done (took 10.141016924 seconds)
done (took 11.271300803 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.389338107 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.388899711 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263642916 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.391071652 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.235751595 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.406689704 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.369707113 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.225450098 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.304127482 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.285040449 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.304267209 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.256816493 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238647088 seconds)
  done (took 18.188928176 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.558132806 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.52717412 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268784928 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.528004107 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245853622 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.518366726 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403869581 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.418307821 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.441191073 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.238665091 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218235539 seconds)
  done (took 16.497893631 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.519857485 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.520712095 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272535841 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.520630215 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246074738 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.531142643 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.406388808 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.419292857 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.420381385 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.240395035 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.219083891 seconds)
  done (took 16.447742098 seconds)
done (took 52.264979701 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.214929768 seconds)
  done (took 2.345166418 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.250693168 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.412076508 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.230904787 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.225389237 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.216010258 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.216481277 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.224605265 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.216985796 seconds)
  done (took 11.125946216 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.215056819 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.212268611 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.213976401 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.211623889 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.211809011 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.213245438 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.21263463 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.215222952 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.212431979 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.215084585 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.215276884 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.212272308 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.215275245 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.21521988 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.214685566 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.211986356 seconds)
  done (took 20.550875685 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.215408781 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.212897599 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.212587054 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.213959892 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.212998671 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.212817725 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.21420417 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.212550152 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.21388426 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.213283317 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.212988434 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.213738668 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.213501707 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.21321393 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.214418443 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.214862581 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.213817198 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.21347064 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.217930996 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.214061746 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.214009255 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.214340937 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.215287934 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.214760996 seconds)
  done (took 30.269706753 seconds)
done (took 65.424519819 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.859590903 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.906951932 seconds)
  done (took 6.8988752 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.215796389 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.216139257 seconds)
  done (took 3.567321034 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.216464362 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.217401487 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.21631287 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.216922194 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.217134141 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.216553081 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.217546933 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.21606918 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.215848366 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.217171875 seconds)
  done (took 13.300863491 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.216764684 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.21636479 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.214963523 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.21671222 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.216445763 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.215003093 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.216232478 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.217314669 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.217734932 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.21483093 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.217955889 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.215996501 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.217568943 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.215586057 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.217531502 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.21631222 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.215280011 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.215766494 seconds)
  done (took 23.028899372 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.217977786 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.21834161 seconds)
  done (took 3.572443758 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.217092782 seconds)
    (2/7) benchmarking "second"...
    done (took 1.216072601 seconds)
    (3/7) benchmarking "month"...
    done (took 1.215610218 seconds)
    (4/7) benchmarking "year"...
    done (took 1.215712817 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.216194745 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.216714144 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.21667125 seconds)
  done (took 9.649432381 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.218961356 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.390854991 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.494576255 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.800601773 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.219602341 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.221592371 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.06868091 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.222640984 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.22504739 seconds)
  done (took 13.998876913 seconds)
done (took 75.152216835 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.245964092 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.229059272 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.451430109 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.232064912 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.22782729 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.556268146 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.274073257 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.341120062 seconds)
done (took 37.696300462 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.232466705 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.202572985 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.994409699 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.210211699 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.280161846 seconds)
  done (took 18.824743344 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.276718214 seconds)
    (2/2) benchmarking "read"...
    done (took 1.553095833 seconds)
  done (took 4.967218959 seconds)
done (took 31.162367608 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220300282 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.218762409 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.221349069 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.219068246 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.221890774 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.218405084 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.218820163 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.220479332 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.220730444 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.220932071 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.221037104 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220714909 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.220385486 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218485542 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218633814 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220750851 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.221428087 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.219458311 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217967409 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21844761 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220538922 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.218466491 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.21819348 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.218578429 seconds)
  done (took 30.412308637 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.222004509 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.222246511 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.221391891 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.221989756 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.219675519 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.221398094 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.222453546 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.219709112 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.221873418 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.221842954 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219909455 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.22066695 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.222332035 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.220024902 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222230473 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.220168286 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.222283711 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220033167 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223057658 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.221015693 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.222844807 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221233741 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.2211039 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222384081 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.220807795 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220805875 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.222314073 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.22117233 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224118274 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.220710996 seconds)
  done (took 37.783242839 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.227529802 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.22992978 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.223581026 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.224109919 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.224027876 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.224656542 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.223596704 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.223602583 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.22389459 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.224722768 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.224597184 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.22459979 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.224662306 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.223969043 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.224349592 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.223882694 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.224848315 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.224765951 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.22559309 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.224508413 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.224585213 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.225435946 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.22462134 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.224862069 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.225193739 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.224971537 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.224849343 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.22491748 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.224239769 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.22469387 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.224438687 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.225291914 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.225453738 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.225108892 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.225641543 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.225612397 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.23101843 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.232819503 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.225623537 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.225451934 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.22501642 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.225533577 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.225825859 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.226839372 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.226161606 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.225983782 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.22614794 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.225657597 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.226730461 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.225607455 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.226702357 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.226225672 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.226457012 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.226885059 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.226366583 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.226926637 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.226757242 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.226533151 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.22666486 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.228202242 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.227328641 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.227540962 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.227279362 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.227023521 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.228275073 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.22790735 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.227771663 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.227122846 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.228364733 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.227910624 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.227847654 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.227036561 seconds)
  done (took 89.411388562 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.22701105 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.225152781 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.22530611 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.226118209 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225844857 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.229130917 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.226217523 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227953832 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225535812 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.22794798 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229617402 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.226586252 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225842866 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.228738918 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227582837 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.226049148 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.228396016 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226332296 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.229275691 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.229268924 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229269818 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.226369939 seconds)
  done (took 28.144332379 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22942978 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.231246187 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.227893219 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.229333008 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227031264 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.2304836 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.229923018 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232486185 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22913389 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22778882 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227555092 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229527885 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.227919277 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228369215 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227020418 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229306665 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229830255 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.229342036 seconds)
  done (took 23.269639786 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.227961076 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.227714927 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.230208552 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.227898225 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.228956919 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.230548733 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228023732 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.230831646 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.230648273 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.228150824 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.230728009 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231308549 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.231173859 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228610159 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23174208 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.228523819 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.231070014 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228734823 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231108266 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228531076 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.229311914 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231682215 seconds)
  done (took 28.201306123 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231588105 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.231744604 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.229603226 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.230815626 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.229664073 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.231569876 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.231884394 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.229233189 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.232794495 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.232730472 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229938815 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.232518999 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.230594607 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.229866115 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.230394869 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229969902 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.232540646 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.231242309 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232272433 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.23046624 seconds)
  done (took 25.768825714 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.233618424 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23343385 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.233407336 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.233989046 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233615755 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.234378303 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234631871 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.234590984 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.233842883 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.234959628 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.234131857 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.234396249 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234921445 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.234765237 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235336853 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235230447 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234307803 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234937052 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.235114288 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235362012 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.235676487 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.236140698 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.236014128 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.236624999 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236787645 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.236150491 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235394788 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.23517851 seconds)
  done (took 35.727431948 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235489976 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235257152 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.232376843 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.232518844 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.232094418 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.233242701 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.231874546 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.23219486 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.235698048 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233727647 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.236277126 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.236080954 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236405099 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.235284634 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.236311351 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.235380661 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236643389 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.23250317 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234254944 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235509183 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.236727414 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235752393 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.236306012 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.233435992 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2341106 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.236132439 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233689561 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.233648323 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237156098 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233990156 seconds)
  done (took 38.192412023 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.255441751 seconds)
    (2/2) benchmarking "in"...
    done (took 1.254101394 seconds)
  done (took 3.662130332 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.23414165 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237344796 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.23735873 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.234501415 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.235524291 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.237144846 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.237547461 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234807594 seconds)
  done (took 11.04170451 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.236927623 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.238994879 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.238320501 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.238124253 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.238496384 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.237850422 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246649216 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.257729491 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.238877303 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.239683192 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.245171219 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.245885751 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.241066139 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237904361 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.237430646 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239214884 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.238568249 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.238295786 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.240056641 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.239742488 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240008056 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242634195 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241259875 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.236909199 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.241717876 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.249543003 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.263130452 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.239732326 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.239078236 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.242614841 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.239322636 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.237573232 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.240364364 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.240346391 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.240090667 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.240048584 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249781188 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258395389 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.246284425 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261312174 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244004262 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.238585052 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.241071992 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.241904977 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241677776 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.240540607 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.240401125 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.237515619 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.240463378 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.244169638 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.245917526 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240820981 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.239548875 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243491281 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.241227351 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24709963 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.26107734 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.245435376 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.250113436 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.252152878 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.27392375 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.267116179 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243429267 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.2420577 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252478171 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.264691709 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250399591 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.258976966 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.240062609 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.243079742 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.248821319 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27507325 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.268258611 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.244104579 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244094993 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.243062779 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244879089 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24447645 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250465383 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.264666349 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.24279104 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243414829 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25350897 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269862303 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.24235922 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.24274543 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.243743614 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.243184233 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.244375067 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254565753 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.263797048 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.243240076 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.243039634 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.244949461 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.24425798 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.245170997 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.242995546 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244806934 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.242076989 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.24516451 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245622606 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248130263 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.252905592 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245506739 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246217474 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.251274759 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.266017565 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245753436 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.251083147 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.244732439 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245945652 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.246620383 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.251111464 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.242004308 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248340484 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.253189186 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.245656554 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.247391984 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.24720242 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.247505136 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256029916 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.271937054 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.247172379 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.248001799 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.251615563 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.258894582 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247229652 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.248803973 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.246976931 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.244325157 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.243884373 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.24793065 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.247286157 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.245913245 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247785427 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24724524 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.244678254 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.246875269 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.247216608 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.248547673 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.248569785 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.247138336 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.249214008 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.249706868 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.248047137 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.248313874 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.252975529 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.266981656 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.249610538 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.247312877 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.246164499 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248013542 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.24950827 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.247893987 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.248166036 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248827824 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.248761652 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.248338861 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249028053 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.249076343 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248606429 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.248970554 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252609896 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.249703694 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.25160211 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.247919501 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.246901215 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.248593077 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.249747963 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.248403244 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.25063943 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.248829193 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.25146273 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.255933958 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.25027127 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.248503371 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.252694855 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249384702 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249842434 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249885738 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.253173313 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.257686145 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.25002972 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.255603698 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.27016548 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.250173896 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.250354254 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.250902746 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.251068353 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25127413 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.253620019 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.258221504 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262010805 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276138908 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.253821019 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.255719938 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.251982847 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.255400903 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.253291774 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.25166653 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.251561504 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251794361 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251396533 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25218811 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.252232473 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.250998737 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.250897124 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.252832931 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.251318084 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.25327212 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251988859 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.252454786 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251809601 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.249629775 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.251856346 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25186783 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.252425423 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.249564875 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.251090741 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.252903746 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.253336635 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.253599243 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.257595981 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.250099396 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254351539 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254004389 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.253469268 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.252595896 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.254729215 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254839357 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.252954858 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260897734 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.2733125 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.253568577 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25976946 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.271930716 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.252288364 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.25638374 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.254568297 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.252270708 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.256381247 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.260923173 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.253757579 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.254477291 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.254561348 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254196728 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254766418 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.259921744 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.272741306 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.253780562 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.255210342 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.255756635 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.251525584 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.255732659 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.254986706 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.254029394 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255965973 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255119248 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.255704414 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259227034 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.258210802 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.259737507 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.259839453 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262242048 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.265846649 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.261112436 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.254594576 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.25762221 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.257283393 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.259637326 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.255706593 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.257009216 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.255768409 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.268860721 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.282028033 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261824125 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.276803274 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.257799027 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263291256 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.276635002 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.259884742 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257006943 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257431345 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.255996739 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.257094019 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.254115553 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256929255 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.256740576 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258656976 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.257496478 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.261976818 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.257580524 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.257471216 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.257149882 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.25798443 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.25744544 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.256361197 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.25871809 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.259040001 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259241531 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.256239472 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.257698737 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265857673 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277729488 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.259034372 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.258196461 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.257583323 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.257274738 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.258887304 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.259003811 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.26105839 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.265063408 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.261065449 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.267687237 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.26006966 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267850387 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.259706096 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.26247196 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.266398155 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.255837286 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.257133475 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.25909405 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.25895604 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266703889 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.279986324 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.259798483 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.26312324 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259589314 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.259580753 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.259777785 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.260382193 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259624593 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.258957274 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269108686 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.279793162 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.263204885 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261626925 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.257543842 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.259633815 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.260754532 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.259140101 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262392865 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.260937726 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.260720867 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.260123833 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.260388626 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.261437569 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.261949532 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.26231925 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.25813032 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.260792348 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268741257 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.28230379 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266254674 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.262071753 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.268303134 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.281688821 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26935131 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.282318148 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.262070744 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.262683555 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.262301604 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.262879284 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.261442719 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.263787967 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.262809087 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.262194837 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.267100837 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.26358061 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.263876063 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.264163583 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.262224459 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.262354404 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272233622 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.287139916 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.265026729 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.266287271 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.260413585 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.264511189 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.268044077 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.262865 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.262348353 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.266032509 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273607811 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270969704 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.262651175 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.263960094 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263470845 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263192842 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.263823323 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.264053808 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.263757996 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.263834521 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.263570464 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.264483806 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26681999 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.264452579 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.264833702 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265878032 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.265243283 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.273426173 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.28532376 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.265526747 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265243627 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.264985378 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.265483693 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.265481506 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.265323822 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266318052 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266938857 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.267092169 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270947324 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.270039422 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.267723885 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.264272658 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.265153376 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.26515788 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.265721346 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266958684 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.26587027 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265763201 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.266264773 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.266363589 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.265774132 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.264549583 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.266084156 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.265497354 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266871976 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269262813 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.272560404 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266201498 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.264540888 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.267032892 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267162026 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.265325404 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.266542839 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.274148759 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290750508 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.27779875 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.274642888 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.27065366 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.266015711 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269672791 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.274386211 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.265312946 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.267523438 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.267602731 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.26772902 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.267601767 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.270082725 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268238289 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.274046961 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.289122059 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.267602191 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277122869 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.28714646 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268176275 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.268562924 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.271578447 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.267269782 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.266241778 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.269662062 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.267609637 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276045957 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.289591798 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.269460284 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269289117 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.267646818 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.270309449 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.272416449 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26896506 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.269314019 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.266239035 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.27000769 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269839631 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269931931 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.266089364 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.268242945 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.268614873 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.273376916 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.275818672 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.267937495 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272488549 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.270398401 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.26993988 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270446715 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271068578 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.267670195 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.267900742 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.269102436 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269934707 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.269974047 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.272771519 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.269246383 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.271539292 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.272229186 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270706387 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274009445 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.280329462 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.277492989 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.268164107 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.269577882 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.270738038 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.272804561 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271555158 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.272071676 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.271263123 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.271709519 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.271304633 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272088081 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.272627587 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.276062319 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28824527 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.291543329 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272266082 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.271419012 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273938921 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.272207729 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.268919539 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.271302179 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.273642876 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.274276296 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.278934572 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.272036563 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277883248 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.291423242 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.273161464 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.276804997 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.275284159 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.279261188 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.274457687 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27283248 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.273199924 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.27701316 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.288375234 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273068973 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28311114 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.302334491 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.292806458 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.273892827 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.274705667 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271989246 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.273597086 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.274855081 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.274678732 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.274908566 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274868813 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.273512853 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.275129731 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278949334 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.275290159 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.275519372 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.275203 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.273109698 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.274034432 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.271692444 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.274027553 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.274782318 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.275316619 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.274284357 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.274161241 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.273430275 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286073334 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.300862049 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.27494245 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.274913801 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.272129725 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.278710021 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.277633352 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283629955 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.282793957 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.275670442 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.275976159 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.276869726 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275884017 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.274477867 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.276800375 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.274662044 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274255026 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.273198274 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.287157202 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.30350616 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.280672973 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.274011191 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.277512844 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.276566898 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276410684 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277514577 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277420934 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.276233435 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.278543795 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.281285977 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.277997006 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.277300612 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.279578073 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.28509609 seconds)
  done (took 752.517192204 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.27502168 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274654379 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274957173 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.275649807 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27639664 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275236497 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275797973 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275806233 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.274432278 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.274878792 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.274719218 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27619543 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275329187 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275902265 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275463862 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.275756759 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275908143 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.275312636 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275890684 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275962295 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.275148826 seconds)
  done (took 27.974557547 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.278644374 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.275426976 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276096022 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278297783 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.275949379 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.279706959 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.276286653 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278519579 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278967232 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276908416 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.278899584 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279034828 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.277375285 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.278334514 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277043105 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279355382 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.279725687 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276833562 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.279395516 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278169328 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279424357 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.277425385 seconds)
  done (took 29.306834129 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.279875201 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.280205791 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.278741857 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.277238374 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.280309212 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.277171812 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.279659876 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.280277588 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.280321247 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.281500903 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.27889608 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.280893292 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.285918362 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.285025737 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.282869215 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.28058037 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.42486598 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.281596849 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.282033152 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.280541486 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.27851206 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.28684089 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.301000807 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.278630209 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.281096835 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.281862409 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.281189841 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.281145667 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.282227123 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.282103911 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.284666115 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.281189596 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.281159873 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.282894891 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.280792098 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.282311615 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.285834215 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.282886584 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.279391446 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.281853456 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.291567347 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.302575259 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.283631239 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.288210297 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.303356398 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.282298992 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.28528712 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.290307168 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.279822221 seconds)
  done (took 64.217038929 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.282153272 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.282662285 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.280260105 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.283290016 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.282294819 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.282913563 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.283273757 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.283288411 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.28089924 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.280503977 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.2831596 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.281532089 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280953289 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.282800158 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.284472038 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.280778077 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.281669631 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281195075 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.281609447 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.280514176 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.281643525 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.284375198 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.283795725 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.281500342 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282991537 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281809426 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.281395625 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.284701055 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.282445926 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.281438047 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.28415397 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.285341935 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.284933264 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.28215156 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.282454598 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.285078139 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.285876992 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.282362535 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.28488088 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.282855879 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.284689595 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.285522619 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.286081938 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.286188491 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.282629097 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.283341663 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282797588 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.283350981 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.284392317 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.287387549 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.286858535 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.28414118 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.285614193 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.285251422 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.28618138 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.286489838 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.284348599 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.284939337 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.286159635 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.283344895 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.283678861 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286842566 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.285216476 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.287178782 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.287247321 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.284572337 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.284966156 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.287529747 seconds)
  done (took 88.489874284 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286801809 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.287004078 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286282743 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286552952 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.286309669 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.287085987 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.286870267 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.287388333 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.287525333 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.288019883 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287567405 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286578529 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.287440349 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287370935 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287892781 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.287825578 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.28727746 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288641731 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.287511584 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28718369 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.288189937 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.287892141 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.287692416 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.288986777 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.288600321 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288881474 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28826768 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.288957541 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289775015 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.290994303 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.289742484 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.289143909 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.288673251 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287774034 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.288372982 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.288240566 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287738328 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287595763 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.288448644 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.28940556 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.288236273 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.289154292 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.289159521 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.289386363 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.290212457 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.290126931 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.288459326 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.289549093 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.290355683 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.290067862 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.289047493 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289938485 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289457889 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290440879 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.28959005 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.290459928 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29122856 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29056621 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289760729 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.290031866 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290463554 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.291165831 seconds)
  done (took 81.096170503 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290640714 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.29222817 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.290506763 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.288934399 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.292421216 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.289267965 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.291457733 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.292931101 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.291766798 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.292362622 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292303282 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289377523 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288846738 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291627614 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.288033928 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288821251 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.288992489 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.289303489 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291731345 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.289286809 seconds)
  done (took 27.014300069 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.289045243 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.291830422 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.290934241 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.290110496 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.292554788 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.289948123 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.292725208 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292246341 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29056283 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292408611 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.292337062 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29293605 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290953507 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291079786 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.2943562 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.290650793 seconds)
  done (took 21.86898644 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.290279359 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.292909823 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.291701187 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.292741795 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.291124891 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.290921467 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.292920413 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.291834639 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.290875491 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.293473421 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.293676249 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.294304846 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.294185206 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.292904163 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.29088595 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.295089648 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.290781936 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.291982313 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.294652134 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.294431946 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.291203245 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.2921372 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.294955312 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.294756348 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.292109055 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.293243286 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.293073319 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.291596119 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.292416787 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.295498362 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.291921261 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.293883311 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.292454889 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.292996773 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.294897747 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.292668733 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.295176451 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.29495269 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.295044443 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.296152701 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.296166355 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.292724731 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.295457835 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.296985995 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.294347083 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.296637014 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.293978005 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.296467695 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.293962879 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.293511267 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.296547289 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.29656422 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.296353666 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.296902627 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.297051337 seconds)
  done (took 72.363223584 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297209287 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.298150534 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.29417517 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.297038941 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.298094457 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.295786687 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.296894425 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.296849352 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29491468 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.297561917 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295371729 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.29923964 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294865776 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.297194466 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.295016912 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297995533 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.294443412 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.294978822 seconds)
  done (took 24.544249355 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.294523274 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.295432163 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.298108412 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.295862997 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.294311446 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.298581004 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.295828398 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.297649373 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298094922 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.295969208 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295377251 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.298387921 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299056702 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.298831088 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.296291972 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295924301 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.300033909 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298381485 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.296558328 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295920849 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.300503779 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298523857 seconds)
  done (took 29.746778686 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.297341043 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.297294069 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.29823689 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.314151564 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.316029466 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.321434683 seconds)
  done (took 9.054548018 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305485122 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300395125 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.297321467 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301406004 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299800121 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297705017 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296797206 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296982351 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299512843 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299004768 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297776087 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3000279 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299708302 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298082351 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300488482 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300645029 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29777832 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298304668 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298831594 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301091822 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298650987 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300986192 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298542863 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299167694 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298848213 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299387462 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301246173 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299092273 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298517223 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300957013 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300822219 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299197949 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301762177 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299364328 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301614502 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30219538 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298775886 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301979663 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301222797 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299268752 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.301298513 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301800701 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30336308 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299762945 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301768339 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300079174 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299228606 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300083319 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299887582 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301982788 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30247643 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300442184 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303282215 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302950517 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302769684 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303296617 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301444934 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300041873 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303512166 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301344438 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30051751 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303258894 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301459335 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301734594 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30360502 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301004476 seconds)
  done (took 87.065492335 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30082138 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300929392 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301103515 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302931701 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301809497 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300960878 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301260031 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300738033 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301944639 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302051487 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304124769 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301810729 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301146265 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301937741 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302541388 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301780786 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304456341 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301304686 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305540629 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309150528 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302894215 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302353324 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302933649 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302419233 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303909307 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306216504 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30269449 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303468032 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302840955 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301846964 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303863153 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303216282 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302681372 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303413454 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303283247 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302288578 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302120454 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303061965 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302867979 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305854669 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303284693 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305636791 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303970973 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303297596 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304003013 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303496295 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302875849 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304196534 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304419718 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303607343 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303847774 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30431995 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304231687 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304309143 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304677761 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303772565 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30470893 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304361548 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303861377 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306750039 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304792419 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305465905 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307914416 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30551583 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304313954 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305655643 seconds)
  done (took 87.245401619 seconds)
done (took 1755.25836133 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.471399689 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.422516355 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.305370985 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.335225179 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.306182707 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.329087376 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.305213987 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.305051289 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.304942364 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.305077923 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.305826119 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.542479049 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.310818048 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.306845477 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.305798904 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.400170882 seconds)
  done (took 42.78063622 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.33483601 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.312233779 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.430770397 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.33079324 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.335517899 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.505763049 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.36931426 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.310751079 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.491971709 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.356226586 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.962694545 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.336084421 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.311312072 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.487159611 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.330523563 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.504031536 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.571383966 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.968456667 seconds)
  done (took 30.472072526 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.795345407 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.341231502 seconds)
  done (took 9.356609817 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.330305295 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.312137043 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.310835502 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.310310493 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.303282185 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.302849543 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.309931173 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.303262076 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.258612753 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.449244439 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.312392376 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.321279174 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.33221321 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.312012857 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.309331296 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.350334201 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.520256923 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.310845762 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.30952936 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.317856412 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.312443746 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.419733582 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.355641134 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.312615221 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.445001386 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.267645594 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.319845146 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.318796508 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.496310393 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.312101274 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.311433361 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.312353192 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.312581019 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.242958713 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.759652866 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.324077879 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.338349247 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.322770942 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.311004858 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.47314736 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.313841361 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.320276579 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.307441829 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.754006485 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.457180298 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.434936219 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.631695621 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.332150081 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.315307342 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.377428388 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.313984957 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.314043702 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.358455527 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.128440503 seconds)
  done (took 111.44397293 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.334512737 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.698135642 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.475939286 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.33227413 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.954118459 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.024307177 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.325865029 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.615013393 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.354644872 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.309294049 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.611708117 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.831836159 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.330763984 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.381534424 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.949323975 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.381290401 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307294614 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.063370129 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.325444888 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.307182935 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.824171258 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314134608 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.308037005 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.587282872 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.347562047 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.783497095 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.843693313 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.770700554 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.328236797 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.308297134 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.791998474 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.33403301 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.319762751 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.312096088 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.580048363 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.68840223 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.68446637 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.331167589 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.330433252 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.310492885 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.342048619 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.778815721 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.68762781 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.32801776 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.327025638 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.801422753 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.32785459 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.315052174 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.314528187 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.514418844 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.955938305 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.310844489 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.838780797 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.31007987 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.64294884 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.391892091 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.37865126 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.813991846 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328966368 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.404983003 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.345843503 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.311242622 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.315377263 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.31474042 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.314932235 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.680086135 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.654487304 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.314451898 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.676467711 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.805704164 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.33606768 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.855877611 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.219927751 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.311745532 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.370476997 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.311495875 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.871894655 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.823949734 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.351094841 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.310963561 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.665909542 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.330466308 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.603785767 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.343265878 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.311995107 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.835539356 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.317039243 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.3667441 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.319613815 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.312306792 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.931571657 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.316308545 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.608651093 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.379225604 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.313986632 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.313077915 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.336101777 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.313003212 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.313333892 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.31767553 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866582291 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.340548524 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.440868418 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.331455184 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313779022 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.331061608 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.315867133 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.314824249 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.534816467 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.842242299 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.335885744 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.313956792 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.316377545 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.316336372 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.578319828 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.321271943 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.640060239 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.334519268 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314339095 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.315398753 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.017028822 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.343379599 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313766381 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.335195741 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.212394057 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.524761071 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.333632388 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.314914401 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.314482403 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.332628254 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.648140245 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.33622081 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.3802391 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.319346693 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.043346295 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.367947356 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.336919429 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.618399938 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.315910155 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.315595992 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.321113763 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.31798703 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.622511743 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.592532364 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.553343681 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.316661099 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.335153786 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.025939964 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.350867339 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.454725919 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.336257247 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.405785291 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.51461783 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.476454065 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.319162601 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.934182739 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.316186884 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.532880833 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.316909133 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.633685839 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.821546886 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.334318537 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.318645197 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.035641869 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.05671393 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.13846253 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.319849055 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.602496654 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.292811049 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.787551824 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.316261692 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.317691388 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.780319239 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.318304829 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.331163195 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.317330312 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.317945124 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.471295787 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.491837147 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.962224175 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.318568303 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.788663128 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.356312678 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.318390062 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.321186471 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.318937574 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.664966304 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.410353374 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.322841081 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.323746632 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.319362925 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.320100566 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.811276077 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.264078518 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.31965356 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.474065369 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.979850177 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.339101419 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.320497403 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.013013143 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.597385453 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.849302721 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.392436564 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.648461205 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.343991853 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.358724415 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.944001651 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.402638221 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.812682139 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.340864416 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.320416684 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.928981285 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.338151808 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.480242348 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.320760541 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.320165645 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.869177099 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.33836966 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.324334181 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.636049614 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.341255045 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.571325018 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.320154555 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.353235595 seconds)
  done (took 1109.015814852 seconds)
done (took 1304.288002102 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.321037127 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.320677278 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.307338963 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.327572945 seconds)
  done (took 26.514487604 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.340613845 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.328375765 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.329012944 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.327256919 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.331761442 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.328564672 seconds)
  done (took 9.223490431 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.656799689 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.32294889 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.326887 seconds)
  done (took 19.544764272 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.545978698 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.669148556 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.678922593 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.662597798 seconds)
  done (took 10.797031203 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.330284098 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.329575056 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.330132417 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.333250064 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.341392783 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.34294646 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.33362206 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.332327815 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.34260108 seconds)
  done (took 13.254712528 seconds)
done (took 80.573364187 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.303195002 seconds)
    (2/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.575983617 seconds)
    (3/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.302963311 seconds)
    (4/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.341376162 seconds)
    (5/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.303832447 seconds)
    (6/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.605873828 seconds)
    (7/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.956629602 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.588424226 seconds)
    (9/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.323106041 seconds)
    (10/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.452557893 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.365275524 seconds)
    (12/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.707621864 seconds)
    (13/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.330036238 seconds)
    (14/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.398545049 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.350769904 seconds)
    (16/286) benchmarking ("sort", Int8, false)...
    done (took 4.360555421 seconds)
    (17/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.324432129 seconds)
    (18/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.325142861 seconds)
    (19/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.372826334 seconds)
    (20/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.109449545 seconds)
    (21/286) benchmarking ("sort", BigInt, false)...
    done (took 6.325588532 seconds)
    (22/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.312147021 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.301203191 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.192302205 seconds)
    (25/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.325781673 seconds)
    (26/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.352986885 seconds)
    (27/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.138477664 seconds)
    (28/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.345020214 seconds)
    (29/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.346256006 seconds)
    (30/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.07311216 seconds)
    (31/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.3642277 seconds)
    (32/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.389827277 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 6.325576353 seconds)
    (34/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.307041706 seconds)
    (35/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.450304201 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.437055762 seconds)
    (37/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.331927022 seconds)
    (38/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.989268076 seconds)
    (39/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.739102598 seconds)
    (40/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.90828047 seconds)
    (41/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.204078942 seconds)
    (42/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.34025553 seconds)
    (43/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.743173233 seconds)
    (44/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.353573379 seconds)
    (45/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.032369961 seconds)
    (46/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.964042881 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.113278507 seconds)
    (48/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.750381133 seconds)
    (49/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.512785342 seconds)
    (50/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.307562905 seconds)
    (51/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.743827279 seconds)
    (52/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.308051476 seconds)
    (53/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.155256535 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.440157395 seconds)
    (55/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.307787819 seconds)
    (56/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.309416484 seconds)
    (57/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.849021966 seconds)
    (58/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.307552963 seconds)
    (59/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.604072231 seconds)
    (60/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.413196886 seconds)
    (61/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.402099543 seconds)
    (62/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.314358706 seconds)
    (63/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.324200367 seconds)
    (64/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.951606851 seconds)
    (65/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.448505392 seconds)
    (66/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.858961158 seconds)
    (67/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.406339535 seconds)
    (68/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.415989035 seconds)
    (69/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.437284604 seconds)
    (70/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.837572466 seconds)
    (71/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.479518403 seconds)
    (72/286) benchmarking ("sort", Float32, true)...
    done (took 6.327305148 seconds)
    (73/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.728579855 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.748182533 seconds)
    (75/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.162467101 seconds)
    (76/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.810165455 seconds)
    (77/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.329085525 seconds)
    (78/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.753295385 seconds)
    (79/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.357820241 seconds)
    (80/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.004731781 seconds)
    (81/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.410093879 seconds)
    (82/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.310158199 seconds)
    (83/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.732849941 seconds)
    (84/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.662020611 seconds)
    (85/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.316988938 seconds)
    (86/286) benchmarking ("sort", Float32, false)...
    done (took 5.358850871 seconds)
    (87/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.408983812 seconds)
    (88/286) benchmarking ("sort", Int64, false)...
    done (took 5.582900019 seconds)
    (89/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.348027024 seconds)
    (90/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.415042219 seconds)
    (91/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.984482256 seconds)
    (92/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.446902719 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.995414071 seconds)
    (94/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.42942374 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.745625605 seconds)
    (96/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.430348811 seconds)
    (97/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.99171283 seconds)
    (98/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.709675512 seconds)
    (99/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.838884821 seconds)
    (100/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.837589374 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.254472096 seconds)
    (102/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.992825534 seconds)
    (103/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.353553217 seconds)
    (104/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.202129394 seconds)
    (105/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.328803037 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.710634988 seconds)
    (107/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.333991297 seconds)
    (108/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.161337866 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.116257719 seconds)
    (110/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.472131425 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.56317918 seconds)
    (112/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.298318461 seconds)
    (113/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.43463065 seconds)
    (114/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.339942577 seconds)
    (115/286) benchmarking ("sort", Float64, true)...
    done (took 6.3306617 seconds)
    (116/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.901292092 seconds)
    (117/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.779923989 seconds)
    (118/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.364040538 seconds)
    (119/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.222050776 seconds)
    (120/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.357600081 seconds)
    (121/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.606079394 seconds)
    (122/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.341617129 seconds)
    (123/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.57159191 seconds)
    (124/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.798645135 seconds)
    (125/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.727260095 seconds)
    (126/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.400446596 seconds)
    (127/286) benchmarking ("sort", Bool, false)...
    done (took 1.856657467 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.572447207 seconds)
    (129/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.372520414 seconds)
    (130/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.322730881 seconds)
    (131/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.615824263 seconds)
    (132/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.312972331 seconds)
    (133/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.337883783 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.009244651 seconds)
    (135/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.718329867 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.147592211 seconds)
    (137/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.59367197 seconds)
    (138/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.829683973 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.304269174 seconds)
    (140/286) benchmarking ("sort", BigInt, true)...
    done (took 6.335385596 seconds)
    (141/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.855339759 seconds)
    (142/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.330960208 seconds)
    (143/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.313626571 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.697381799 seconds)
    (145/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.453758624 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.151465449 seconds)
    (147/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.360800872 seconds)
    (148/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.597352273 seconds)
    (149/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.435861099 seconds)
    (150/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.314257076 seconds)
    (151/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.413011094 seconds)
    (152/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.457886606 seconds)
    (153/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.313778702 seconds)
    (154/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.729040476 seconds)
    (155/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.374587787 seconds)
    (156/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.340744119 seconds)
    (157/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.147916066 seconds)
    (158/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.314825474 seconds)
    (159/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.336885252 seconds)
    (160/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.353194921 seconds)
    (161/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.862557983 seconds)
    (162/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.329228468 seconds)
    (163/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.43168477 seconds)
    (164/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.360312827 seconds)
    (165/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.350996492 seconds)
    (166/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.335918758 seconds)
    (167/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.420214495 seconds)
    (168/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.315657467 seconds)
    (169/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.35336485 seconds)
    (170/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.216647205 seconds)
    (171/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.017915254 seconds)
    (172/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.364494443 seconds)
    (173/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.17969279 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.360726368 seconds)
    (175/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.340754793 seconds)
    (176/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.421041384 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.377315583 seconds)
    (178/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.150527943 seconds)
    (179/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.361918993 seconds)
    (180/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.325098926 seconds)
    (181/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.436707498 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.7582226 seconds)
    (183/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.462597746 seconds)
    (184/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.464613444 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 5.448106318 seconds)
    (186/286) benchmarking ("sort", Int8, true)...
    done (took 6.353756825 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.413993238 seconds)
    (188/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.075050311 seconds)
    (189/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.376539229 seconds)
    (190/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.591358817 seconds)
    (191/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.324296036 seconds)
    (192/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.22179278 seconds)
    (193/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.363730648 seconds)
    (194/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.320275111 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.052484933 seconds)
    (196/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.320321061 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.97151982 seconds)
    (198/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.341649416 seconds)
    (199/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.319741672 seconds)
    (200/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.339058013 seconds)
    (201/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.354933977 seconds)
    (202/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.100506889 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.021096056 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.556447879 seconds)
    (205/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.597462444 seconds)
    (206/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.408338535 seconds)
    (207/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.360428881 seconds)
    (208/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.870740156 seconds)
    (209/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.342997939 seconds)
    (210/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.341993455 seconds)
    (211/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.493704499 seconds)
    (212/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.528051923 seconds)
    (213/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.321561053 seconds)
    (214/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.608487933 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.361323631 seconds)
    (216/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.365080695 seconds)
    (217/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.421080351 seconds)
    (218/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.339707432 seconds)
    (219/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.168305677 seconds)
    (220/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.917486912 seconds)
    (221/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.058813711 seconds)
    (222/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.600952893 seconds)
    (223/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.399338754 seconds)
    (224/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.365580174 seconds)
    (225/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.024203928 seconds)
    (226/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.855281986 seconds)
    (227/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.553944724 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.345578385 seconds)
    (229/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.117073679 seconds)
    (230/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.443222669 seconds)
    (231/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.34375263 seconds)
    (232/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.442882312 seconds)
    (233/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.321347946 seconds)
    (234/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.372347716 seconds)
    (235/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.829952914 seconds)
    (236/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.368915047 seconds)
    (237/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.358264813 seconds)
    (238/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.357242388 seconds)
    (239/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.358987254 seconds)
    (240/286) benchmarking ("sort", Float64, false)...
    done (took 5.705290975 seconds)
    (241/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.321372764 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.317724168 seconds)
    (243/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.321606497 seconds)
    (244/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.321447814 seconds)
    (245/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.56399876 seconds)
    (246/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.367952292 seconds)
    (247/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.328634105 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.368337012 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.766866367 seconds)
    (250/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.340681275 seconds)
    (251/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.369059337 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.72869249 seconds)
    (253/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.998873042 seconds)
    (254/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.423761006 seconds)
    (255/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.439920514 seconds)
    (256/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.401736901 seconds)
    (257/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.358309249 seconds)
    (258/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.725967509 seconds)
    (259/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.375753681 seconds)
    (260/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.375005634 seconds)
    (261/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.326958076 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.267044102 seconds)
    (263/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.785288911 seconds)
    (264/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.32324863 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.445561081 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.425209026 seconds)
    (267/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.21043301 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.453626517 seconds)
    (269/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.323459976 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.195337426 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.384912489 seconds)
    (272/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.253376075 seconds)
    (273/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.466196685 seconds)
    (274/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.429694419 seconds)
    (275/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.836134777 seconds)
    (276/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.287206868 seconds)
    (277/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.893305479 seconds)
    (278/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.480056616 seconds)
    (279/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.343045067 seconds)
    (280/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.235302427 seconds)
    (281/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.384995418 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.388337394 seconds)
    (283/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.94057227 seconds)
    (284/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.533413588 seconds)
    (285/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.432311364 seconds)
    (286/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.409120391 seconds)
  done (took 947.220565184 seconds)
done (took 948.461735652 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.376953988 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38035622 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.354351807 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.376779028 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.473425385 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.377612161 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.366069886 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.357455153 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.402250039 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.40572252 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.360244514 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.376731937 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.364033549 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.362587246 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.355323656 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376912655 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.474007123 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.364060903 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.379561711 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.365809147 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.378205118 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.361489547 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.406223223 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.37844615 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.359716116 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.358699121 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.365681069 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.38278103 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.475716908 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.369456312 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.364426696 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.381093208 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.479754163 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.356495847 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.351184366 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.382622506 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.374709716 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.367375936 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.360920657 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.394827472 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.911320892 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.381377781 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.365511921 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.357436603 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.358130224 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.36203164 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.364487306 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.363656357 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378635337 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378611851 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.896898438 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.396763545 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.366365362 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.358917614 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.36910108 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.363113746 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.36237581 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381643169 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.384354131 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383070815 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.460862419 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.364336853 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.361153064 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.381247063 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.372466326 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.934897562 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.37200725 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.364329245 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.911684423 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.38204815 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.935169216 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.392690438 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.361154799 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.378454699 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.396819523 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.474825539 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.354647233 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.358774387 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.372461952 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.365620473 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.369432225 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38015773 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.364812699 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.359786152 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38103353 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.383310068 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.370910131 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.368058507 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.371136079 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.388148604 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.374394282 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.378663229 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.364542149 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.356562475 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.371357176 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.364757584 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.370253777 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.369524105 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.366215103 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.373155732 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.914708826 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.403854413 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.358123159 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.358152351 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.361244107 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.381656877 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.912747224 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.385937277 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.383568106 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.408929646 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.363340623 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.464789826 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.372016443 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385713797 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.371480754 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.366449873 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.358075632 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.466912401 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.904921081 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.402549824 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.365135742 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.368163823 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386745174 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.365629467 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.360175283 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.481636088 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.364697686 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.384959138 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.491138137 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.3741399 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.401344831 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.368311341 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.366560215 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.386658018 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387642501 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.400974909 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.366659803 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387900145 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.386183882 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.363967972 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.385201134 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.380368171 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.371450881 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.372671702 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.360485379 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.388450069 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384035009 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385385732 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.385464903 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.492750591 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.36215096 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.474927763 seconds)
done (took 231.599434896 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.422273649 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.360158367 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.452657001 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.360504231 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.463439811 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.462744758 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.358501385 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.360833635 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.360052469 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.736041525 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.359892455 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.359500905 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.361483381 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.359388509 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.443232259 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.361883886 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.358858505 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.700140889 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.362216848 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.434457765 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.360618383 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.359457918 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.362369582 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.744069818 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.358528651 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.358694151 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.435918441 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.364544872 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.708836584 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.35485418 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.357707954 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.708998168 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.454052794 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.381971418 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.37415558 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.372904109 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.466316963 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.383337263 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.443768716 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.443310497 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.455091353 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.40141645 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.357195359 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.358210228 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.364668576 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.363418088 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.360987967 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.391482074 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.360313681 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.361593582 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.701504806 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.374119899 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.362035884 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.362970689 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.362579162 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.393636436 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.361893774 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.365545468 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.455239278 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.365863385 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.429350394 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.745920739 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.739640399 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.364694399 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.363534093 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.363191292 seconds)
  done (took 150.388618769 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.43050413 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.437364978 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.485288448 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.38296589 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.413406902 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.487940492 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.383347033 seconds)
  done (took 11.292108305 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.370842213 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.366169787 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.414393814 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.415101574 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.366549247 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.543091206 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.366567206 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.375949178 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.363056565 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.417929393 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.368105905 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.367301615 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.373761971 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.357507073 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.415266143 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.377405456 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.480841106 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.366926755 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.367743351 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.527251888 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.365345941 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.37477769 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.418480716 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.377706908 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.369718537 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.371637251 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.180939884 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.369232852 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.365720079 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.36731899 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.365609408 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.445119088 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.368398362 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.367138211 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.365435892 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.485157123 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.368244368 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.366272168 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.367897076 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.366682912 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.368044136 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.368383547 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.368602593 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.366268942 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.368584635 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.389967253 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.368329976 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.368382984 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.368823536 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.368672601 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.416985597 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.368941379 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.366830697 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.366112117 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.422806699 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.376507714 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.371240208 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.366094902 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.369265843 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368182344 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.529641867 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.415796691 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.369603445 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.417888925 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.370233789 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.371090187 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.371063649 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.369555883 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.423457405 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.370887279 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.417753208 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.369530349 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.557258641 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.393313962 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.371752575 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.372512439 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.372927134 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.371554448 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.365414729 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.375185061 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.37033394 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.371393342 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.375758772 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.368634834 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368790102 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.545864547 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.480005141 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.370075895 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.382717397 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.377428267 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.368448485 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.423402478 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.3720456 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.370091461 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.422886546 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.485640738 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.423923864 seconds)
  done (took 157.054109364 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.375328906 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.378208615 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.37374624 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.393023321 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.39147311 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.370954235 seconds)
  done (took 9.560425861 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.37248496 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.374069895 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.373049428 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.372090274 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.372376186 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.373537046 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.372562687 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373321338 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.37758257 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.372792701 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.37506911 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.376712993 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.375207853 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.372827602 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.373445603 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.372518455 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.373432855 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.370030604 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.372271913 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373628034 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.46681795 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.373164164 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374217253 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.374444803 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.378924816 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.373637596 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.382563298 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.373915261 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.374341192 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.382125652 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.39583561 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.374955528 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.375004449 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.380339125 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.378054103 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.374553256 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379244256 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.37934731 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.372639613 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.375679457 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.378982982 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.375169534 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.375613414 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.378691385 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.377711098 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.381852779 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.383818723 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.383340312 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.375811258 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.378467025 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.379391296 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.374597524 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.376904247 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.380419065 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.37663574 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.398497835 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.384736712 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.37608647 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.376371896 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.376597819 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.379353265 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.377872465 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.378824763 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.381111967 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.384990986 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.380576086 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.377708253 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.382612146 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377319807 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.378229397 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.380621914 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.375856144 seconds)
  done (took 101.533960076 seconds)
done (took 431.098607346 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.390106885 seconds)
  done (took 7.672747386 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.525668932 seconds)
  done (took 7.810319202 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.370893027 seconds)
  done (took 23.657592148 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.427973135 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.469729691 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.40078292 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.376807751 seconds)
  done (took 26.956948873 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.980813417 seconds)
  done (took 8.262953756 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.36930839 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.37929603 seconds)
  done (took 14.032506105 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.520869041 seconds)
  done (took 7.80381556 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.103639733 seconds)
  done (took 8.390906765 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.380686842 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.410544133 seconds)
  done (took 14.340804875 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.350247004 seconds)
  done (took 7.632978671 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.992151925 seconds)
  done (took 12.279304227 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.377699963 seconds)
  done (took 7.663158647 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.441290364 seconds)
  done (took 7.725348831 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.960967924 seconds)
  done (took 10.244847417 seconds)
done (took 165.758671503 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.371869844 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.378742104 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.376334963 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.376744466 seconds)
  done (took 26.788968558 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.413195022 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.41323343 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.414838768 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.425072543 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.416188536 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.412702392 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.407349796 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.414697669 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.42401244 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.417236129 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.415437082 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.416221431 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.413884613 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.406027265 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.416179236 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.415454858 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.425808164 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.414723947 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.405852137 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.416128692 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.3824075 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.42535686 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.416681575 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.381824098 seconds)
  done (took 35.196707767 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.906022622 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.454050934 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.5334342 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.43209243 seconds)
  done (took 7.611362315 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.431904963 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.434694158 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.445939889 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.485231821 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.537740118 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.442745848 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.408204288 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.402871841 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.389141742 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.434884966 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.510665641 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.450623356 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.564865831 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.381384801 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.568846042 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.381466355 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.382538983 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.433790277 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.485615405 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.498737256 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.383155939 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.435732746 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.438661104 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.451787395 seconds)
  done (took 36.068265532 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.3819367 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.400183039 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.382054693 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.381486574 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.389622772 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.380930788 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.382136927 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.383567756 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.381662636 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.387424924 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.382188588 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.394630792 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.381317345 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.382889019 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.388933108 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.384185225 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.38945297 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.382894939 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.384927052 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.38885206 seconds)
  done (took 29.000054102 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.375738043 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.229265662 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.727976185 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.633411253 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.376959429 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.376619394 seconds)
  done (took 28.009315353 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.461406047 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.621184174 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.383136794 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.778634113 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.8734901 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.402970482 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.384036441 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.644032144 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.000266557 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.002406139 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.446156331 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.456543553 seconds)
  done (took 20.743587932 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.389485439 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.380204727 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.390403924 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.400272859 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.444750116 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.406199502 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.391405734 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.377245093 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.451908209 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.468032837 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.40703512 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.445709216 seconds)
  done (took 38.24624705 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466188016 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.430842539 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.417528884 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440892165 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.104314896 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593050019 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.406191571 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.117279051 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.406113994 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65450759 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384909779 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469189044 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.635519066 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39065059 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383915283 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.421080877 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627424362 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915984964 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387587058 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.646377134 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406029262 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386497435 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.730836489 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633371921 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614070863 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.364984025 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.642482079 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.157010973 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.697281125 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395915038 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392582131 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381032582 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657935469 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067447625 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500126112 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.612877122 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406441789 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.947237289 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.36620706 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.64096851 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393864139 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.384762833 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393489509 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382900083 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.317689486 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392468943 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135457673 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.410084604 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.094603766 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.382299095 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.672301191 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481086355 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.386252218 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.957116696 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408531653 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.4115585 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.387372602 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481181638 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972203715 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.924143524 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385692447 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.343102209 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.395322342 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.651606944 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045150841 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.408458981 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.388073772 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387697063 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319001161 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.647728049 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400366396 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523604282 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.410237802 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.047591157 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134596593 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.405465297 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.334592427 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968722316 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390790088 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.32311829 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614665512 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.160612712 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324469725 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.333831563 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.320083244 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153261044 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400425962 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.882109045 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413956964 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.150014832 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.639958323 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425337685 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409989961 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.611314131 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.268032553 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386194932 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.388100133 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503503881 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408736902 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.12593152 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341094159 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.391015264 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643007854 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.599094692 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389544129 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.455573741 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920022882 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425434767 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.40624868 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.393067926 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.627216493 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.042668144 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.425411786 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.938371679 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403919197 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.162793363 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197793895 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391608497 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.414656881 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.394628233 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679461413 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.215179052 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.275401968 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456427961 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389397122 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.388002259 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.68264504 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.237846892 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.293089529 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.606728824 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4217021 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.405239489 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.389570351 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350323165 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.387325831 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397380515 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.166786389 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.615055112 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402001365 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671186927 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325796566 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527927581 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.407065844 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.614869568 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.679711839 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.414791248 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650727877 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404987168 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.407411925 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407716188 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408085896 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490169963 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412745403 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.391394466 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.671229811 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.393866862 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.395535043 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.682983447 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.170628338 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398967147 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.395483092 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397405651 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025349576 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38275717 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390856897 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.285652227 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.406090689 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459925135 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.3964764 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.625918012 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.845766109 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419941864 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.397149864 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.393293087 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61507377 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401342962 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.729903022 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475295266 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.8999751 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.047788137 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424187623 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.327883678 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.102553753 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.085178144 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392587273 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.580601949 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392553279 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.624547186 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.427366194 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390781241 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.043519798 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413942422 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.688162504 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.398806189 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40453256 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.398422096 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393676136 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.831689254 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.98584886 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395539109 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.410805272 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537083438 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.407942789 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.328078102 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.910691444 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398958622 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394447668 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.171807702 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428426015 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.684521881 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236379417 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674277574 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408717031 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687387463 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.779403981 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.428181154 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.403428798 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394905874 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397890948 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.409959465 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403517353 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.40650227 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.687941795 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.842822155 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962229744 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175218959 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990174555 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.787864076 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.427895568 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.284098174 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.143747298 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351298868 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.055263078 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651907432 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.163832775 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37416502 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911161839 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.707034014 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254649177 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.686568081 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626773003 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.768844948 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.424073691 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.691377871 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611667479 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430876763 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.406766244 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.331906646 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.914828533 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99065462 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419415868 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493389975 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153478068 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432089531 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.174745608 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.460266586 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.201932069 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850133189 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.96820786 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.792858443 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397333683 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.403391838 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24246544 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.419704724 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.928052067 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065795946 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.429324376 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.9165839 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357456141 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.633424996 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.430042191 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.396134069 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.137509238 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.398775345 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.654408164 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691800939 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334731986 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407722979 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984813294 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.278848128 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.404813047 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401222361 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216327941 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412095017 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721076853 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.401905069 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.850705109 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421708688 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.333958435 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334016781 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.092445929 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408718992 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378714303 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941564061 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.403954417 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410970767 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412436778 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255317759 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.655455852 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.414516296 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.037243499 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646899042 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420391079 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423855409 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.404354633 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403871239 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.383833851 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.283269457 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.6376076 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406767752 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.647575294 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.479419323 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.301163941 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.87749424 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.635315034 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.297276515 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.406771451 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665225456 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.131900847 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.425259901 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161629493 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446765014 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403851861 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.419182499 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.401544741 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423193033 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492917151 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636687964 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.432576237 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.413012285 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843042555 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422474682 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422866539 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.415409325 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495749191 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.9695537 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.866142066 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.178623913 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04266295 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208774188 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.078950782 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.717259847 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404606504 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408659515 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33669722 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551835542 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.928224423 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676521211 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523186448 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.416387753 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426061255 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411576948 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41281642 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625360642 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68037519 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.273077808 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410508608 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.067374314 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.295389469 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415144999 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.616184461 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948658916 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00010721 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.793017466 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40913602 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.154320587 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700574707 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.497750865 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405437685 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.000856336 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.421078599 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.22845564 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.412634568 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41535679 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551986079 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.696674347 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106862692 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.437459847 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.566208379 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.178891633 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.711087376 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.662247119 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.933528056 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.642426645 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069675544 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.191550569 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668235151 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476543441 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642107652 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.550226554 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553306285 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.41175987 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.302023695 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40728076 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251870244 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.116094538 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.415301437 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.045772124 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689949496 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.410281646 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.411677014 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430192879 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.417626491 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.631348789 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.189839588 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.636073876 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417746119 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404993296 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.980947906 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049132486 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.721150591 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349041644 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.412628989 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.669288192 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.665145641 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433673831 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.861181194 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.118920853 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998496294 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.38367998 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429180482 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411298601 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.179343154 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06052142 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.894331934 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972714679 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.074058391 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414925033 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684286817 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.413416066 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408466567 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688230306 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.411826329 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.42087149 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650850147 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.076477076 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.276021099 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.423097219 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.898573963 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.346354502 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.638471708 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449818714 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347265599 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419586366 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.873229694 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.43678676 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531618261 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422555304 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.420505244 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410000951 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.166337212 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.690478548 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.414669029 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.403244792 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.392156728 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.431597982 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509590806 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012686399 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434834816 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.086188604 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.763826382 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.66729262 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.411265516 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.399257386 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.415527089 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412395969 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.136996351 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.388537054 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.430742758 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003613654 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.416166035 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.428609995 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414950036 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.627289131 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623478205 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.426599098 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.651587807 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444433951 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434430401 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.318422134 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.185878392 seconds)
  done (took 1699.019137339 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.456531017 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.459313924 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.438395657 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.441300302 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.473020426 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.490948626 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.461828387 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.513640257 seconds)
  done (took 53.055883705 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.418843464 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.570184366 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.445088109 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.421890151 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.420977884 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.412290709 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.926450832 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.445697307 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.421729796 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.422120493 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.416912874 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.414730992 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.122243981 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.421701635 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.422259706 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.394137756 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.42228539 seconds)
  done (took 66.846495949 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.868769705 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.806757805 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.788561165 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.483822615 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.425174168 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.435758844 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.895868349 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.440169921 seconds)
  done (took 55.469450718 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.431607902 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.431404765 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.431737343 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.431804655 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.432568516 seconds)
  done (took 8.482916454 seconds)
done (took 2105.825889453 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.419283215 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.42267975 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.418472325 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.421710579 seconds)
  done (took 7.006030894 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.396628641 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.139074803 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.396668014 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.414039786 seconds)
  done (took 18.66980097 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.440338925 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.443555555 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.19702148 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.076225971 seconds)
  done (took 5.598481911 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.162871907 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.174305678 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.159701936 seconds)
  done (took 7.819220161 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.410322377 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.416429532 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.415223792 seconds)
  done (took 20.563714159 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.711571588 seconds)
  done (took 3.035225101 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.560919533 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.609661193 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.780361338 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.748914532 seconds)
  done (took 8.022115707 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.800142424 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.796590647 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.602667853 seconds)
  done (took 6.521243264 seconds)
done (took 91.444798961 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.588799206 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.431587928 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.618903992 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.556466896 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.644577517 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.619366416 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.90305508 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.526967459 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.065353586 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.056566246 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.562773278 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.643958766 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.625687019 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.435005234 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.626518373 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.433577687 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.643570555 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.63729019 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.281544763 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.414696847 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.906771509 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.199012382 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.390916557 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.221221925 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.645311141 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.569273545 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.777472784 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.428987962 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.421895602 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.796190464 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.569623045 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.41397072 seconds)
  done (took 197.980969495 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.414188874 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.442513286 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.415029873 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.435082355 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.416022914 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.448940586 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.417992887 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.434370806 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.434549614 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.420813521 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.41579255 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.424625114 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.415677299 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.43425965 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.417499607 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.435834915 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.420592288 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.417253652 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.416391502 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.435209602 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.416815359 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.435326444 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.41865658 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.424021653 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.423461735 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.417880742 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.441721045 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.416701721 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.415518047 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.417167113 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.437875349 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.435420383 seconds)
  done (took 206.939405295 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.418374519 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.417567289 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.417539471 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.437777103 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.422731243 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.417794205 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.435744376 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.417262333 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.417328121 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.436717451 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.435414882 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.4372074 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.417385284 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.444692279 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.417612197 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.418963153 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.435790437 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.437830967 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.418560792 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.437158925 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.41912078 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.417394423 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.437818178 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.436953426 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.419311548 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.438150896 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.441313461 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.42664322 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.428459103 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.418759099 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.440069407 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.451001666 seconds)
  done (took 207.043099172 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.624218335 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.426993199 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.428358037 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.381720813 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.426967567 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.42592544 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.426607144 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.620158914 seconds)
  done (took 15.09055409 seconds)
done (took 628.378782426 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.831170533 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.536440745 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.638234073 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.447632845 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.275380856 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.468822892 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.447738474 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.632856596 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.37954157 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.641350097 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.78015855 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.464362215 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.932426127 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.44468687 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.726557848 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.55322114 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.382235738 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.518167637 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.783534004 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.027754915 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.725745891 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.004121936 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.653900231 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.378696849 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.951108438 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.994750373 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.235211704 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.37909744 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.466595919 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.799485416 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.22055376 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.502247885 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.516498287 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.51671498 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.573992517 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.552748769 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.475280993 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.514189784 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.659360293 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.767980933 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.033651523 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.196450978 seconds)
  done (took 97.361746743 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.413283474 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.414581565 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.412437554 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.413635906 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.415696036 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.413535021 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.412992068 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.412147511 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.413580573 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.412882221 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.412898559 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.414732918 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.414694672 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.415760574 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.41342178 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.414636519 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.416261678 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.416573251 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.413939528 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.413944548 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.416260005 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.414912403 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.416359229 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.414875879 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.416322188 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.416391968 seconds)
  done (took 38.11001828 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.434110052 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.694113399 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.871465742 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.438674745 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.432853534 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.437759774 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.519936145 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.433484985 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.433870008 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.435215424 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.591348823 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.435753973 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.469740691 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.904916441 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.434642991 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.433106448 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.433420948 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.432028275 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.702843133 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.442556207 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.542847879 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.43474342 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.520753993 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.442885078 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.459330151 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.433611836 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.437813822 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.028184544 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.454995483 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.593978252 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.323499521 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.5207958 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.965497586 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.905801143 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.328744881 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.442070272 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.4351869 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.59817569 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.437095774 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.434642906 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.526086447 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.437051515 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.887379077 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.127060856 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.455626926 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.435778203 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.050307151 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.619524457 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.709082624 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.443040357 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.907777669 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.437769879 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.437060046 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.436818525 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.708715149 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.44224875 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.435800343 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.065907611 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.461944727 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.523403091 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.437729413 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.436612454 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.713372285 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.435863124 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.698291776 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.437906445 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.444009803 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.457953707 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.884184406 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.437865395 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.152768098 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.456082568 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.436676766 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.596120275 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.69795573 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.091561699 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.460833252 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.719017773 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.980584604 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.541274934 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.441059459 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.020578469 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.544450285 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.440998044 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.440441907 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.440007617 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.438277017 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.483230871 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.522208174 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.086646491 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.156382389 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.095501113 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.546809518 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.450777777 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.438827013 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.06747621 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.46084793 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.439010255 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.880794744 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.153508026 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.459163981 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.446323695 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.158263053 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.461743011 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.526558111 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.445754553 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.898908972 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.440645921 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.485190008 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.439002117 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.446175901 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.46514107 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.527444782 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.444103446 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.441606969 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.121704634 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.625372221 seconds)
  done (took 189.938730406 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.446807463 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.432530069 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.434031662 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.451461878 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.432997119 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.440577116 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.433456573 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.433272606 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.440954151 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.432898415 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.437869414 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.435010356 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.436295023 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.436628758 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.446116011 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.44111436 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.04760953 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.43369241 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.444133717 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.434325723 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.255225225 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.435919081 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.448402999 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.434160297 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.435676691 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.438732705 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.436614291 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.437161832 seconds)
  done (took 155.035698186 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.442215488 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.063716778 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.463009872 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.5886003 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.465460732 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.440167101 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.585393277 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.505907968 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.462485566 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.439565096 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.439872897 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.775230442 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.444749266 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.014474661 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.65783095 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.607365103 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.011521333 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.462971619 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.440917227 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.441213174 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.590379553 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.449715441 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.775489087 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.066714843 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.464921694 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.066595322 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.428112501 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.445695233 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.442451187 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.06863437 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.462506758 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.779112259 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.52894381 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.509657291 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.088995725 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.033512578 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.034553496 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.607637183 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.444285969 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.442770693 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.442773131 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.427382228 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.070037374 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.46606776 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.4452687 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.060020927 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.466141441 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.445661596 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.450585042 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.443820984 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.509866067 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.529936112 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.801977966 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.076421388 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.549963696 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.456673842 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.589500723 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.817427392 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.447298271 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.015440963 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.429135384 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.077834309 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.467902811 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.428282357 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.445346776 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.450382439 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.61227671 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.591256427 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.017147923 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.466205988 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.017928367 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.631832207 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.445073773 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.445760959 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.448678636 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.078149264 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.038840692 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.632983448 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.595603851 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.664842916 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.431415254 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.446578818 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.432232687 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.533270803 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.44551334 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.079750443 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.03949061 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.468010486 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.449233875 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.448468491 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.449156598 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.645556593 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.098448034 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.553006441 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.01069788 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.805454571 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.786007195 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.449405021 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.512484477 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.464820627 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.787965092 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.449915611 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.51097201 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.88410465 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.787549793 seconds)
  done (took 173.297431489 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.703532958 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.731860248 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.545483337 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.602976131 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.073818747 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.044597072 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.773317926 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.61213026 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.566209526 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.722548171 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.690281097 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.538974294 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.67722406 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.530802653 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.216951659 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.543806154 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.565388954 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.604377735 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.615243275 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.511846294 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.16606098 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.748514146 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.652339299 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.413134769 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.548415872 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.259893423 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.040328856 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.996361997 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.631950937 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.838372798 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.996982647 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.628350124 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.486386436 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.192884962 seconds)
  done (took 69.821816768 seconds)
done (took 724.896277763 seconds)
SAVING RESULT...
DONE!
