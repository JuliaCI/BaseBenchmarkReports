cset: moving following pidspec: 23403
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.500777788 seconds)
loading group "string"... done (took 0.493811538 seconds)
loading group "linalg"... done (took 9.927913041 seconds)
loading group "parallel"... done (took 0.167118319 seconds)
loading group "find"... done (took 3.515654889 seconds)
loading group "tuple"... done (took 2.10626491 seconds)
loading group "dates"... done (took 1.410169268 seconds)
loading group "micro"... done (took 0.1945672 seconds)
loading group "io"... done (took 0.5200991 seconds)
loading group "scalar"... done (took 58.642834191 seconds)
loading group "sparse"... done (took 14.750693856 seconds)
loading group "broadcast"... done (took 1.332679875 seconds)
loading group "union"... done (took 11.147847014 seconds)
loading group "simd"... done (took 3.884652302 seconds)
loading group "random"... done (took 14.490652268 seconds)
loading group "problem"... done (took 2.236230669 seconds)
loading group "array"... done (took 24.777311138 seconds)
loading group "misc"... done (took 1.157900806 seconds)
loading group "sort"... done (took 3.800457098 seconds)
loading group "collection"... done (took 22.166997215 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.744677797 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.118584214 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.201859538 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.204616872 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.272846777 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.164743645 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.163281797 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.145573819 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.630329388 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.210728682 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138406776 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.433638104 seconds)
done (took 6.180034137 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.357781182 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.060386869 seconds)
    (2/2) benchmarking "String"...
    done (took 0.193453651 seconds)
  done (took 0.94628458 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075371037 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158133377 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110991419 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.15296617 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091497878 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107001456 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092088107 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107406186 seconds)
  done (took 1.513061473 seconds)
done (took 3.588043004 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.496774555 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.902432705 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.523070496 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.187087059 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.299658916 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.30309839 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.271292599 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.235838999 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.0913693 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088079776 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.199189786 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.466608987 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.424747798 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.033593937 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069009893 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.09556334 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.158496133 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.810414439 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080087 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110758638 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.533415039 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.224149034 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117956341 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106317082 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185552297 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127142705 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.139395869 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.100941677 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.654972186 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131132178 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.20879785 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.081977674 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.138099196 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.170181347 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.220543199 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109024968 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679143556 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.2021623 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098635797 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101923506 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.741911174 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.124646926 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.206606441 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10368637 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.067891594 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.171492758 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.11710295 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.07954999 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093628526 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.101997328 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.167400058 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.529891756 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108137145 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.199792236 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092252304 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.770658266 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095169365 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.277960346 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.122985193 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093840425 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089760716 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087908805 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.16788783 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093133282 seconds)
  done (took 20.601676303 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.18858285 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.205750536 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094813873 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142441158 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140137792 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079150918 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087110798 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095694222 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.112984479 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.193463219 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.123187942 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.213171871 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.07574797 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.106464167 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.164748883 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249841199 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106470942 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120366983 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08831563 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.093863333 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142492631 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094878825 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095188222 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.113178708 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171203545 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202678078 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112454244 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121150322 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.087707522 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098054858 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.150792011 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146093019 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090364774 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088538494 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.1752806 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125070374 seconds)
  done (took 5.413078716 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.237885837 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.101554535 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.24935231 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.197717601 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.129506552 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.200837551 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178578086 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.29952524 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.259500178 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160670432 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124971339 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.105165189 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.093455949 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095659861 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079369171 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077742497 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.855078848 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.152973154 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.170012891 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.187363561 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113025477 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080813489 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.192510654 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082304111 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08318006 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113175495 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.120106963 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.099437505 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.675270787 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.221726939 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112089883 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.460101246 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101025696 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096785772 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129566406 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193254813 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.121743694 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136832833 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093439117 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.100735087 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.195615727 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116153667 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076895254 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.076984162 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13256609 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113522466 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.106996288 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.120367471 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.13265388 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08494963 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.108436764 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.127471936 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.190766857 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.159225276 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.102139105 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.273215958 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.107411215 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097968673 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.109422015 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.841946731 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13093334 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081921032 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.092863694 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09407146 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077591362 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.842159677 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102895906 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.934629466 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079645883 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156656932 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095611949 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.115208016 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.081621553 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083495534 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101680109 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.106732287 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.101367848 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078618168 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084668518 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078238092 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.104915087 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111134314 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100155893 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079093508 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146196384 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.108235901 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.106694992 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121990164 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.088590945 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083276581 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127270305 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080310073 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.10147722 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.18214502 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.113527775 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110981431 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1142426 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142965178 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085547541 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.330299684 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083691159 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121240906 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100929664 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125679529 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094995321 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07882846 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099911937 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079518352 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07968639 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158741485 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085113198 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079072415 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.10341357 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.091748119 seconds)
  done (took 28.705328939 seconds)
done (took 55.416016102 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.411258513 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076481932 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076515038 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.096637079 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077244529 seconds)
  done (took 1.497345437 seconds)
done (took 2.247455839 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.180205388 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.26188889 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.194614622 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.124666761 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.147445007 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.167463544 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.151329928 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.168025696 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.145981552 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.165414122 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165784629 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.103161372 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.170543824 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.180502423 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100322953 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.202220897 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.100052597 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.145925121 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083203248 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.186748329 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.082362149 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102605785 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086069884 seconds)
  done (took 4.177130625 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102548795 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099398813 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10127049 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118198271 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084814067 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10088308 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11797883 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105049113 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100859404 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111149679 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085891509 seconds)
  done (took 1.878894516 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098923333 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.096467854 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091691618 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117133122 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085133662 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097636857 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114158651 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105859411 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099362565 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110859977 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086358188 seconds)
  done (took 1.855758194 seconds)
done (took 8.659830626 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.216721484 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.96080605 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.180440474 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.245141718 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.329409488 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.296261138 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.608231745 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.201178097 seconds)
  done (took 15.899041491 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.117960322 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.204326752 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090741847 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089699745 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.113365394 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096000407 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.094378343 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.108853647 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09172577 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09070965 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091134913 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.108901698 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.096318533 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.089941745 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.113052016 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095913384 seconds)
  done (took 2.499976009 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.135326706 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116020689 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.114838417 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099379816 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093965091 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.117015439 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102293595 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.097123873 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.112922809 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095978266 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.102236115 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.114209984 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097897366 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.092559745 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.115191254 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118084709 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.095536241 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.115445895 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116926252 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.101179416 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.116720778 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096748616 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.096725708 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.11543947 seconds)
  done (took 3.397537774 seconds)
done (took 22.554911977 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149024886 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08390208 seconds)
  done (took 0.991685185 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.165201874 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.182265566 seconds)
  done (took 1.114175273 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111287685 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089351586 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137962726 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103462668 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091076456 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107415964 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115439401 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.091047891 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.108056688 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091970564 seconds)
  done (took 1.814724554 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094229581 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095299758 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.121892595 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.159480686 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.11720834 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093619097 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094797669 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.11217907 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.096697981 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090496704 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.112828314 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109536345 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094725244 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127647098 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095341524 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095656926 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116204791 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093924444 seconds)
  done (took 2.690070225 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.09176118 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091627085 seconds)
  done (took 0.951408277 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095006565 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090016964 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092016031 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109681895 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09005363 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089299624 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.106642402 seconds)
  done (took 1.440686417 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.540962088 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.236923006 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.369321336 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072642129 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122056303 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.331861405 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.103113322 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072213792 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091486495 seconds)
  done (took 2.735002405 seconds)
done (took 12.504613052 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091388437 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.205997913 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.6109272 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.129330274 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.092884857 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.152022474 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.342467922 seconds)
done (took 2.402704911 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343664652 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.178850816 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084269166 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093701231 seconds)
  done (took 1.470415197 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082154371 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097684349 seconds)
  done (took 0.957615211 seconds)
done (took 3.209951908 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089580875 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.208932784 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.088266183 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.131036915 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.088661554 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.088662811 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.107379228 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089149255 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.088360188 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.088295515 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.108740853 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089862615 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088359281 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107544262 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089744932 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08848716 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.088378417 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106701976 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089211485 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088323872 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087622107 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105947831 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089302557 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088393992 seconds)
  done (took 3.185289554 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110400492 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091101878 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110767437 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09475311 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093055269 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110253336 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093984507 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091308748 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.092800418 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.109477609 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094164629 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.093099129 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.107967361 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095245073 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091331447 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111464524 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093998545 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090845561 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109059958 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094743402 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092696145 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108773539 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095588412 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093584387 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110582847 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096738768 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090816716 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.108607456 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09395245 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093433669 seconds)
  done (took 3.745054452 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096335784 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087242379 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090221389 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116701502 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088405865 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090817066 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103939823 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090854989 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090100703 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.0895433 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110226237 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089703237 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089957529 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107678148 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091824107 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091853021 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097366571 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.108380752 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09021224 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091287097 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109348053 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090900735 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089626481 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.089081858 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.109359856 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.08717561 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08938483 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108593209 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091430342 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088819186 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.091372513 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.11273361 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090403745 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097953447 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.109860479 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090535885 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095354584 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.105611545 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091825713 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087213883 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085845554 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.10798964 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089837541 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094533529 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.107663551 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090863999 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089024799 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.091061021 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.108043139 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092696215 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086873058 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.106104624 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092690488 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090769363 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.092279333 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.103831499 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090374551 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.087543675 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.107653704 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091570863 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088090532 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085884735 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.111918073 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090993135 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.103798884 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.112292073 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090187027 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090407656 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.108295824 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095478552 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.091809301 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098688667 seconds)
  done (took 7.700310773 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114103407 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098469086 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109181481 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091848552 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089466335 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089718113 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112333628 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089942303 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090226068 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113220473 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090686323 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090367497 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108496409 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091590907 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090599231 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090693865 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112951444 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090543916 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090704062 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107960656 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090360723 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094153314 seconds)
  done (took 2.935615555 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.216046538 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114591736 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139395659 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120726874 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107280611 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121184404 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095333352 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09554085 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111341464 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100348655 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098130635 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112074308 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108122478 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099192223 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117265471 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10079494 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093815981 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.119091331 seconds)
  done (took 2.859043248 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104655418 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092586704 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.154035998 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091680862 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.091352468 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.110938899 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0977324 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110827152 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.110734961 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092911885 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098768077 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10935357 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093095638 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093199491 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09159852 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110126783 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092618482 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092492138 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11753855 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097444375 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096816851 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119026169 seconds)
  done (took 3.058105993 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105348382 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091799244 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128307587 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096298768 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090889561 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091772285 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.115985978 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092158437 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09756059 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.110965508 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092737352 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091445428 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125335701 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094367447 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.101460039 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115266823 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097003746 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096709504 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114332206 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093385478 seconds)
  done (took 2.833802609 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.18516398 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126623644 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109556599 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115614283 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127475289 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108927469 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134990071 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110039343 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108363151 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13610369 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110223863 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107724173 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133197384 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114583425 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125913079 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116369197 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114969858 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134699322 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108587482 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108245329 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137037328 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11165107 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13413249 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109571406 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107753577 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126778762 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108941227 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112400326 seconds)
  done (took 4.181551579 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092074488 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091125555 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090045319 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109143418 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09252692 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090473027 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089891739 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109226529 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093272057 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090838437 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.108807272 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092449396 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09129918 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090499986 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110047234 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091366995 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090873358 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.091359592 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109772619 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091092868 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090655453 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108607107 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092592849 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090466114 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091980412 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.110229241 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093310679 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095032056 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112603844 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093393162 seconds)
  done (took 3.692364651 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103940243 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101013194 seconds)
  done (took 1.004277639 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099154089 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104558268 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091173326 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.11057754 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097527765 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093476552 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120391846 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098188115 seconds)
  done (took 1.614668387 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.183477871 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.208833469 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.115671413 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.103970414 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.208893184 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.187020709 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128788165 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.096112013 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.111845508 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085483985 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.202405069 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083021522 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09085457 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109493113 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091398285 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096678076 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.112961292 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10083461 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097289048 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.113343254 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097919016 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095415136 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112343756 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103166541 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086302455 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113910854 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095124667 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102483703 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108169412 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093514755 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089913878 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.111788168 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096621784 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096134292 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.092549618 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.206878682 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119521204 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08934984 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092189307 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.1179877 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124340462 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09296692 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114482505 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091724863 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09626287 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.116316118 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099225048 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093344692 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083616778 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.107226904 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093311796 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088547363 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.112471356 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093213041 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091638749 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11778942 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094657777 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088092697 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.108571279 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089043237 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090498659 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107780116 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095746534 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096403391 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11182246 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093641447 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091375656 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093546393 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.114797 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094582698 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091885428 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125982781 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093742018 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.097201956 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118513394 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095120965 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088793274 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117295153 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091677301 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092670164 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.115924169 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122562653 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094553993 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106467868 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089522348 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098199429 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09402725 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.115880728 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085083445 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099347061 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.114887794 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094601695 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08479507 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110017203 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089440214 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.095094145 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.104598846 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094684457 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092700056 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.096671511 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117940556 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09108812 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093533053 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117179636 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097850921 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090588545 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.163382159 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089364437 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.108653901 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095851365 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097809993 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086975306 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.112206307 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093531656 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089621173 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.108608085 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.098273949 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091668011 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.11367947 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098101721 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094483733 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.11261474 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096801835 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09301106 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088794672 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.116761915 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100285728 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093285047 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.115907338 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094244945 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093262697 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.111880568 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.09694473 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089887617 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118125147 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090461573 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.092099491 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093560361 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.11825603 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093992679 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088303478 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.111468015 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094723218 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091792678 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.116037521 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094143885 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088669516 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.10612425 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093203193 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088652824 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.113452835 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102017162 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088643535 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.095221117 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10994799 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100608743 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089098062 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.118036239 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095854787 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098008972 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118404024 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085585115 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089796544 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.115225756 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095515918 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089183617 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093789301 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.11354747 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099524458 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086223465 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.117568512 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086274099 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089369885 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.118866582 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096128565 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.095639745 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088524246 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.150308849 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10428945 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118939078 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093300692 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092674355 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.096956393 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.112365127 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098154102 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098886528 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.118450398 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090399764 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091132888 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119811884 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090178366 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.094912838 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112230124 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095704419 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084973725 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.093632577 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.105889863 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.099216737 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094438546 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.119053757 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.098956997 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096071994 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111132428 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102680306 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088966621 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.116482341 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086492214 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.098674349 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104833024 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.120978513 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099773581 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094209187 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111101349 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094574247 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10180303 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115878353 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.09349492 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095272799 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.106537989 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087974455 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.098968451 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096310222 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.109711158 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093590323 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094310317 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115211299 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091966164 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08611982 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.117040512 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096630724 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088981497 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114017571 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090935446 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092726317 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119001656 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.090971834 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090277471 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094937213 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.118570944 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093918437 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092576996 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.117158404 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100074318 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.09627635 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.115683706 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092579789 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102194071 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110573698 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093740133 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089808697 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095914152 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.107157901 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096725917 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093129091 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.110122313 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091396818 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096449346 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118702664 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100187881 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091220189 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.108785552 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.119767814 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099531372 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091967072 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.12118622 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089771472 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08613309 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.11045399 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086413922 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095692267 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.109244269 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100283772 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091629948 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092872774 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.117189344 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096133454 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090520939 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.119410017 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103670237 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088671331 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.107311621 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091482653 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092936399 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.110043462 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090039592 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095753936 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115139432 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098754108 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095965346 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.109712694 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095091283 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.099855017 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090403815 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.120806703 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100045055 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.1003196 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.109123444 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098713461 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090300729 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.127961035 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087709548 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092736793 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112048606 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093494361 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090596647 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.112083457 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.09060796 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086799237 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090010678 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.120343795 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.09174344 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098968801 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.112814626 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091713059 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09043189 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10995218 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101021436 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.09289638 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.120131198 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09598993 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087282119 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087683986 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.119099153 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093809276 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10024515 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10883444 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100056229 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100122928 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.117282721 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09564247 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102575055 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102196236 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.121980456 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098266616 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086415668 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.11215225 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097371251 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094343282 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.118399832 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096464431 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087257395 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116071464 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.100417868 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094686413 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.112201698 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08902864 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095484698 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100115315 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.119108024 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097179746 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096477772 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11528994 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089785719 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097568273 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.120849167 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.095467028 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099995467 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094287549 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.118848982 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092435986 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099866191 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.116115953 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088557002 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.087623992 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.110947349 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101037918 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08833337 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099466559 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.119441725 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092608075 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092021688 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.119060112 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090902412 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096298838 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119541807 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093158984 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104127767 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.116019083 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093779384 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098499467 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099249981 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.109010789 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093156329 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092568685 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121334703 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09356546 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099512585 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114090835 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100800179 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096814966 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.099789436 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.120058493 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.099339308 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087673649 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.121456227 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097428241 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.096680102 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.111989311 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093403009 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089078646 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.1133054 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10222529 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091035878 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102208248 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.119017789 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092993879 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092541238 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.120144747 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092979142 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101089252 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.111685501 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096638127 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08779203 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115803414 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093742787 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100135778 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.111348028 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089883358 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100186554 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099296985 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.12079518 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096915188 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101085899 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.108658301 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089977015 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097796374 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.112999635 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10498458 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096546006 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.112376022 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093803479 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097024629 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.095249473 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121456576 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089705821 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090988525 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.115510429 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097180794 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092407771 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.109593825 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.09922442 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092408469 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115847902 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094317162 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089192836 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093739505 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.121997428 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092357764 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090204487 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.112542734 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101622839 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.093239301 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.111495324 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089874558 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100134242 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.115874092 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102397449 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091156983 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.114618417 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093048635 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096304215 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101117678 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.112886143 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09426911 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092313555 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120799579 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099869194 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086686023 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.112118169 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104469011 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0991228 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115944353 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.09912329 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.092975021 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122037586 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102529728 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097485791 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088102894 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.11000044 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093565041 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087917954 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.117277903 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100613563 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092638596 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.111575291 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099705347 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098999461 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097598095 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.119005845 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08908563 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101219994 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.113335851 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098473975 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.087582296 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.108522669 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098249575 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099898458 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093077339 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.115689013 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096502635 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096961841 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.110769812 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09276445 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.096851282 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.119314334 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101668934 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093007218 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.091954361 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.120544869 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104579081 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.095844939 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.114064715 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101836972 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.100951734 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116525992 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094153663 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097004864 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.12121751 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098137619 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10324616 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.112668308 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.09505685 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.100872883 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.12090057 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104636351 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092726177 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087723655 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.120960912 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.09173932 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088671192 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.118952626 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101523246 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.101070954 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.115192651 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092925434 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102115569 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.120140906 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096003898 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091629599 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.112672219 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099932261 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091716552 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.097262159 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.113299393 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.101174528 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101166077 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.12228636 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103632103 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088449725 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121422703 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097138749 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103096351 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.118325243 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.09030464 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089909199 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099409778 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.122773504 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101190452 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.0976708 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.119530633 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100894045 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095458997 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115858378 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094120279 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102920281 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.099462229 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.118749528 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.096514089 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093307605 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117893623 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097826966 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.100940979 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.123688005 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097367061 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10460576 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.120735046 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09470967 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.092279123 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095282298 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.119463376 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096709156 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099117423 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.114535654 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090441389 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101018363 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.123821193 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095841098 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101739474 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101198972 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115607788 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097454292 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102337245 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.121791605 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096762864 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095066768 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.119722906 seconds)
  done (took 61.929602502 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144485622 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103313138 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119601732 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097861746 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114545711 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120755789 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098288057 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098512597 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119242817 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107186046 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097444305 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118774601 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113619057 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117315407 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136839678 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106927214 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097322223 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.119560106 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097781219 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098151238 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132515665 seconds)
  done (took 3.211302568 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114385217 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110432059 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130077296 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110691241 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10401623 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129960451 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108467215 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128954248 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111026479 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105009442 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132948192 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107797227 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.10465884 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.127818349 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104348115 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126430533 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112013197 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103505131 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130398216 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108079038 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105936097 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.129840114 seconds)
  done (took 3.398891228 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.125475104 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10043023 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095878044 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119249522 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10170588 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097394368 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121311866 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099492191 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105897614 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093059669 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109351056 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093730914 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096035396 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117434417 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092614082 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.096693092 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126932273 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10199223 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10211522 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.098336457 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110350695 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098393238 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098111639 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.10890931 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104327233 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.101781797 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.100542743 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.122267783 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088943363 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100506357 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.118127382 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092358812 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089078506 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088937497 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.11057251 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100686407 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10030235 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.118244436 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099790762 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08858864 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.099067905 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.12367285 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089963745 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098125747 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.119871179 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093358729 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100918979 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.097589505 seconds)
  done (took 5.813060306 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126500444 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157215174 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103248674 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125343243 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133630122 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106563271 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.100784115 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.150889859 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099461111 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.100567397 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.135076255 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110695571 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125481111 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105214706 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10070289 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123443072 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104103322 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100069639 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.12699045 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101590293 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.105545056 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.124939003 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111554269 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.109874726 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.125757193 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102067309 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.353585466 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.125308673 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110369412 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.105774624 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.127903346 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106425266 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.110532492 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.12365078 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10201863 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.102669829 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.134718388 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.101783474 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10208463 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.122678659 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.102486287 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105069786 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.125846869 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.112520174 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.124137434 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.105504268 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103424744 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100404667 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.13374082 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.103255938 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.129071791 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.113310918 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10400303 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.124860781 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105616922 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.111073273 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.124476444 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101599722 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.103248116 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.13238988 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101945576 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103373551 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.134698134 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102491175 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.10617265 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.1345639 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.103836318 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103726738 seconds)
  done (took 8.94334112 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131931581 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105011329 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135255468 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112499711 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10488324 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128357244 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105718542 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105340491 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12975407 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110238669 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104752706 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.236351285 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.126647809 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11060764 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104809278 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.128797523 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106441259 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104722116 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.129901435 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106135005 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.105637037 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134841239 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105313113 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134140871 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116911096 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102649506 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.128473111 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106307164 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11255719 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12873313 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116439388 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128331752 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105960052 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112077032 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.139169513 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.10551223 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100510757 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127749555 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106310237 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105597716 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.125508279 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112626334 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10573663 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.125588247 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106061811 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.106011595 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.135522052 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116220994 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.134944045 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111189 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.105917589 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136197697 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105108757 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105395945 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.13520204 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.1199501 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136821519 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113804486 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105567615 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.135647836 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114314327 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.143132307 seconds)
  done (took 8.254134482 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099951048 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099027607 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099434083 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120764379 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099588083 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098646483 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098878775 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120579649 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09920221 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098397638 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120444855 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100207366 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098538718 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09956336 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121792862 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099065879 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09852873 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098963214 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122170703 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098822483 seconds)
  done (took 2.958820881 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109298326 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115536969 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123414647 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107371684 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102402128 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129086108 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102844713 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102047753 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101793112 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124506965 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10922646 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108277177 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.125338774 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106197792 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108293799 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.129452006 seconds)
  done (took 2.675612451 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118560119 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115933528 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.202507735 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103658433 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.12480791 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109067292 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101181651 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126533199 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101183538 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106872389 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104655138 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.12714473 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101374902 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103069042 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124810425 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104494224 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100179499 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127291466 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10226063 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.205582288 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105909558 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103575322 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.125205656 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105708205 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102163131 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.12842981 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107847584 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101117048 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.125206215 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103754884 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103822839 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.108621703 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.124704056 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106701348 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103686719 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.125994025 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102180662 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.10257296 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125708304 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103331645 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104971659 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124620526 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104883449 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103537747 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.100721747 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.125197904 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101148826 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106696738 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.125393949 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105255005 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101930001 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.128383434 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108201469 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108074567 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.129932514 seconds)
  done (took 7.177544505 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112946555 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103162071 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135832078 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10224317 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102592865 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103212287 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126848742 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104406503 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103139163 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123698691 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104004147 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103454776 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125297917 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104076922 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103911258 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103606401 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.123400469 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103617646 seconds)
  done (took 2.861666208 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107161882 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102516807 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106272941 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126046126 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102908128 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101810782 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124240101 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101669842 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1009847 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101478547 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124862107 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101801283 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102366369 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124397732 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102908967 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101505855 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123508583 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102554522 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101777468 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100689061 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125333815 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102334662 seconds)
  done (took 3.267691443 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113465825 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.229004051 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.1076727 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.23767352 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099487023 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.123426799 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.107767406 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098882337 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.139529825 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.097769207 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.121218767 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.098815917 seconds)
  done (took 2.455005347 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130011784 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138556586 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126971942 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10402943 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111495812 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129924133 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107229418 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107722287 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137830307 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116954747 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129143029 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114557794 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114395204 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13682068 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11070053 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109754251 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129583658 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106270218 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103430751 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143190764 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106860517 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13674197 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107553062 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106240884 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130717321 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114925159 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11398321 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14079465 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107000269 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137028878 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111442943 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107000758 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137724916 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117210017 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103275424 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136888217 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106904935 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143776942 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112066136 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113474486 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125544945 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1106126 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136881792 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111896911 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114041317 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130736527 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112785222 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106800662 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130289822 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127904533 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133518725 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114804823 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111469203 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137902034 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114169407 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149179864 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117616842 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13706743 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111986727 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117018721 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138613995 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112264066 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136973144 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118323636 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111140041 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137487666 seconds)
  done (took 8.893162182 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140573183 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104286167 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1306076 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117694785 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113898003 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13167296 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107456402 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128529264 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108283952 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105064897 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171875488 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107658593 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114320893 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136906935 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107557951 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12930527 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108739945 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114337445 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12701238 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128615168 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10667397 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137696421 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115051223 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13833505 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118963103 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111251368 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131053118 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106686821 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10739138 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129722851 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111870511 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130446965 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116173502 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104934922 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138102198 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107474979 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107678637 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135063963 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107894795 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111736974 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138984085 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121407618 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130807207 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108037481 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118143655 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131665486 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108853158 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104789932 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131065689 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10525689 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117434208 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140993977 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11862528 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138736288 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108014783 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107805679 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130684147 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107886275 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107168796 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134682909 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117408855 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129668864 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127812203 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107441177 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131649074 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115646899 seconds)
  done (took 8.836510425 seconds)
done (took 168.269381188 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.174227043 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.214433623 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.199203753 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.155831548 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093514476 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.152857217 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.126591517 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.201771399 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.09400099 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093417397 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.116965852 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09699767 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.161602184 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093087396 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.117737947 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097560032 seconds)
  done (took 3.073924903 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.195066216 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.340675515 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.131665067 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.098196007 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101064248 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099373601 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121559592 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100480306 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099411873 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128657283 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100829163 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094890209 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126843435 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.0958448 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099551836 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120955046 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105754999 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099139074 seconds)
  done (took 3.154469922 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117519414 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.166696827 seconds)
  done (took 1.183172106 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128340901 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.213733465 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294885544 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171367182 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119366995 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140674592 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148620016 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134015505 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.18855596 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.135026668 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11081926 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097136724 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148619457 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104344624 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114898131 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121200399 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128260794 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113986702 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.136571487 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100405366 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145972892 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102442287 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103840369 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136778427 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179305762 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134292357 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103436128 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101960661 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123407383 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113867483 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105539469 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138427729 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110413342 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177792092 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10238397 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175210409 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105432681 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.122806748 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114374251 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098856985 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124594335 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103351411 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.111464664 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120400506 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102462611 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.10545056 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.126174704 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102632884 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.107683666 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.129255543 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107717538 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127863746 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15021184 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128437562 seconds)
  done (took 7.895485173 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.911065925 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.148288619 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098847417 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.065361384 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149129928 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112007679 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.901166692 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.151516335 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250812202 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.926241458 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120219198 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105410052 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.26092515 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257342432 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.272745857 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357047848 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.768848399 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113558225 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130122134 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165723309 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103610103 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139549101 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114512607 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.455876896 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100072223 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098750407 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126316063 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107707063 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177331698 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099905302 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103160046 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196317632 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.292258533 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210873325 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099512864 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121227846 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099296286 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187929275 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269502638 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220163122 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.166687118 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120164233 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098965587 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104094802 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136705442 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096301702 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181308182 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192181073 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167798922 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127115955 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107810428 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.106489868 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126197682 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.177827711 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098560019 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.35966061 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360905811 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.12196963 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105455799 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111428695 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266263538 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124335853 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240806111 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121739084 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214289052 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122894329 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.837327428 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.164651385 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.12231304 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103808592 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104258789 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128278254 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103015614 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182376823 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.409645738 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127972978 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104556592 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099370597 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227123575 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099208705 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123533516 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.156555174 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123819377 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.105406351 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129102451 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10695145 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190064113 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.248640418 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129590431 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.104985069 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127125454 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10988639 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100807792 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231696992 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230723753 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.178922613 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.227165969 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104778338 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180219426 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163320978 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126790704 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189192564 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104966211 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110565107 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125951561 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228533042 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134664402 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125415599 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104556173 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.104862915 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160416698 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103008839 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129499778 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.166775258 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.493491107 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187247694 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097777797 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127786571 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106997615 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179800658 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106630459 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264122065 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106265049 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186577288 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127572648 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097988787 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.105591361 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180906245 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108025958 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128965422 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103474611 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108365107 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.28020721 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221683078 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132637118 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.249380106 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.171465449 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126609746 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170166961 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129661041 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.162971982 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132572794 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10308755 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100581226 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.839791428 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110649964 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105270021 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127476615 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182380874 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099956985 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126191186 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100365416 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09794402 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798649255 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127151574 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098978509 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102446826 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127396228 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105832592 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104974033 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128158895 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156849625 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.269866859 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109188605 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104220865 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123696176 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.156608183 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.125241974 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103622465 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100064331 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124124234 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107227672 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104983881 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126158152 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165564769 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.178891324 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.233131183 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.566746302 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124313993 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100327353 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242857629 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100077391 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.350062533 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107783957 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.237266066 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184532474 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097849734 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.358436642 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.183514607 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205312701 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104015322 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192815092 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099201302 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105703805 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.181160886 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124240869 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107686459 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178451673 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109315717 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10672279 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.2809557 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101084363 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.246392296 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098962166 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190427917 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101282502 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105780979 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327309081 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.124111453 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111685641 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180048245 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104653742 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124081282 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.95595662 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124945358 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109153894 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1046763 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.258844648 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.158547397 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13028633 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108184567 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131257893 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.158035529 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.228673911 seconds)
  done (took 46.668853562 seconds)
done (took 62.87438305 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.265894846 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.168621722 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.372827648 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148927458 seconds)
  done (took 1.924367058 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.259452965 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.171972428 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.24059512 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097150483 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.248276824 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096170051 seconds)
  done (took 2.038285665 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.175549977 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166881627 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144466625 seconds)
  done (took 1.413820919 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207435806 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.208395146 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.34558368 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.23255604 seconds)
  done (took 1.981649761 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.273137037 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116280289 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128869181 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.226221645 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.241276492 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.207896269 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.122866741 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174933837 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129097841 seconds)
  done (took 2.578974883 seconds)
done (took 10.86395372 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.230255258 seconds)
    (2/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.432544879 seconds)
    (3/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.403747991 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.235080801 seconds)
    (5/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.275731502 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.112842771 seconds)
    (7/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.078275596 seconds)
    (8/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.116015731 seconds)
    (9/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.309562689 seconds)
    (10/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.285102875 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.267656174 seconds)
    (12/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.174791012 seconds)
    (13/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.449189593 seconds)
    (14/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.203412319 seconds)
    (15/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.101232776 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.149780849 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.11745034 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.150558183 seconds)
    (19/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.199564833 seconds)
    (20/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.105975767 seconds)
    (21/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.341419115 seconds)
    (22/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.238319762 seconds)
    (23/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.204567354 seconds)
    (24/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.247301979 seconds)
    (25/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.25522617 seconds)
    (26/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.237426561 seconds)
    (27/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.144604632 seconds)
    (28/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.191599435 seconds)
    (29/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.129200438 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.155408799 seconds)
    (31/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.193059676 seconds)
    (32/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.232176871 seconds)
    (33/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.08398561 seconds)
    (34/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.14379999 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.137550382 seconds)
    (36/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.110218066 seconds)
    (37/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.216969142 seconds)
    (38/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.323751924 seconds)
    (39/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.162947187 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.10130583 seconds)
    (41/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.13433056 seconds)
    (42/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.268728586 seconds)
    (43/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.325401505 seconds)
    (44/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.169899469 seconds)
    (45/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.163868464 seconds)
    (46/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.110777425 seconds)
    (47/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.235012008 seconds)
    (48/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.175485444 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.128280908 seconds)
    (50/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.144765616 seconds)
    (51/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.151667611 seconds)
    (52/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.2199089 seconds)
    (53/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.088831827 seconds)
    (54/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.104728681 seconds)
    (55/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.175375723 seconds)
    (56/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.084351928 seconds)
    (57/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.106392998 seconds)
    (58/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.23447891 seconds)
    (59/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.22885948 seconds)
    (60/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.106878606 seconds)
    (61/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.176658359 seconds)
    (62/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.146370778 seconds)
    (63/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.169336897 seconds)
    (64/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.126834076 seconds)
    (65/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.104004008 seconds)
    (66/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.132841334 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.129558026 seconds)
    (68/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.081500308 seconds)
    (69/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.137156548 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102947798 seconds)
    (71/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.238050383 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.112336422 seconds)
    (73/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.081588587 seconds)
    (74/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.078483234 seconds)
    (75/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.147486702 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.122191865 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105489252 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.146508855 seconds)
    (79/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.091101669 seconds)
    (80/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.171278624 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.102288776 seconds)
    (82/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.165293855 seconds)
    (83/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085007667 seconds)
    (84/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.087289662 seconds)
    (85/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.10558745 seconds)
    (86/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.159284362 seconds)
    (87/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.079625908 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.105881062 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.124300373 seconds)
    (90/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111285101 seconds)
    (91/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.081313204 seconds)
    (92/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.133818693 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.128471994 seconds)
    (94/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.131685601 seconds)
    (95/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.221853212 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.10309216 seconds)
    (97/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126527124 seconds)
    (98/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.146281312 seconds)
    (99/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.107215938 seconds)
    (100/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.11261453 seconds)
    (101/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.091149021 seconds)
    (102/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.085373915 seconds)
    (103/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.136392763 seconds)
    (104/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.132357543 seconds)
    (105/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.102738414 seconds)
    (106/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.135556623 seconds)
    (107/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.100461937 seconds)
    (108/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.131768641 seconds)
    (109/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.089020817 seconds)
    (110/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.160278482 seconds)
    (111/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.086268093 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102094058 seconds)
    (113/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.106192484 seconds)
    (114/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.082012454 seconds)
    (115/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.111280771 seconds)
    (116/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121702278 seconds)
    (117/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.148668067 seconds)
    (118/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.143356498 seconds)
    (119/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079079679 seconds)
    (120/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11124194 seconds)
    (121/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.104386179 seconds)
    (122/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.151496011 seconds)
    (123/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.110766739 seconds)
    (124/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.170291767 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.104332122 seconds)
    (126/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.086490538 seconds)
    (127/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11011973 seconds)
    (128/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.124901846 seconds)
    (129/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110535355 seconds)
    (130/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.081972924 seconds)
    (131/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.079137158 seconds)
    (132/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.104445265 seconds)
    (133/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.147254689 seconds)
    (134/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109759348 seconds)
    (135/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.137051716 seconds)
    (136/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.138416415 seconds)
    (137/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079813012 seconds)
    (138/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.080361126 seconds)
    (139/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.081544797 seconds)
    (140/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.138702903 seconds)
    (141/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.083331966 seconds)
    (142/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.085047477 seconds)
    (143/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.086421186 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.126843993 seconds)
    (145/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.101507671 seconds)
    (146/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110764434 seconds)
    (147/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.110503647 seconds)
    (148/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.111663431 seconds)
    (149/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.081353083 seconds)
    (150/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.100115595 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.111443222 seconds)
    (152/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.135275791 seconds)
    (153/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.085446201 seconds)
    (154/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.123900183 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.126773873 seconds)
    (156/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.085617731 seconds)
    (157/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.136650059 seconds)
    (158/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.084825451 seconds)
    (159/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082975845 seconds)
    (160/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.104783366 seconds)
    (161/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.080356308 seconds)
    (162/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.086730024 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103014148 seconds)
    (164/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.110634041 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.104497506 seconds)
    (166/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.10409096 seconds)
    (167/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.084099591 seconds)
    (168/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.10593058 seconds)
    (169/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.087119807 seconds)
    (170/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.08228728 seconds)
    (171/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.079073743 seconds)
    (172/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.086035103 seconds)
    (173/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.148320118 seconds)
    (174/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.087344906 seconds)
    (175/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.081494022 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103320262 seconds)
    (177/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.104801665 seconds)
    (178/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.102063328 seconds)
    (179/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.085392912 seconds)
    (180/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.083035839 seconds)
    (181/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.093887637 seconds)
    (182/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.104859214 seconds)
    (183/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.101930071 seconds)
    (184/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.083687039 seconds)
    (185/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081988569 seconds)
    (186/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079196384 seconds)
    (187/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.135767125 seconds)
    (188/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.086649496 seconds)
    (189/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.101122217 seconds)
    (190/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.128368838 seconds)
    (191/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.111225526 seconds)
    (192/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.082514473 seconds)
  done (took 27.425720548 seconds)
done (took 28.362606726 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.224041479 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130816775 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110552955 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110411178 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.233293424 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117777059 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.155352506 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11210434 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121996798 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137395824 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101298985 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123441046 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.137254884 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.217604906 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.142608638 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103619741 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101788713 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148276118 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.126373053 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126800133 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.232970477 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129094699 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.122226856 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.10208449 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.235285507 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103296516 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.136643354 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.112510607 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12470699 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.136907773 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.112156232 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.101853735 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.151631712 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.127863536 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101564591 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111236073 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126929339 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086690773 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111577317 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.136965951 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.124782907 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111943076 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.13626202 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.104412369 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112168803 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.1112946 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128176775 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.113939279 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100429322 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.137827093 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104493595 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.126509593 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.13579583 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.101335302 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.10027127 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.127098076 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.122455796 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10161376 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.14946775 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103169404 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.102605716 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10181169 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.138182028 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101981125 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111009088 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.127285181 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.111783349 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.113581902 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.134717411 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104966561 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101760217 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110501273 seconds)
done (took 10.077172034 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107245691 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145372746 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.247216284 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.251944469 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.156579618 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.118250861 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.115571191 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.151926093 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.116177972 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.118697706 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.164080293 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133710579 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.253141339 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.11779403 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.145518715 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.114169616 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112359818 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.13533348 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.249912087 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127893359 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.123830621 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.1456394 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126772616 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117781318 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.132186782 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.138864376 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.133973741 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114626797 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105636268 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.138199487 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127557632 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.106105253 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.132830858 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125075473 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123186894 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.140156999 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.118905414 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114948626 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.133746966 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.108188758 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11214841 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.146890397 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107336206 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117505026 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.140271888 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.12161351 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.113111591 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142436409 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108917762 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11397867 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.106244516 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156056088 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.11811949 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.145929032 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.119275084 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118232912 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.142996326 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.119794703 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.108820123 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.117653509 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.131373131 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107850935 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.106843406 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.151274684 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.108833673 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.117971147 seconds)
  done (took 9.758021673 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125861885 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.134828318 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142397298 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117399985 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111036955 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125943809 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100700864 seconds)
  done (took 1.836959784 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102859379 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.266715481 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.256914165 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.257857581 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.24562516 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.265668281 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125589364 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101756376 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.164021975 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.11247827 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.267652332 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.322436533 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.139344954 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119196722 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.261986528 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.102177868 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.260658985 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.102666897 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.144809126 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.260969848 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119750424 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.132464122 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.142737146 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103129455 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.262170769 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103733931 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.307462422 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.148263756 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11392161 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115901261 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.145410041 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.177875064 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.261905023 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.145107699 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111969825 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.257527441 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.249255579 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116958449 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.303423431 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.136465957 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.245609235 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.1192461 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117659654 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.145867082 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118092461 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.246282296 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.12151671 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.145340829 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117711477 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.27298625 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.113246873 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.264181639 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.114795463 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.143963628 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114265717 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11929443 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.152551033 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118090855 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.270257761 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119718366 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.25711419 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.259021346 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.251124043 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.259192527 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126525936 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.263579817 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.240669711 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.144238244 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11233293 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118857642 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.259633854 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.143702911 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115587255 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.251239281 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120794621 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.262570122 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.261812553 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114675197 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.143358314 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107072625 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115907756 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.129869308 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.22433991 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145040092 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116275121 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120557649 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.143947146 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117540575 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.107694561 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.154678678 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.117381897 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.13984844 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.124167535 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116814435 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145337407 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.264416865 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114054029 seconds)
  done (took 17.713427246 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106046725 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104766046 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107929507 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130630438 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105413963 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.10495783 seconds)
  done (took 1.668291199 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141271736 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118579884 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152572475 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119964697 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165450788 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.249626646 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.259974121 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139723075 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.13828644 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130122902 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.254017149 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.255542691 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.253612488 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120759071 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.256783702 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120507364 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.260017981 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116501058 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.154514132 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115481795 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116282315 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.149334492 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115091451 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.243822835 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118543077 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.147216417 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111478631 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126520418 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.154499186 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112059642 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.121729027 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.146293464 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110332047 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111020822 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.256707155 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.138324853 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115887153 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120185814 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.147555495 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119783109 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.258933067 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116308785 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12333824 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.149464677 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112247794 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.137411678 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.12394977 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110694593 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.259154813 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120540258 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.148866068 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119441376 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118911211 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.148869559 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.110447076 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111325958 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.149041928 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.261341473 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121815421 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.109985424 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.146465133 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119736525 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.111324282 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.150945871 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.11998516 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12058363 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.136914966 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.140360796 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115457769 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.14552968 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122703523 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118538677 seconds)
  done (took 11.777053074 seconds)
done (took 43.729943453 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.771053149 seconds)
  done (took 2.777247722 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.135594897 seconds)
  done (took 2.14416093 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.360732884 seconds)
  done (took 19.400784556 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.500929972 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.43730547 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.041592091 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149811579 seconds)
  done (took 3.138023278 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.114375159 seconds)
  done (took 2.139024733 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.412482621 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.279847807 seconds)
  done (took 1.70487099 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.726470175 seconds)
  done (took 1.745687143 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.890799871 seconds)
  done (took 2.905340337 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.280011166 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.247158455 seconds)
  done (took 1.556240985 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.668319065 seconds)
  done (took 1.696137198 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.757473559 seconds)
  done (took 20.789600689 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.258603067 seconds)
  done (took 1.291515842 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290938044 seconds)
  done (took 1.322774635 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.695856715 seconds)
  done (took 4.727228511 seconds)
done (took 68.360437247 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.119127719 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.121252221 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.120206697 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.145061254 seconds)
  done (took 1.524716655 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123270634 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117832722 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.121788113 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.142865514 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123451871 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118200645 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143166181 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120276328 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116371083 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144924993 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119029313 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117502023 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146057121 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117999572 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115582156 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.118984963 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.148391915 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117917299 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.118356741 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.144630473 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118192195 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.119174302 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.147471616 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122133059 seconds)
  done (took 4.075979564 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115164785 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109790149 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110452803 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133861366 seconds)
  done (took 1.504955344 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126887994 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130621359 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.1535117 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125317752 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130100553 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.154478583 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117546372 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115442893 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143686219 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126745098 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134729843 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.15811857 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130185899 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120391148 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154707174 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113369863 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119159706 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155580678 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125150831 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127501479 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.146429794 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126073295 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123930075 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.153418182 seconds)
  done (took 4.244386035 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194721619 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129332927 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.172157228 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163524984 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.174486644 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.11633281 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.146723267 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.149982411 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124512971 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.126214165 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.145425616 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165317321 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.124740583 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.147627083 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118520309 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.124092596 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.153208519 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122823929 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.187986545 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.122276164 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.123153021 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.155852221 seconds)
  done (took 4.223747308 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.1210457 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109007857 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.106819031 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.132748375 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121607433 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.112001463 seconds)
  done (took 1.736817161 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108636021 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103506878 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103588801 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129812178 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.10748825 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103068624 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.101753442 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.131087759 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103288134 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103539633 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129608171 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103347639 seconds)
  done (took 2.370060676 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207162936 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147787369 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250494145 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.387606413 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189572501 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160186641 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.303071641 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192280107 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.177593463 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165620643 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181482785 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19028118 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153539777 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213895147 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140141005 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.185932234 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172901665 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235645748 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169910433 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211361724 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185700361 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203379564 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190307371 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176609749 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139085913 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189688856 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119141967 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127661206 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194788527 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163977835 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202440198 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17719006 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14086072 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223034089 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263215175 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176648441 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.318850114 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13370157 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198571899 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.189861643 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257202539 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140463463 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218476246 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179398442 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130001518 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218825313 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156247104 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.21312396 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.13399127 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173897952 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184101553 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207444466 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.197718439 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137026294 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32607261 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133638643 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.169588884 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176682734 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216159401 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229487563 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178631236 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.151745694 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171521672 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215362792 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242226892 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140964015 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.192980407 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124291783 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192802171 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.232448693 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182212068 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188055409 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.220088393 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13246489 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17049703 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194846216 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153364475 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233755704 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199960833 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.11893328 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177970886 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134938249 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126098508 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.217934418 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122861084 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245419756 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130973778 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.211361794 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175634556 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186408062 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188700952 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161276096 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19010944 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14788361 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101158744 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171500789 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157892494 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18640003 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128930432 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182798245 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13954044 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.12424066 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182001915 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.121746278 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197960927 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.13478788 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210297902 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169024776 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.160966 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176498423 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17518331 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.163873004 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19645948 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218406964 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130628344 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132060369 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245824347 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197452064 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.138299291 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196785918 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194707372 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.178749686 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133254865 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193201594 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191816781 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171512523 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225645943 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137539068 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13396096 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.168724877 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170390243 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188706469 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.158426361 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155408799 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.163421759 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213808404 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125232476 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168014801 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180759788 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160202146 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123975053 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164011499 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13592804 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140696313 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.179866658 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.139017399 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183184119 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165140832 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194629499 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155809618 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162376236 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171748656 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161365213 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.168929024 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178555876 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119510658 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.20647486 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194739848 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157498311 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180302816 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.193808165 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205292307 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171422567 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157091694 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181080849 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155927859 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120237427 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190106018 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168459411 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192282482 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.18596876 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20389143 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.193242521 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.1618812 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178005527 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167142414 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.211930791 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184071662 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.145658258 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198375925 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168475614 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.11940443 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.151987764 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.12628233 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135240731 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159524196 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136199512 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209157882 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191868603 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174416034 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197053829 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136946396 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220221371 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124155383 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189367377 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.174412193 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168507741 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.188203752 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219192399 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2075266 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1397603 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192197415 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120661713 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125165219 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.161255492 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163646369 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165491925 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135091481 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168791786 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18993791 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203452408 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14739081 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21563601 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193648578 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198216058 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.149556169 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.159778838 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194640743 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1672455 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.212444473 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133668115 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.157715587 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.219534132 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169721583 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191413587 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196301708 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178122511 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26118908 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.19459793 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129881111 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17846599 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159821162 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167128305 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160813537 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175392764 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130442495 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19842628 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.138090186 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137775691 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21567156 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171211018 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213797439 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.182513014 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201095614 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125642234 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140540846 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202127589 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145110493 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.133420877 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191138901 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220632177 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176992758 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157133529 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198463087 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129321753 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.314294227 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206717838 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228098769 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135036725 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167315271 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171682656 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185772367 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16311334 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212873508 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138850548 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235691703 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198627214 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.144041641 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128963607 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176343095 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148059749 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.168614738 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14952481 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.194717219 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.142833876 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217170145 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135356878 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198209005 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205922764 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.145311914 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147376353 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168409823 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254440736 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16705616 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202552363 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.163246597 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.192804127 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180769496 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15367031 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125917828 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.130472038 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214256017 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127807104 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205903349 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190250939 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180297508 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200350897 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189908158 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140573742 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.125671847 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196367499 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147028124 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210513432 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16101433 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138176091 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213997814 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128412559 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129502642 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189321561 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310757394 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146805051 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167018865 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.13630162 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276867959 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156093173 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131389683 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188178119 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168771252 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.161389448 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182509242 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174772155 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166808992 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158085536 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16585049 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201776916 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179193108 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196417645 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173217419 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.174843602 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160219466 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213049299 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201156166 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14515554 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.175273616 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158793447 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22382078 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.173608948 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.160518876 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168020947 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197939626 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169703214 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203370136 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138263951 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213099585 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126924241 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194571111 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136496478 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122882596 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189398806 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.190613974 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129928953 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202311202 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170111786 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159987034 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126771428 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144853197 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194014965 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139227831 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.158656209 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214898486 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.12974059 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179904093 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238794123 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128839568 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196583169 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14569695 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160270171 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13793451 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17180844 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131470838 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.177711216 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204918168 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130555499 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20423058 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163422668 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192169479 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190231104 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144566009 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.262913462 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.158463377 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188725396 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181149572 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227573772 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149164569 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20391818 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168139119 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178926944 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163873563 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177895178 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219439288 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19472567 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165884572 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159962171 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142990111 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136548789 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.162997892 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150016353 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197923493 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141123393 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.164513169 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.166614344 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174700219 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.146603489 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139581646 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229700928 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179312048 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187082728 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216369693 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137199849 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205426402 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203577564 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129759239 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.162219861 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200310389 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141706568 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180628975 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133897544 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.167045335 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213257915 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.15587904 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159236171 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20550218 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168027652 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202068084 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.13337569 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208395705 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139721888 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206784955 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127033263 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.185740309 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171279463 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163152451 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127818488 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171101506 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191021009 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.16299908 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172051418 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.174709228 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223459981 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123099452 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160307955 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28710746 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190009289 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192602355 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.168982871 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135493277 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175820612 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15848391 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.19357315 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173736479 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.157669002 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129637994 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.142970136 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.18840252 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139225666 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197274667 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178855635 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211963337 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183157998 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.164947442 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.253519529 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172213101 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170479011 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.146435731 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128386019 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139431348 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163910788 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14107157 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206251926 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24497815 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.163446972 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.176509737 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135140789 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125453314 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160280717 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159836596 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180402968 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167092897 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177345736 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104058484 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139453208 seconds)
  done (took 85.373398602 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174209025 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.172446161 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.184006918 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.240812397 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.214293312 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.308476169 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.249921027 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.260981791 seconds)
  done (took 2.928736189 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.120298678 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160510006 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141824669 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145002657 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109575806 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.535362562 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.162975683 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120461477 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.192926419 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.676923022 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.111878193 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.580886508 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.12266909 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.148945337 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.147948283 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.109859082 seconds)
  done (took 4.706054171 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 15.309484118 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 1.968132191 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.175820612 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.309740156 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.424165113 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.212747306 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.827006284 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.226806565 seconds)
  done (took 25.577966514 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.172071742 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.16838943 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.460353722 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.33897921 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.215265922 seconds)
  done (took 2.486458299 seconds)
done (took 141.7800001 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.125348203 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12468052 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124285288 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156030456 seconds)
  done (took 1.641192641 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.195969893 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092147193 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094248577 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122371847 seconds)
  done (took 1.630649121 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.448582324 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092192031 seconds)
  done (took 1.689510866 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.146313439 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133541703 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.165194121 seconds)
  done (took 1.586028014 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.137578529 seconds)
  done (took 1.265534395 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.117412347 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.116405655 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.277491014 seconds)
  done (took 1.646630623 seconds)
done (took 10.597678378 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144312904 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.92639476 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.435921635 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134025982 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.714132573 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.43116293 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.427646909 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177547927 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.170284573 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139521513 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134129277 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.693049305 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.442644557 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.890486842 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.399163749 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.911588757 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.69869702 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111788588 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146204626 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113376708 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.406954962 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.137422224 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113319997 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113466943 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.693900321 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.451237409 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110543387 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.894126271 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140157139 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114199508 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.399907628 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141524352 seconds)
  done (took 21.078966606 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.152856099 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.168338795 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.15124088 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112538264 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114211032 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142928441 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122180551 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121983249 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204058282 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111174263 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162161264 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111579133 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11568154 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.14079926 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136382078 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110998193 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.143045774 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114532651 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118681992 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.14081651 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135246459 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110619933 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112624517 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143083628 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111022708 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133064827 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141956948 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122758557 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110239717 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.145069006 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115924518 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111910461 seconds)
  done (took 5.327339671 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161320095 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177869546 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.154052062 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149825337 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.190728375 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114599 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19872143 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179731235 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174961774 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.142019806 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133158693 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111549311 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.183045274 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.115886944 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165505963 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112906955 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114228772 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142047323 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120804329 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113455699 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163961562 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112503343 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113337527 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140893685 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113698048 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135104052 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139185576 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124571358 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111654911 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144123705 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118151058 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111878124 seconds)
  done (took 5.633450944 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.127308787 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127239434 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134256737 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.165843296 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122792151 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126314806 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15659645 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122115599 seconds)
  done (took 2.230835569 seconds)
done (took 35.41118958 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.135887951 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127606171 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132477671 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.158051454 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.276055496 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.119888639 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129324686 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.150253813 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.12844727 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13449308 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111888041 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.152987122 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132382407 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123600633 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.274898016 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.127535841 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.280308621 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.277837846 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.15322982 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.128323651 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.120489065 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.280052931 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.124610329 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.153161726 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.271762562 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116353414 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.270570371 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123515986 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.12299972 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.144457476 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.278013077 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124413027 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.120687763 seconds)
  done (took 6.634394639 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.228825467 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.152983979 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.122674119 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120242874 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121577821 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.152299186 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.230213493 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.153505763 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121074195 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120153338 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.151810995 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.213510042 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.158572329 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.117682772 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122333992 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.112318752 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.263655245 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.122903408 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.145762111 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095655391 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116280778 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.119918881 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.274558657 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.116018245 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.154255859 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.1205309 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122294742 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.156486939 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.124177034 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122813452 seconds)
  done (took 5.61264341 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.129984267 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136959945 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139590098 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.218528278 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.149291191 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164066115 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138032916 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131640902 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.173985882 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114942689 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129852127 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.182401547 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132183499 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125158025 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.143742091 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131360559 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.129368127 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.114439832 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.152931878 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132519994 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.133288737 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.161714349 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.136660046 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.121967465 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.143568746 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121996171 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.123849339 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.156961161 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122571453 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129028279 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.145559223 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116768829 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.11620102 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.180080651 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.119229058 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.127064482 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.165800623 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127566152 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126548564 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.177222537 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117884125 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.115102626 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.169787582 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.172035355 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.115283026 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.154975015 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.118449001 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129200717 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.111589959 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.16372955 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.157231656 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.115889946 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.165856986 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113241704 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111781254 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153288767 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.11483276 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117282302 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.158014019 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116666093 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.134761899 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120748316 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.155994279 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.116925763 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125253079 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.144813946 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.11409307 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117486937 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.171911596 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121791885 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.15156655 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.144263247 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12697299 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126751105 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.1555797 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12871127 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113257908 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124852678 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.156371281 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.118041757 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126630977 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.147822987 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116118886 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130205734 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.165924173 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129299054 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125839397 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.155577605 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116981356 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115987166 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130864965 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.146056423 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.117956132 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.126627276 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.145146111 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118699731 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124222431 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.152915954 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.113360994 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139884758 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116386937 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.14497039 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.142372923 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.11734942 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.148630423 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123856113 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.155181675 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.148456448 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12405565 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.12503231 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.144691305 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121965649 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.115403711 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.112382587 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.160520762 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130352121 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.120910976 seconds)
  done (took 17.05046361 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.373075166 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.363041488 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.212558245 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.408242836 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.125750558 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.283563993 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.395132929 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.367956428 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114961267 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.148335204 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.205456085 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.331343672 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.114447165 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.17601952 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.370155031 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.445947841 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.144594854 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.18447758 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.149990721 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127436736 seconds)
  done (took 6.216161218 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.124005853 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149412087 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167086332 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.133656801 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125039155 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13106995 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.145424009 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136237017 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.124944101 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.155394831 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117997197 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.122079351 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.159558419 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129856527 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129728718 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.178358924 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123956126 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.119111166 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.168319937 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120231979 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.103362795 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.17045757 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123379307 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.135442433 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.16349635 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125496825 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.113476511 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118493909 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.152131217 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.123714685 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118870354 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.154376475 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.122642062 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105354528 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.156037719 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.130701117 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.120580487 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118407236 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.151523947 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.118000201 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128706311 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.15681652 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123328183 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100611048 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132386179 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.142266974 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.129649238 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.12562652 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.10740444 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.166043741 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126945962 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128427924 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.152881522 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.136862306 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.1216969 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.160834698 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126228691 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128853397 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.149837909 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.114033635 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11290081 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116607357 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.154543605 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129166356 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.12602706 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.153403516 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.124310151 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.114727718 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.148254817 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.11815462 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.117897046 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.126560018 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.165620852 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124569542 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.12104598 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.155951116 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123654552 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096256794 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.121663027 seconds)
  done (took 11.684614783 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140497755 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125403656 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131160045 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.178836987 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126565257 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.12086516 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.155809408 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135369379 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128683752 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.165372426 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129584286 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128101207 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167806185 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12603544 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124977066 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161957956 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128329727 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152175427 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.157990622 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141946822 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.129364635 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.152876215 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128423873 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125979777 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.175643914 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126498209 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140948929 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.157087434 seconds)
  done (took 5.152369655 seconds)
done (took 53.502472907 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.317772044 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.586304166 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.281972728 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.280216848 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.299294624 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.338586353 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.284816945 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.281572677 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.84845538 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.256390216 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.282948342 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.282386608 seconds)
done (took 29.524650028 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.433800556 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.498005019 seconds)
    (2/2) benchmarking "String"...
    done (took 1.669168824 seconds)
  done (took 4.347658456 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.275524003 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.271359717 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.600742594 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.271668206 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.271691882 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.273148143 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.274210289 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.277978366 seconds)
  done (took 16.415168787 seconds)
done (took 26.644966724 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.322779663 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.585339239 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.555830389 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.270045933 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.273166022 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.271168631 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.275692461 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.347657478 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.284247529 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.255827365 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.805190241 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.563191101 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.287431314 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.686539608 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.268020465 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.290046311 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.289534165 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.635088024 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.277550029 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.313784595 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.256434146 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.258318464 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.283482209 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.281204684 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.286469529 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.276063946 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.305313266 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.2730746 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.595365653 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.297313646 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.313869103 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.27602728 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.306348663 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.277547515 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.294348744 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.2831249 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.579254527 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.286608723 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.255308374 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.28536478 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.573022798 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.301181177 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.28007528 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.281906309 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.256426324 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.347538818 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.264071081 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.459371615 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.310561141 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.285797866 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.364589659 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.665354233 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.28248236 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.286389631 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.288585232 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.605036576 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.307269241 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.389915016 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.305080485 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.285934685 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.281092239 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.276222696 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.350114564 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.292729683 seconds)
  done (took 149.643095819 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.275431394 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.280283687 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.280235217 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.288217587 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.280121445 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.28130302 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.276747763 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.275827743 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.281134564 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.288521815 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.280814131 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.280989852 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.281829763 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.290975968 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.286280399 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.295508458 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.278555115 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.280052792 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.291197714 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.276328645 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.283125808 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.278734189 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.282054722 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.277363623 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.283159123 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.366691463 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.297101887 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.286775225 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.286910857 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.276360074 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.286955485 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.291518705 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.282305173 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.257157841 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.294093823 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.324689404 seconds)
  done (took 83.481745202 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.279333217 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.279062512 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.279755267 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.316058278 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.278347687 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.915980308 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.922662372 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.350042208 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.517215353 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.777773487 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.555913849 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.277657585 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.278083058 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.374026403 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.291535606 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.280129896 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.376389274 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.306252492 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.284503218 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.280003484 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.894764411 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.292294432 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.280885649 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.463620758 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.297631773 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316391142 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.675841949 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.28012403 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.420882642 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.284893771 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31647132 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.624358446 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.335572421 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.280085687 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.651983748 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.763899725 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.39559423 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.283790697 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317163446 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.28283911 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.572798887 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.283682652 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.282109059 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.284741936 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.94615663 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.281563179 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.920707166 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.286291295 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.289801657 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.281863077 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.279647084 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.397414086 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.044586187 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.282388354 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.281427408 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.283979687 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.281758455 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.281719694 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.318413117 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.389969074 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.197802318 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.283043675 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.286781929 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320920977 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.28359591 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.387350095 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.287062901 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.270473153 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.3466401 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.396070339 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.899619289 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.283765066 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.283849014 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.381829352 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.403491184 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.28359144 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.282536208 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.282638036 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.283918507 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.397477221 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.283097592 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.024816704 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.468780073 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.302164822 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.788087787 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.384879251 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.283145084 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.675057911 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.284131173 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.285440907 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.047203768 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.382347923 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.282631332 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.284092411 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.284516068 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.025762704 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.929613535 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.625540371 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.288105003 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.014487038 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.287549904 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.203269983 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.899937695 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.95789709 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.285671733 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.400195025 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.473227706 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.303469387 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.28328309 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.794495795 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.285277129 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.343248049 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.286238005 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.690055767 seconds)
  done (took 388.415088618 seconds)
done (took 622.71525829 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.264696509 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.265712281 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.266382757 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.266175259 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.266006592 seconds)
  done (took 12.511111644 seconds)
done (took 13.697597788 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.579870526 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.570766855 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.568446099 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.383199218 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.583861467 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.586693671 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.490489748 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.390920941 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.560356313 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.58672929 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.570185426 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.354166197 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.586725799 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.55128854 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.334338327 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.476620106 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.513870863 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.506982976 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.40778747 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.472785471 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.606039148 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.35306459 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.354477829 seconds)
  done (took 35.573907828 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.685522859 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.297776345 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.418743263 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.669964455 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.362717913 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.666107261 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.715786903 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.29898362 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.540291681 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.341404448 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.338602975 seconds)
  done (took 19.521930617 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.699319865 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.298635532 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.439105211 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.661629108 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.362852497 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.689349952 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.720544491 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.298697481 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.549375867 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.342436074 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.339170296 seconds)
  done (took 19.587036871 seconds)
done (took 75.870897202 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.352743041 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.426239957 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.351693187 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.329709595 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.327277023 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.328196902 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.334453285 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.33121265 seconds)
  done (took 11.9667156 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.32714209 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.328087322 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.327915023 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.326349531 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.327476141 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.32661828 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.326326065 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.327651372 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.326784851 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.326766204 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.327648719 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.327824648 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.327710808 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.329085144 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.326215925 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.328617487 seconds)
  done (took 22.425395855 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.331040351 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.328196483 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.327303772 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.328705976 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.326540268 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.32758216 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.328882604 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.3287747 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.326850223 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.327065614 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.329187043 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.328576491 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.327904058 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.326971467 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.328218135 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.33737733 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.326643563 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.328948814 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.32968096 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.328841887 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.328971582 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.329350262 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.329188369 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.330587849 seconds)
  done (took 33.079982728 seconds)
done (took 68.660663834 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.296338382 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.308940753 seconds)
  done (took 5.793857795 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.446305777 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.425049582 seconds)
  done (took 4.060859625 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.330062294 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.328914731 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.330187519 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.330465347 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.330177042 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.330350109 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.331115989 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.330094072 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.329144229 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.330367431 seconds)
  done (took 14.491291316 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.3315599 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.330356256 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.332238269 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.33271745 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.330786897 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.330945087 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.330123474 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.329936859 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.330117608 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.330458712 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.331257627 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.329806395 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.3310319 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.329960884 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.331592097 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.332023158 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.331017094 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.329753385 seconds)
  done (took 25.146992925 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.351830844 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.357637378 seconds)
  done (took 3.901054178 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.516977892 seconds)
    (2/7) benchmarking "second"...
    done (took 1.41359184 seconds)
    (3/7) benchmarking "month"...
    done (took 1.500874169 seconds)
    (4/7) benchmarking "year"...
    done (took 1.487239474 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.413941605 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.362163652 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.413230551 seconds)
  done (took 11.299163392 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.326474686 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.686269811 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.887343355 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.540553935 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.323494769 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.35083393 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.276473426 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.352731447 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.35951555 seconds)
  done (took 15.295703735 seconds)
done (took 81.180432304 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.296716223 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.304850638 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.327385208 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.320513314 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.743360101 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.343091883 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.2969379 seconds)
done (took 16.830300767 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.282314812 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.279400404 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.286946267 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.304723666 seconds)
  done (took 10.344216957 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.305926124 seconds)
    (2/2) benchmarking "read"...
    done (took 1.711670876 seconds)
  done (took 5.209783172 seconds)
done (took 16.748504123 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.335377983 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.334146262 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.333521742 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.334202276 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.335343273 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.334077119 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.334750669 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.333699139 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.333833024 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.33423091 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.334071254 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338654657 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.334944758 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.33522091 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.337169692 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.336473793 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.334931768 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.337002212 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.333770307 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.334207653 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.337554377 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.336043152 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.334110295 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.335588485 seconds)
  done (took 33.23710606 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.335442936 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.334209888 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.335662098 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.335377146 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.334880993 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.336196384 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.335391044 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.33603938 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.334529272 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.335298294 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.336717958 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.335034435 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.335253457 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.33445105 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334608402 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.340068175 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.344438004 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.344629579 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342645248 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.336226695 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.33528251 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336574015 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.335886218 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.336834803 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.335696111 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.338387654 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.336716422 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.336850867 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.337015133 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.33639585 seconds)
  done (took 41.299695514 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.343664862 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.344295668 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.335725444 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.339831343 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.336738492 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.337199724 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.336921476 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.338111502 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.335545184 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.336234378 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.336114181 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.336257635 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.336755323 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.337633927 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.338883318 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.337396536 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.33768526 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.337013527 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.337935222 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.337954288 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.338613311 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.338017216 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.338193635 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.337948213 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.338113458 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.338330175 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.338009114 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.339231616 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.339488492 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.337888499 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.342052784 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.339723368 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.339605476 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.338875006 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.339710308 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.341158467 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.346318272 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.346893484 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.339297825 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.339919692 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.339648639 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.340394543 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.339947001 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.340400829 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.339061133 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.340428277 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.34058961 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.340464594 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.33984566 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.340501121 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.345923878 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.340190258 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.340830143 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.34686911 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.340550429 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.339483604 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.342375801 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.34166349 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.341168036 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.341008378 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.341873013 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.343114512 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.340273159 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.344063585 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.341242836 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.341841305 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.341942646 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.343762639 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.341557331 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.341296473 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.339869267 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.341250029 seconds)
  done (took 97.677177946 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.342231857 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.34236763 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.341233895 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.340944333 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.341609014 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.34192728 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.341309953 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.342235559 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341939642 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.342315108 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.343426563 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.343669751 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.342943611 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.344621686 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.342525681 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.342467293 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.344716601 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.343974398 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.342011439 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.344601852 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.342973153 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.343554163 seconds)
  done (took 30.740300007 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.343280315 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.343638531 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.343102569 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.344957414 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.34604624 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.344667363 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.3434325 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.345962639 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346601618 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.342470854 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.344805788 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344121065 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.346519694 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343491655 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.342900868 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.345640252 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.343278499 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.345160163 seconds)
  done (took 25.400310264 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.343404074 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.343078823 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.343639928 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.344036836 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.347352691 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.344813611 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.34398662 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.345566081 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.345068671 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.344215001 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.344860824 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346570468 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.34597989 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.345635433 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.346967307 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.35319212 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.346632417 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.344787281 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.35187687 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.345828474 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.344620779 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.352056012 seconds)
  done (took 30.8190038 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.345726226 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.345075515 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.345994976 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.346052525 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.345574112 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.346392513 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.346605878 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.347284875 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.345787128 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.347369174 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.347043224 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.347604678 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.347859878 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.348920208 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.347003833 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.346277553 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.346449643 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.346397472 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.347318887 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.346655325 seconds)
  done (took 28.137808308 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.348346952 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.350133631 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.347643928 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.348466449 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.348087421 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.349287574 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.349190424 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.349314672 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.348443611 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.350588507 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.348108932 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.348355332 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.348698881 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.34972883 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.348750844 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.349404488 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.348296525 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.348604107 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.349023364 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.349589847 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.350042698 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.349111225 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.350422425 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.350418024 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.349909999 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.350368228 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.351255351 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.351062101 seconds)
  done (took 38.986315649 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.351021872 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.349109338 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.350538221 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.357172445 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.352647917 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.350915085 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.351534018 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.352381682 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.351622787 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.352193949 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.351504895 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.349942824 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.351635707 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.351252348 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.350730913 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.350322482 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350696691 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.352496851 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.349704736 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.350918996 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.35021339 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351058958 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.351859688 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.349501288 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351785238 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.352817701 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.350406431 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.35207913 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.351512158 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.351696749 seconds)
  done (took 41.748880986 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.37744276 seconds)
    (2/2) benchmarking "in"...
    done (took 1.378799077 seconds)
  done (took 3.964644317 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.35223299 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.351654285 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.351835803 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.352356539 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.351861644 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.353683594 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.352271053 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.350969631 seconds)
  done (took 12.027003085 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.346302627 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.353815733 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.353879149 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.351334482 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.352838514 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.344714575 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.358953049 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.356747321 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.347899059 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.346751916 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.353717048 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.352789066 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.350915783 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.347782284 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.346765814 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.35114584 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.356147105 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.354265651 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.355544444 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.355847207 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.357028781 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.351727897 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.354345689 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.357960395 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.34767424 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.365897717 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.363782014 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.358513887 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.347468977 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.360158509 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.350650247 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.356461321 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.355678191 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.355252089 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.355346025 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.355971943 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.363873576 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.356477804 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.364847373 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.361706122 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.35532619 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.355576921 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.353417289 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.353561232 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.358445093 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.359945004 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.355907061 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.356064483 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.348284303 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.356507975 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.363235786 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.348702932 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.358591411 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.360413081 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.355780438 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.367634389 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.365637069 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.353450602 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.365833392 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.36799973 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.374339153 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.366861108 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.360394224 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.362003157 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.366970409 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.378171763 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.3703054 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.36593124 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.36096336 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.35739475 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.366552549 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.376367274 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.372372632 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.363246262 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.358140376 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.359658725 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.354807828 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.363093938 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.368627533 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.366413425 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.364534554 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.359316363 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.368571869 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.373052188 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.355016444 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.363464236 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.35970042 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.360676522 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.350990932 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.372119248 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.368445037 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.360687976 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.352071727 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.354848546 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.356837276 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.361452668 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.351125377 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.356587873 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.364280402 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.36057616 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.36052308 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.359474763 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.371209565 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.36514364 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.36145651 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.369784174 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.366529222 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.354929422 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.372631114 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.368038282 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.36146489 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.354290025 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.365539222 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.365073031 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.358339492 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.366111291 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.36586971 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.365340383 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.368922752 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.360976839 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.371831851 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.38727292 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.36923194 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.366934021 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.364742961 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.373493375 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.362496027 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.363976243 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.369925533 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.362791944 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.362473608 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.367442606 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.369052028 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.357311639 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.366650745 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.358931817 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.367195716 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.364401716 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.362699614 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.367034802 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.362021386 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.361730497 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.368867577 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.375074721 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.369747927 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.365471754 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.379428418 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.364636733 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.370492575 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.367175044 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.368536529 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.363842078 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.358898014 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.370636447 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.35602628 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.364922802 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.357832305 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.367488282 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.366201107 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.364197011 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.364645323 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.355875842 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.367020485 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.369840955 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.371443952 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.364597062 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.370400035 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.364961494 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.365092865 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.356951956 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.367426612 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.356164845 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.364589589 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.372236302 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.367178466 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.366114504 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.370165159 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.371065692 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.363841589 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.363264979 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.362828821 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.373957331 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.370837731 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.377517629 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.374727122 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.367190548 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.366306148 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.361283862 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.360574204 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.367905514 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.364276282 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.374587369 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.380327694 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.381958208 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.365120732 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.371022879 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.359440471 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.370683591 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.372779597 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.375386074 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.371519311 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.366941215 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.361692782 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.370738485 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.364419945 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.371483204 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.359167252 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.370110542 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.368260797 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.368698771 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.366093621 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.361595633 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.365105926 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.370669622 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.366477678 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.368607698 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.361041582 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.370450879 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.358532185 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.362082287 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.371583705 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.367653875 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.379715116 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.375276842 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.371993952 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.37864864 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.369198206 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.365254897 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.371753559 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.372600175 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.367822053 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.383070221 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.371393806 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.365223538 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.38327772 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.371500803 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.36244176 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.376218652 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.377482011 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.368885736 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.364382579 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.376493337 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.370544816 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.370249806 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.369415063 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.362510344 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.373613712 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.380399211 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.379980093 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.363988396 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.374407108 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.365439278 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.373019781 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.373730975 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.376751332 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.37271667 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.381015071 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.380036246 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.373058334 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.365771233 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.375986569 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.369973584 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.372150956 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.367433875 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.379349427 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.381514297 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.371709908 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.375655452 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.369465139 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.376350233 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.365189805 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.374676277 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.366407628 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.39523762 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.393752446 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.383740837 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.378192366 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.376755941 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.384192222 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.377797135 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.369452149 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.368132707 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.370580784 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.368801088 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.368470041 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.377516722 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.367999729 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.379002176 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.379606233 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.376788347 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.377519725 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.374980366 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.367001978 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.378540385 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.375300937 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.37563415 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.36230543 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.376561363 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.374920721 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.384780076 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.375808893 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.370862454 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.39023063 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.379878964 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.370480562 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.371255311 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.370696791 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.367016644 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.377580277 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.380854367 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.373969693 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.382016387 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.372555407 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.377271439 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.373637807 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.38963663 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.386744641 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.374577661 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.382182539 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.374413045 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.365238345 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.368642269 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.377683223 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.387218305 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.387050476 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.367840771 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.380670964 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.375021782 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.377258519 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.376044747 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.376869224 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.376513172 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.374152956 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.390021035 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.38259586 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.373924715 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.386739054 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.384002463 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.377208513 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.377200969 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.368462218 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.387216699 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.393322293 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.378857255 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.376391509 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.374316594 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.379234329 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.379036399 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.378965021 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.376953173 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.377983122 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.390744661 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.386739263 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.381065218 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.376555776 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.392133595 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.388911956 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.392100979 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.391661398 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.37709083 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.384621187 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.37931737 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.375600347 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.374766512 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.373431705 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.381393961 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.370581483 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.384463415 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.377694119 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.38201925 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.388577975 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.384983174 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.371268441 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.391851575 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.402370441 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.372788956 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.380240323 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.380271961 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.373645 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.382882977 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.378648081 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.372366765 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.377221502 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.385253111 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.387060324 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.372942048 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.384666444 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.374539108 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.379400342 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.379916748 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.379100023 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.38075617 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.380854088 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.372984232 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.383292946 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.387827111 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.391036318 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.378972704 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.383771149 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.376299039 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.395365709 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.39299334 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.381250158 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.385903473 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.382571275 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.377099281 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.381876634 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.383721981 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.374966747 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.384918432 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.380016062 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.382256012 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.378135236 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.390207512 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.387165086 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.383325701 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.372890017 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.375124169 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.385292431 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.381511015 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.383988494 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.387453461 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.387785835 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.375073743 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.374846689 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.383900774 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.382094888 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.39055148 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.377490741 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.384524177 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.3814689 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.386622768 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.383247968 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.382618348 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.375126055 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.377952392 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.398599082 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.391192623 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.386887676 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.38375271 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.386853733 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.379137459 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.381880056 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.384226583 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.380288233 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.378408176 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.38763421 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.380311281 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.378236088 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.379842926 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.386757352 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.397520103 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.387326768 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.377294277 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.397041691 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.398326002 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.393008217 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.378808856 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.381951294 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.379928481 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.386880832 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.382687142 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.379156386 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.402351165 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.39375978 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.385938114 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.391639747 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.388030628 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.379159808 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.390150032 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.384638856 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.39068341 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.390787893 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.38707045 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.392099722 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.385472622 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.386120469 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.376806994 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.380248214 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.384793905 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.384650939 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.389816261 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.396579063 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.392413658 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.389225613 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.39243489 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.389105137 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.388336883 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.392995087 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.379374849 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.390414451 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.378873528 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.395126573 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.392886973 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.381777669 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.391393836 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.38965849 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.383957275 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.388605562 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.394222338 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.386842908 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.380597002 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.38639739 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.400655838 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.400696555 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.389242376 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.380648196 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.386706508 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.393143011 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.388086502 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.389308514 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.38542506 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.408205122 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.401132714 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.382395415 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.384922692 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.399603888 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.397982243 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.388029092 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.389177353 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.391926655 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.393558287 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.395258643 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.390054978 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.4008398 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.396712459 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.385942235 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.39355249 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.388433543 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.388891772 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.400123787 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.400347768 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.390476261 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.393708096 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.411716043 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.403357158 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.400480467 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.426042515 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.399847215 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.396096109 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.397147291 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.380740107 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.392027296 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.393806223 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.397061805 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.390150591 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.390863531 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.390119651 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.38461993 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.403469533 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.406823033 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.401686765 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.390589823 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.383059955 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.386394666 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.392597201 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.392471068 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.393243932 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.390623906 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.391729143 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.391287886 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.386855619 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.413800666 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.415708171 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.399313768 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.393222281 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.39706397 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.401426397 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.401845724 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.397760498 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.402412974 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.391362198 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.392805607 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.398103208 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.401309273 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.39348223 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.387608857 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.38990482 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.389746699 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.395999659 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.411982348 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.418641714 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.405355737 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.396775107 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.395331418 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.39644825 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.389238185 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.398996339 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.393529164 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.38964068 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.392877334 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.399445767 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.395204097 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.396177195 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.393696991 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.400873673 seconds)
  done (took 821.439578126 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.395906072 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.396994478 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.394140903 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.395174274 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.395706954 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.39704225 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.397012777 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.398123533 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.397374345 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.396624389 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.395017411 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.395024884 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.397245278 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.39633364 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.395519221 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.396800738 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.394949386 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.39556371 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.396354872 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.396900891 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.394909577 seconds)
  done (took 30.559329717 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.396625157 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.396673698 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.395996726 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.397313304 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.395764433 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.398288079 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.396184809 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397725995 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.398138409 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.39945345 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.395786504 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.401230212 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.397474637 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.399140072 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.39679138 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.397289558 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.398196098 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.397322523 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.398501234 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.399245742 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.398590631 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.397466187 seconds)
  done (took 31.995640648 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.39599505 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.397673685 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.390654496 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.40004752 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.4094821 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.397877132 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.399375577 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.397476243 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.399857621 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.390394616 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.39048143 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.39305976 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.400277158 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.405577832 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.402325882 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.402908708 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.398149024 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.399956238 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.398660821 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.399129386 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.409252042 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.413070964 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.400759203 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.39200362 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.401927508 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.397547691 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.39958538 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.399089577 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.39266397 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.402670479 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.400719813 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.393636229 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.410929212 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.403199108 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.393772979 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.404789045 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.399579234 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.400490244 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.401378695 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.410114094 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.42438602 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.40370853 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.411719047 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.413281745 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.402107139 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.401354391 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.409849115 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.402813445 seconds)
  done (took 68.515650001 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.402919045 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.402151698 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.402765604 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.401331762 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.401874149 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.401799559 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.401139837 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.401303127 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.403025343 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.401143329 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.407885388 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.403149101 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.406920182 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.402446219 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.402139546 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.40119606 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.402247311 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.403154969 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.402636397 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.403421553 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.404381242 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.404169343 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.402091635 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.40327335 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.404340105 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.403992016 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.402944117 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.403315673 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.402891317 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.406025026 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.404680931 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.403820974 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.405248251 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.405146632 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.404884238 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.402501184 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.404651387 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.402783064 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.404897368 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.404358962 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.402505374 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.403483362 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.402754848 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.403540562 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.403009279 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.403202181 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.404120105 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.404178492 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.405050111 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.404713267 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.403917775 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.403788847 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.406274778 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.40523121 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.404679813 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.405530829 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.404744696 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.407599877 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.405808658 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.404216696 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.404749096 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.405801254 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.405894004 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.405920753 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.404185057 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.406580823 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.406894829 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.406251731 seconds)
  done (took 96.72269763 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.406566994 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.407332804 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.405364468 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.405633496 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.404634975 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.404585946 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.406350207 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.406798518 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.407496792 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.407174823 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.410361192 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.407267223 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.405980048 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.407772175 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.406824569 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.40735187 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.406492753 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.407373451 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.408618652 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.407473046 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.407098346 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.407406906 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.406451267 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.407529407 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.408287325 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.407024524 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.407360182 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.40655561 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.408431478 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.407995388 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.407928829 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.408965903 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.407252626 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.406243071 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.409016817 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.406812556 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.408770766 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.407754226 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.407209254 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.406767788 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.40883977 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.409063192 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.409274043 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.408193178 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.407869045 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.40915608 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.407564956 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.409961071 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.409774735 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.408462347 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.409436913 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.409934253 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.40935471 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.40857088 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.409740652 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.409668227 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.410173808 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.409526309 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.408916245 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.40901556 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.408838442 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.409566887 seconds)
  done (took 88.545261449 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.410326131 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.411627973 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.415006685 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.41400977 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.413282164 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.41379431 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.414871751 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.41560739 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.413680469 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.416605422 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.412785173 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.412727554 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.413415771 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.411673789 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.411281909 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.414048881 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.412297612 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.412008608 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.411263751 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.409440265 seconds)
  done (took 29.516611575 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.416412381 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.410266557 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.410602493 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.413264005 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.411457909 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.4119285 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.410360354 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.410555491 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.412874779 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.410551579 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.412255148 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.411967192 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.409890811 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.41135657 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.410113605 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.411627345 seconds)
  done (took 23.844595881 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.408823916 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.411883383 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.411808163 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.411999738 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.410116957 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.413487358 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.412752558 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.41257551 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.413054062 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.411261376 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.411872836 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.413534221 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.411003173 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.413712526 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.412362983 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.412968507 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.412831269 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.412024043 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.412555885 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.413548958 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.412744317 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.414032679 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.414327409 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.412900691 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.413225732 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.413118107 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.412772532 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.41358744 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.413918907 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.413192767 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.410171572 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.414269231 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.413027802 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.41518492 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.41329697 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.414610964 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.410393877 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.413690875 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.420918749 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.421736171 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.423022998 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.413898514 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.417013714 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.412113021 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.414784799 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.414483504 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.41228525 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.412243624 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.414834037 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.414898711 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.414147148 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.413549656 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.413574101 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.415828018 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.416787987 seconds)
  done (took 79.010589198 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.415564996 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.415535313 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.41364492 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.415307841 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.4172884 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.414320285 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.415196304 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.416280171 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.415300926 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.416226323 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.416534113 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.419434273 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.414825866 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.41629833 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.416754882 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.414154063 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.41856894 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.416655009 seconds)
  done (took 26.751877247 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.416490393 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.414982939 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.418249904 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.418461734 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.417109327 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.416912514 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.415855745 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.418512159 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.417007778 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.419657765 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.421531606 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.424188089 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.418252558 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.416884996 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.41700219 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.417820939 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.417392114 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.41848534 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.413269802 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.416781421 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.416624279 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.416687695 seconds)
  done (took 32.45338028 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.405474188 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.40691648 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.407629769 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.432086301 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.427768294 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.409344931 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.40791109 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.409059281 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.441536316 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.467026149 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.460555494 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.425912472 seconds)
  done (took 18.365091329 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419748629 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418031301 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.420020031 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419991327 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419638769 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419630597 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419856673 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420556622 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42071614 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422262426 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419513962 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421465467 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421218648 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419326089 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42219915 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421053753 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419392159 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422503797 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421786458 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420864692 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421423982 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422023359 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421138261 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421938013 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422086217 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421615347 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422216959 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422858661 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422842667 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422687271 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422528521 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421044813 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423000089 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422057651 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421088394 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420211956 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421058921 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42124435 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421152578 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423620141 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.422025595 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421487816 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42301301 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423009169 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422545074 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422812146 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423654921 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423275892 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423957055 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422677353 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423623493 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422656819 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421586013 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422364464 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425219855 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422858801 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42352795 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42412677 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422708013 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42435487 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423361099 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424398242 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423002394 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42257308 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422014978 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424295017 seconds)
  done (took 95.113816431 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423020204 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.423544922 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424508312 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425105036 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425477709 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424994477 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425074864 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424881265 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42383581 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424638985 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42636616 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423088718 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424972617 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424493506 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424402921 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42479997 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426283398 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42361609 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431363514 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424633188 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425545386 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424518858 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426394097 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427859297 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424977157 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427249094 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.426337036 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426841709 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426212439 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426354077 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427093697 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427262503 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425818814 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.425980148 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425194503 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426371399 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427645792 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426368674 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425682624 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426282072 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427500383 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426662567 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427117932 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427993112 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42823623 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428358244 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427413989 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427989831 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428461748 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.440523617 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428524256 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.429413894 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.428992192 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427871938 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429335392 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427477684 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42892724 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428195164 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427321031 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429409913 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428863684 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42873832 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429088783 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428959506 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.430543297 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.428765837 seconds)
  done (took 95.448034282 seconds)
done (took 1923.51413163 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.646935899 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.598179559 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.418572292 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.41312572 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.419210292 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.402116568 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.411219332 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.419142826 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.419092051 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.418885531 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.420453956 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.675478286 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.436053216 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.420012839 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.421865518 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.573608976 seconds)
  done (took 28.786745857 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.459407722 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.438756702 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.577308818 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.431332713 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.460593836 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.692736555 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.503129902 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.427212846 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.643782844 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.453893264 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.413172513 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.462596466 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.425471843 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.397920853 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.450305797 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.690703127 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.792606728 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.413570888 seconds)
  done (took 31.408573675 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.028434691 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.432252733 seconds)
  done (took 5.73635125 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.451125035 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.426689735 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.429125939 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.422766331 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.396088357 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.395216179 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.424945239 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.396304097 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.39620185 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.587763499 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.434131464 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.448096367 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.425254776 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.426767328 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.433688111 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.48677915 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.639997587 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.435642479 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.433729248 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.438608289 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.425567246 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.577392488 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.485044711 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.44025382 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.584435144 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.40862836 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.436163076 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.440590386 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.61570993 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.436158397 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.42776522 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.427357836 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.429437709 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.39957693 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.06900696 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.402842638 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.4824316 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.443529167 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.435348867 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.634269693 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.428562947 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.441542741 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.397929444 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.064218431 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.613552255 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.593484339 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.402647432 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.432619539 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.429359139 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.506358944 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.429194313 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.42887884 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.533691401 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.342361972 seconds)
  done (took 91.257855208 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.431540421 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.397237875 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.667269141 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.425462135 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.398682333 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.399113463 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.405684969 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.80950273 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.461667577 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.39863966 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.836123504 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.178614683 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.40973702 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.444132595 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.42223854 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.451010425 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.399813273 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.409305122 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.403714467 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.402876023 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.100556573 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.40514775 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.421761874 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.600233382 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.473694665 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.095063486 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.400299158 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.405044944 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.421723671 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.400135869 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.145254366 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.416862857 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.438418112 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.400771495 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.799529535 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.950806314 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.901727447 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.402391742 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.454918743 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.404847013 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.404255807 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.10419642 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.92549723 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.405197826 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.408162868 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.114903857 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.406751795 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.411794475 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.405175337 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.757190561 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.402859958 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.402855279 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.401089412 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.410768646 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.400779736 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.452306121 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.450208578 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.115028245 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.406837769 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.402792422 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.442305617 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.405368099 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.41000137 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.406952868 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.404706353 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.942459932 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.611073167 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.413550984 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.938803461 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.147029172 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.408588271 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.212509286 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.424238795 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.432254618 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.532115502 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.404026239 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.406831273 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.094654425 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.406660861 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.405331642 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.902426419 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.409732201 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.822160206 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.426827951 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.407551827 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.133475144 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.41424744 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.459719913 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.406494988 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.405848119 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.423604985 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.422531455 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.804561949 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.431590079 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.405748036 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.404960365 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.424497626 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.404831019 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.407483312 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.407074112 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.215870119 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.4125577 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.407400411 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.410478525 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.40700462 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.410948278 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.404590975 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.407864156 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.783894377 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.412164704 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.414441529 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.409862316 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.406124689 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.409856588 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.608522564 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.416921803 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.872892565 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.41277798 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.409078487 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.412665605 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.40779655 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.415406317 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.408846334 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.410408405 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.423377652 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.853946231 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.426456675 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.427998491 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.408687306 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.414037706 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.410366081 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.406887007 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.465233184 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.40959203 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.370285775 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.437159083 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.441448385 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.409228296 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.415968959 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.410822633 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.413410043 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.412871846 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.806740858 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.809464109 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.683747982 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.410614366 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.408074589 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.370772498 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.454129607 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.677957651 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.431254212 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.410602563 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.799994399 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.609542806 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.410342614 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.409134779 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.411975574 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.778588185 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.413639053 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.826080258 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.172307177 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.415785974 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.417521809 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.368486872 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.278917731 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.416750063 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.411314107 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.828434048 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.43048051 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.410561636 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.410966087 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.411464475 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.410114094 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.411198659 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.413677047 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.412952164 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.410109624 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.484814445 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.694880334 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.429761564 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.419108673 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.117297528 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.423919899 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.411449249 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.426742116 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.413727891 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.410539078 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.446077326 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.416178831 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.442380837 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.415784647 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.423888191 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.198696915 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.41635958 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.437650556 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.694886689 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.315476431 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.418026483 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.414262316 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.412572297 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.45023386 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.129507111 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.421142311 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.880757113 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.426699233 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.486495734 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.414082545 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.420331663 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.156812119 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.423341893 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.412966621 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.302751838 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.418557136 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.196354928 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.412601281 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.419497339 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.230876496 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.42030694 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.41268977 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.420149099 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.41392191 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.824566448 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.41885899 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.417707517 seconds)
  done (took 522.262528859 seconds)
done (took 680.728549158 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.412304456 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.412866399 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.418700171 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.421405404 seconds)
  done (took 10.958973903 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.455194966 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.442042595 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.451674336 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.443859726 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.452006292 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.443112703 seconds)
  done (took 9.980268161 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.41399231 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.413604691 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.419183334 seconds)
  done (took 8.538689452 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.746140344 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.450519232 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.932283079 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.429580815 seconds)
  done (took 9.851213273 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.452800318 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.453942641 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.452957601 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.453935029 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.456493175 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.45559774 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.455940661 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.454797359 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.455482921 seconds)
  done (took 14.382926698 seconds)
done (took 55.006768181 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.618773519 seconds)
    (2/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.129829778 seconds)
    (3/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.063244564 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.562870251 seconds)
    (5/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.397339774 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.493860358 seconds)
    (7/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.393614928 seconds)
    (8/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.431281381 seconds)
    (9/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.825019718 seconds)
    (10/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.430629622 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.669410894 seconds)
    (12/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.415880819 seconds)
    (13/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.799857091 seconds)
    (14/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.401550784 seconds)
    (15/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.439077274 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.663834766 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.603453763 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.583907493 seconds)
    (19/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.779147195 seconds)
    (20/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.575180056 seconds)
    (21/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.963051517 seconds)
    (22/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.403130384 seconds)
    (23/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.418305987 seconds)
    (24/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.682236617 seconds)
    (25/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.425819233 seconds)
    (26/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.100786001 seconds)
    (27/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.455035448 seconds)
    (28/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.030580565 seconds)
    (29/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.561067856 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.573636424 seconds)
    (31/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.681793404 seconds)
    (32/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.436037921 seconds)
    (33/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.817303793 seconds)
    (34/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.573088729 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.572303503 seconds)
    (36/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.482333263 seconds)
    (37/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.580795226 seconds)
    (38/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.586810376 seconds)
    (39/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.550745105 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.597773293 seconds)
    (41/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.452130121 seconds)
    (42/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.403217686 seconds)
    (43/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.540211363 seconds)
    (44/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.723519171 seconds)
    (45/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.402591279 seconds)
    (46/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.508483097 seconds)
    (47/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.397284739 seconds)
    (48/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.403319514 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.682955283 seconds)
    (50/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.575761764 seconds)
    (51/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.852032721 seconds)
    (52/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.404157401 seconds)
    (53/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.663026981 seconds)
    (54/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.399904974 seconds)
    (55/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.642945517 seconds)
    (56/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.828957649 seconds)
    (57/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.624840701 seconds)
    (58/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.856183388 seconds)
    (59/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.741714013 seconds)
    (60/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.720096809 seconds)
    (61/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.410264532 seconds)
    (62/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.459855684 seconds)
    (63/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.40350599 seconds)
    (64/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.56305568 seconds)
    (65/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.399247558 seconds)
    (66/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.684988154 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.592792143 seconds)
    (68/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.812733309 seconds)
    (69/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.59868088 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.461431932 seconds)
    (71/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.142161933 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.634137903 seconds)
    (73/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.398251621 seconds)
    (74/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.432915177 seconds)
    (75/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.595139647 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.785859291 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.632529458 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.578486273 seconds)
    (79/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.399104383 seconds)
    (80/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.650283182 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.629719674 seconds)
    (82/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.573681472 seconds)
    (83/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.899513618 seconds)
    (84/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.403544963 seconds)
    (85/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.624638929 seconds)
    (86/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.655520719 seconds)
    (87/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.554710973 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.545416914 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.644099435 seconds)
    (90/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.486108325 seconds)
    (91/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.923165439 seconds)
    (92/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.643855619 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.676476667 seconds)
    (94/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.835084965 seconds)
    (95/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.038066013 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.666846043 seconds)
    (97/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.581344737 seconds)
    (98/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.833299402 seconds)
    (99/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.841876052 seconds)
    (100/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.686201786 seconds)
    (101/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.145919045 seconds)
    (102/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.882660916 seconds)
    (103/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.501803267 seconds)
    (104/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.59368632 seconds)
    (105/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.432038949 seconds)
    (106/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.49244237 seconds)
    (107/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.56219286 seconds)
    (108/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.920098987 seconds)
    (109/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.406516569 seconds)
    (110/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.983408225 seconds)
    (111/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.419452851 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.628444232 seconds)
    (113/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.60959798 seconds)
    (114/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.608447834 seconds)
    (115/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.494694053 seconds)
    (116/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.635262557 seconds)
    (117/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.59153884 seconds)
    (118/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.669259967 seconds)
    (119/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.406545553 seconds)
    (120/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.493483913 seconds)
    (121/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.401892587 seconds)
    (122/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.78606665 seconds)
    (123/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.562559387 seconds)
    (124/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.485035632 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.7829071 seconds)
    (126/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.429217151 seconds)
    (127/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.487058166 seconds)
    (128/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.584388001 seconds)
    (129/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.496267018 seconds)
    (130/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.631651134 seconds)
    (131/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.574543941 seconds)
    (132/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.610907854 seconds)
    (133/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.462205564 seconds)
    (134/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.510462609 seconds)
    (135/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.590880377 seconds)
    (136/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.521471969 seconds)
    (137/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.40502001 seconds)
    (138/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.414316793 seconds)
    (139/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.425673754 seconds)
    (140/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.580717492 seconds)
    (141/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.917522891 seconds)
    (142/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.738574577 seconds)
    (143/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.345545547 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.619061544 seconds)
    (145/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.558049735 seconds)
    (146/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.486763506 seconds)
    (147/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.489474185 seconds)
    (148/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.405360626 seconds)
    (149/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.429418154 seconds)
    (150/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.633168855 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.612012184 seconds)
    (152/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.494077564 seconds)
    (153/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.790957146 seconds)
    (154/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.619128592 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.612480121 seconds)
    (156/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.672862729 seconds)
    (157/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.737986514 seconds)
    (158/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.802954272 seconds)
    (159/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.40973744 seconds)
    (160/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.407959769 seconds)
    (161/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.407125934 seconds)
    (162/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.351337276 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.606916354 seconds)
    (164/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.034653289 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.68821978 seconds)
    (166/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.431793038 seconds)
    (167/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.859001064 seconds)
    (168/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.698354868 seconds)
    (169/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.157204628 seconds)
    (170/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.658393432 seconds)
    (171/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.40835975 seconds)
    (172/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.80802447 seconds)
    (173/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.712125264 seconds)
    (174/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.908797061 seconds)
    (175/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.411815916 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.789457444 seconds)
    (177/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.618476903 seconds)
    (178/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.727562911 seconds)
    (179/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.671637434 seconds)
    (180/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.748564116 seconds)
    (181/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.97614543 seconds)
    (182/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.529896505 seconds)
    (183/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.640005409 seconds)
    (184/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.811376852 seconds)
    (185/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.932970526 seconds)
    (186/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.412723155 seconds)
    (187/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.493882008 seconds)
    (188/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.085511293 seconds)
    (189/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.628932631 seconds)
    (190/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.432140218 seconds)
    (191/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.504293179 seconds)
    (192/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.963404984 seconds)
  done (took 362.394501433 seconds)
done (took 363.691994641 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.487963937 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.610800507 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.46057023 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.460001304 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.469905007 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.435629279 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.49017651 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.46283644 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.48218478 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.484092705 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.430045958 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.472064988 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.484331562 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.469666568 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.505691541 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.462619792 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.462752212 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.469902283 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.483308807 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.485685086 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.465138758 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.471473014 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.500051508 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.471912525 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.486495314 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.48234765 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.477371738 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.430605945 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.470666346 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.484501206 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.433392054 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.475911706 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.48511546 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.472099699 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.465082606 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.475431618 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.472007579 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.614328051 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.491132287 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.477517078 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.472500449 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.487310153 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.477336888 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.477010031 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.472414265 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.496966269 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.479706323 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.487479169 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.447547205 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.436749324 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.493257278 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.484923257 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.47338422 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.433170447 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.433296511 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.488163194 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.473688449 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.491755761 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.470509693 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.474186417 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.505439484 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.491875049 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.483923828 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.480925403 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.471255807 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.489150122 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.473944137 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.488824521 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.471401776 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.474271973 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.475083249 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.471235972 seconds)
done (took 115.713978296 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.644082533 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.437750429 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.689110396 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.481288927 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.698088702 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.646630623 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.4719677 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.472652004 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.473513567 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.327185811 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.472272975 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.473537941 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.437190441 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.47395615 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.643895428 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.475566131 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.475357865 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.243558347 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.47584417 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.65127437 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.440142074 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.473823243 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.472565261 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.344337433 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.435314505 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.443825573 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.655391303 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.473132302 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.230784166 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.441496367 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.436191502 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.24766264 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.657459374 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.493100275 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.48485649 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.484011759 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.689543761 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.477789529 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.645094673 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.643368197 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.687376865 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.514886774 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.445228545 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.440849078 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.478870742 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.478401758 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.475110627 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.503769788 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.438699223 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.476175916 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.228894261 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.486097918 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.47831697 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.475238366 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.475102455 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.504417845 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.476776901 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.476606487 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.658883437 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.477605707 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.650286954 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.335833768 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.346552449 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.476529383 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.440246487 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.479435059 seconds)
  done (took 118.551933527 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.591457615 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.601502119 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.647574877 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.471746372 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.559633037 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.648657208 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.472067293 seconds)
  done (took 12.30663634 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.481985105 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.476391097 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.560728708 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.560717392 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.477343871 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.697341331 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.479846984 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.48801576 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.47851064 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.558365069 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.479207657 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.478428926 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.488204261 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.444427116 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.560996479 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.489361532 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.641664908 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.472452328 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.478754875 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.680240902 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.478138246 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.486289702 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.586114897 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.488695665 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.478120507 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.483399879 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.296712732 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.482455695 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.477815161 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.476834798 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.478803206 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.590494922 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.47794765 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.445453992 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.479545758 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.643436152 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.479576209 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.480960673 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.480666221 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.447784597 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.479622164 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.480483656 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.480406552 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.48137071 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.479569853 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.503532817 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.480403688 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.479248234 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.480746818 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.481157345 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.563570619 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.481990552 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.481060126 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.484055689 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.571185624 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.490214433 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.481185631 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.481117536 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.48147212 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.483016381 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.683813004 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.563313114 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.48087812 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.563871286 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.48047332 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.48051739 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.480537574 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.481101961 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.620331119 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.480310031 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.564219305 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.481663764 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.712325429 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.50456996 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.483390171 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.477888913 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.479767085 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.482847924 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.446579555 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.48717969 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.481774812 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.475659231 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.485915423 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.481066831 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.483168146 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.691326809 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.6445416 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.482879772 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.497128161 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.490388967 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.481807848 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.566318944 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.482735689 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.483856083 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.567968734 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.646810185 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.593741215 seconds)
  done (took 152.828229348 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.493302814 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.494547806 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.487232839 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.513333644 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.477229123 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.474194938 seconds)
  done (took 10.258470997 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.476291154 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.485058261 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.482151816 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.483253212 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.486171111 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.485996439 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.48298174 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.478806977 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.489774922 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.483022107 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.485042546 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.486626128 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.484934292 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.484012527 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.484149067 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.485567474 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.485151429 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.485207022 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.48687553 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.485530807 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.450998342 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.484494223 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.485735023 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.47944805 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.488676528 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.485963054 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.50885605 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.484572724 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.485338115 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.49365684 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.490155487 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.486817423 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.479849987 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.484298806 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.493842897 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.481005441 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.490359913 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.487203925 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.48603548 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.487608585 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.487589239 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.487524916 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.485224134 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.487995156 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.48147198 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.483135181 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.491731455 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.510836538 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.487364979 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.487927411 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.489123512 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.488575398 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.48860508 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.490443234 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.48104099 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.482628622 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.49198463 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.489384719 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.487530851 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.48018285 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.491094503 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.489188325 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.481554044 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.491441545 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.488729607 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.48787014 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.480579059 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.492180814 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.48982884 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.490563849 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.490954262 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.487998718 seconds)
  done (took 109.347670332 seconds)
done (took 404.604952078 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.897196913 seconds)
  done (took 4.221272971 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.579457415 seconds)
  done (took 3.904726223 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.022482609 seconds)
  done (took 27.354164032 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.510843313 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.484464679 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.454373702 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.455588591 seconds)
  done (took 11.230312598 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.051266086 seconds)
  done (took 4.374807998 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.46205778 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.48661202 seconds)
  done (took 6.274404727 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.774972223 seconds)
  done (took 4.099540102 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.304052073 seconds)
  done (took 4.63394549 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.493592167 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.467756758 seconds)
  done (took 6.292701816 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.430789698 seconds)
  done (took 3.754851368 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 22.097617232 seconds)
  done (took 23.423563291 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.466465184 seconds)
  done (took 3.795907846 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.491528497 seconds)
  done (took 3.816485253 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.777022064 seconds)
  done (took 7.102516947 seconds)
done (took 115.605239608 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.454029803 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.460876624 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.459748897 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.457584655 seconds)
  done (took 11.156907663 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.603495737 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.607389948 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.609814349 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.598169641 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.599716487 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.608552177 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.526607189 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.525211621 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.588679188 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.586851722 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.616222496 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.599037698 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.61047386 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.527067653 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.583211245 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.615034985 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.589653824 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.613483112 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.541842158 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.602888607 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.491877913 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.597645692 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.585804102 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.492811132 seconds)
  done (took 39.248851618 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.039840261 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.614158965 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.694871184 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.574228748 seconds)
  done (took 8.248754957 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.658744034 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.660886067 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.674403289 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.710862044 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.764744804 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.669652754 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.528720517 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.523753405 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.508505726 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.662738886 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.742610076 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.654246954 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.882628231 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.491684103 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.876635011 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.493170326 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.493619265 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.661156981 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.708570552 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.734805732 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.495709056 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.657572516 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.665090512 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.656027069 seconds)
  done (took 40.904862623 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.510031548 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.519560204 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.49599778 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.517937791 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.495874929 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.495548142 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.497696181 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.508682354 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.49411863 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.493438307 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.496021945 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.516754959 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.495786581 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.495350421 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.51166786 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.501039203 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.497503488 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.509847795 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.512034317 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.496730136 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.495520415 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.511714025 seconds)
  done (took 34.397075844 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.456795309 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.459117043 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.896411408 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.801470284 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.458801081 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.464094701 seconds)
  done (took 14.867058794 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.588071151 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.795759433 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.494717519 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.938822038 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.084832715 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.493568002 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.489262915 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.832340621 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.206533457 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.190000139 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.57068109 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.587417855 seconds)
  done (took 22.600706627 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627439705 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.470250582 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.468840765 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542920227 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474622437 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.469941045 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.549531194 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.108554098 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.502346004 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.832040373 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47931172 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633749376 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.806858331 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484656394 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.476332919 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.458776776 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.789823692 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126549682 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474598899 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473067001 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53788083 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.488227448 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.493765164 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.764146754 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.479029072 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47252189 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.819142574 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.473899579 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899122367 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854318695 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858199008 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479860462 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.832899631 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053482779 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.654076053 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755517095 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485604769 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.479348037 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.45210393 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.48932242 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497981901 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.480033878 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849697787 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479462856 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.47229749 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472245807 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148128893 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.505191757 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.471544671 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.472215286 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.863349103 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639965599 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.500675121 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.473584805 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.562876955 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478093199 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.501010848 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.684907907 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198239316 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47537777 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490529417 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.479914171 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.483984311 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480228945 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314481331 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.503904791 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.500984936 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.502591426 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47434775 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.492254567 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.528921799 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47430417 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.525799614 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474488551 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48951609 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.493056135 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4829376 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183981078 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487343049 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.481411568 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789165089 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475464094 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476131148 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.474890627 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.474593243 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.459970573 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511449955 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.443842265 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546978076 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.109184624 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.767565903 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530081723 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533649006 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.779106966 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.444313764 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476910437 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.489029925 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483002063 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527967698 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.118538538 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481673193 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.504336201 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.814547506 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.775376533 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483726527 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.469945445 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167968288 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494532929 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.532822993 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.486111886 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.768343167 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.321227162 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880181621 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484599264 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550250559 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.477697548 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.481054819 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493591958 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.511512393 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.490459646 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.891648512 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.452230901 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485357949 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628460086 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482010317 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.477929282 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480995523 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485191797 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.478725891 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.762734283 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491601131 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.864157516 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.486371696 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479673567 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.49484051 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502247388 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.486864217 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.783147074 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490428846 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.844607474 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477727929 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48074151 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480194234 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.788690797 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.487820623 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.514256946 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909544223 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480627599 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.487638617 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87229633 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550575391 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.677650699 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543526519 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.480984349 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.824100537 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.50873704 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.508409485 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48979783 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.489122255 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491079417 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.514451105 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472146004 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29846889 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484588857 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.491442801 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.481231727 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.527131488 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633288284 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.511704945 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.76396377 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.501972213 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487790522 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.509678779 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.488889824 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.79223154 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863660525 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.504035744 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.736273657 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.108156142 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.295891398 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.526632821 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.481503758 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.483093346 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.483402883 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482760622 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481260082 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.484485981 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769874577 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887257032 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.501801731 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.328023557 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491364719 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.483566311 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.538061719 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873203219 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.521146578 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483933956 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.488146921 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48995183 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50960817 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.875272757 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.79308074 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.529429127 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.485747594 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.089831884 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.514179073 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.484060438 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.487028763 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54314805 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.483828985 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221692437 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920818702 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499336543 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871324559 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.49227929 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.556199011 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.483807823 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502543236 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50743904 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.519248153 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518437296 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.773915035 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.493502351 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512717644 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208646784 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484214019 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.263431404 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499480346 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.502492252 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491338529 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.136089024 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489970687 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486940903 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.86716153 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115431997 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49000491 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163381321 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.499400937 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.493077088 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900276704 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.807925366 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497165876 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.5086973 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.882917862 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.792254867 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542441535 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.490745995 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492945507 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.456777849 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276692867 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488533982 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.747313119 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130979994 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512515314 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.494969018 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.554147703 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.516388641 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080240302 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.493669481 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487323074 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503008099 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.514559498 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221970056 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.502443013 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489289246 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.32527593 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.500986612 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.163587004 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493316084 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.782314986 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.885494727 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.864672875 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.495249989 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.509163281 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.827044975 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880534809 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495479767 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503049725 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.250440437 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.440637179 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.518528927 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49091969 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.501609108 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508783903 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928129688 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.499645939 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.500803628 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504008924 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.491055881 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490820516 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.490321779 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.50122093 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491323722 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168417856 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.492153018 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497462142 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.528572313 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496630193 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.829729744 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.536875325 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.309789673 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.810726979 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506630068 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5555395 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.519736134 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489780928 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.466593553 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491104769 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.493299113 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516396254 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.804450203 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.500041031 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.466081686 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.541927364 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.796691605 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.492846472 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.491489107 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847511614 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.498101888 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.520682833 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491281049 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.554124306 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.492764548 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501319756 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.487223969 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58342468 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.645388426 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783128427 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.890827458 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.889873496 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08697391 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498700149 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.522084757 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.538255388 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655022053 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493926637 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.508104557 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.498751902 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310015819 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508933293 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322423263 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891444855 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.502373102 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49776658 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49310237 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823426498 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49335324 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.8549062 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494179533 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.506612328 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.547504469 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49451526 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505527204 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798985402 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.846636713 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494683437 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506816893 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501507839 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.496987571 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895549847 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.802411047 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158564577 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212576054 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499228079 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.49937272 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.15267095 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.861249884 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495572517 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498869304 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497495457 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.504667249 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.502477724 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.530976111 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494282409 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.812820052 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881793907 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092880177 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.889292766 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.530616987 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.453467023 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50662057 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.83795628 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414929371 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.786287837 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350578869 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.473978849 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840290235 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649479658 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790854758 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.502522143 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.816683114 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.501424797 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497395863 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499572886 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498594759 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.497419609 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.884118085 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35564753 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84321463 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.525342783 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.500972575 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.557269887 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.789645737 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.809417245 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.492514097 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.813989265 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901800432 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.514821194 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.498935863 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326093562 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89894951 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504392982 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.526433564 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830467058 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.506952107 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56491227 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.456902725 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.498133107 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216747465 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.801246304 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.551707449 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508163293 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.484747327 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363320224 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.511221294 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.189562932 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503457249 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499862238 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.879738268 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.53017601 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.514992444 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.875438909 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.529030403 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.512241396 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798116088 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.325118718 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.504195052 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.517029645 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524513069 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.508986303 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502830632 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.570890334 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50731549 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508584855 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.108162078 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.505911472 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50152488 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.544690565 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.507928977 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518443163 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.507025579 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50222434 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.532146372 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.512985346 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.477103897 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.515348425 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.711780668 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282329827 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509672005 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.204426834 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.929135821 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.84173602 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.512535847 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.476780601 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.531219997 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503988042 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503797376 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503329788 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.519587931 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222568107 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.51226605 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.898514329 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.53988765 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.802661009 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804733269 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.506484938 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802443104 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517078255 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560382923 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.472791058 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504932366 seconds)
  done (took 1058.669515125 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.522807964 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.517090127 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.539871446 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.579526488 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.537217198 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.509241434 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.506386322 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.617856921 seconds)
  done (took 21.691545482 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.509713142 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.532275787 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.506006805 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.53386314 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.501125876 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.142134066 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.497767628 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.531169501 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.558748846 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.516667727 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.504812309 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.32915275 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.533503108 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.498442574 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.50345236 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.536303255 seconds)
  done (took 35.103106269 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 19.374709102 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 3.794279496 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.308238499 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.513259682 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.604627236 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.511934165 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.959874367 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.5312978 seconds)
  done (took 44.961515638 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.540683072 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.541622088 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.541733903 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.545379479 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.543155662 seconds)
  done (took 9.076583692 seconds)
done (took 1342.253352713 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.536179984 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.534698162 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.536052106 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.53774904 seconds)
  done (took 7.508143389 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.478047802 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.478107796 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.480985606 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.516960851 seconds)
  done (took 10.317277009 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.485329594 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.245383369 seconds)
  done (took 6.095625708 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.508943211 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.356787061 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.342923427 seconds)
  done (took 8.57248565 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.887361654 seconds)
  done (took 3.250729859 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.032533188 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.124175428 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.499146505 seconds)
  done (took 8.020922214 seconds)
done (took 45.129740452 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.499819565 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.294716947 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.65954707 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.511741053 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.665428334 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.658514257 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.779499684 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.512049542 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.500701451 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.508559853 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.512969701 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.665730956 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.76792419 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.275795197 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.76522657 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.264927475 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.668350214 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.513724406 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.500788962 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.507121052 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.777823562 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.511476005 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.502633889 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.499462746 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.665648544 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.648929379 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.510361408 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.274443559 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.498598181 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.499809578 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.647516001 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.505280944 seconds)
  done (took 86.940591889 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.50657189 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.501184892 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.523167926 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.50111994 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.501925908 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.501173438 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.504801832 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.501585013 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.504611515 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.510899535 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.502108333 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.502895934 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.504383135 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.503158817 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.504414074 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.503160144 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.502876868 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.500819343 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.501827362 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.523041233 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.503927839 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.501209267 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.523142433 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.530613915 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.504066544 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.503595674 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.503846893 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.503356677 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.502812194 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.503416391 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.502960817 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.502169655 seconds)
  done (took 81.558843274 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.503440765 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.503936778 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.503102873 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.503863026 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.528717444 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.50863144 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.508579827 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.504438518 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.509257707 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.512819053 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.504839757 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.504108449 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.50706944 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.514117473 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.504538531 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.511910349 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.503985737 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.503738499 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.50421796 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.516192317 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.506642151 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.504335712 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.526797716 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.539147471 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.514488749 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.506308798 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.504420988 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.50539269 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.512293568 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.505818093 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.506863896 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.506270665 seconds)
  done (took 81.670563207 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.833849123 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.544566875 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.543894234 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.514631994 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.547380501 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.543778716 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.516289606 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.835807752 seconds)
  done (took 16.251599174 seconds)
done (took 267.789245134 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.521865734 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.521279766 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.577265237 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.516779543 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.562652485 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.57359438 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.832489523 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.569647858 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.821127045 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.535421997 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.560411837 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.533422581 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.518422979 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.76987779 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.508355636 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.534236721 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.510146926 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.510946888 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.519669784 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.854372613 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.573952177 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.525043373 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.517590191 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.548836064 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.50141893 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.621727386 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.622791139 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.75680846 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.72595272 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.621029113 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.532084911 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.517866204 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.517850629 seconds)
  done (took 71.806668015 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.536576823 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.547200032 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.546485066 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.548011308 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.551325347 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.547626831 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.538310912 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.547918838 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.547699606 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.546798375 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.547254298 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.54800586 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.547441264 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.547546933 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.54896087 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.521683868 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.537542868 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.54800607 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.537954792 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.522156414 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.548763219 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.549428039 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.548887536 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.548138069 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.548656572 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.548051746 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.547429391 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.549602013 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.546956565 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.548288438 seconds)
  done (took 47.724185947 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.548027511 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.512920533 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.531346269 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.559520662 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.539127567 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.544504368 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.958484945 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.555734986 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.545054368 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.544366012 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.518163099 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.555794071 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.610216215 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.515535181 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.550569314 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.549991448 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.550147474 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.5435921 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.520674871 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.566202728 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.961009846 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.552881969 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.943967875 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.566770607 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.54509725 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.543801764 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.555409316 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.513526406 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.546102266 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.528144187 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.516904279 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.948402447 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.518860953 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.514371136 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.540021604 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.559675431 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.55283741 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.51518779 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.566878442 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.543359459 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.940366649 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.54457337 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.514113282 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.514134584 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.54796654 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.554018078 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.515554038 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.556688528 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.854372822 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.55599703 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.515552921 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.548710698 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.555716129 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.545938488 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.864880792 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.552491068 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.545260609 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.526326986 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.557408592 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.936952527 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.554599087 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.543637078 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.520134719 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.546508464 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.516395416 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.545531802 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.56775069 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.547492248 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.51630148 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.549749937 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.517393029 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.550316838 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.554864693 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.532828721 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.517947498 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.517116388 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.569119509 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.525032478 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.529192783 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.947546472 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.559127386 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.51745449 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.995578907 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.557811087 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.55933719 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.558434282 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.553840331 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.671890749 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.949222663 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.522590407 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.517375778 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.527800428 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.967359606 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.567077559 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.548119352 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.533487604 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.556774573 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.556317881 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.520718382 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.517614566 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.548220762 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.569408512 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.519467106 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.556123094 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.958509948 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.566752378 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.535021249 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.554088547 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.673630774 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.558479259 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.568803198 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.554396058 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.982103799 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.557389316 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.558721189 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.521138896 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.542482113 seconds)
  done (took 225.733200505 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.521319087 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.521436769 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.52025715 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.519855912 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.520713423 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.550280661 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.523460421 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.520458223 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.547438959 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.519677188 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.5254759 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.553201842 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.552105753 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.522324452 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.523301671 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.544839536 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.520716916 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.530089895 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.543793803 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.521855537 seconds)
  done (took 47.984412474 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.560935926 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.300246561 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.26909672 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.56144039 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.561622466 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.552023061 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.627310918 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.560544396 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.561520708 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.970390439 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.79042754 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.566207826 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.559555374 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.559236828 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.272320454 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.532374333 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.969037613 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.302350809 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.561794695 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.303407438 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.532760696 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.560598174 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.550905461 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.302820771 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.980003183 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.956216988 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.63717062 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.30688728 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.561325781 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.560755875 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.304010098 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.560876282 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.551590953 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.317300755 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.564385527 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.583351556 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.5594643 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.629942956 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.633274525 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.971942731 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.310886741 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.966485054 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.587419532 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.785801951 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.565341864 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.534385972 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.315082805 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.562713387 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.532236955 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.564343902 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.57536311 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.28578746 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.556633354 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.308972531 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.568056105 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.563580326 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.309924747 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.307831185 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.307684239 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.789649996 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.55401647 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.963044672 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.568416487 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.361087538 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.571233115 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.563009723 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.564924143 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.787084377 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.35801508 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.966104139 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.006363239 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.001631702 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.568606105 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.644659282 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.564905007 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.997449396 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.646484864 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.0395859 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.000402984 seconds)
  done (took 144.979208114 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.928768526 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.699711884 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.125385707 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.325396267 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.261577746 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.764110856 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.702311586 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.894670125 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.558310383 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.72695662 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.443277669 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.675946921 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.499928028 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.650413575 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.689083856 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.751548783 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.134583525 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.529355095 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.426003335 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.447240952 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.537067528 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.71665056 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.435630117 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.037355658 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.529118473 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.433625393 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.546726718 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.260132032 seconds)
  done (took 61.119746514 seconds)
done (took 600.720098151 seconds)
SAVING RESULT...
DONE!
