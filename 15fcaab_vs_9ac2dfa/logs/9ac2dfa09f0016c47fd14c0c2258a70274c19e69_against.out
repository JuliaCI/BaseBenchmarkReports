cset: moving following pidspec: 27975
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.459002154 seconds)
loading group "string"... done (took 0.483476844 seconds)
loading group "linalg"... done (took 9.681186693 seconds)
loading group "parallel"... done (took 0.167876655 seconds)
loading group "find"... done (took 3.443467916 seconds)
loading group "tuple"... done (took 2.064264248 seconds)
loading group "dates"... done (took 1.394198872 seconds)
loading group "micro"... done (took 0.191456121 seconds)
loading group "io"... done (took 0.502340696 seconds)
loading group "scalar"... done (took 56.527805248 seconds)
loading group "sparse"... done (took 14.157875314 seconds)
loading group "broadcast"... done (took 1.346420379 seconds)
loading group "union"... done (took 10.367415508 seconds)
loading group "simd"... done (took 3.594406384 seconds)
loading group "random"... done (took 13.327251881 seconds)
loading group "problem"... done (took 2.202048739 seconds)
loading group "array"... done (took 24.58231588 seconds)
loading group "misc"... done (took 1.150162322 seconds)
loading group "sort"... done (took 3.790043413 seconds)
loading group "collection"... done (took 21.967912889 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.723181278 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119053477 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.199466706 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.200171824 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.272549742 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165595779 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159551923 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.158480209 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.644649645 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.202764821 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137551221 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.380567808 seconds)
done (took 6.100997131 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.303363927 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.059378989 seconds)
    (2/2) benchmarking "String"...
    done (took 0.19196247 seconds)
  done (took 0.939657061 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076537665 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.159620577 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107627932 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093311028 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094052393 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107807006 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093259695 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108204542 seconds)
  done (took 1.450450717 seconds)
done (took 3.458050427 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.55901117 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.952610036 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.531482879 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.187123237 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.300952167 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.303165018 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.272254873 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.233081944 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.089177052 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.084270772 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.194600026 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.451719733 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.423601912 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.045399418 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068058724 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094848235 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.159922222 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.854738931 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079810149 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109013444 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.513084311 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.21511674 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116804798 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.10679305 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187143281 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127057708 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.14176705 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102947029 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.738787524 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.135603906 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.209009609 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083196683 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.137506382 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.170076656 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.221419358 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.111475768 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.738997606 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202526522 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095203936 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099804451 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.745943112 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.12684113 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.209935355 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105097931 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.066826444 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.172200529 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114512188 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079278028 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094484641 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.100001683 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.171138383 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.523605691 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107260148 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.196740241 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094307244 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.776805487 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099829384 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.278139909 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125913288 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.09437506 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091817891 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090050767 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.169810351 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095213645 seconds)
  done (took 20.892428012 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.190714336 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.208011996 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096634915 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.145776638 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.14519067 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081641527 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.088702062 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096763282 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.115028455 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.195982255 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.127300266 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.214816842 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.07750413 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.108925024 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.166410756 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.253891853 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.111986657 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.124154545 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090708951 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.095768464 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.144903762 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097747765 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.11251801 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096527847 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171251387 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205762898 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112088136 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124316926 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091032386 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098842038 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144774974 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.154580132 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094472 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090160139 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175160263 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127674057 seconds)
  done (took 5.484123016 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.235551742 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.103357557 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.245489388 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.189777136 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.128555314 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.179866029 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.193195028 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.301204713 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.261036547 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.219145954 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163782699 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128341181 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097490539 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080037272 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080102225 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097862514 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.854151495 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.155193129 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.159277308 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16745181 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11534281 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097589295 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.720733831 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102108026 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.086479084 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095222863 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.079767615 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.222064761 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094440711 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.474418709 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084011312 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.114221578 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1138246 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.101352483 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193733574 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122291599 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136188058 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094743961 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.104616027 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.192409453 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117022772 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084088975 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078243888 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.0970988 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117601826 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130721092 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.106240955 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.107995018 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.134982529 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087424874 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.10821851 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.10176755 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.19443981 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.160578102 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.105105545 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.277922703 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.107027297 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098130146 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.109819203 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.815359271 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135042802 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083197032 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096077022 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095901162 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080247286 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.832910525 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103583005 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.864557706 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084895992 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158871041 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.084750861 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111073691 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102083791 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086127293 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103469792 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.107487341 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085418963 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098045499 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086743363 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081564911 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.105689068 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111468644 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102459677 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081489902 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149268911 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.109480542 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.106864148 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124282495 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.090031491 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085664594 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130495435 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082349648 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.104787487 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.184667896 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.114866144 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111582066 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114507997 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.147204124 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.086922296 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.305150536 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083729433 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122677611 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101188636 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126589701 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.096872514 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081391007 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102113404 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080538873 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082361381 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162377702 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.086456386 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081644112 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.105452376 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.094694723 seconds)
  done (took 28.664499096 seconds)
done (took 55.72785883 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.40906382 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076454904 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076527819 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.097624286 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077158625 seconds)
  done (took 1.485270298 seconds)
done (took 2.220440532 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.183512582 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.265085106 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.198255448 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.128659866 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.148374664 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.170321589 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.151689541 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.169460027 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.151118169 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.169867551 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167495881 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.106696598 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173748841 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.184653509 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.12163949 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.186357288 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.103889049 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.149431363 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085283959 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.188938342 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.103551925 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086470913 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087810328 seconds)
  done (took 4.232206205 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105835735 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101048883 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103838833 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122557345 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087753687 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104888757 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.122495745 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109020078 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103163468 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114734841 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087743561 seconds)
  done (took 1.904341048 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102612211 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099132648 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094137599 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119467357 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089203732 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100414445 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119517433 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108772771 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101891449 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.116012239 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088054144 seconds)
  done (took 1.881096541 seconds)
done (took 8.754063908 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.195973175 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.954563776 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.182312639 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.247233814 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.330727532 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.298996052 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.611254127 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.20259797 seconds)
  done (took 15.873177378 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.224518425 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.099487512 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098252858 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093470057 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.112778727 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096273905 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097095866 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.112141285 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.093193416 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096611447 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.110257596 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095075219 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096419943 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093212971 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.109534599 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.099886026 seconds)
  done (took 2.525027868 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.138249983 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117932594 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.118348778 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100595614 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.095949492 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.118742544 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103533138 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.098811169 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.114461552 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096910718 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.103149569 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.116602956 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.099241321 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094442805 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.117592398 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.120032862 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.095667612 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.117009642 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.118066061 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.100671042 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.118004531 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098208717 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.098794337 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.11792163 seconds)
  done (took 3.427063665 seconds)
done (took 22.5717285 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.150433724 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103320261 seconds)
  done (took 1.003621969 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.166487232 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.184595821 seconds)
  done (took 1.103051582 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113598943 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091597333 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.140862536 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.10602717 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.09259278 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.11022505 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117121737 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.110177767 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.093979967 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092842672 seconds)
  done (took 1.827652106 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096410025 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096532178 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12400278 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.159811174 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.119129395 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095243676 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097438857 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.113278511 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.098045917 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092329409 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.115244892 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110811647 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097418603 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.129239969 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096825162 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.097968464 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.119437745 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095936292 seconds)
  done (took 2.715809252 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.093419492 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093901536 seconds)
  done (took 0.946110187 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.09529913 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091704119 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093581454 seconds)
    (4/7) benchmarking "year"...
    done (took 0.110681813 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093419212 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091452621 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10938919 seconds)
  done (took 1.445014342 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.517878216 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.236741488 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.374173 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072028992 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120636011 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.313165732 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.122536602 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071974935 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091082183 seconds)
  done (took 2.703547427 seconds)
done (took 12.504450951 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093539478 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.208438307 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.601523839 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.132301252 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.093747746 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.153950233 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.343536632 seconds)
done (took 2.396284192 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344617845 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.177840632 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084862049 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094574317 seconds)
  done (took 1.465399127 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083819248 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101108179 seconds)
  done (took 0.954479547 seconds)
done (took 3.195814565 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09196812 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.091038532 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.112313654 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.11105672 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.09127704 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091676602 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.111023476 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.091619612 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.21383655 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090414291 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.110445818 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.090831034 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.09018144 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107234028 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091670177 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090009141 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089515782 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.108039228 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090304361 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090048392 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107888859 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091679536 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090143586 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.089868621 seconds)
  done (took 3.225438724 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.112184447 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093431224 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.112581146 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095337961 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.096600483 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.113093642 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096702102 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092449256 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.112286206 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093792305 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095418488 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.113103349 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.093827714 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095694292 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092140768 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.112893476 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.096158527 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09232466 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110268561 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095898997 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.094398596 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111367933 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095973238 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093950635 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.113726753 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095557193 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.092255656 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.112166428 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097649777 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095265397 seconds)
  done (took 3.790607172 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098950083 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088391408 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091031618 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116850613 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089813306 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091182265 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10631296 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093255016 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092484037 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090956888 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.111999438 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092363841 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091059624 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110345736 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093584037 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093681815 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.117221959 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.09159852 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09097351 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09268546 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112580098 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093167155 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.091449828 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.108676529 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09211304 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088665466 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09206485 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109574129 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093113657 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091266913 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.111678866 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095173834 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091926284 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.119633858 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095108533 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092337091 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096614451 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.107451025 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09275132 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.089245776 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.106360942 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.092929554 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091784646 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.097293308 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.110870523 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092287155 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091869644 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.111107006 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093516711 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095111955 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.106606224 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.092562399 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094407885 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093287142 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.111945171 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.089641357 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092694469 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.106619843 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093601219 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091262164 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.089031853 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.106634161 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096916095 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091971192 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.126214444 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097803988 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090862183 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.112699178 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093439536 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.09624918 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.1124738 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.102585602 seconds)
  done (took 7.857780029 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.115384994 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099856204 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.111069152 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093718762 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091802666 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091949542 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116055121 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092359789 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092369079 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116742779 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092880247 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092924317 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112693381 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093994565 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092210818 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.111218821 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.099020692 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092271441 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092555625 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111130333 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093051847 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096820902 seconds)
  done (took 2.981922841 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.236275437 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098994083 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140501596 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123938456 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109051577 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123256456 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09723939 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098255232 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114368385 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102039303 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101139538 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114803355 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10970187 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101684649 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.120173661 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104195094 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115643128 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103946738 seconds)
  done (took 2.896802938 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.106007964 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094349987 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.156461586 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094867231 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.095798285 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.112981267 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099914731 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112692961 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.112965971 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094664971 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100783207 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11261013 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.095875949 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094607212 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11213479 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095660419 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09516273 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094217777 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118662506 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099619442 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.117938531 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101198413 seconds)
  done (took 3.103511068 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108875437 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093957758 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.130319016 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098249994 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092875427 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.111586257 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.101850172 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094498889 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.117622289 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095367644 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094777764 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092718564 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.127423327 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095064812 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.100239353 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113949266 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095179701 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095617467 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112885235 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.095678298 seconds)
  done (took 2.854372682 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1873945 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12904134 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110738383 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116694728 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129623327 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110130904 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137412237 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111694092 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110381424 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139765748 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111240822 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109475793 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136532027 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114476848 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128053156 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118245064 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117176563 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135802395 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11037451 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128156032 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121700043 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113069546 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136967488 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109869279 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127750883 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111155616 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111403622 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133805772 seconds)
  done (took 4.246013547 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093964393 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093069028 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092717657 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.111493508 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093127625 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092332831 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091530494 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.111280143 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093196488 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093467472 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111933159 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093359428 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092448418 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.092617085 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110936943 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09413774 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09336711 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110809832 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0950044 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092529295 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091868805 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111516625 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093040673 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092878431 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111134035 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094900895 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09283471 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092636641 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111685991 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093184266 seconds)
  done (took 3.726937273 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.106310866 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102256579 seconds)
  done (took 1.000607829 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100633188 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10696437 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.093516291 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.113948848 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09977449 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093179028 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120537255 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10034607 seconds)
  done (took 1.622286535 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.186140081 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.210561623 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.119494176 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105410122 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.21070787 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.189708901 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131313975 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.097647753 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.114293165 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086658576 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.203057316 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084762524 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.112500131 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091092031 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092680919 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118877268 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095270775 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103551087 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.099534445 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.114897781 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098628534 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097505346 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115538785 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104668967 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.0873697 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.116380023 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097140565 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.104806204 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110503577 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095009847 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091323904 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.11585314 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.097583848 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098288127 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.115011623 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.21014432 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10153882 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089902913 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.115238048 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100089334 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125768507 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.115025661 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095919739 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092437034 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11680389 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099418858 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098994991 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094971505 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.106608319 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090044202 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095309675 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10917792 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095093517 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094393708 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.113788562 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100580877 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096288013 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.110471241 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090996837 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089004265 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.111527381 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.091023097 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096521143 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.116599115 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096244153 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093379053 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111776225 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095714057 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095195974 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094519841 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112643933 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109550873 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093921232 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.119136379 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099925277 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09463033 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111291038 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099643118 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092262641 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.114761241 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098754806 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12139337 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115042213 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090443834 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088970741 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.121158982 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097463092 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.09701974 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.106137101 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102640427 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096382019 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.114397857 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.088752417 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091477974 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089655046 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.117650925 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087410906 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093662609 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.113901984 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099586197 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100419264 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11172538 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095838723 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099138725 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.120311598 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093801314 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.164643982 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092002482 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.091198748 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095102736 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121141872 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.089613351 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093084253 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.11450227 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092215567 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08964478 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.118913655 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094987079 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.095852762 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.117560969 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096556203 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094812406 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.11667636 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096180178 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090753859 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098282121 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.123829574 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096066197 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096933835 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.115385693 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096146445 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093740272 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.119317896 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092723523 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099500991 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110811926 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096484616 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095788158 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.098689575 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.114948975 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.09056857 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091943116 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.115448759 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093491708 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097859581 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.114235617 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090415548 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.086493122 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.115071267 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.090533371 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095943765 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123370297 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090915333 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096632819 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.111662244 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105018382 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090859599 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.121246284 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099373112 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100995106 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119876207 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087771427 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09200332 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.096672978 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.117069496 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090881948 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095785784 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.116164213 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.10168374 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.087223382 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.117915204 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.088241598 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091143154 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.119350443 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097830108 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098073086 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08991332 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.15232768 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105933094 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10184242 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.114358746 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094001479 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098180083 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.114252239 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.09863 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099912216 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.120545567 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091890527 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.093331072 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120958538 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.091475599 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097696223 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112986505 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096530013 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087790353 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.09601626 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.107358904 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.100568935 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096475047 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.121008126 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100404527 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097416508 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113608651 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103978166 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090655802 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.120186652 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.089348303 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.099837696 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.126455326 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.101931398 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100633816 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.116163166 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093060437 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096272718 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103015614 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.118884601 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.095460183 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096296603 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.109563653 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08925772 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100314013 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.119574214 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.091307491 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094833637 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116683483 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097661651 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091496342 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.108308466 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101406052 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098128121 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090220411 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116000645 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091329281 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092417548 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122446158 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.088290557 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.093683561 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.117488753 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099194457 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095567041 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.115144321 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098583905 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101418064 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.118688208 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09964221 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09208692 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122912208 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.094281193 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095691149 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091067028 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.119358963 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.089163783 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096418755 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.11618782 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.092273256 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.090729974 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119484259 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101853664 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100663011 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113643781 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100749684 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.110463558 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.12264765 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093700812 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100622083 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.09293577 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.109628815 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091613116 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08785356 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.119320551 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.091463307 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100287474 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.114698105 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095244654 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.09896489 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117958366 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.09303725 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100286845 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.125926697 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.09074024 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088330366 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113822644 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09450678 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091263491 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.112080523 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098147817 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096479238 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.09987087 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118490067 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091466171 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095795073 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.122538418 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091747142 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101148757 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.122248925 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103374738 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.092199294 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.120933605 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.093154723 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098407067 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.120510017 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095183612 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093658697 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114878505 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.093312076 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093448894 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.11146592 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.089510405 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091588881 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101547131 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.114538588 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099921086 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094212959 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.115204944 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.093060438 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092008767 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.122699401 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094570755 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101031074 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.11729236 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089453554 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088677268 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101108249 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116213591 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101640509 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090159789 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.121278481 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102326071 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099021041 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.117621312 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.105259335 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103103754 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.122311992 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100831817 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088122868 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.113844435 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100675721 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095395441 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098438495 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.119378658 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089691783 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097301619 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.123055592 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097413226 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093061974 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.110077336 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09773268 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101471423 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.119704678 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100260445 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097715708 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11690467 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.091773192 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100962769 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102830325 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.116989667 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102238071 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095924698 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.120661782 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.093009314 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101427423 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.11783363 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090592595 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089500697 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.113452835 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10278423 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089492176 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101631709 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.12251097 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092694888 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093559453 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.122708621 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.093179237 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097894292 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121895598 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094951879 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105761424 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.118099026 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094234399 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101582401 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102810839 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.110316124 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.094114831 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094070342 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.124254348 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094188793 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102244357 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116938893 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101336001 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098663943 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.122085777 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102136452 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102404294 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.090175643 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.125682742 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098748032 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099254591 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.113812797 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094192355 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090167402 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.1156858 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102583925 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.093087955 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.125806221 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101753302 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093287491 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114185121 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.102494039 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094871213 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.124440965 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093410831 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097125898 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090204836 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.118935516 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.09404939 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103064293 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.113794918 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.09072257 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101777118 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.122488412 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100279372 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097494521 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.124427624 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.090576043 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089430716 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.120631681 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.094029136 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106059157 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.119854278 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.095269866 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095021021 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099821074 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.120717237 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10303517 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090505433 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.11464768 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097690844 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097863073 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.115447991 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.091854348 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101519963 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.116153388 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099408311 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09472734 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.112232428 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.09613981 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102860846 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094925758 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.113869788 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093972704 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103996535 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.117166366 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093492615 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.090351364 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122847954 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.098708641 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104295804 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.114166403 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096199175 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.09466525 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.120548849 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103912586 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.093958526 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116916404 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.095048609 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101831664 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122285173 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.090387192 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.094021663 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107031068 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.122669579 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097154324 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099218483 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.116787058 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103600814 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103107315 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.120495909 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.091849599 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.09016412 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.115495274 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.09133012 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098963981 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121685377 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096587911 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093322901 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101985734 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.122783211 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099501969 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099394622 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.112641419 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105210377 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093108139 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.120085942 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.091089447 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090585262 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100160432 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124480774 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095931543 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096739746 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.121326392 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099754165 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091685542 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.115936811 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.100095969 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101496287 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.123809389 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096818388 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094005181 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.120818297 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107622974 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098941981 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095749955 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12596979 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102940814 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097062692 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.118187026 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099613645 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10349696 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.121282183 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10633496 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094434145 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.118013331 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104463493 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104625525 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.127334349 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095316311 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.09168631 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.123045256 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.095549092 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.092016939 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.121128393 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104767024 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104463704 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.117677255 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.094429047 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105575088 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122727408 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09723108 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093937224 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.095214902 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.12353184 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094932463 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101636807 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.115704658 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10482185 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104628459 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.12499725 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.107306802 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.092266691 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1223657 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.099368921 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.10480816 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.119121224 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.092908044 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.09102226 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.101045181 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.125832482 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.104585576 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101329854 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.121763249 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102098667 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097393042 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117741858 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.095605454 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104145157 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102986769 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.120638595 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09855548 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.096361416 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119267192 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099435341 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104048846 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.12570118 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.098465384 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107876149 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.123856044 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095924488 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094699892 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118686042 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101888935 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098536273 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102234649 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.11701069 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091401498 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102844084 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.127126082 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096824464 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10541976 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.12632193 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.096753016 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100502096 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.127173504 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102501373 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100290547 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.118692887 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101267556 seconds)
  done (took 63.167286149 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146571432 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107423995 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121909078 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100494693 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116850404 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123620049 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099739778 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101545315 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.123612856 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109002129 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101175855 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120857198 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114629032 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119166411 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137154453 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109254675 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121014202 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102435233 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101853036 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101594205 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.1360687 seconds)
  done (took 3.265202999 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116959496 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112778099 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.132690547 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113579109 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106872389 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.132481163 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111009577 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.132195861 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112737661 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108897018 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134732566 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110959641 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.129387263 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108541806 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108194484 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12976699 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113489222 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107668859 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.132913899 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111422479 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128957531 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111167698 seconds)
  done (took 3.456040674 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127782101 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103568617 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097837581 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.121979059 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10350143 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.100987842 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123617535 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101172503 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109638593 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115877375 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092647047 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095847035 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098401829 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.12144617 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094088711 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.100211975 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.129297168 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10423609 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105196268 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.10171049 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.112735985 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100270851 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.101441392 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.112792206 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106031431 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105652331 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.12562226 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104415442 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.091542367 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103742382 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.122928272 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093788393 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.091076945 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.111727755 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091947656 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103086713 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103493607 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.123351929 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100946496 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.09103043 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.123339707 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.105072021 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.091645872 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.122004621 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101923785 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094415218 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104190763 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.123560614 seconds)
  done (took 5.966154146 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128506844 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159115485 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104199214 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.128889714 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136854414 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109425647 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.103416433 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.154021122 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102652928 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.103133436 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.138775189 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.114123521 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.128921702 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107651888 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.104025379 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.127494983 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106252128 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103523989 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.129593085 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104745862 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108169551 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.12653753 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.112704206 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.112219787 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128791587 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103678966 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104417468 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.128481492 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112706022 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.129313721 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107597272 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107812593 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.135885017 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.361120363 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103473633 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.126100114 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.11569055 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104620496 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126977948 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102875652 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.104840427 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.128604483 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.107371685 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.113599501 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.127703041 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.105966478 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10404263 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.124938304 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.113190721 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.104343646 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.132308795 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.114102289 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12877692 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105411031 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107397177 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.135127449 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.10715825 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103737633 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.128050641 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.111855635 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102896115 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.129403676 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.113797083 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104293849 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.132849785 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.114393876 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.127776654 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106492103 seconds)
  done (took 9.128534781 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134748629 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107790872 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137252999 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115388556 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106682421 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.131021131 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108972656 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.108224098 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129968343 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11298832 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129000902 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.216187966 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.12878607 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112373648 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.107265806 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.131339118 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108012618 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131052489 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109031811 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107473792 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.129986641 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115538296 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10772543 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.137133151 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117951662 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104361804 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.129431543 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10824903 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136308535 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109076441 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117667966 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.129979098 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108071913 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11511394 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.140089951 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.10843425 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123964577 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107958841 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107874542 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.129792623 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10547284 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114198809 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.130719137 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104574611 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108089653 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130189251 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115735737 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.139701774 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116806334 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112860581 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.130575333 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11540448 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107493977 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.129742756 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115653184 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.143404758 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11503027 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114650334 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130382641 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11657928 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13694004 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121579567 seconds)
  done (took 8.377911256 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101669842 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101061455 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100169372 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.123309256 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101454661 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100424782 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100524794 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.123597491 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101816719 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100881473 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12365965 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101287531 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101113696 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101057125 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122698075 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102168299 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10135814 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.122138786 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101333975 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101169499 seconds)
  done (took 2.997570292 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110587596 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117395096 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.125256571 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108406035 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103017569 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.13078786 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103318166 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103397087 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102861056 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125468819 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110978079 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.132257531 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10351896 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109190281 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.132822197 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108471336 seconds)
  done (took 2.694042098 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119780805 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117367928 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.204479773 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105045551 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.1267752 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109484104 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10270503 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.128855911 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102010109 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108256434 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.129371689 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105335323 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103955957 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103736026 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.125374184 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106102599 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102334801 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.129020807 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104135449 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.20563411 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.10648044 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105440852 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.127436736 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106446707 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.1045311 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.13125922 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109157946 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102970706 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.127449517 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10414788 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106019208 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.132668756 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103847144 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107679754 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.126122463 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104830719 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10385776 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.104117639 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.127116654 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104424732 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105210376 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.128093733 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10341329 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105845024 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.125457434 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104208503 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101548947 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.129694844 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105310738 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105042827 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.124762304 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.108768581 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108302949 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.132582782 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111173355 seconds)
  done (took 7.255321156 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114623794 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104979271 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.137326123 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103168985 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104375633 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10515143 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.128434558 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105605608 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104706122 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.125513238 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105561608 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105251373 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.127131251 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105188237 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105085919 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.126896584 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102325093 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105127195 seconds)
  done (took 2.889469534 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108496548 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.1033695 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107824605 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126767308 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103667653 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103857271 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.126041377 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103302033 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102921118 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.126008691 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104173093 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104602897 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102127931 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.126868647 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10462811 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103471817 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.126686501 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103281011 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104104719 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.12461012 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105010839 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102856166 seconds)
  done (took 3.299030694 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114935356 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.230631981 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109220593 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.237379488 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.123966672 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.100594705 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.109819412 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.124836057 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.116310111 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.099473334 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.123116354 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.101104547 seconds)
  done (took 2.466599699 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131160743 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140705812 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127780215 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106712802 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112076193 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133312204 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10872025 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108471685 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13921917 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118834036 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13163755 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115832956 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115349725 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138553304 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112287254 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135128636 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108982085 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108303228 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127112044 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122019148 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108604592 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138257386 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108327253 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108605641 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131749925 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115996874 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138714776 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118625909 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108239533 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139063564 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112407521 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130993474 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116094651 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119432855 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128738368 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115477115 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108699227 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144665533 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113015629 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138494847 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105137602 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112827546 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137516719 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113483635 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137750268 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108830948 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112949768 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131638946 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108154606 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150219313 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113555921 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115952595 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136021487 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116684252 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115657934 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149862633 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11894648 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138464116 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113849463 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142771856 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11620514 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11317794 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13821576 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119151535 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136336332 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116159184 seconds)
  done (took 8.986851261 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142037197 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106147088 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132379265 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11943984 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137941424 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109244619 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110012873 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130857004 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110608689 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107172357 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17364785 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109624066 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1395139 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116587242 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109645926 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131189797 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110098428 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11565954 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128998596 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128875746 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131056609 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116471235 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115927242 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139888599 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121014551 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135626535 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110400631 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109597387 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131418597 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109096695 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114178417 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132440794 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117429039 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10565317 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138438694 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11048053 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131220527 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114185121 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10993039 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13659663 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116476194 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145188435 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110822473 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109493393 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142367406 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11074404 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109636079 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128245568 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110582917 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106080529 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142106339 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119732404 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142410708 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116308435 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108888219 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132391276 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109412377 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108795888 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132188248 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113918047 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138404332 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112321476 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128008247 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132074896 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109448066 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139748987 seconds)
  done (took 8.963986831 seconds)
done (took 170.9929614 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.174907717 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.216133281 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.199300623 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.190362196 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095168108 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.169763977 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137647183 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.201393347 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.095812184 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094761771 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.119479998 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.098200616 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.204205228 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.11826008 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.096171377 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.098018889 seconds)
  done (took 3.189160298 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19643329 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.341937058 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.134485259 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.099119308 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102106211 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100374356 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.122761212 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101920014 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100467595 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.130161524 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100813029 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096504171 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12834139 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097071981 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100287613 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123529326 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106540154 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100122857 seconds)
  done (took 3.173707425 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119537967 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.154021751 seconds)
  done (took 1.17002623 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129708463 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.214568766 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295950553 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172351945 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120862995 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140247234 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15001328 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135945081 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.190324482 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134602871 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112775654 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098418521 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148920893 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105551062 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.140306809 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099569366 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128009504 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.138495196 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115499184 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102746376 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.147900233 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103314814 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105262967 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.139657355 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179229845 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.136009475 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104163245 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103300148 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125430825 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114603121 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106091074 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138923392 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.11204707 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179096098 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103450655 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177255362 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106685424 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.123388805 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115305236 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.100488757 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.126402667 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105280147 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.135578973 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099619302 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103414407 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.128761346 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104160452 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102905265 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.131561353 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107177595 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108580707 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.130555918 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.174051812 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.107855195 seconds)
  done (took 7.959442818 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.915498472 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.148115483 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099949372 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.064885765 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145763648 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113751895 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.909449798 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.149588017 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25592626 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.930475307 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116228677 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106890339 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.264065912 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.26067002 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.279966957 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362126845 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.762001997 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113416588 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130911898 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164772 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105249138 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140901507 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1160378 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.44659017 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100875049 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101003347 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128119016 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108593977 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178173356 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101465486 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127611409 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175858117 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.29379581 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.211279312 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124696932 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100535689 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099950769 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188732519 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276961547 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219511992 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.191824952 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097958616 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100765956 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127227282 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11539107 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098410001 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18023088 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195191092 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.192311257 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104652415 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109012187 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13066934 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.104063513 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.181846937 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098676724 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362184535 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.384651917 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100660775 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107450396 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135352408 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274907794 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103241062 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23824531 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144204092 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219773129 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101227886 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.854028505 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.190182424 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100710782 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105415291 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.1288432 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107841157 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126051854 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159377879 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.42480395 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107545101 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104599544 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124023173 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228983029 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101394179 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100160572 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181279128 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102162782 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129904648 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109748313 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106866173 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189590311 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.274992092 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10739976 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129396902 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105614478 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110838955 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.125733168 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213757559 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.255652482 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.155141586 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.232267525 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128033181 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.159538933 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18893457 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105366611 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.190420514 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128630673 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113092035 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104283932 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226384235 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.159069879 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102787372 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.129739474 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107199456 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.162264349 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105394408 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.106977431 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189768894 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483617365 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.188682024 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.098913766 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106314707 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130365601 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.157228164 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131574553 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272764504 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107929297 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.188788742 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105954256 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.121565179 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107473863 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.182819268 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109411748 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107178922 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127592272 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109995831 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.283828063 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221797828 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109929063 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248200906 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.197390674 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106299132 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193897213 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106830414 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.18743424 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134062579 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105312204 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102342344 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.844212591 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138593672 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106820358 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10527449 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.204623228 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100794382 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127390291 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101814693 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099177416 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.849354796 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128432533 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099872407 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104079297 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.106098758 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129474425 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106745208 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129238083 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158895415 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.269010465 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110638859 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106362827 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123938806 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.156847529 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.127418718 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10487835 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.1019659 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124642037 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108718504 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106414439 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127212336 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165500096 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.180493623 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.23217275 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.581667264 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124944101 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102205316 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243996321 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102488452 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.35281393 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107522403 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.237560796 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184867642 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099348528 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361018814 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185375878 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.204794897 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105362421 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194465791 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100049176 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129619766 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.158343879 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125922368 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109189584 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.180321254 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110979685 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108534053 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.302110276 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103115347 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253196165 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100057277 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191626813 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103642161 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107354294 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.353118648 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10293362 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113061724 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.181261039 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105885183 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126670857 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.893922964 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103413779 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110206263 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129926159 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.236856097 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184626131 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109181063 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108127438 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133097512 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.18135721 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210533896 seconds)
  done (took 47.031303214 seconds)
done (took 63.411620572 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256639898 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.168184655 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.353506616 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148184067 seconds)
  done (took 1.892091516 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.257838863 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.166634738 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.241940054 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098978648 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.250599466 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098602692 seconds)
  done (took 2.036444509 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.170976072 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166259411 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14401992 seconds)
  done (took 1.404086371 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209404073 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.208291641 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.346913878 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.234793335 seconds)
  done (took 1.981778548 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.274670263 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117463889 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.130767677 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.224551739 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.243351965 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.208723121 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124105586 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175239672 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.13112261 seconds)
  done (took 2.584585651 seconds)
done (took 10.823859025 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.290074107 seconds)
    (2/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.283089212 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.250816182 seconds)
    (4/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.439784067 seconds)
    (5/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.164489912 seconds)
    (6/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.332465602 seconds)
    (7/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.274770974 seconds)
    (8/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.182794614 seconds)
    (9/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.332112414 seconds)
    (10/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112165311 seconds)
    (11/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.236626948 seconds)
    (12/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.395339869 seconds)
    (13/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.397065856 seconds)
    (14/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.194540451 seconds)
    (15/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.110330301 seconds)
    (16/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.224194991 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103705087 seconds)
    (18/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.231875645 seconds)
    (19/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.17870855 seconds)
    (20/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.155290278 seconds)
    (21/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.078631228 seconds)
    (22/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.119658861 seconds)
    (23/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102648738 seconds)
    (24/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.202552782 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.12711386 seconds)
    (26/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.156131237 seconds)
    (27/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.337632251 seconds)
    (28/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.146826702 seconds)
    (29/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.198853081 seconds)
    (30/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.189522076 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.103933328 seconds)
    (32/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.107313716 seconds)
    (33/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.226599765 seconds)
    (34/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.171378427 seconds)
    (35/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111811426 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.149796353 seconds)
    (37/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.248084691 seconds)
    (38/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.221015536 seconds)
    (39/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.079654333 seconds)
    (40/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.239444485 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112765248 seconds)
    (42/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.084264138 seconds)
    (43/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.163605302 seconds)
    (44/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.145066911 seconds)
    (45/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.148126379 seconds)
    (46/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.364854218 seconds)
    (47/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.155193897 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.120407839 seconds)
    (49/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.216566856 seconds)
    (50/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.145067051 seconds)
    (51/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.084884258 seconds)
    (52/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.107157202 seconds)
    (53/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.202866091 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.122421154 seconds)
    (55/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.112151134 seconds)
    (56/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.187604374 seconds)
    (57/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.086217388 seconds)
    (58/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.227272966 seconds)
    (59/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.0850993 seconds)
    (60/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.089327141 seconds)
    (61/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.133338045 seconds)
    (62/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.191118367 seconds)
    (63/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.113068638 seconds)
    (64/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.169720745 seconds)
    (65/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.134913665 seconds)
    (66/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.082945184 seconds)
    (67/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.276706068 seconds)
    (68/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.087050176 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.130439771 seconds)
    (70/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.080344086 seconds)
    (71/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.110218345 seconds)
    (72/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.260568959 seconds)
    (73/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.10700851 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.123470938 seconds)
    (75/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.186524977 seconds)
    (76/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.170375158 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.105190472 seconds)
    (78/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.219088963 seconds)
    (79/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118075071 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.103827798 seconds)
    (81/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.149768067 seconds)
    (82/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.081269203 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.103495424 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.138489748 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.108985367 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125563243 seconds)
    (87/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.08058895 seconds)
    (88/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.136121919 seconds)
    (89/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.147213064 seconds)
    (90/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.107848351 seconds)
    (91/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.235405215 seconds)
    (92/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.083388118 seconds)
    (93/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.104600383 seconds)
    (94/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10868072 seconds)
    (95/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.10195696 seconds)
    (96/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.111609794 seconds)
    (97/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.111485336 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.102362528 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111906061 seconds)
    (100/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.171519996 seconds)
    (101/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.080307769 seconds)
    (102/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079039101 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.12728546 seconds)
    (104/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.081357902 seconds)
    (105/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.160328977 seconds)
    (106/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.138314307 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.121896297 seconds)
    (108/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.105200808 seconds)
    (109/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.102358268 seconds)
    (110/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.081710949 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.120330595 seconds)
    (112/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.223013136 seconds)
    (113/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.078620961 seconds)
    (114/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.132094242 seconds)
    (115/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.163375664 seconds)
    (116/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.078697648 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102336408 seconds)
    (118/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.084383007 seconds)
    (119/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.139886294 seconds)
    (120/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.112023254 seconds)
    (121/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.103819207 seconds)
    (122/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.130416444 seconds)
    (123/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.10264308 seconds)
    (124/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.083790893 seconds)
    (125/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.085038537 seconds)
    (126/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.162095613 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.105801233 seconds)
    (128/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.085874048 seconds)
    (129/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.085546912 seconds)
    (130/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.109825558 seconds)
    (131/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.17254331 seconds)
    (132/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.080646289 seconds)
    (133/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.085874328 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.151405007 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.124833263 seconds)
    (136/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.082245725 seconds)
    (137/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.156158266 seconds)
    (138/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115013439 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104410554 seconds)
    (140/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.135824115 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107178993 seconds)
    (142/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.113953876 seconds)
    (143/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.078116218 seconds)
    (144/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.134773563 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113973571 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.104833792 seconds)
    (147/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.084568506 seconds)
    (148/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.105884135 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.104911386 seconds)
    (150/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.085913719 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.129535747 seconds)
    (152/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.114278638 seconds)
    (153/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.085845204 seconds)
    (154/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110483114 seconds)
    (155/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.110259412 seconds)
    (156/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.113059419 seconds)
    (157/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079750924 seconds)
    (158/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.084283344 seconds)
    (159/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.159299168 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.103422858 seconds)
    (161/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.086267744 seconds)
    (162/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.131682597 seconds)
    (163/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.128054203 seconds)
    (164/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.103076097 seconds)
    (165/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.082053242 seconds)
    (166/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.082015737 seconds)
    (167/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.106112656 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111911437 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12605807 seconds)
    (170/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.081743984 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.130116966 seconds)
    (172/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.079843463 seconds)
    (173/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.07936093 seconds)
    (174/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.079294371 seconds)
    (175/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.084684791 seconds)
    (176/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.137305588 seconds)
    (177/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082558962 seconds)
    (178/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.079836549 seconds)
    (179/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.080129743 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.129487904 seconds)
    (181/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.079788917 seconds)
    (182/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.082081388 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.10424936 seconds)
    (184/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.136208173 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125448704 seconds)
    (186/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.082318778 seconds)
    (187/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.10520025 seconds)
    (188/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.109888486 seconds)
    (189/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.081048085 seconds)
    (190/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.112490353 seconds)
    (191/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.086108366 seconds)
    (192/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.07941373 seconds)
  done (took 27.462924162 seconds)
done (took 28.394111291 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.224984406 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130503676 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.112411711 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.112230054 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.23378308 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120169052 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.155602049 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114426283 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121841821 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.138305647 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102639798 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125619466 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.137325773 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.245833357 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.115814379 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103780655 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.12812586 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.123968698 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.126881848 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.153924113 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.209522804 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.131679036 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.123575771 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103305456 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.234340694 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105088224 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.138934707 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.114143147 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125178209 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.139651628 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.113278442 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.103014497 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.153501922 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.129040152 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102110331 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.136947931 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102936483 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.085925242 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112410873 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.139196053 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.127136209 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113633585 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.139604345 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.106115939 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112677597 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.137077487 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103152223 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.11539561 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.126529987 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.113925032 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105451888 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.152497535 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.11287874 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.103206071 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.125169898 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.105661761 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.1236505 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102366369 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.151102036 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103744547 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104521183 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127557003 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.1150214 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102861404 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.135186954 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.104514967 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113647832 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.139803253 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.113119971 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106017602 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102716135 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.136422097 seconds)
done (took 10.185434055 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108152091 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146480638 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.247835636 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.25347518 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.157380279 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.119625896 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117000004 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.153477478 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.117533801 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12086097 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.165163671 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.136041671 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.254431936 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.118645675 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.14597834 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.116177204 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114542499 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.137161506 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.250699338 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.12850007 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.125442349 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.146164536 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128870229 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.14637008 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108403939 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.12926546 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.13712903 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.117238303 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.10688524 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.149713871 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.128286285 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.107294441 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.135636592 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126172958 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.124541326 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.142217805 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.12025328 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.115148302 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.133563773 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.110971164 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113788143 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.149519992 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.109872002 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118581001 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.14238731 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.123759243 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114958753 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.145148905 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.10883905 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114563172 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.13326555 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131189518 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.118723617 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.147762156 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.119747211 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.119121084 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.145367228 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.120677776 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110240555 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.145185222 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108347228 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107381812 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.13370143 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.128762604 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.10960933 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.146908067 seconds)
  done (took 9.875716668 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126639497 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137306008 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.144263038 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118873706 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113026524 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127262412 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102978109 seconds)
  done (took 1.842485557 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104811722 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.26813326 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.258508851 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.258925664 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.249276811 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.26675543 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127243485 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103372014 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.167230065 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113814682 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.268894948 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.325046502 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.141886269 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120333319 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.262797804 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.103116953 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.261565664 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.130589512 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119675624 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.262924147 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120832475 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.161516977 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116880924 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103936611 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.261890845 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.131930604 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.310820601 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12212796 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114305108 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.144709045 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119509331 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.20788293 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.261990998 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119240513 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113296949 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.25794167 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.251748215 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118162652 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.334574809 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.110168828 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.248109973 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117838309 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.147602429 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.119833046 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118778023 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.244690403 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.1500225 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.120853427 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118178506 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.271842878 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.141089311 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.236792193 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.144415501 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118772575 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113685057 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.147552493 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126913066 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118974207 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.269871889 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.150210302 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.260747124 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.260486337 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.254879269 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.261337214 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129381746 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.266980948 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.24228046 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117829649 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112874549 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.148596969 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.262147163 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.119210829 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115112753 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.249141109 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150277001 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.264324394 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.26310287 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117548677 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.117787116 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.136001372 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118667744 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.105268484 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.252588405 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119121642 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.145725374 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123429244 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116589966 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.148360695 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109659755 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.15277236 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.119929636 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116390359 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.148646417 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.120381718 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120722405 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.262001683 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.14359333 seconds)
  done (took 17.879239392 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107734161 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.106660491 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10962232 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.132210947 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.107411284 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.106237811 seconds)
  done (took 1.66800429 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142856364 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119164037 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.154240634 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.1211161 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.167255836 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.250417528 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.261659321 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.14101018 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.139779856 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131922293 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.252680596 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.255419352 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.257113212 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122504265 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.258141486 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12053949 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.26290068 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.145256251 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128982463 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116499033 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.146122563 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.125043136 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117195699 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.245078023 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119472874 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.150278118 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112657552 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127143053 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.155855504 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113337737 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.150037236 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.121446519 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111578434 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.138913545 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.231017925 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.140117888 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116683134 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121099618 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.150225947 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120668627 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.260459029 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117214766 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.155277497 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122069852 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112478619 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.139546376 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122396431 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111622924 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.261075658 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.151054544 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123416532 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119831648 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.149077756 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122885319 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.111196822 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141653907 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122971433 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.26021682 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122744729 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.140331951 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120946665 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.11991909 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.141856796 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123929866 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.119759922 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.149414181 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.112072911 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.140439158 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.143752847 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.122124399 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121514614 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.147163267 seconds)
  done (took 11.899293479 seconds)
done (took 44.133014332 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.755457799 seconds)
  done (took 2.758398746 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.090079682 seconds)
  done (took 2.096759092 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.255524324 seconds)
  done (took 19.287262787 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.42008715 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.352723764 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.997233168 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.174929019 seconds)
  done (took 2.946919437 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.099973677 seconds)
  done (took 2.113515622 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.40804728 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.27682787 seconds)
  done (took 1.691330091 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.726217908 seconds)
  done (took 1.738959612 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.897755084 seconds)
  done (took 2.905813442 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.270243723 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.246191782 seconds)
  done (took 1.540469148 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.667283808 seconds)
  done (took 1.688661107 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.086731351 seconds)
  done (took 20.114486626 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.256358997 seconds)
  done (took 1.284196126 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.29241854 seconds)
  done (took 1.319170336 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.683838148 seconds)
  done (took 4.710012775 seconds)
done (took 67.211258221 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.121323948 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.123386849 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.121773935 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.148294905 seconds)
  done (took 1.53211634 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.124600691 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119775287 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.122715884 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.144232308 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12464965 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118068017 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.145207851 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122182158 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118643928 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148473839 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.11944822 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118102658 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.148262499 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118930277 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116886721 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147470498 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123144151 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.11902554 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.146330759 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120578323 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120036983 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.121007358 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.149734683 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122994552 seconds)
  done (took 4.109898333 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.117122645 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11065625 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.112256523 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135880897 seconds)
  done (took 1.510138754 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127695359 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131257893 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.155145218 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127058057 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131545569 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.156078018 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120366703 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116950487 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.145276784 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12834132 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134071519 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158979644 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131199854 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121439325 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.157581351 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115812213 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.121192437 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156587021 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127235105 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127735168 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.147409667 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127083689 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.12368165 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.156046799 seconds)
  done (took 4.27499754 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.195239772 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.130888711 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173576542 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16504047 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.177654645 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.118327966 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.146213146 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.152298348 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.125700063 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.127090463 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.146993133 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16606595 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.12501932 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.147810276 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.120889326 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.14999128 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.129301778 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124066406 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.18921184 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123280831 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.124514857 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.158097828 seconds)
  done (took 4.249598709 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122400132 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.111034162 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.134947468 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.109597107 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122294672 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.138125875 seconds)
  done (took 1.772965264 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.110095425 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.105812408 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.105062522 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.131023714 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.109420339 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.105281754 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.129769225 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.106087792 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105612522 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104731963 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.132408807 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.10628251 seconds)
  done (took 2.383617149 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207164752 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148770804 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250536189 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.388855943 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192691194 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161460477 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.307814213 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187326406 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.178386232 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166606452 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182019375 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190990698 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153538449 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216246913 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143707101 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.186407992 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172273932 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238515526 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171908732 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21354629 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184795357 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205586339 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192081269 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177268003 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141839825 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192767042 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121660513 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129405841 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195031575 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163526451 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203879697 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17826834 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142926205 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21488417 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261201023 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176501285 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.321833314 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135463455 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.19722068 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.190802685 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257778101 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142291837 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218166919 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182055274 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130496064 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220978869 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150848722 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.212961788 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.13535548 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173913876 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183964874 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207835647 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.198922363 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137897633 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.33009016 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135426928 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.170200973 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176410981 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216143827 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230624718 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17938601 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.151908144 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172796205 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218767484 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24382535 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14237432 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.192992908 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125550113 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193970616 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.232897564 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182402106 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187827936 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.21902017 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132798382 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171784834 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193578038 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183772252 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206726568 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200653449 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120431935 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179391318 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135015772 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127362984 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.219676259 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122321561 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24624535 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13464296 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.209935216 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205627475 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152771592 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189434634 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160427035 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191931181 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147824385 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.100692972 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173962415 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159009536 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185789478 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128852489 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179711959 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141222079 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126433955 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180782906 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123910869 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200548408 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.133918007 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188939669 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169897722 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.161038634 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177991838 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175842124 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.16556449 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196866305 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220241764 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132204591 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133240268 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247832633 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198704598 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13745463 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197418541 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195351238 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.178697025 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135700287 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19500762 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192417416 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172911584 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228092623 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139366326 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135400947 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.166715963 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200086966 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159338349 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.188489542 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129079054 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.164455619 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21570655 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.155846354 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139777272 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211612734 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134239207 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125247281 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166737195 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136767252 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.170377462 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.152212861 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138870802 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183566779 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166143265 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195211207 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185264761 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135277538 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201916598 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131380673 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.195137524 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148636569 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119572189 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.203467494 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225081975 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130415886 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208060536 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160047029 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208111241 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172454541 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158219701 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181773953 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157786894 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.123188151 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191536437 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169256021 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191932229 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.185921338 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205839653 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.191678494 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.162065231 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177975705 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19648609 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.183243693 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186181148 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140148897 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202296815 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169222916 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.152068499 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124914069 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.128061955 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168204002 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131278985 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136969653 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20896547 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19244661 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201262395 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171166669 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166604706 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190262742 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.15367052 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160242864 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.204423551 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139577945 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.219391237 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189457333 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209012613 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138788598 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191669066 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121570837 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156087865 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.134740737 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18926925 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138587665 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135485246 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171604643 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216678392 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168483786 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177399864 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187674774 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192684349 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231101594 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121813395 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.161209676 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193832749 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196461576 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184502791 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134892712 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.188214926 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19049259 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171131887 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221539205 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169166903 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209261876 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190433435 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.19432492 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130630858 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173654206 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160258578 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168514306 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159897638 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171691945 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132340503 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14797147 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.166667144 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139110917 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214277389 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172069088 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174833825 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.183901318 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17121905 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154731408 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142368035 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202478262 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145321902 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104299367 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194509302 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219884106 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150218893 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180723331 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170323824 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158918673 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.318222659 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210711851 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170371106 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166529976 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139308009 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201444751 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157516888 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187303846 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18383902 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171844479 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237654523 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170680643 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138927723 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160653321 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147925096 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178885178 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.137778065 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.180997528 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.165620363 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.173443425 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185538678 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166069651 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169134217 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206656098 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14467587 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.180696303 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139097786 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254342608 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198314953 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172125519 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.194233359 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.163913093 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212609997 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124767961 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12656365 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.162458718 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185135205 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160947772 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177934848 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.194580121 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208599991 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20298077 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162246121 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140396624 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.157857225 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166504693 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179121661 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20948893 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136041532 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137827862 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21402142 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126359365 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161504826 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159469581 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314347027 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14681881 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196826426 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105480313 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.311631458 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130195537 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160964045 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159038799 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199388763 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133129499 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.187437732 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20067524 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140407171 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188817307 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135454236 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205937291 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209601165 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166333861 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202981957 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.14356225 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19253845 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185496982 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171218212 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175964276 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.147665426 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157734165 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223796336 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.204224015 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132827645 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198033981 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170558002 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200946084 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172672447 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169950941 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182572379 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157971136 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165689645 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16779536 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12481238 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158887453 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194522153 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158019117 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171869411 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201002306 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132017486 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127344475 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178537648 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165996039 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171542974 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.130251131 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21449627 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129080521 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21276714 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240407457 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130601384 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195392445 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142632802 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129517937 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169596706 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145074942 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16035901 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.175325158 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176109406 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.161719308 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172399717 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194058686 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192749511 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154578875 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141391583 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.293566103 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128805416 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22148466 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149214505 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226930254 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17836067 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176229184 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1994167 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150366467 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19528922 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147431039 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.249688456 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165444573 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.197518833 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132787836 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171339107 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138144174 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.134040719 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180641128 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167335246 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172276307 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135955906 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.197291988 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144695496 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.175154536 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141740371 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230092877 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150698563 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216583478 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184937065 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170209704 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174547685 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20588952 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128446781 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.194299428 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203422097 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144464321 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182001705 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135754134 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136887169 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245212398 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.12626892 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191065987 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174795762 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201047144 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17171604 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.165246642 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177333654 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170637062 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17587446 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15698826 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.150945731 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20049442 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135327474 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127250749 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203855183 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18977986 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.165371239 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172065806 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.176825349 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195268896 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.152923776 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134654902 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315062691 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160486749 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223654488 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.130741276 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16860517 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146185698 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189399224 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.163795689 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204802022 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13065181 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15860299 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.14644453 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.182986817 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138631246 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16831477 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210010085 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155634456 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214625477 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134258693 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.285680812 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141417914 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202079957 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115912645 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.159489765 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141776828 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134795214 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17323432 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206007552 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215998207 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.194296217 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.146154619 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165785327 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127786291 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131215359 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192198114 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150000081 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200315487 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14663834 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.132615957 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142272003 seconds)
  done (took 85.460264817 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175046143 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.173274758 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.184795357 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.24483302 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.215674493 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.309075128 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.250991345 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.262554058 seconds)
  done (took 2.934499562 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.121390856 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.162212806 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143554428 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145633045 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.111057628 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.51036539 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.163146864 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.122400271 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.161949714 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.156325465 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.139080535 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.574912495 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.117636119 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.14822276 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123273079 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137872421 seconds)
  done (took 4.152602646 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.662709413 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.552929182 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.125899251 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.31130034 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.238108002 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.213095046 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.824107591 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.201375748 seconds)
  done (took 13.243084544 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.171264446 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.168939709 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.460487119 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.338901336 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.216082087 seconds)
  done (took 2.480623828 seconds)
done (took 129.129753305 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.126178336 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125180374 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.126840571 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.157751904 seconds)
  done (took 1.646392464 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.195070756 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.091742184 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093726514 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121324786 seconds)
  done (took 1.625453279 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.372434023 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09198593 seconds)
  done (took 1.606242665 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.146773483 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136367969 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.166239994 seconds)
  done (took 1.583574769 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.137759418 seconds)
  done (took 1.260918445 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.118732068 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.116684181 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.278356068 seconds)
  done (took 1.641352717 seconds)
done (took 10.493652999 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143733152 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.934453606 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.436333839 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135459404 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.71656689 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.431417221 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.429796415 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.1790954 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171640961 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.141363927 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133664833 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.695275147 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.444621555 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.88737653 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.40070752 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.918008149 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.699446208 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113057952 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.14817408 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113684918 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.410848824 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.141148955 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114654664 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113158035 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.783666344 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423603798 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111179082 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.928325034 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112287953 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115643686 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.431241152 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113492016 seconds)
  done (took 21.187950228 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.15256151 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.169087633 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150386442 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114079871 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115520556 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.144216733 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123920716 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123570114 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204923964 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111934346 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164409873 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112115933 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117997059 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.143063933 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137890579 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112371762 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.144756606 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116027395 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120404836 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.143039908 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135097347 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111430441 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.143536759 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115627762 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111828606 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.163379715 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113279419 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123693941 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.142120447 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116528505 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117604899 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142854758 seconds)
  done (took 5.392716281 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161703105 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179347039 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150917166 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150683967 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.191653631 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115418169 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.227963346 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150930995 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206396637 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11391267 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134046166 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.141966796 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153598932 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113095108 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.168182491 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113382924 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116466347 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14507627 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120179319 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11433081 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.164562128 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112946415 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113936695 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144243832 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113412187 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135043709 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.143054015 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12550772 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112473102 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.147706004 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119862658 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113578619 seconds)
  done (took 5.64722986 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.128704355 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129172222 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.137054998 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.16845082 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.123649243 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127787618 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.159501708 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124522958 seconds)
  done (took 2.240186688 seconds)
done (took 35.601752709 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.137378364 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129911143 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134854229 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.160208222 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.276203838 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.120655217 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130923283 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.151721668 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.128845365 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134566903 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.112223139 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.155061059 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133286223 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.124310361 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.275537692 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.161418642 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.280335369 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.246730258 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.155124544 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.129303174 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121948329 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.280392989 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.160059181 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.123084926 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.271151729 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116917032 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.26949712 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124201548 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.123525135 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.14718834 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.279492875 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124698329 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121292309 seconds)
  done (took 6.671481618 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.228798368 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.1555313 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.123591834 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.12205309 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.12442518 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.154102348 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.230967988 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.155223859 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.122589123 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120846582 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.153236456 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.214822639 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.160867245 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.118488042 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123869802 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.110882117 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.264307703 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.122495326 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.147838632 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.094811987 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.11801808 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.121916481 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.275985165 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.150991897 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.123480716 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.121733497 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.12322398 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.160384851 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.124752386 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.123653644 seconds)
  done (took 5.641684882 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.128056158 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134947118 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.141861546 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.219128075 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.153656341 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.167411582 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138173855 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132652903 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174856174 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116189217 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129870495 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.184237605 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133758979 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125808387 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146144003 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132041722 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.130754197 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.146737026 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124885434 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13310275 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.163960794 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.134220909 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137352802 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.154857821 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.115503515 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123415485 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.125322501 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.157247441 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124101605 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129835924 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.148568055 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.11791681 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.11815469 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.182063445 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116672238 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.128551403 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.167647436 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128761905 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.12762866 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.180459261 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118364632 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.116526061 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.173860307 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.172626003 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.1166582 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.158412952 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.118059636 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129722711 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.144902016 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134905353 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.157493002 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.146663413 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.13666668 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.114166892 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.144224066 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124476723 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.115331776 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.14972763 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131989131 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116489325 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.135368611 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.154019726 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126815429 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.116424093 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.157853593 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.115377591 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.114123311 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.150647369 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142970764 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122295021 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.184858564 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115723934 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126631117 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.158909803 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127046044 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127240133 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.14446439 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.128718743 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125995213 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119129535 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.160226311 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.118573178 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116147172 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.163621715 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.136230452 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129941594 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.158166203 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.126773872 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116388683 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.147454645 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133708204 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115923889 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.150001826 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.130138058 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11564194 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.1183793 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.158040977 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125576584 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112469051 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.173213508 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.119037483 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.115060511 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.173050917 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119212925 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.118860367 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.154985142 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.159370196 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.115033622 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.156571936 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.127409149 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.115207178 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122712742 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.148026785 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114666537 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130613537 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.162410038 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123069701 seconds)
  done (took 17.230503195 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.373474587 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.364513532 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.212849693 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.408172575 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.127484717 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.283249776 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.396596872 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.367889031 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.115629019 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180834657 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173713989 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.329298999 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.149095077 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.144180067 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.369074727 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.44583791 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.145639959 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.186947935 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.150491833 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.161477238 seconds)
  done (took 6.251788653 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.124241987 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150693534 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.168717125 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.134983855 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.127147104 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.162697017 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.117952569 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137390376 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.12635664 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.156494063 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.12014824 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.123719015 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.161175314 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131542566 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129942921 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.178881826 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124954786 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.119570442 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.169081348 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120555414 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.102062979 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.172108199 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124955904 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.136159982 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.164482718 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.127218552 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.114089858 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.150980303 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123094075 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.125000882 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.149547998 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.125164589 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.123123549 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104792307 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.158922374 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.132242794 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.12194344 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.149531865 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.122664411 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.118193522 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.159111225 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129301708 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124466945 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09951482 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.164945766 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111691578 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.129918895 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127475498 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.137522306 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.135731995 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128158616 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.161328686 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.124111034 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.137627557 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.152485173 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.133417245 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.125929632 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.160003029 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122072157 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.114912587 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113838778 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.149846429 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.125357841 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.128998527 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.158828089 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.124689809 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.125497104 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.14555601 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121382056 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.118377902 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118021713 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.159442343 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.135674167 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124674234 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.154832957 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.127072025 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123652526 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.12549012 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124952482 seconds)
  done (took 11.791516436 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141179755 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12700407 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131966363 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.18085156 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.129009423 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.121326462 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.158048799 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135561861 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.129304362 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.167328052 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.131423906 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129753371 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.169610465 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126427599 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126004711 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163409956 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128250178 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.153129668 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.159389403 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142709837 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.130350165 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.152671509 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.129209588 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.127218202 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.17580881 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127886095 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141788422 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.159497447 seconds)
  done (took 5.181927115 seconds)
done (took 53.916402919 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.304233171 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.582555436 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.275609839 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.27559587 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.29560421 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.32167673 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.275232626 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.275704334 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.81633223 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.247271039 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.275947102 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.278769878 seconds)
done (took 29.398946472 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.26742458 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.495623501 seconds)
    (2/2) benchmarking "String"...
    done (took 1.671195687 seconds)
  done (took 4.347644209 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.268066491 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.26433082 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.595262149 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.274932937 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.265838833 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.266679513 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.281445147 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.272970327 seconds)
  done (took 16.390948738 seconds)
done (took 26.442517656 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.278394689 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.540755497 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.529338612 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.243461058 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.287329485 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.275951711 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.269418269 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.331499557 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.274105317 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.24810655 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.788228098 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.554817132 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.269847374 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.678397302 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.244423121 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.301866808 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.284050716 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.602975071 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.272329324 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.249610932 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.277061908 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.246313446 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.273478492 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.284727408 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.283354888 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.272808993 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.313461929 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.267106383 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.561173806 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.294620776 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.248193014 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.289847193 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.310587192 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.26930331 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.300154999 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.278725319 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.551363061 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.284223154 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.264179405 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.274538054 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.548504736 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.291614387 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.279338664 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.281510309 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.249434303 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.285506767 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.256165676 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.454619683 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.289566083 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.296149392 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.352573466 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.682419741 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.276484321 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.276534258 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.271415729 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.583002839 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.274800029 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.389528934 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.315567923 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.274348505 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.281350722 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.268586668 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.331216421 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.271641597 seconds)
  done (took 148.922861423 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.269350103 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.27483495 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.275117597 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.299655703 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.275548308 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.273677539 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.269829914 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.2693339 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.27534081 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.301035488 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.275399965 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.274840677 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.275191559 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.284971573 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.28064763 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.30946135 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.275496137 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.27641441 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.28587546 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.271337088 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.28252629 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.276247908 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.277098365 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.276263832 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.301810726 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.372921654 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.305352098 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.288872418 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.282433471 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.271563025 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.299734973 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.303716835 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.277675325 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.236716205 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.281595516 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.289342381 seconds)
  done (took 83.388200555 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.272137469 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.272785876 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.273581158 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.308450956 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.272604149 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.895550824 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.923888017 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.342459681 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.481783263 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.27723707 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.786805012 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.61863223 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.276772766 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.370493063 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.286325238 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.279452227 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.371752931 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.300280852 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.27402088 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.274334187 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.923352543 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.289861162 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.309591535 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.461894282 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.29156068 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310709204 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.668957204 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.274289559 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31070662 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.618495969 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.330268326 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.274242905 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.656174853 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.274698689 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.67236525 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.390920312 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.276096003 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311453503 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.274857578 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.563487299 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.273713438 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.274914988 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.275867762 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.277565604 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.95613269 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.275849604 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.89997918 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.275866715 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.299754249 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.274985108 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.275346607 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.347251491 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.05389589 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.275555432 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.275364556 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.279857446 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.275810982 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.276941851 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.314166487 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.306604772 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.205708422 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.278026277 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.279438467 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313889776 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.275967007 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.370750638 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.280375249 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.638304354 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.333894973 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.393202795 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.276912588 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.929563809 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.283016018 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.376457788 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.399261177 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.278873452 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.277253343 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.276947159 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.278864023 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.393038109 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.279036741 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.018973922 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.464968904 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.296138287 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.808837144 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.37833617 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.279012226 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.739873695 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.282573364 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.278582842 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.055182226 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.37650982 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.277207877 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.278844328 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.27854443 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.01920768 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.932478285 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.623258446 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.27901928 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.980702504 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.284450138 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.194971372 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.89671424 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.979962047 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.281863497 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.393968535 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.468827286 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.300242231 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.278859274 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.805761473 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.281169205 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.336679406 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.284356271 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.685151443 seconds)
  done (took 387.128109667 seconds)
done (took 620.606437119 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.257622425 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.260046267 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.259458972 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.258617804 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.258825232 seconds)
  done (took 12.474658195 seconds)
done (took 13.652765272 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.57812659 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.565297305 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.564324765 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.377792944 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.578868374 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.583259505 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.487748896 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.385905638 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.55866364 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.581813023 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.565555788 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.347307294 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.583580287 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.547060349 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.326608712 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.470756232 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.507426957 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.504936696 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.402974638 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.467894206 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.601159756 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.349286037 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.347949484 seconds)
  done (took 35.464910098 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.682175296 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.29485649 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.414934818 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.631814214 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.35532647 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.671309878 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.709573193 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.294521322 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.517438216 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.348641682 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.333923748 seconds)
  done (took 19.435113433 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.671470653 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.294068819 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.430137659 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.64123273 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.357326585 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.716180807 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.712096838 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.294036413 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.548217899 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.337481813 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.333333868 seconds)
  done (took 19.516420629 seconds)
done (took 75.596971167 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.348199656 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.421769277 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.346547699 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.324425334 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.32352913 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.323990013 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.326254617 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.325215798 seconds)
  done (took 11.920917038 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.321280241 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.321831498 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.321520355 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.322828483 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.322645149 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.323388959 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.323239778 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.320750844 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.321279542 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.323117067 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.323945244 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.32277673 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.322779803 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.322020209 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.322921581 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.324318127 seconds)
  done (took 22.343835694 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.325332782 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.323165956 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.323342654 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.322559384 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.323424578 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.323938401 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.324392927 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.3228252 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.322723302 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.32470854 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.324001397 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.324214273 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.324262185 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.324455295 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.323267225 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.326397023 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.324477575 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.324728025 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.324710146 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.323755905 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.324775448 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.324706864 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.324645683 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.326497664 seconds)
  done (took 32.965447702 seconds)
done (took 68.411196775 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.287548507 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.287152647 seconds)
  done (took 5.759244943 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.424363112 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.421542432 seconds)
  done (took 4.031177568 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.33501858 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.324476876 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.325473233 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.325616477 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.325602369 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.325947943 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.32691769 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.325328312 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.325117181 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.332329621 seconds)
  done (took 14.456760039 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.327020008 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.325209372 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.325994318 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.326854413 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.326505906 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.326854763 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.327120928 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.326496198 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.327204179 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.327852096 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.327238262 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.327101442 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.32683402 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.327746636 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.328377722 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.327391423 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.327176522 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.327431931 seconds)
  done (took 25.072304377 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.348751821 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.352986996 seconds)
  done (took 3.887654289 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.50713062 seconds)
    (2/7) benchmarking "second"...
    done (took 1.406267236 seconds)
    (3/7) benchmarking "month"...
    done (took 1.492423164 seconds)
    (4/7) benchmarking "year"...
    done (took 1.49968945 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.409484405 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.355631187 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.408396906 seconds)
  done (took 11.265014847 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.321264178 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.684366427 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.87719416 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.531712238 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.31125676 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.340285032 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.268402498 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.362661272 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.346724887 seconds)
  done (took 15.231653341 seconds)
done (took 80.888707288 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.292118083 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.301174263 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.326346807 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.329689481 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.686058262 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.347271535 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.292586508 seconds)
done (took 16.763712481 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.268091564 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.272945184 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.27115173 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.303572472 seconds)
  done (took 10.303280955 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.291638553 seconds)
    (2/2) benchmarking "read"...
    done (took 1.702289377 seconds)
  done (took 5.181842817 seconds)
done (took 16.673835759 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.329940421 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.336266574 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.330343963 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.330001462 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.329673836 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.329640592 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.329806745 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.329331404 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.329321836 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.330380142 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.330532675 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.330443976 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.3297647 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328643468 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.32877456 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.331084351 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33081665 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.333241678 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.330812459 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.330822237 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.331264612 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.330676827 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.330780612 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.331540345 seconds)
  done (took 33.12368214 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.330916383 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.336994251 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.330711958 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.33063129 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.332210891 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.329931341 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.329940211 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.330990275 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.332065971 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.330615925 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.332463367 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.331605786 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.331090496 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.330648053 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332740497 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.332449329 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.331326072 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332506109 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.333542624 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.331881589 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.330894732 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331606065 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.333911247 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.33235225 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.33223743 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.332184281 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.332743361 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.332765919 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.332440879 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.33236063 seconds)
  done (took 41.149854183 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.34157521 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.338955255 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.332782123 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.3348159 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.333198866 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.331732548 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.333379475 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.33214957 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.333052758 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.335392301 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.333192859 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.332935354 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.335302206 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.332807685 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.33320997 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.335249405 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.333254249 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.33320564 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.336582536 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.333561901 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.333612815 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.337187222 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.332726808 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.333243634 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.337135748 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.334572504 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.332723316 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.337550467 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.333677209 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.334359418 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.334348104 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.334602675 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.336418828 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.333620707 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.335394257 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.3361322 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.34595328 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.341088766 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.335418841 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.334462015 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.336184161 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.336511857 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.335006847 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.333907825 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.335666428 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.336583794 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.335292847 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.335880352 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.334412288 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.336274256 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.33468439 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.336098886 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.336002853 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.334903482 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.336566752 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.33577538 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.335831882 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.336270625 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.336877895 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.335723767 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.337162638 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.336358275 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.335687101 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.338086987 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.337167178 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.338199083 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.337661444 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.337533635 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.338725127 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.337618073 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.335808415 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.338127845 seconds)
  done (took 97.35758067 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.337640353 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.337686238 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.336868606 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.336515838 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.337414067 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.335804853 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.337045234 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337543412 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.337698669 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.337778149 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338477679 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.337052009 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.337807133 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.338519724 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.337910149 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.337852041 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.337686168 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.338061146 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.337614022 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.339771 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.339261857 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.338483965 seconds)
  done (took 30.626642327 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.337419026 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.34111796 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.338067501 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.343746785 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.342229973 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.341155394 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.3381518 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.341393064 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.339543667 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.338003388 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340837826 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.340685083 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.342806861 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.339682581 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.339918435 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.33978015 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.338999045 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.343008633 seconds)
  done (took 25.323327569 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.340781743 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.339991629 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.338924524 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.341144918 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.340553921 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.344005966 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.339302715 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.340911369 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.340473185 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.341823077 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.340627883 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.340822251 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.34121001 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340631864 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.340192492 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.341110556 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.342097763 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340809121 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.341356118 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.340909762 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.340780067 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.341990486 seconds)
  done (took 30.6979185 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.343878715 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.342037839 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.342086169 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.341992232 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.342144556 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.342869997 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.34436069 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.341792906 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.3443169 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.341774746 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.341215248 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.342842201 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.344038232 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.342673814 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.34223116 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.342819083 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.344976411 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.348138964 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.350159612 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.348570932 seconds)
  done (took 28.073712936 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.343897642 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.342577084 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.344077274 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.342528753 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.343985153 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.344950639 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.343799166 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.344206201 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.344221008 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.344960418 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.34502509 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.346507192 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.344677979 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.345017897 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.345241948 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.345720011 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.345626005 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.346298576 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.346275808 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.345668817 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.346071383 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.344505401 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.344821363 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.347187027 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.346797592 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.344564417 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.346282163 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.344879331 seconds)
  done (took 38.863055981 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.345704995 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.346522348 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.345357675 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.345914519 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.344789795 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.345852151 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.345886931 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.34624417 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.3456325 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.344970264 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.346619217 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.345567757 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.345117072 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.346053015 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.346087097 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.346702818 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346134728 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.346105884 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.346339433 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.345960684 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.345728182 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.348502977 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.345669656 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.345374296 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.344553452 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.347099516 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.347990271 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.346497833 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.346491268 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.346310799 seconds)
  done (took 41.585271494 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.372890296 seconds)
    (2/2) benchmarking "in"...
    done (took 1.373883299 seconds)
  done (took 3.949476536 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.347162582 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.34673697 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.347160906 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.347358278 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.347330411 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.347122354 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.347915332 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.348499834 seconds)
  done (took 11.983816797 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.339732588 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.349312297 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.350415999 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.348759503 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.347718938 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.340762467 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.356689563 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.35341701 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.34219582 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.342562138 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.35361473 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.348912875 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.345334557 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.352124527 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.342739255 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.346013275 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.357300883 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.348625059 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.351120977 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.354077917 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.351130406 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.345900272 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.350082298 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.354350996 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.3419578 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.361640471 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.35733315 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.354373206 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.345327782 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.355461194 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.345740126 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.353110267 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.351623974 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.350820241 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.352530164 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.351504475 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.36073896 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.351128869 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.360256566 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.361251036 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.351791523 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.350504698 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.348200005 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.349707529 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.354381308 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.354782825 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.353935232 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.350785879 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.343786594 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.350956571 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.358284668 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.341718664 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.352823568 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.355008553 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.350907263 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.363513475 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.359357709 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.349164514 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.352009567 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.364737723 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.372938626 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.361415094 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.355746216 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.357314083 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.361756757 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.373549737 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.36513023 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.360781004 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.35499207 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.35088219 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.362404884 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.371759565 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.369250796 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.35844202 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.355030273 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.357182712 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.346946773 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.357775035 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.362129011 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.36302745 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.35896129 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.354154603 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.362822814 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.36740999 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.348986488 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.357255137 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.35468407 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.353838851 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.346756177 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.366585094 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.364387119 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.354283111 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.346728868 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.349978933 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.350949656 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.356382261 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.347152945 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.350567904 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.358195829 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.357327144 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.356295308 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.35423499 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.364290738 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.359400522 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.356213873 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.363708961 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.363478414 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.350200818 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.36709312 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.363939786 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.356470261 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.350238114 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.360375157 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.360410357 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.354781987 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.361992401 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.362916053 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.359131982 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.362907112 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.356906978 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.365681977 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.382662069 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.364509202 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.356731188 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.359612211 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.368416752 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.357060839 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.360477056 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.36580392 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.357203455 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.356336445 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.358792204 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.363892224 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.353285917 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.361169671 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.352201911 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.360862439 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.358109366 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.35785682 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.361156122 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.358392223 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.35505772 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.364229348 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.368970453 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.363442586 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.362005043 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.373292652 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.35827042 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.364045875 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.363113633 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.36390717 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.35889096 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.353122489 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.36437839 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.350615536 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.360181067 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.351611891 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.359895138 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.360084617 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.358837671 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.36066381 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.350309492 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.357947613 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.362675169 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.363858002 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.359821175 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.365071005 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.360621487 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.360478313 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.350909218 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.362923107 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.350718482 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.359912877 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.367800821 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.360599906 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.360243925 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.365550815 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.366108847 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.36306698 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.360759354 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.357381271 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.366868371 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.365129113 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.372118409 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.370721584 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.361789652 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.36051456 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.356648286 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.356068464 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.363410459 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.358749461 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.370596149 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.376992982 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.375567103 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.358631359 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.364521494 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.352356819 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.365209989 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.367484929 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.369188777 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.362519005 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.36141209 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.355377036 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.366117926 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.361391976 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.365665844 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.354244419 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.363892364 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.364159786 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.363366528 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.362609659 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.357874071 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.361140827 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.366026294 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.362666231 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.361446242 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.354905188 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.366427602 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.353956742 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.358654966 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.366369844 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.363276294 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.376841427 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.371402187 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.367395393 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.374541832 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.366056117 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.359485379 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.366022942 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.368272041 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.364093786 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.376986836 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.366629234 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.360977467 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.379218056 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.367312142 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.358238572 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.371055775 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.372418309 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.368703031 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.360241061 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.37198166 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.366409443 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.365169551 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.3647959 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.359035252 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.36988279 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.375250861 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.374899489 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.358030864 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.370242613 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.361535499 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.375222016 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.368942936 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.372238746 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.369524295 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.376635884 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.374341668 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.366948479 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.360249652 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.372816473 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.367411247 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.367127551 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.362616852 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.374166785 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.37641344 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.368044428 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.37198662 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.363922605 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.371638181 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.357851163 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.366901824 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.361904751 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.384965435 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.391431201 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.378229312 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.373315349 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.372612048 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.378306627 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.370240727 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.362359767 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.362661481 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.366288828 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.363692129 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.363194021 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.372856143 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.362488274 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.371181489 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.373964245 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.369440485 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.374080391 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.37166528 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.363862681 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.371673591 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.368822041 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.367970955 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.36043564 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.371521407 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.369326993 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.377964545 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.369256454 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.36384997 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.383658285 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.374684379 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.368031228 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.365171367 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.364325449 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.362676566 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.370673254 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.376204264 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.367245653 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.376380265 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.371502619 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.373600372 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.367284625 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.38419739 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.381287732 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.373846003 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.377820253 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.370561159 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.36248157 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.364122211 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.374909477 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.383187904 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.383564349 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.364654891 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.375324753 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.371316981 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.371029654 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.37138759 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.370436353 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.370961279 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.371224302 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.385008666 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.377784634 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.370259095 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.382524272 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.382672056 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.372284073 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.372873184 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.362171474 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.383071618 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.3832069 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.372997642 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.37171354 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.367166035 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.374119852 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.371987527 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.372973477 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.373360398 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.372726448 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.384558329 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.378943928 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.376872227 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.373180696 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.385023752 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.38480452 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.38582965 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.385938882 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.370329984 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.379777764 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.373178461 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.372114778 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.368530733 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.369308066 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.377514138 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.365090421 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.379574945 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.374445941 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.37702029 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.382523713 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.381256583 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.364800929 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.38624807 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.395019296 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.367240066 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.378040532 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.374131305 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.369435736 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.379444271 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.37563394 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.365719622 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.372335197 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.376762366 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.382042297 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.369102244 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.378557637 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.37030554 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.379280913 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.374585623 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.375647211 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.374788931 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.375313579 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.367861514 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.380116843 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.382743923 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.387463168 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.374084651 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.379769034 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.372937857 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.39198637 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.387996407 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.379294811 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.381478888 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.377800627 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.371179812 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.380706793 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.382824101 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.370740231 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.381578412 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.368587723 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.376497528 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.374963604 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.385964375 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.380833834 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.379850539 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.368783 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.372710245 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.379803116 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.376511915 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.378946792 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.380814488 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.384365009 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.37231194 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.370535318 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.381556551 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.376454157 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.384409777 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.374108119 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.377766334 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.376051731 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.381951294 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.37811135 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.378179027 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.368984562 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.37188933 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.392453817 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.387327327 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.382153764 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.377904621 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.382840304 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.373358791 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.381371751 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.379226856 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.374045331 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.375444881 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.382522038 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.374878537 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.375140093 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.374055947 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.381362462 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.392944731 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.385110216 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.372679026 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.394997925 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.395173297 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.386667816 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.372722398 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.377341769 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.375773484 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.382200977 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.378874297 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.37418662 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.397660065 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.38712828 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.384006514 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.388112552 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.382235828 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.373717146 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.38462845 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.381572475 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.384824635 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.391140661 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.384541428 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.388887302 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.381560602 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.382210754 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.371463299 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.375384538 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.385524654 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.378555611 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.384171968 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.389502115 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.384917244 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.384065809 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.387817822 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.381765795 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.381954576 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.382038247 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.372730987 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.383952247 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.37586316 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.391830554 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.384794812 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.377361046 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.386065784 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.382793231 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.380793116 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.384088437 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.389054223 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.382190152 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.375957795 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.385080044 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.395951678 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.39497816 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.383195447 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.377050182 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.382256012 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.387943187 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.38357699 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.384767155 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.381877332 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.404888219 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.3988862 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.378043884 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.38212464 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.39612705 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.394763049 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.384678667 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.38443939 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.388706692 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.387531264 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.39177482 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.384740965 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.397153576 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.391869455 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.380938386 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.389636629 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.382353092 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.384580818 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.396689132 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.3983663 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.384581029 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.388319144 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.407292226 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.397912472 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.394840853 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.419465771 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.395856694 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.391593721 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.393689309 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.375491465 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.387583016 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.390218546 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.391346903 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.385071803 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.386766083 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.38597527 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.377566519 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.396859475 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.400923539 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.396200732 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.386937683 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.380107903 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.381726615 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.389166877 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.387814121 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.387636864 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.38832054 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.387658585 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.386594692 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.381666342 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.40756803 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.411091871 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.393321735 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.387815867 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.387385505 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.396400617 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.396494135 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.390936865 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.394671208 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.3871456 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.388843721 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.392415125 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.3978251 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.390300121 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.384898387 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.383392749 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.382389688 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.39477576 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.406397419 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.415174374 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.400978574 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.392492718 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.391793817 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.389705284 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.38457565 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.393736383 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.390269391 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.383216748 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.385635492 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.391842985 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.390478776 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.390254236 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.386947111 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.397311139 seconds)
  done (took 818.54820856 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.390213169 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.389553588 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.389901118 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.390280147 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.389494921 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.390188725 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.389883868 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.390741868 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.391908706 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.389996452 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.392311271 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.391652179 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.392013467 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.392298071 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.391925258 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.392547474 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.392231652 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.392170751 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.391476667 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.39141835 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.391262046 seconds)
  done (took 30.453041969 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.392090852 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.392466039 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.393438369 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.393478248 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.390495956 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.392593918 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.391232153 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.393353652 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.392049785 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.39246129 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.392749106 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.392702103 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.391653296 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.392174242 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.392632401 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.39277369 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.392821252 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.393368458 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.391728865 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.395207659 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.393665982 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.392345563 seconds)
  done (took 31.87924945 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.393496477 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.392237868 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.386771111 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.396766795 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.394714161 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.392168236 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.393247214 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.392637499 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.395494847 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.385733829 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.385920584 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.389049054 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.394268713 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.401598555 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.395882884 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.402423311 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.394675399 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.39455583 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.395504414 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.393616325 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.406551349 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.407824417 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.394228763 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.384120495 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.397394599 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.394840643 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.395201233 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.394777855 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.387231994 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.400019444 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.395116655 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.387831092 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.407269528 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.398200008 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.389538083 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.403041197 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.395632154 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.39523804 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.396620338 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.404155584 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.417023562 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.39627616 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.408903953 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.411154031 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.395135792 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.395987646 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.402787045 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.395464325 seconds)
  done (took 68.271950297 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.395582777 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.396587932 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.396062935 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.395718128 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.403054885 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.395201094 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.395249983 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.396770288 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.396886154 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.398386346 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.396580738 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.397851151 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.397491189 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.398558364 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.396609374 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.397911634 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.398057951 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.398691412 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.396583323 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.398277742 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.397198974 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.398319368 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.39930818 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.397599932 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.398273901 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.398927894 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.398397031 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.3984902 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.39785164 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.397603564 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.398818942 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.398794497 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.397967717 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.399245603 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.399509602 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.398502422 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.39797519 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.398838777 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.397320358 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.400382828 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.399354346 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.400228269 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.398991939 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.398975945 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.399847774 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.398616821 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.399152644 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.398817057 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.398710688 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.399142796 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.399474193 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.399580561 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.400013787 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.39930371 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.398853025 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.397397392 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.400353844 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.399205653 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.399732885 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.399684136 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.40097599 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.400124834 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.40006498 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.400026777 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.400863476 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.400351749 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.402336359 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.401778746 seconds)
  done (took 96.355087266 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.400498346 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.399955329 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.401161907 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.401193615 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.40024964 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.400919978 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.402971355 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.402019768 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.403957305 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.403806378 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.40164018 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.402375749 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.401826447 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.399818161 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.401682645 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.402033317 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.402878746 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.402418282 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.402332587 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.402396003 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.402447756 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.402291032 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.403187515 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.402909267 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.400704657 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.401487508 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.400631882 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.403454937 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.403146029 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.401759749 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.403467369 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.403811406 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.401157298 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.402727749 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.403077305 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.403479451 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.402941603 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.403662016 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.403108664 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.402895578 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.402826994 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.403345495 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.403526314 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.403790385 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.403016682 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.402919394 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.404481604 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.407354106 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.403687997 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.403355413 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.403320353 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.40464573 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.409090919 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.404591114 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.403533508 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.404065 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.404021349 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.404633927 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.40352366 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.404361197 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.404719203 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.406324226 seconds)
  done (took 88.234582487 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.405244689 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.404442842 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.405341838 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.404775286 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.405270671 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.404732054 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.406280785 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.406197604 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.405504499 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.407104703 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.407423598 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.405698239 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.408039459 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.407684175 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.408290258 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.406547508 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.405266341 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.407401877 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.404907496 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.407121464 seconds)
  done (took 29.377031536 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.406918855 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.406131743 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.405951623 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.405442899 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.406541363 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.406465445 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.407056931 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.40647655 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.405637477 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.406597026 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.407087521 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.407554481 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.405861527 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.407484359 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.407558462 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.408477852 seconds)
  done (took 23.762360214 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.40801662 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.408655318 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.408581426 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.408140658 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.407975134 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.408165871 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.407682359 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.406218906 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.405770873 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.406867871 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.40783175 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.409490341 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.407393217 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.407725871 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.407826024 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.407175451 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.410843446 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.408364081 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.409460449 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.41012415 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.407733832 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.408807991 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.409964913 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.408326436 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.40914302 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.408894944 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.408790741 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.410600468 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.408377001 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.409224455 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.410492913 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.411095433 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.409175147 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.410209496 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.410791414 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.408440208 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.409526798 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.410367757 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.409756716 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.41045883 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.411260748 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.410047884 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.412454824 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.418139276 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.417469288 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.416625956 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.410997865 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.411485148 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.411594379 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.412658342 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.412294538 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.411923682 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.412801935 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.413895161 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.411863269 seconds)
  done (took 78.805665863 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.411964678 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.411833097 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.41293631 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.410941084 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.412534164 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.412803123 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.413168253 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.413898932 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.411579504 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.413324558 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.412771904 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.414774952 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.413614958 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.412961593 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.413048265 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.412960475 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.412600792 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.412705624 seconds)
  done (took 26.688825724 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.414677942 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.412806335 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.413379802 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.41241271 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.413721675 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.414297935 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.412916964 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.413520532 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.414154342 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.412929047 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.415852463 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.41330144 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.413179986 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.41356125 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.415592095 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.414989504 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.413639681 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.415376006 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.414627028 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.412943224 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.414851986 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.415077783 seconds)
  done (took 32.366520841 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.403960239 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.403872937 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.402619216 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.429569012 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.422934648 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.405309711 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.406061343 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.404420771 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.435288594 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.454301766 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.45052852 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.423180001 seconds)
  done (took 18.301503704 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415980412 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415756081 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.41616605 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416689511 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41524233 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415236881 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416320888 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415533219 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415517713 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41603824 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416448069 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416459943 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416286038 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416751879 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415306793 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415870692 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415806786 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414517307 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416671143 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417295244 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415582806 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416550037 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416513301 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416359441 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416352806 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416267948 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416460292 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.415746095 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416981796 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41724461 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416519098 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416919847 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416616387 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41734972 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417567416 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418656939 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416626584 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418196895 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416849237 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417643123 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.417549397 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41797466 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417091587 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417229733 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418317372 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418118254 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417741879 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418811987 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416855663 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418985543 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418191517 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41809772 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418116228 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418769035 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418855498 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417763809 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418037238 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416844489 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417279739 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421448496 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41853346 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419619352 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419555378 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418157155 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419103644 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420560673 seconds)
  done (took 94.799252966 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418970388 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.418099118 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420544331 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421186102 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420632191 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418712673 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424681798 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418593314 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41989327 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420061867 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419275175 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420220686 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420561092 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420149308 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420088128 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420237588 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422188394 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422085728 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424665036 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42143816 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421713753 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420489226 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420632121 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419822311 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420330616 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421716616 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421201816 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420955626 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420467575 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421439766 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420737092 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421921042 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421615835 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.422481308 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421944928 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422046547 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420932927 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421810972 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422398128 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422535087 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421514705 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422079651 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422809143 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422274159 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423587874 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42276654 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42263461 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422727918 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422963563 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422004781 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421721156 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423215061 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424710503 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422733715 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422452255 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423795024 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422600667 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423414039 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424468642 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424234535 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42307929 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42345762 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423960687 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424459563 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422809214 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423882674 seconds)
  done (took 95.107278169 seconds)
done (took 1916.875748774 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.643240667 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.604990062 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.41761847 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.405619178 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.413540228 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.409064868 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.403943336 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.413779433 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.413810863 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.415087841 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.41341123 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.720113291 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.447696875 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.416119187 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.41398777 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.571748963 seconds)
  done (took 28.792068532 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.451204375 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.431545101 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.570300804 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.422362928 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.454344508 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.688028345 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.498110968 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.421026864 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.631807648 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.443675484 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.387523232 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.451591435 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.419910381 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.405674423 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.445241535 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.689278434 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.784779405 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.390648699 seconds)
  done (took 31.257659931 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.015998473 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.401704644 seconds)
  done (took 5.687233272 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.446012303 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.42089633 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.424928687 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.419623613 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.399081406 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.389774775 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.420517302 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.398096295 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.402425406 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.581624591 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.423857671 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.442553274 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.440299496 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.423752001 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.428528796 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.481734165 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.634599275 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.432118917 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.428363621 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.435079559 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.421555912 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.561890308 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.477148945 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.43241218 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.579994565 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.398428669 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.432408898 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.436753585 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.613389105 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.430673202 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.421559962 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.421762502 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.423583753 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.411403782 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.064367753 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.393274662 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.463776574 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.435842225 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.430732498 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.632580861 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.430574098 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.435417032 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.408342081 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.065920603 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.607383732 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.592921628 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.41484165 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.429705132 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.425661252 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.501575305 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.423801728 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.425615576 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.529603659 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.355805023 seconds)
  done (took 91.09266004 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.407970525 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.394586072 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.661147203 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.416721847 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.394538509 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.400146695 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.40108166 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.798287408 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.43484133 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.394928084 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.821996288 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.164489493 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.409397522 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.459233887 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.421042578 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.445605059 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.393906516 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.413635002 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.403165654 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.400411743 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.092737491 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.402101761 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.421595652 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.555912871 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.468077191 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.107808682 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.40166253 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.400796708 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.401630124 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.396292084 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.129330204 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.414694215 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.438695871 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.398682472 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.80151177 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.951768587 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.906765728 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.404158657 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.440612525 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.398098459 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.400048568 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.094079492 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.914061838 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.396823087 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.402267844 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.124186393 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.396710783 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.395601983 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.396701564 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.75726166 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.396482402 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.399841697 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.397152739 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.403959261 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.397290186 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.470428607 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.438366359 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.097508559 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.396505868 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.402510404 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.40936309 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.400801247 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.409067591 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.404251686 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.403518702 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.9197898 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.679396242 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.400486891 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.918418466 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.125830876 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.401080542 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.208934042 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.401336232 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.402850251 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.480549378 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.398421894 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.403784238 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.089558107 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.402624454 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.398944935 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.900078215 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.404554867 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.827999706 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.425848846 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.4008706 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.126244825 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.413104208 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.449616254 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.401709393 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.405606746 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.405051928 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.4048834 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.810325601 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.480441123 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.40094945 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.398761532 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.439503585 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.400407762 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.407408652 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.407680963 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.209394086 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.416633777 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.400231482 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.403812105 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.415957085 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.406579147 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.402144644 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.405200061 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.777926858 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.401636968 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.408325458 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.401275609 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.402570816 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.417559663 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.559345221 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.404740854 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.85507822 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.403209584 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.409272227 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.432866009 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.401687952 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.412772043 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.402770213 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.425735423 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.4031762 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.820923038 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.424014465 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.4247515 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.404732473 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.402895578 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.429029138 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.428122878 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.453423232 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.405173382 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.364928459 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.4200824 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.422505683 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.401618181 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.41113664 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.420533645 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.419265886 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.404490962 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817936415 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.821397051 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.684459455 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.40494954 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.404267191 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.366090549 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.410292398 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.670938881 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.426671716 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.404427127 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.795437604 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.689225495 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.40670549 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.404401356 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.407006226 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.773609758 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.4053102 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.835020431 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.169702935 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.410748392 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.411243985 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.361141036 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.262950896 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.413256253 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.408699529 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.827778099 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.430198211 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.404946537 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.404238206 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.406647381 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.408089045 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.4090993 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.419451314 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.405683572 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.403988593 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.523613373 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.689661304 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.426869995 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.40531069 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.123960735 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.443681979 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.408346341 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.436683464 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.407487293 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.407495394 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.446542189 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.408810227 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.452824902 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.407001058 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.419757778 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.161042197 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.424102953 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.413723281 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.690004643 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.317635364 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.413106233 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.406026144 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.412432545 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.464022415 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.155143821 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.469147089 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.883716847 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.423489328 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.483961822 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.407347191 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.423064902 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.15458146 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.421352953 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.408563897 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.303081697 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.412595205 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.11577394 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.409090988 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.410224164 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.22315191 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.413880634 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.413452996 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.407834125 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.434958174 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.803111555 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.41004963 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.433080841 seconds)
  done (took 521.359839837 seconds)
done (took 679.45863313 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.406585083 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.413664265 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.415499695 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.41467466 seconds)
  done (took 10.937205213 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.450098997 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.438407985 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.449482159 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.437381038 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.448001035 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.437130937 seconds)
  done (took 9.949669368 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.410534049 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.415937041 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.41551506 seconds)
  done (took 8.530353545 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.738204977 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.447975681 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.920437578 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.429144307 seconds)
  done (took 9.825939318 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.447991605 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.449622539 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.448976018 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.451070489 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.452070546 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.450075879 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.451441067 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.450654165 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.451208286 seconds)
  done (took 14.339037668 seconds)
done (took 54.870028026 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.661379774 seconds)
    (2/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.417709613 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.598224467 seconds)
    (4/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.796404277 seconds)
    (5/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.648353118 seconds)
    (6/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.767468405 seconds)
    (7/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.899571866 seconds)
    (8/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.822865673 seconds)
    (9/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.022584227 seconds)
    (10/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.476838081 seconds)
    (11/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.552931068 seconds)
    (12/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.409058862 seconds)
    (13/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.394147817 seconds)
    (14/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.394743842 seconds)
    (15/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.485995111 seconds)
    (16/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.388216197 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.655339133 seconds)
    (18/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.391090235 seconds)
    (19/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.400962162 seconds)
    (20/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.58012007 seconds)
    (21/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.389805156 seconds)
    (22/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.438378651 seconds)
    (23/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.432343596 seconds)
    (24/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.416756069 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.582076743 seconds)
    (26/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.898872545 seconds)
    (27/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.392439709 seconds)
    (28/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.776582832 seconds)
    (29/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.395476059 seconds)
    (30/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.601143693 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.668564138 seconds)
    (32/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.558557062 seconds)
    (33/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.647480102 seconds)
    (34/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.621607818 seconds)
    (35/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.550884788 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.56968669 seconds)
    (37/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.674097593 seconds)
    (38/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.390681804 seconds)
    (39/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.389324648 seconds)
    (40/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.719850268 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.549857982 seconds)
    (42/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.40169766 seconds)
    (43/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.568304601 seconds)
    (44/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.391507747 seconds)
    (45/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.641058685 seconds)
    (46/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.391012293 seconds)
    (47/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.60521558 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.61532769 seconds)
    (49/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.90256694 seconds)
    (50/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.832095478 seconds)
    (51/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.150780696 seconds)
    (52/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.608551269 seconds)
    (53/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.392862948 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.793468918 seconds)
    (55/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.391583245 seconds)
    (56/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.963196926 seconds)
    (57/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.396816872 seconds)
    (58/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.392581068 seconds)
    (59/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.3972795 seconds)
    (60/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.828524284 seconds)
    (61/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.577150837 seconds)
    (62/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.023400252 seconds)
    (63/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.672565625 seconds)
    (64/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.477768367 seconds)
    (65/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.722918326 seconds)
    (66/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.651462103 seconds)
    (67/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.645141746 seconds)
    (68/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.392843881 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.584194331 seconds)
    (70/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.673836038 seconds)
    (71/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.843936788 seconds)
    (72/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.815396846 seconds)
    (73/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.791136708 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.452635213 seconds)
    (75/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.129404305 seconds)
    (76/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.553890197 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.768851402 seconds)
    (78/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.578643136 seconds)
    (79/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.421144756 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.47986598 seconds)
    (81/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.578609403 seconds)
    (82/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.955149534 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.603878677 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.624853272 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.618205709 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.580294813 seconds)
    (87/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.92202933 seconds)
    (88/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.490716033 seconds)
    (89/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.96378939 seconds)
    (90/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.640210114 seconds)
    (91/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.801504018 seconds)
    (92/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.724740765 seconds)
    (93/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.39980992 seconds)
    (94/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.639073377 seconds)
    (95/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.572061922 seconds)
    (96/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.484743486 seconds)
    (97/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.402607901 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.622408199 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.489325214 seconds)
    (100/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.402796403 seconds)
    (101/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.401489533 seconds)
    (102/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.663306556 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.57699984 seconds)
    (104/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.845975735 seconds)
    (105/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.798128798 seconds)
    (106/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.512944628 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.445630411 seconds)
    (108/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.614609233 seconds)
    (109/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.623270808 seconds)
    (110/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.676657067 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.674645498 seconds)
    (112/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.083748988 seconds)
    (113/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.396919119 seconds)
    (114/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.85254794 seconds)
    (115/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.552382394 seconds)
    (116/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.408433922 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.617587614 seconds)
    (118/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.780739506 seconds)
    (119/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.484413137 seconds)
    (120/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.490709538 seconds)
    (121/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.419720901 seconds)
    (122/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.487080864 seconds)
    (123/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.607642634 seconds)
    (124/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.727997673 seconds)
    (125/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.820136974 seconds)
    (126/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.514599098 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.608499796 seconds)
    (128/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.025168494 seconds)
    (129/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.338941425 seconds)
    (130/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.660675286 seconds)
    (131/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.610113409 seconds)
    (132/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.574441973 seconds)
    (133/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.333299227 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.655989983 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.581711334 seconds)
    (136/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.436948302 seconds)
    (137/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.607831276 seconds)
    (138/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.574041015 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.590040116 seconds)
    (140/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.48340833 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.774992477 seconds)
    (142/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.493672764 seconds)
    (143/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.397520453 seconds)
    (144/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.503068581 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.553283557 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.664406695 seconds)
    (147/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.899597288 seconds)
    (148/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.652790484 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.60919325 seconds)
    (150/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.415122552 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.421862725 seconds)
    (152/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.600403515 seconds)
    (153/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.155036126 seconds)
    (154/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.492168872 seconds)
    (155/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.8774055 seconds)
    (156/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.488537893 seconds)
    (157/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.39930825 seconds)
    (158/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.664045896 seconds)
    (159/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.729267807 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.554162579 seconds)
    (161/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.079283266 seconds)
    (162/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.684949322 seconds)
    (163/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.547472692 seconds)
    (164/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.719771977 seconds)
    (165/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.109134828 seconds)
    (166/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.929235135 seconds)
    (167/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.596362847 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.494152853 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.611799028 seconds)
    (170/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.635119382 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.635548696 seconds)
    (172/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.400347907 seconds)
    (173/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.41434445 seconds)
    (174/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.573954202 seconds)
    (175/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.784037901 seconds)
    (176/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.499096568 seconds)
    (177/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.793342576 seconds)
    (178/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.506902658 seconds)
    (179/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.400355311 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.698594702 seconds)
    (181/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.732753097 seconds)
    (182/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.592617469 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.627476092 seconds)
    (184/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.490848523 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.710680318 seconds)
    (186/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.952425934 seconds)
    (187/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.468195432 seconds)
    (188/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.141065844 seconds)
    (189/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.405729528 seconds)
    (190/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.507717497 seconds)
    (191/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.400670714 seconds)
    (192/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.418091086 seconds)
  done (took 361.238549828 seconds)
done (took 362.527549567 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.485143956 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.608403765 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.457189982 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.455996325 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.465438936 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.432269215 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.489438985 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.45612581 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.478482006 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.478455814 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.426158313 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.469994264 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.480990425 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.467193908 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.501363337 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.457921919 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.4561344 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.465942631 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.47851518 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.481676127 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.458211061 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.467563577 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.491148141 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.45739769 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.474641922 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.476021078 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.471628411 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.446475561 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.471179051 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.481579955 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.439513153 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.479099332 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.481985035 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.468423115 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.460610668 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.469845642 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.466643279 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.608200386 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.486146807 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.468420251 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.466570295 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.482318247 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.471916017 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.472652912 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.468496588 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.493915603 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.475714894 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.4819388 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.441665173 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.444574621 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.487819995 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.47839638 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.467955108 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.440228817 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.443667732 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.488818795 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.468045343 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.489954135 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.467091731 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.471309934 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.504267966 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.490399233 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.478608208 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.475823986 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.467257604 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.483847422 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.468949089 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.485621251 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.467779597 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.471781013 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.470649096 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.470592175 seconds)
done (took 115.461510017 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.637365688 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.431705317 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.67699859 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.469398448 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.689623171 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.641862279 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.468679921 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.470002435 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.467221425 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.331634421 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.468349013 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.476976996 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.440059661 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.468617832 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.638861757 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.467902797 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.470835223 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.226878641 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.468642485 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.650304483 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.429694586 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.468856968 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.470044271 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.323111899 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.43197714 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.438462321 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.652246491 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.470492302 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.227895181 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.438081617 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.432664378 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.221033136 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.652054846 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.49242491 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.480378825 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.480747866 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.693059152 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.473974798 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.638353941 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.640376475 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.678844845 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.509766779 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.441176494 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.435876518 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.473394836 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.472505407 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.469771261 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.497950682 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.433863832 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.472449324 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.229312401 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.484282463 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.481508857 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.471872087 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.473007427 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.490808293 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.472370753 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.472124214 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.653736764 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.474381973 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.642048127 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.325353175 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.331036161 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.474139973 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.436360587 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.473769744 seconds)
  done (took 118.19680366 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.587823074 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.598910867 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.642348025 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.465667317 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.554979582 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.644085257 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.467812981 seconds)
  done (took 12.269550479 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.477967205 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.472513299 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.554865672 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.554908414 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.473384988 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.696169254 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.473493033 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.483915028 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.472821858 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.556656053 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.475029821 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.473319896 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.482766 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.437984746 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.555514427 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.482775149 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.637019903 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.468000645 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.475417859 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.676280203 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.474046735 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.484009734 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.55820185 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.485266388 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.475542805 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.479882184 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.28547478 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.474451045 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.474037446 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.474433725 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.476824462 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.582963727 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.474589611 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.441252341 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.475268957 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.638224526 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.476176755 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.47597205 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.475459065 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.443802944 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.476843669 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.475667471 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.476652723 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.475124945 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.473751376 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.498504314 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.476619129 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.482860775 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.476854494 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.477016875 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.560414281 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.476999904 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.478255789 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.476474417 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.563513 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.485702337 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.477374043 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.482581479 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.477642443 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.478290989 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.678545086 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.559360377 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.477570437 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.55921832 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.478085935 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.47879224 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.478096132 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.477572183 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.616434395 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.478582717 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.55953065 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.477274031 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.713325347 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.499916575 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.478997434 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.475856532 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.477965878 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.477328856 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.442628075 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.483448069 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.477675129 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.472584119 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.484070076 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.478615612 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.478223104 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.686841811 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.642344882 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.478326538 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.492522338 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.48337327 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.478350843 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.561926136 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.478900564 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.479385333 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.563903901 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.644593981 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.564276365 seconds)
  done (took 152.381700568 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.490496662 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.488962249 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.482461492 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.509488741 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.470411426 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.470529737 seconds)
  done (took 10.226287295 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.47249549 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.483179879 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.479283434 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.479810316 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.481239339 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.479690958 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.482466381 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.473686074 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.484569441 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.481089599 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.482762438 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.482938508 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.483290857 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.483956445 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.480773428 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.482372724 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.481181929 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.48352706 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.481500336 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.483394362 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.446258145 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.482899606 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.482490197 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.476425878 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.486653785 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.482900374 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.504087007 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.484105835 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.483497308 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.488406941 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.485277981 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.48301212 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.475442722 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.479399789 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.48618941 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.477213268 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.487362394 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.484822267 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.483513092 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.482373981 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.482734851 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.482721721 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.483290158 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.484172324 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.476625274 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.480337758 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.48909788 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.505824379 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.483585867 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.487337182 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.484566508 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.483916077 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.485012864 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.484383035 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.477271586 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.479863815 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.489077207 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.483572038 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.48237852 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.476651186 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.488597886 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.485443016 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.478267174 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.489156757 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.485412985 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.485589403 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.478080907 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.487212585 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.486028356 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.486161055 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.48673941 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.486102947 seconds)
  done (took 109.090022833 seconds)
done (took 403.471162021 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.0429695 seconds)
  done (took 4.362578579 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.591986873 seconds)
  done (took 3.916063488 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.201216091 seconds)
  done (took 27.529419629 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.52198223 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.45531621 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.472936537 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.454275575 seconds)
  done (took 11.223951454 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.026158844 seconds)
  done (took 4.346560551 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.458285233 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.471828994 seconds)
  done (took 6.252949205 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.772174241 seconds)
  done (took 4.093417466 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.33505427 seconds)
  done (took 4.661720251 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.465872161 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.462999171 seconds)
  done (took 6.259109975 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.424235093 seconds)
  done (took 3.744191423 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.029056629 seconds)
  done (took 22.350449314 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.46306119 seconds)
  done (took 3.788396486 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.486351791 seconds)
  done (took 3.80843807 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.799388456 seconds)
  done (took 7.12200043 seconds)
done (took 114.780563858 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.448801346 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.455346382 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.458879094 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.458373932 seconds)
  done (took 11.142594111 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.605194837 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.60401438 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.609147713 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.596963204 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.594571628 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.609341732 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.520150083 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.519162248 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.5839832 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.581302622 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.612550591 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.583304553 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.6090968 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.558080955 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.581187663 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.613087461 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.583490331 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.610701473 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.523056179 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.596839375 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.489417335 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.597838035 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.581619282 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.489311525 seconds)
  done (took 39.179345853 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.063653555 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.612354057 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.690947711 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.571362322 seconds)
  done (took 8.259862166 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.654902624 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.659734943 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.672469663 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.70664405 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.7581814 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.668131331 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.525895018 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.519160782 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.50472361 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.657169881 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.74327273 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.656091742 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.878041056 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.489189931 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.872668026 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.489730573 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.490481646 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.655902752 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.705709574 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.734372157 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.490332605 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.658566986 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.662316626 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.651978021 seconds)
  done (took 40.829513866 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.50813431 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.514995867 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.493742326 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.515152451 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.490991976 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.493491456 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.49634119 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.507868773 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.491852281 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.493728637 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.495410765 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.513281892 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.49262682 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.492488395 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.509849053 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.493606694 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.49463392 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.507898525 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.511857199 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.494692237 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.492457176 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.507524456 seconds)
  done (took 34.338022874 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.454968819 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.45355202 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.894766507 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.798847395 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.455888071 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.461052484 seconds)
  done (took 14.844435456 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.58413755 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.78145908 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.482907917 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.941875709 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.068881594 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.486141359 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.486013968 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.833657827 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.21185613 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.19453654 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.569282448 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.580958654 seconds)
  done (took 22.54954649 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623992828 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.46586392 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.48715734 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508399846 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466264669 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.467916835 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.509601535 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.073038199 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.495062815 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.825020905 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485155829 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632763706 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.805035263 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467785603 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.472477541 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.454370699 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.785013373 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141409393 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476555852 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471205871 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535623071 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.482659213 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.4692874 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.7874706 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.477428868 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470364772 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.817451157 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.469544486 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906849747 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865782304 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867709155 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478180849 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.825855369 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034918127 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.646436533 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760698131 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478199707 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.471524627 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.451598908 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.471620588 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500410702 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.473261579 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858471528 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479323942 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.470751344 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483062895 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083499515 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.501422562 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.473516779 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.473296849 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869450089 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638859173 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.498825514 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.470971134 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468386797 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474361998 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.499138403 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.675668603 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200945596 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472951204 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485455099 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.478165834 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.477738615 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477408265 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.312992805 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.500465528 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.500514206 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.497668524 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472063801 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.470321471 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.524513628 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471978175 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.521840172 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473485629 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473583477 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.475583103 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499336753 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184334964 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478048989 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.479536539 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.786323317 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471111445 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472809077 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.471751122 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.472751178 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.424295366 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502670347 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.43892467 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53982598 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.081037609 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.766418202 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527678903 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531914289 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.777293677 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.440369757 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473785668 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.474360112 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502924639 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52543183 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.084335026 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473951332 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.502553991 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810658465 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.776902007 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477402818 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.456956502 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08770843 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480571028 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.532360714 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.477077287 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.775026629 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.324606153 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889938657 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487589658 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.545957136 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.476525961 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.483818229 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482471758 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.510124088 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.478279606 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.883038618 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.443272849 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477987948 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627804206 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479627263 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.477712703 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476276976 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50233029 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.478227574 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.760932798 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486527163 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.877606154 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.486137728 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477477269 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.477353161 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483560444 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.485810452 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.782438326 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482757968 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.83470817 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477366082 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478007015 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479184958 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.785943171 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.488053125 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.50834565 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908633214 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477614017 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.485877498 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899067542 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54978814 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675231745 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543921891 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.499224308 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.823073381 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.507480386 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.508394747 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497873508 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.48162193 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48554666 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.510715504 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490851944 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304498498 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483939683 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.490862769 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.481369105 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.527667869 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63424022 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.511798532 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.774023079 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.488435436 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500888486 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.509338513 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.480290755 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791336175 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867892559 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.488237575 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.750321602 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.091269637 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.302124104 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52513291 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.480334476 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.481131574 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.480207644 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482433695 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481880901 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.483954978 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7733056 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888518296 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.497591698 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.307878956 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486554401 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.483133645 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.512708984 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869118552 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.521860776 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483403511 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.482399752 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516284298 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484220305 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.879793583 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.792177064 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.528738257 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.482755034 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.088970252 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.514727536 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.48587261 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.483713117 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538658094 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.485346775 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174719705 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91663039 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477259853 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897180291 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.50503182 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.536020537 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.482929428 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500020359 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504668227 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.494663672 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514279714 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.778312731 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.491908434 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488108509 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210874302 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485012096 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.242729819 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487039169 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.501417254 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.489838826 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.102894928 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486532401 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.485529131 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.859173712 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099630477 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484622242 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099330788 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.488982014 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.502519908 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881104155 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.811066267 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487371404 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.485792153 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906972248 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.789140086 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543779624 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.490520967 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49196235 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.453430636 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178862689 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487801207 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.740534952 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102422941 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508856608 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.494163539 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.530255699 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.49253477 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033969613 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.486834045 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488065836 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503110207 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.492516332 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209072536 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.495820802 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487158458 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.330884046 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.504322722 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.109613031 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489028388 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.78373877 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.888720486 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.865712602 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.494560447 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.498704479 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.822186397 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883367151 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49619145 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.499162847 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.250142004 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.434286511 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.51902508 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489689856 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.495089424 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496986314 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929577706 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.496384561 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.514183822 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490439042 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.49129837 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490490376 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.490300757 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.499675203 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490275614 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147696296 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.487558998 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527315729 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493380269 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500481102 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.828933205 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.536612163 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.319584146 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.813683919 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481892705 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.556422573 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.520390966 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494759214 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.466070302 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491516135 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.492426446 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.580389447 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.798654773 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.514968069 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.462377513 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.572237084 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.79197208 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.491468922 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.512335752 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835636361 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.49898161 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.490611899 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497745348 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553566972 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.511218082 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497043444 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.506047801 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557965716 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643584356 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787336924 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.891150265 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.890099991 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041084554 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491776573 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495373888 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.53866375 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651595918 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496718542 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.493011786 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.513492742 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316397428 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496795088 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.324229638 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89507332 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.501012105 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495281627 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492109786 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821786625 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492501455 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.846163748 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493383831 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.502026759 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544127364 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495574682 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516878438 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797105973 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.846232192 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494558281 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497786067 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500986892 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.49326489 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898549389 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.800686525 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162433086 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213527992 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496601208 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.512027682 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.119971052 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.853690892 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49525397 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497259602 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497483025 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.499928378 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.507080125 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.530272949 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516535797 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.808196419 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887606867 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0782302 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.88395312 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.51295266 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.454578407 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506097947 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.834554171 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426643849 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.791731826 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333168485 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.445844894 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832964234 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65149863 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.79274683 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.501805642 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82042465 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.512768558 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.49631912 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496914936 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496359697 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.496900897 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.885518403 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33312637 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.837017682 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.524432262 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.512603942 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555667519 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.791103044 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.808426546 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.447312958 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.80392318 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90210452 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.50568777 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.498163279 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330326573 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897465103 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505467421 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.526612148 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833120888 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.505319287 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564091565 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.460136377 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.497380568 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218942646 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.798800182 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.548928743 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499799032 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.456929194 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329824623 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.503810226 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162655391 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501446309 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510612139 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.87013132 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.529332885 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.503941039 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.876245855 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.528231977 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.501566715 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804067193 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.331083653 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.516773118 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.519344883 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507793484 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.5246575 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500840505 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548753092 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500649698 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501768276 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.029237657 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.501321572 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502013 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.543450044 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.499595584 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503309464 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.50746097 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503014804 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.532165089 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.470850169 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.469624455 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.511322704 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.717111373 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198802167 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507686417 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.20153303 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.925145369 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.840243651 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.501486257 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.476415751 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.528755228 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501754658 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502515648 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501377864 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.503027376 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224898432 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.510097059 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.899646875 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.53901184 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.801315097 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798717979 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.506626855 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806505631 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516838419 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560667876 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.470133039 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505367128 seconds)
  done (took 1056.523187508 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.507211706 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.543930482 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.532808467 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.518519639 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.563054841 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.526623253 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.548144775 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.598314981 seconds)
  done (took 21.698268125 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.491154147 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.524276935 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.511975859 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.52395378 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.493951641 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.140263508 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.511689021 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.52709112 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.553067887 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.511841276 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.513325891 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.306787965 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.526688903 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.504704754 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.497776637 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.530759603 seconds)
  done (took 35.037520415 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.74477327 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.725773578 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.215034677 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.521420776 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.52350009 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.495935901 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.930362583 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.517729245 seconds)
  done (took 29.035552287 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.539267109 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.541495745 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.540600868 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.539603256 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.540108069 seconds)
  done (took 9.062508018 seconds)
done (took 1323.824729072 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.534522372 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.534569794 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.532841013 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.535590595 seconds)
  done (took 7.499535311 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.473703045 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.473305998 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.471453808 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.510005358 seconds)
  done (took 10.289705486 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.009723373 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.217261148 seconds)
  done (took 5.587013265 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.506686291 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.354004304 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.340804581 seconds)
  done (took 8.562743978 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.893556017 seconds)
  done (took 3.254666254 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.062688279 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.11532975 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.49687331 seconds)
  done (took 8.037238464 seconds)
done (took 44.594121642 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.497026053 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.265727995 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.654331182 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.495527748 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.67824414 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.654926859 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.772900381 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.49539498 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.526074021 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.497039253 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.516790159 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.662826327 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.761836265 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.270853018 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.763274156 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.271148726 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.67583259 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.497569698 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.506300976 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.51378 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.775315702 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.496811291 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.510560596 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.50578471 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.663539966 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.644190089 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.498254143 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.29210607 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.504637845 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.508625993 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.646544509 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.510996754 seconds)
  done (took 86.8981939 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.509057542 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.497704841 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.497751145 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.498278587 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.498199107 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.497634441 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.499647127 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.504991452 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.510712011 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.510539783 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.497022562 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.498521984 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.49985232 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.498725711 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.501853623 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.498545799 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.498977488 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.503494683 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.502207787 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.50112846 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.500444854 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.498619203 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.498683247 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.514259111 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.497143247 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.500207045 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.499699089 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.506938697 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.499798543 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.499409667 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.500460847 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.501200816 seconds)
  done (took 81.40623092 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.502595966 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.503000836 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.500232257 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.499009755 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.500011978 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.502925477 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.502891673 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.515850025 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.509639319 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.514759942 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.500622111 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.500275769 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.50453874 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.518852013 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.503275871 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.514403263 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.508671528 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.504633655 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.501688797 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.513443714 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.502610074 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.500434588 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.522165563 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.513962634 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.514255898 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.502236214 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.504749033 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.5008866 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.536980646 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.501776936 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.504540207 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.50529582 seconds)
  done (took 81.597954044 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.828047198 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.539316766 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.543734228 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.512067352 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.544392482 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.542953891 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.514391879 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.832700304 seconds)
  done (took 16.225293733 seconds)
done (took 267.491701221 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.519252273 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.511138393 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.576223066 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.513110851 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.560425736 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.572017922 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.830660449 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.568557846 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.817993475 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.526911767 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.558444059 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.521981043 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.521853442 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.747654991 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.509747783 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.51394252 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.524556719 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.502699191 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.543462615 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.852030625 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.569870373 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.515261612 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.514671524 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.514723765 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.481546571 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.622190643 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.621044059 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.764080824 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.729472721 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.623378014 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.505726042 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.51950482 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.534310614 seconds)
  done (took 71.678157888 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.528444434 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.542717339 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.544312164 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.542515917 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.543547611 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.54361892 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.530987006 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.542500901 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.543618361 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.543597339 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.543801974 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.543527218 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.545369562 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.543320697 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.54535699 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.515829981 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.532137152 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.544247701 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.530521933 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.516352533 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.543960862 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.544273821 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.543030786 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.543119764 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.54651887 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.544821657 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.544913079 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.544911403 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.545945961 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.543918189 seconds)
  done (took 47.582790732 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.54392245 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.514957384 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.511425161 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.551844127 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.537113623 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.542004329 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.96031262 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.550244902 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.541454189 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.540456646 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.514152114 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.552792991 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.606171008 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.509663066 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.54869722 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.548134228 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.547727124 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.537129757 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.509822653 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.565593502 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.958370615 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.550127289 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.944570884 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.562251317 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.542853948 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.537464366 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.549973987 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.511009116 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.541196754 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.528936047 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.510803643 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.948595977 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.515289409 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.552513976 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.527913221 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.555598027 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.547734736 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.527309025 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.545403714 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.53813589 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.945888649 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.545345187 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.509699662 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.517426763 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.546865981 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.548903111 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.510580152 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.532581133 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.860848925 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.553368134 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.511634475 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.572225421 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.551696763 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.543125002 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.856878728 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.544691263 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.541183484 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.526148961 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.552753112 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.935932635 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.551875486 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.541754158 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.52506649 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.540260951 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.51991395 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.545157523 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.561432708 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.543630932 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.51192739 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.551886941 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.512681746 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.542910729 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.551308934 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.534178473 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.522946109 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.513504476 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.545756272 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.531092396 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.514094914 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.950345222 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.558109938 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.513424368 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.981693832 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.554418896 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.556241824 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.55597063 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.550421601 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.693443699 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.945069621 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.519929036 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.515304496 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.528241126 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.961666773 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.564948936 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.546102126 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.534122251 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.55307948 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.553913734 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.514585828 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.522333322 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.546556165 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.565264759 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.515562978 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.546776234 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.958094532 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.563976397 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.515070178 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.574458875 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.680997284 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.55388957 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.565381115 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.550437734 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.982655895 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.55507324 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.554418617 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.516750698 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.533510372 seconds)
  done (took 225.429008401 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.518966414 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.516149854 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.518068534 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.516762223 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.518279874 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.547312756 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.517976623 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.518885537 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.5411765 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.517054089 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.51997129 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.550052489 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.547853187 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.518322896 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.536721813 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.521756712 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.518029562 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.539534182 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.52168289 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.518529766 seconds)
  done (took 47.901223613 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.556540325 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.305181057 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.301340625 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.561724435 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.556087614 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.54763235 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.624114072 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.555929843 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.555610319 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.967753581 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.782896694 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.558944123 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.557281201 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.556962796 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.274952213 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.525329025 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.96925007 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.306599953 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.558264497 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.305720651 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.529290143 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.556365373 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.544963853 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.309665007 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.980280243 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.945912466 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.627976435 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.311981084 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.55819731 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.557614274 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.307616632 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.558254929 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.548022273 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.294979201 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.557626078 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.57978099 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.557464186 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.630001622 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.631742137 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.975292738 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.315187986 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.954293629 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.578926832 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.781058191 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.562088168 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.52794912 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.322583061 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.559455501 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.528162904 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.562131609 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.572311674 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.289406984 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.55285557 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.289834133 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.560184574 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.558702053 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.311371649 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.292105931 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.282060868 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.784720459 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.545124697 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.948468308 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.561740847 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.325019963 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.559604402 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.55911244 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.557494986 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.785051158 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.312502728 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.949057628 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.976453779 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.975201735 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.566055013 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.640987098 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.562317387 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.975944008 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.640306075 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.037223519 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.978656504 seconds)
  done (took 144.516925026 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.929317409 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.696313756 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.099187194 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.311567623 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.242976708 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.76127907 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.700857979 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.882448948 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.549576382 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.718915303 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.453933772 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.675353549 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.444746081 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.647213238 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.684030699 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.751212358 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.12169243 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.528489202 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.375789826 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.434689495 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.535409985 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.73688777 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.44882593 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.036658293 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.525761971 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.458662795 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.540042767 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.254816552 seconds)
  done (took 60.932681804 seconds)
done (took 599.409275454 seconds)
SAVING RESULT...
DONE!
