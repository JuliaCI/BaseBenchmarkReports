cset: moving following pidspec: 22968
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.582539707 seconds)
loading group "string"... done (took 0.51827537 seconds)
loading group "linalg"... done (took 8.57709023 seconds)
loading group "parallel"... done (took 0.178717627 seconds)
loading group "find"... done (took 1.403523013 seconds)
loading group "tuple"... done (took 2.069532423 seconds)
loading group "dates"... done (took 1.347427289 seconds)
loading group "micro"... done (took 0.214781987 seconds)
loading group "io"... done (took 0.599711433 seconds)
loading group "scalar"... done (took 42.799182404 seconds)
loading group "sparse"... done (took 13.635160719 seconds)
loading group "broadcast"... done (took 1.11436045 seconds)
loading group "union"... done (took 15.157328859 seconds)
loading group "simd"... done (took 5.358029343 seconds)
loading group "random"... done (took 10.696606798 seconds)
loading group "problem"... done (took 2.173013105 seconds)
loading group "array"... done (took 26.088585164 seconds)
loading group "misc"... done (took 1.14465027 seconds)
loading group "sort"... done (took 3.947172125 seconds)
loading group "collection"... done (took 21.527225215 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.60376671 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.1385413 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.151010762 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.178373291 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.209255684 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.139511439 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156156099 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.46315826 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.019701937 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.230552483 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.132729396 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.544786489 seconds)
done (took 5.718427637 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.226796205 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.075193577 seconds)
    (2/2) benchmarking "String"...
    done (took 0.130761292 seconds)
  done (took 0.902197709 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076856729 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.17341139 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094875812 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.112714618 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.112523193 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.114267246 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096173796 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113227839 seconds)
  done (took 1.517823221 seconds)
done (took 3.427970987 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.83227218 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.843289076 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.49795 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.131545684 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.160023438 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.13411298 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.3127268 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.161813388 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.116690213 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.121020313 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.179241857 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.353424486 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.428946055 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.94002358 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.095838982 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.131312491 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.082723959 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.705521123 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.084705239 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.131390119 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.509338637 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.115340113 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.121721458 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.127231981 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.218297519 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130769957 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.190248044 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103288226 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.688849936 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104138014 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.189326169 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099467777 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.164949967 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.228670981 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.079600225 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.10910419 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677376226 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.190862748 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.114862225 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097984842 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.674948921 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080488759 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.198444622 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.109321075 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.113508983 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.198833451 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117079668 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.076855989 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.101906506 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.08947377 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.173926022 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.484429523 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108658601 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.147572107 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.109106089 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.691604591 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096475832 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.158934755 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.127360017 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.112361378 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.097460668 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.119182198 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.167804341 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.122444107 seconds)
  done (took 19.922683577 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118028251 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.142822837 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096701416 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140804373 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.14242261 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098921364 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085788459 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095398474 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.111090278 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.184210065 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138975525 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.145262096 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093027989 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081924109 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.122661288 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.25253112 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.102836976 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120375596 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.082277559 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108113276 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.14185656 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097819159 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111424819 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095480532 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173580527 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222522499 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110413209 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125740263 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096354972 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.10060007 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144772487 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.164257868 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076531315 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.095986026 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.181049148 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121115498 seconds)
  done (took 5.238491695 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.200216496 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12269001 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.19075746 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.164141021 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.179450743 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.151558477 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165806479 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118432585 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.268404899 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.182957773 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166062822 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132188834 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115701583 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079255428 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098904438 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079491472 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.791117956 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.188313785 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149265936 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.125034132 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104761608 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083306797 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.375404135 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101333859 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081540027 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103828031 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.071896257 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.174145538 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104733794 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.245716841 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.100594049 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.11073988 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133471599 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.202802763 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130264895 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120852899 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105675236 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.0817392 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.220069374 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082488 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.109562157 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078117715 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.124103591 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134370774 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119775412 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101671578 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110402451 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.233125935 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.101919816 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081250781 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.119572384 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.046307116 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.201280099 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096428825 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098848288 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.346142802 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11898828 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086230827 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.100649732 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082548393 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.298043094 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133874633 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098491853 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079799607 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104510739 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080596209 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.393990749 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107167869 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.815217535 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082501471 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158508668 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102469985 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10632149 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086506469 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104369412 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102997677 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099771652 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081865456 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098626313 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079962575 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.103850917 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.100407264 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103294698 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097437195 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148664265 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.12087857 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101825705 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127185312 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.10253562 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080793633 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12948777 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082640029 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.102270846 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.125597545 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106654381 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116860122 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101559791 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127971958 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098811912 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.18771916 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081294266 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126431324 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100453365 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11440625 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.121286654 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098621021 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08533261 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.099885308 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080689893 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161420617 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081494553 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080345367 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.102748971 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111903713 seconds)
  done (took 23.669562307 seconds)
done (took 49.526743597 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.434939655 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.112224378 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.111949274 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.111544132 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.110689471 seconds)
  done (took 1.654586096 seconds)
done (took 2.404911355 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.322507495 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196205377 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100880619 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191642745 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086119831 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.198946592 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163235161 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100722193 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.209175089 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082167186 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.185477938 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082739193 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10666175 seconds)
  done (took 2.801464715 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09174856 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119136129 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081244825 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109113818 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075741745 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091192766 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109059408 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.136199353 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091014139 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085271644 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094242736 seconds)
  done (took 1.830025247 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090429782 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117042159 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081450866 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091850235 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094360486 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090937028 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109002046 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10208666 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109904456 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085867626 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094171611 seconds)
  done (took 1.815000734 seconds)
done (took 7.186892429 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.149338794 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 13.034351601 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.123708212 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.176947758 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.343734562 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.223323501 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.65159402 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.116961733 seconds)
  done (took 16.748221213 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.112019491 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.097697639 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.080494457 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.115988797 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081808077 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.099652715 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.080389229 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099376275 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.079700632 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.099107287 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.082754537 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096258655 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.080947766 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095776533 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.082293287 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.099128906 seconds)
  done (took 2.298606184 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.116545214 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116353197 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104022896 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.089870018 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.103007171 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102784035 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.087019892 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.101907445 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084650712 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.100431702 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090556598 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105703207 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087620853 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.099534284 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103023299 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.091025307 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.099732691 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.087496183 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.104461108 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.087045348 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105403824 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100871543 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087841499 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106775603 seconds)
  done (took 3.220445342 seconds)
done (took 23.017906585 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.163992538 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084567914 seconds)
  done (took 1.001585945 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.101091684 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.121172114 seconds)
  done (took 0.983081106 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105195701 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098965073 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13804483 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.116263006 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083415933 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.08188834 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.132784923 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.100954843 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.0822481 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.099374613 seconds)
  done (took 1.801702913 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085612702 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.102799312 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.090692322 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.120487349 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111234415 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084833047 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.103875601 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086461668 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.10467352 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081421303 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.107697266 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.102888263 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.227787897 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119220053 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.086184954 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.105194995 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.108863836 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.086867534 seconds)
  done (took 2.677841319 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079174949 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.083084304 seconds)
  done (took 0.925193155 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083249624 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096128105 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083887404 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100829176 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079997626 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.09700167 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081157318 seconds)
  done (took 1.384501041 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.484342284 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.253802672 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.316768444 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.117065516 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.134723982 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.35956013 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.136250037 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.09579679 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.114847261 seconds)
  done (took 2.838287127 seconds)
done (took 12.370384322 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090149279 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.135966939 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.486593094 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.115522046 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.078942653 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.160580349 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.266585022 seconds)
done (took 2.103705702 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.340081632 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.125120575 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088877667 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.079805692 seconds)
  done (took 1.399192199 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078550242 seconds)
    (2/2) benchmarking "read"...
    done (took 0.085694168 seconds)
  done (took 0.933576121 seconds)
done (took 3.104125583 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078104461 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078018246 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.113476758 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095375607 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.07647381 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078111122 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.094632465 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.075977487 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097700415 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080229527 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.094895187 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.078519929 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078721086 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.094995351 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07636789 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094647274 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079558323 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093758128 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076840901 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076271163 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093161245 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07878691 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093461298 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077156154 seconds)
  done (took 2.878221527 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103313537 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098209856 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.085084097 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.102572585 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.083968079 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.10271558 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102989105 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.080875082 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.103191783 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.082632147 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101296741 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083923103 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10035502 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084645857 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100192671 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.08403462 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.10407763 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080234304 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100243187 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.084393033 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104481729 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080515431 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102392598 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10471455 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083879109 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101862814 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082271261 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098845 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085974009 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.101216124 seconds)
  done (took 3.588015299 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086668885 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076664197 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.096748723 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.08839198 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.095332734 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080595959 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.094985139 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081071164 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09935849 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.077437659 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081717075 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095354761 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080049882 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09909643 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.082089787 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102607537 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.0955907 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.097711228 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079938179 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.099980414 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.083013138 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.098378438 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.080848663 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076295963 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095088455 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077346577 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095937603 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077260548 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09540218 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07734745 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.082808913 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.102488851 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.076958798 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.10893573 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08388289 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.094466015 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.08557585 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095565318 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.082068017 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094872656 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07728388 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094468893 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080516326 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.088377332 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.098749744 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.078000208 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.099204055 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.08209674 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.099633567 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.086131712 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.094710404 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.081285549 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082785396 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.100911666 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083193857 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095271546 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.07898487 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.094909265 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082424357 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.094950895 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.077613491 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076569701 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101942299 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077648551 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.119177589 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.105839595 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081058638 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082736484 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099003549 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085235561 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101719707 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096041647 seconds)
  done (took 7.209365173 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081012864 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106372534 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080210457 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09724751 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075825797 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077379694 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103103814 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078200889 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097489988 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096162036 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096276348 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079029089 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097908004 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082538221 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096493411 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079615552 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.106550232 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076043646 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.096571619 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082163674 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096741578 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084893204 seconds)
  done (took 2.749311037 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.220605367 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103892042 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143324995 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097388107 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.116784374 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.115010234 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.084725108 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105583767 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103195822 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088950507 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10635018 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086023819 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116329385 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106427822 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088732113 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108326405 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085573932 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108793819 seconds)
  done (took 2.768285956 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091752924 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099050616 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105707289 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100200308 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080869322 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101982383 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08797 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115882063 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083313304 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100863878 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110809072 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084256294 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104341007 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082504243 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101110293 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081564651 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101461018 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082655016 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10973357 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088150848 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10641339 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091264786 seconds)
  done (took 2.894756915 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095373313 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101447625 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102516852 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10392025 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080340169 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101169583 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.08968384 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.099901303 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09070848 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102132825 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081436848 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100039862 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08910468 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099887566 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108111956 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082038426 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100562656 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081845369 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084142402 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09876726 seconds)
  done (took 2.678797793 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120362789 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114081466 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095876002 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125491258 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114343445 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096844766 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126348347 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09575238 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114102113 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128071039 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096422463 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114430959 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127134638 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104203136 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114696558 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107826065 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126092712 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125933283 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.095842666 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115090183 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127822804 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096906485 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125674745 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096317179 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115645373 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114647985 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096173886 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121687399 seconds)
  done (took 3.94147298 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078598738 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080335461 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.097692583 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078267367 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.096682217 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.078617175 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0778574 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097696098 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080686661 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096861821 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080823543 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099051604 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081257282 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081098866 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100113285 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.081439203 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099693717 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.078827951 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096570282 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078671007 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080630748 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100059711 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080265032 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097825801 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080179903 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099328716 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079386791 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078853286 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100830697 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078679051 seconds)
  done (took 3.403805774 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.087602933 seconds)
    (2/2) benchmarking "in"...
    done (took 0.111430286 seconds)
  done (took 0.989950981 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077317509 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117491485 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078572411 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103104973 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087616848 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100789785 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091894565 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106486778 seconds)
  done (took 1.552927087 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.103429994 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.121294778 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088487878 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113313357 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.102262433 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.119312431 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167073711 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08845709 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109206724 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082289856 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.120847985 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082181789 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111814586 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088569912 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109640364 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115577514 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.082839093 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092125064 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.109797269 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.084634462 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108636962 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117837865 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093748091 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.109015289 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085290773 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113782789 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096224802 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.113119751 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088484114 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.114748809 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089653321 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095850579 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.088221575 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.107794618 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.083664962 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.120944519 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119841763 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088636822 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110479269 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089918464 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111787596 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.081506456 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.113260658 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090377756 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113988215 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.088646125 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.108398461 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.081124966 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.10203753 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086883486 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.099873713 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086820507 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094945815 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092783633 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.110602224 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101489919 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.104824317 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087176205 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.10696785 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085556413 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.111018883 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087385738 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113181352 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.087256507 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112136175 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092369005 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110341146 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080682556 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095404751 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082952778 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111503099 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108161775 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.114629658 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.108377514 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089979788 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.102793484 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089299598 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108904437 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091705566 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.114190531 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.087964437 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110938643 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093941079 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106476663 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087153351 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109587918 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.085645072 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.106201821 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084232985 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123510417 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086280293 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.103795806 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083337277 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113283766 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087773322 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.106653613 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.084011383 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111695799 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077173382 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.108057431 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090579828 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109514678 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095902273 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108930269 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089805483 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111305739 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.094737512 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108434582 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087139645 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098914418 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089395186 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.10421846 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091650301 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096106963 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087888356 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.107254708 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.088991134 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.114161463 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085493147 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.106956266 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09466372 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.113279424 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.086125413 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099839611 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08804051 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.107659641 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093973061 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.115943866 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.105046634 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.082312673 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081724898 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.112056496 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.088278522 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.111191679 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089398221 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108611855 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077342257 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.104741169 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089377169 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.113358946 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086816268 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.109188648 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112316735 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.09066903 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.106413149 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094488155 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.105333706 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083757297 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.113278076 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08746146 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.101142181 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093881479 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107108196 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085917047 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107309557 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093474682 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.108484914 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.089304453 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10547484 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088842802 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109858548 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083577589 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108760481 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085759811 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.115846574 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087955646 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.101099752 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.080918482 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109026 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086186871 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.106473092 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083816931 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.108112725 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.09017544 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.085153827 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.106224759 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087383674 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118979625 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117159731 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099738072 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.111067882 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095154431 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10807734 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091408446 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.108001924 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090802997 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.110214448 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.0931111 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110884218 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090238697 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108479175 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079917569 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110054351 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094730024 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103379764 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.084990947 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102340207 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089607411 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.114648594 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089599048 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.109283887 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085591723 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109234184 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093883277 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.107650936 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.088554483 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.103600668 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089012694 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.112234824 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090999094 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109748232 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09602218 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109208349 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.082715038 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113452224 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085802992 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.112230787 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.082654828 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.104187574 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08466329 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.110119661 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.086890499 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08811759 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097362801 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093582464 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114849355 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10810376 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084383153 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.089133047 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117181093 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.106397218 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094488783 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.107539157 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091711802 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122220506 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084646885 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.108786266 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096735973 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.109266221 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078357949 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110980263 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.087381595 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103760971 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.087531276 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.10638919 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090191262 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110752019 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091014506 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097780244 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088478673 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10620595 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085102567 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082905809 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.114721374 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109237957 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088647196 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117784228 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090718199 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.110244849 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090279633 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.108495048 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.091347973 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.111112372 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092530699 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.110259711 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087129301 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.104507899 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089513755 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.104493634 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085342824 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.108172267 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.090562742 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.1086185 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091392113 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.107449266 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094452475 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.109413659 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090878515 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.126817247 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.105223934 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085471436 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109866706 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09272857 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.109172967 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089037275 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.102515508 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095466131 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.109217151 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095837828 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.108747853 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081608809 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089535428 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.109163275 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.091181653 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.111917996 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.091167466 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.107206263 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.088895401 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.110460409 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118362208 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086561168 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115934291 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092024149 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111751091 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089319761 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.110660124 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088703097 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104930787 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088501574 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.111037366 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.090297186 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.109288384 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093209127 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.109563022 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089567779 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107878127 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.091472049 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.110968667 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.093010814 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.098609138 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084765999 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.104815362 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.089764008 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113039706 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.090995864 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107166654 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.087936955 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111630935 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.088265284 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.081111408 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.113608218 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092213931 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.110062127 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118687686 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085525015 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.109064896 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100419331 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098593018 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.088141767 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085729479 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.10646063 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114929638 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.091395529 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.114835841 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.09084085 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.104420354 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.082059661 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.091489987 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.109694113 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079748549 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.10564063 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093494056 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.106937304 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087913951 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.111343291 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.092933229 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111878027 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095057655 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.108828175 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08950355 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.110182382 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.08197864 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.106573911 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08567191 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.109952613 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.09242121 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.106562118 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082619483 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.109746228 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089705087 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.109781851 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.089603698 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10831847 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096146227 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110220011 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091056046 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115953734 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080213843 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.110161266 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.089991095 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.109704305 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.0860764 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.111479092 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092995988 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112180708 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095601266 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.110437958 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092707611 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110546537 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087122996 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.110367994 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.090579968 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.11111884 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086280763 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.092227259 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118016718 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.086967618 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.111661437 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110334106 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087951325 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111568551 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.092972201 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.110287158 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094878379 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.109786499 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.09126438 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114524955 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091056718 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111523882 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093441917 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.109030748 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095117359 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.105561254 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097530468 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.111101344 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.092926944 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.109268228 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087193876 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110889766 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.08976942 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109042399 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096298452 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.111832311 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086076494 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.105953667 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.087364298 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.09002454 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115878689 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116766785 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.091294545 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111628737 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083696764 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.102532723 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092968894 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.106234329 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089897536 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.113107921 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095194126 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.111403701 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.087489882 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.108612362 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09652802 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115385476 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09387918 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.106692272 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093357193 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.112333212 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.091097607 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.108675117 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.090168153 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113121959 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.093863858 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.10937314 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086006117 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120992987 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096405829 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113219627 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089468236 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.112722389 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.090134012 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.105089336 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.093013422 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.111858977 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094454832 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.111207069 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091519656 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121738217 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086300482 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.110334164 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097408754 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110189 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.095887537 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.086645647 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.091433125 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113994744 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09303238 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.105629225 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086494467 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.107749714 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090936368 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.106762703 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.085539457 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121666234 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095934017 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.113208546 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089478635 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.111021596 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.085123765 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.105697367 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086822814 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114015727 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.09011022 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.119098541 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.087093083 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.107543199 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.085878127 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112248984 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093838273 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.114818731 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084375327 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.106164917 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087320476 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.112796399 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098987057 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11051694 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.092854973 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113308237 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092237061 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.108689675 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098527819 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.104101664 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093493246 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124391282 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.093203636 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114783015 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095261743 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11883781 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.094948248 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.106126632 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.093478334 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.11230911 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.092553442 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.113893143 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.094709641 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12885016 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113777894 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088378604 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.111802926 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092211498 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.108123667 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.100502129 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114995506 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.094314092 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.114502671 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091030934 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115388584 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09971997 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116172014 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094835646 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.113679822 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.090860972 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112569841 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.090258888 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.11082143 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.095734018 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.114605994 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091482207 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114951006 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087644118 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123981729 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.099028219 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.114226469 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083918938 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.108036708 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088283191 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.106166685 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.095439394 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.1057401 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.090168194 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.090087791 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.113909688 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.094523973 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116863911 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091661246 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.115481332 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.091732261 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.103216825 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.095901062 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.11313806 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095885998 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.106471438 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.092613542 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.114871748 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097118889 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.120805516 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08960532 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.11343246 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.09102218 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117361154 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.086600909 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.117376202 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091040532 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.111289046 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.088218782 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11395742 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.094367524 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114818763 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094541445 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115810714 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09229308 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116519358 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095917757 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.1052402 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.084664132 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.11675448 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.089796411 seconds)
  done (took 60.602543725 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149213703 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090423208 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083080622 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105537354 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13168367 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087414478 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103480533 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.088332354 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10858168 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.098114206 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104553528 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083307971 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12669912 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133972429 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130158534 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.098569973 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103713501 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088373597 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.103988845 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0883061 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.125687137 seconds)
  done (took 3.074280174 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105107636 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118535953 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115712823 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10129542 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113250121 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.122843312 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101004107 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12384949 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.126696973 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096665874 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.126513878 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123407614 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.096279857 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.118290716 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117650933 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100657602 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.127042398 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116101971 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.103862457 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.121693131 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.120119769 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102132583 seconds)
  done (took 3.336936752 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.092633363 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.091146014 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.118040191 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.085840084 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.113439531 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.086495491 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.118548903 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.088494317 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.119367166 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092949597 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110501628 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.092450679 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.118599299 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.08618557 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.111436783 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.089325243 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.119105642 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.092733344 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.114644054 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.086915454 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.13458714 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.086390872 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.107795811 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.089809436 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.123222371 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.094436147 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.113218595 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.093007467 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.110702842 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.092429213 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.108851468 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.096280533 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.116553411 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.089884674 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.110524517 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.092960482 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.092077896 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.107579107 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.088821729 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.116729456 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.086921149 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.114454596 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.100158259 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.111888483 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.088770658 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.115812914 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.093610087 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.107972219 seconds)
  done (took 5.757387215 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.11976046 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163745618 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090809814 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.154047868 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.128583468 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.102711742 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.116263908 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.15304214 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.086098259 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.113177888 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.132771779 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.106441268 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.117183485 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.119956141 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.097082502 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.11329216 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.094401256 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109247498 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.098098594 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112535441 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.119362322 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.0959771 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.127586352 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.125492161 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.098234841 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.113095627 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088814313 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.120952303 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.125988686 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.099924032 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.119595092 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.100677493 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.13023357 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.114961646 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091163259 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.117703343 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.131776003 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.093321348 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.116523799 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.087035106 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.117136992 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09820589 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.117536149 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.130792232 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.094156143 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.116503021 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.093090704 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.106675231 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.126699278 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.09629492 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.124542505 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.128466712 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.098180109 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.114282622 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.099500178 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.129239202 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.114026593 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.091859037 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.118861817 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.104846042 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10840053 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.118818182 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.10692586 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.116648168 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.123519895 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.10719918 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.115202397 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09717405 seconds)
  done (took 8.655433996 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116044305 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.115223249 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132875947 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111120267 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120426155 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.098509935 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.120306024 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.118949558 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099252454 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.127008386 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098494982 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.170832168 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.117554949 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127611896 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.098654182 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.119860321 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.098256881 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119523078 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.119444175 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099353256 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.119890059 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110490388 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.120425865 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131752813 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133289989 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.096285155 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119814871 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.099496022 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131960554 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12108494 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111588838 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.119832595 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12043123 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110544627 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13372343 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.120204267 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093228798 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119850121 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.099259871 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.120746568 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096587141 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133634242 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11985883 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.095964688 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120139844 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119995597 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111546019 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.133836586 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.126893072 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106057008 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.120901114 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132231423 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099616805 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.121095745 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.132428784 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140844735 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111424662 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134304101 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11976622 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.133091566 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111391793 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.141287218 seconds)
  done (took 8.177969631 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085147476 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086603007 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.109957839 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.087778169 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.111639901 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088220643 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090022943 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.111701515 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089796523 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.111389942 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090225148 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108574629 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088191728 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089633789 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110224458 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087115437 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109216438 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087642444 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111393059 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088293751 seconds)
  done (took 2.794997363 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094163499 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.130195183 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.091283671 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.120084294 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.094043205 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.120008102 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092054388 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114841709 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094640689 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116018818 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.125303051 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105369341 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113196761 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09888331 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.126507031 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.120308037 seconds)
  done (took 2.613049427 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.105106221 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.127948541 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.138574959 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.096268592 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.110433374 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.099638417 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.115382949 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.087002395 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.108325899 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.099851101 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.12106045 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.097476684 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.114577045 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08973181 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.091092035 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.120028125 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.086266575 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.116720876 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.092821688 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.139691148 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.117603538 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.095082437 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.116827007 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.093269299 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.115785698 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.096580782 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.119308865 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.088192864 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.111198472 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.094420032 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.116708348 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.099491721 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.110701817 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.095328865 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.112960086 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.088321334 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.115095807 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.0940818 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.119581777 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.093467548 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.110414126 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.093025595 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.115686336 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.097094479 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.108703708 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.095098598 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.109076308 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09802436 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.115035888 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.09409078 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.116126528 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.100176773 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.120016594 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.102965894 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.124034973 seconds)
  done (took 6.706246609 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100696029 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112837002 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096618738 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110364295 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.095602399 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.121718114 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09656085 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115195185 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09381508 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.110144274 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094992398 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117634139 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093801717 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117638015 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094128611 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117169702 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086772418 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115748787 seconds)
  done (took 2.752918456 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091633396 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.086143835 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.121276165 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.091197441 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.115022616 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0936841 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10917692 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08952284 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111821903 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.092472009 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112589702 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.094007281 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112029838 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.094045626 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112990542 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091639906 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.117040769 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090046063 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09143009 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110797902 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094422788 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112093508 seconds)
  done (took 3.095839402 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.102765454 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.145457188 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.104941703 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.156278864 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.118592089 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095154183 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127919382 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.09620296 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.13657515 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.095303959 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.117532912 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.09500163 seconds)
  done (took 2.252727748 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110410033 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143976796 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088970307 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116966818 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128565296 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098755219 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118539569 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098216445 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132713398 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131799605 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097103408 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133257116 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132091868 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131386704 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105488473 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128818694 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118552398 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097974521 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114443315 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141813217 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097862838 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133482483 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097206944 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118499419 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118356057 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109075018 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132923123 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133515963 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097598534 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133557419 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127992687 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096980191 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133489147 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132449105 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094584689 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135107859 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119581208 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141765346 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106437245 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132329597 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116173402 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107712043 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132976982 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127385026 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111252919 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121340227 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127173794 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097816354 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119990884 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148760351 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128832276 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110107101 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129288545 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133440936 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111013752 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149908218 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132514447 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130199575 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129309774 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132616001 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109676618 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12895579 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131240433 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133205827 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107198647 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131786108 seconds)
  done (took 8.870363273 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125457541 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108484868 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096006329 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133134507 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131024459 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119114354 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098558996 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.359050314 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091504951 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115844549 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16712859 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097864456 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132591576 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131193515 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097672522 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119887667 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119764061 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109571443 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116280051 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148816034 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097660599 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132182003 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130665215 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131749599 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133267598 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10625255 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119225076 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097559533 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119910395 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120204433 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106129089 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119413605 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131192189 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.094167598 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13144572 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09812602 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120575215 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126863494 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09820031 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128383783 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131300085 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143300986 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098624619 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119127539 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133452771 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098357373 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119928276 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094130803 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119230683 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094084196 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133081553 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132708903 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134097576 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109732792 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120177485 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119194984 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098950422 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119343694 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098411858 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128561794 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131166165 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099003884 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14972261 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119487636 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097862485 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133738197 seconds)
  done (took 8.90890107 seconds)
done (took 163.025683574 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.104224201 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.150801952 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.106839943 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.178364571 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085944472 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.145195975 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119108534 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.123479307 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093460281 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.11579932 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093154121 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.119270577 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.159791509 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.106744498 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087022313 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.11800352 seconds)
  done (took 2.771856042 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.182241291 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.29895125 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.113486678 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121482954 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098825592 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.118666982 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.097616077 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.122993453 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093597434 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128237553 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.116961714 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095821185 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128310467 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095693922 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.116744991 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096059307 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.128162128 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095644586 seconds)
  done (took 3.122857606 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117268785 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.164984503 seconds)
  done (took 1.162828216 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.121880027 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.190151141 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316387596 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168874364 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.12343369 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138458784 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.171719976 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13627163 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.211199541 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131058118 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.108962122 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.116710295 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147611665 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106530237 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.125345761 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099835265 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.150345429 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.124115732 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.101948163 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.124196583 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.12620604 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.127067472 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.127811315 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.103674628 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.199698508 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.138927245 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.101479933 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.125564347 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123983656 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.102142295 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.128470426 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115359366 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.14122197 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.206289605 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106852024 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.200488652 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.109400674 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.122925183 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.102410978 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.122268436 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.105945429 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.128069357 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.138910436 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101583764 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.123200639 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.108545768 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.12506697 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101132435 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.130525445 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.132441952 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.109066012 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.129919559 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.177145943 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.132500244 seconds)
  done (took 8.165078682 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.799613652 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155605441 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09264388 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.905431927 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146405476 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109210891 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.817697121 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.138172832 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.241818628 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.835435022 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115110772 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.138915299 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.247387753 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.265963237 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.148510849 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.342780979 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.684028666 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105054729 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152112186 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164110182 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130399427 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12808222 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142770961 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.440860818 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.114957529 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099244638 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129706528 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112678594 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.199012004 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100499111 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12689649 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196924064 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.278939392 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210115346 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098836148 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121463743 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098854404 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.1813579 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.286425101 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.229493962 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.191017733 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096011399 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121837695 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.112252062 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.144863399 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.118815522 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178422732 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188476658 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.187956267 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.129157738 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.135403269 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109973686 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135320718 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.17605468 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120195548 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.330651761 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.355242526 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122375553 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108652119 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.143668039 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.282091892 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099683465 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.242119683 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.151259785 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.206008474 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122796222 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792731043 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.182264464 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099033965 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.133296073 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.131605509 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106380049 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136381173 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180398578 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.419498009 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115719561 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.130310064 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098512056 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.247180834 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099076993 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122458656 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.178925245 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123904713 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109682436 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13995141 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138007031 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.186669747 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.265266701 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139288708 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10894435 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12891249 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136248449 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102032223 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.225358051 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.23595816 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.171847698 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.253474338 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112603701 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.201946609 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.180143512 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112231536 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.210170733 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109218461 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.142926638 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137101203 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.209595575 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.15785259 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123468259 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105913668 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131430648 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159056701 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103199748 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132452363 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.183099522 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.498695322 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.182232533 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096817502 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128329337 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109690287 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.1976854 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108583103 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276971101 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110037698 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.206324397 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109207357 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.120272091 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109297323 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.202420104 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115846582 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133632764 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.137763476 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108921926 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.263400019 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.237626222 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.137350148 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23428331 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.19325446 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.134990319 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.185609212 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124168634 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.174174298 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1241388 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105366956 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115756484 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775682214 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106542673 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123019548 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097180916 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.192213652 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11385677 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093706247 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.113728787 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088479257 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77947408 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094038643 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120087899 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.097205411 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124486444 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099639622 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123933824 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119210992 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.170410108 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242154215 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1057282 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124892219 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.095832059 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.190503247 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093624733 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.114407309 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092198435 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.114431662 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101990139 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119833687 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093589192 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.176477648 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.186593035 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.204716894 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.612832368 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090943904 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.118683506 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239464927 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091794972 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.312009972 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122052646 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.208775213 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.195167571 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.089826332 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.348660217 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.179402588 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.191899245 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.11813221 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.176358569 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088589625 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121107848 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.167925688 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.115512022 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10671881 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.173252791 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.142548138 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.137929642 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.155750679 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091369572 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23230174 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.111435033 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.1836833 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101657369 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137639743 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.325771656 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100925664 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145222289 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.177599786 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129530749 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10080763 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.886196486 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102234923 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136077156 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.13431486 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.218573093 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.203663958 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109613436 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132646133 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.138838527 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.17903244 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.222508279 seconds)
  done (took 46.466577665 seconds)
done (took 62.563586209 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.329710692 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.272800804 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.304557559 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.200223086 seconds)
  done (took 2.081697 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.183658371 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.157272967 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.129005183 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.122376835 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.169924113 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097732755 seconds)
  done (took 1.763389266 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.487243546 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.389779162 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.35291532 seconds)
  done (took 2.137876284 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.270046534 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.305366647 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.340802225 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.459432809 seconds)
  done (took 2.389258417 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.223169747 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.142083425 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111095694 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.154434226 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.188784944 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.194863778 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.158890541 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.169615053 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.144191606 seconds)
  done (took 2.436503723 seconds)
done (took 11.714535988 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.239261808 seconds)
    (2/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.19178037 seconds)
    (3/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.367562602 seconds)
    (4/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.271555877 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.24460153 seconds)
    (6/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.263916995 seconds)
    (7/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.179202399 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.118322216 seconds)
    (9/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.1385994 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.113729522 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.131496806 seconds)
    (12/286) benchmarking ("sort", Float32, false)...
    done (took 0.187625034 seconds)
    (13/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.263137089 seconds)
    (14/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.112229429 seconds)
    (15/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.263049622 seconds)
    (16/286) benchmarking ("sort", BigInt, true)...
    done (took 0.290148673 seconds)
    (17/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.173018013 seconds)
    (18/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.134138517 seconds)
    (19/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.251294179 seconds)
    (20/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.173885876 seconds)
    (21/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.12789802 seconds)
    (22/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.19509566 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.158313028 seconds)
    (24/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.268274526 seconds)
    (25/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.160858033 seconds)
    (26/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.106550512 seconds)
    (27/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.137094814 seconds)
    (28/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.232158991 seconds)
    (29/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.235604278 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.237857396 seconds)
    (31/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.104315047 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.135831687 seconds)
    (33/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.212964722 seconds)
    (34/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.114593928 seconds)
    (35/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.219747055 seconds)
    (36/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.181447322 seconds)
    (37/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.199326093 seconds)
    (38/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.151895808 seconds)
    (39/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.137020958 seconds)
    (40/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.117884529 seconds)
    (41/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.110063391 seconds)
    (42/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.153323384 seconds)
    (43/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.231523564 seconds)
    (44/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.217385961 seconds)
    (45/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.10427771 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.131056833 seconds)
    (47/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.212286757 seconds)
    (48/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.19859723 seconds)
    (49/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.155083392 seconds)
    (50/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.117437159 seconds)
    (51/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.129693326 seconds)
    (52/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.15450084 seconds)
    (53/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.090724814 seconds)
    (54/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.128501625 seconds)
    (55/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.104211998 seconds)
    (56/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.13814547 seconds)
    (57/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.234749208 seconds)
    (58/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.151707019 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.129163604 seconds)
    (60/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.167862745 seconds)
    (61/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.12788888 seconds)
    (62/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.200087966 seconds)
    (63/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.254827364 seconds)
    (64/286) benchmarking ("sort", Float64, false)...
    done (took 0.187239376 seconds)
    (65/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.096438615 seconds)
    (66/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.139978648 seconds)
    (67/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.136743921 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.114913452 seconds)
    (69/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.222712535 seconds)
    (70/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.139299852 seconds)
    (71/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.148248477 seconds)
    (72/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.129492784 seconds)
    (73/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.208099292 seconds)
    (74/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.115948525 seconds)
    (75/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.13154635 seconds)
    (76/286) benchmarking ("sort", Int64, false)...
    done (took 0.098753534 seconds)
    (77/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.141083337 seconds)
    (78/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.203406764 seconds)
    (79/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.101726807 seconds)
    (80/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.199774672 seconds)
    (81/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.122689466 seconds)
    (82/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.20772283 seconds)
    (83/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.208888265 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.160062664 seconds)
    (85/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.198451463 seconds)
    (86/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.104754849 seconds)
    (87/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.139559574 seconds)
    (88/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.107923338 seconds)
    (89/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.17671715 seconds)
    (90/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.109405347 seconds)
    (91/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.124941112 seconds)
    (92/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.223773878 seconds)
    (93/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.205388566 seconds)
    (94/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.107735421 seconds)
    (95/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.126701072 seconds)
    (96/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.179984989 seconds)
    (97/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.11192853 seconds)
    (98/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.218283113 seconds)
    (99/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.198573259 seconds)
    (100/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.139924055 seconds)
    (101/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.116156428 seconds)
    (102/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.216536419 seconds)
    (103/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114101685 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.137820682 seconds)
    (105/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.104854222 seconds)
    (106/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.139511696 seconds)
    (107/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.091369631 seconds)
    (108/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.209842283 seconds)
    (109/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.118588436 seconds)
    (110/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.10341663 seconds)
    (111/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.114134809 seconds)
    (112/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.173421113 seconds)
    (113/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.226178885 seconds)
    (114/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.140496729 seconds)
    (115/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.113463198 seconds)
    (116/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.198948351 seconds)
    (117/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.126613442 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 0.20009032 seconds)
    (119/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.111796199 seconds)
    (120/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.194814984 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.139706464 seconds)
    (122/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.092600455 seconds)
    (123/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.138611199 seconds)
    (124/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.108089649 seconds)
    (125/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.115259346 seconds)
    (126/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.087820981 seconds)
    (127/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.08819123 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.129789406 seconds)
    (129/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.112373358 seconds)
    (130/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.130465293 seconds)
    (131/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.114041 seconds)
    (132/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.113164323 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.111961593 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.158666913 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.124146794 seconds)
    (136/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.107605173 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.132764059 seconds)
    (138/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.103883659 seconds)
    (139/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.117293419 seconds)
    (140/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.100074869 seconds)
    (141/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.094143869 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.125412255 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.108157455 seconds)
    (144/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.203326115 seconds)
    (145/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.165578166 seconds)
    (146/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.088892088 seconds)
    (147/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.151059962 seconds)
    (148/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.103104648 seconds)
    (149/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.164725215 seconds)
    (150/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.174532872 seconds)
    (151/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100811859 seconds)
    (152/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.13196055 seconds)
    (153/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.103084914 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.138980214 seconds)
    (155/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.124671902 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.132914104 seconds)
    (157/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.094636108 seconds)
    (158/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.114005267 seconds)
    (159/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.107584268 seconds)
    (160/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.134803421 seconds)
    (161/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.088605326 seconds)
    (162/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.131254251 seconds)
    (163/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.112976396 seconds)
    (164/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.133055648 seconds)
    (165/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.091952733 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.133224563 seconds)
    (167/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.108848298 seconds)
    (168/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.212383374 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.132143463 seconds)
    (170/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.102951028 seconds)
    (171/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.133772405 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.1085299 seconds)
    (173/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.183889738 seconds)
    (174/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.088294944 seconds)
    (175/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.132353075 seconds)
    (176/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.090955727 seconds)
    (177/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.140687075 seconds)
    (178/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.089488828 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.136912798 seconds)
    (180/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.088832301 seconds)
    (181/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.112495414 seconds)
    (182/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.155804482 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.162643137 seconds)
    (184/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.139872791 seconds)
    (185/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.08851499 seconds)
    (186/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.112227731 seconds)
    (187/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.125310099 seconds)
    (188/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.117576874 seconds)
    (189/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.095063238 seconds)
    (190/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.210346684 seconds)
    (191/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.101298576 seconds)
    (192/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.142034866 seconds)
    (193/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.087838649 seconds)
    (194/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.114504947 seconds)
    (195/286) benchmarking ("sort", Int8, false)...
    done (took 0.209969454 seconds)
    (196/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.150101799 seconds)
    (197/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.117682391 seconds)
    (198/286) benchmarking ("sort", Bool, true)...
    done (took 0.237292816 seconds)
    (199/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.103023778 seconds)
    (200/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.117948011 seconds)
    (201/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10072576 seconds)
    (202/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.118554911 seconds)
    (203/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.09037356 seconds)
    (204/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.131069377 seconds)
    (205/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.124415317 seconds)
    (206/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.153390427 seconds)
    (207/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.205745295 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.117229728 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.140338133 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.107432004 seconds)
    (211/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.132871005 seconds)
    (212/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.129920262 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.10729629 seconds)
    (214/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.137299562 seconds)
    (215/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.089092962 seconds)
    (216/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.199105369 seconds)
    (217/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.090243059 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.13306451 seconds)
    (219/286) benchmarking ("sort", BigInt, false)...
    done (took 0.248457869 seconds)
    (220/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.085928574 seconds)
    (221/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.140441523 seconds)
    (222/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.094928813 seconds)
    (223/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.128110551 seconds)
    (224/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.092520566 seconds)
    (225/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.113361743 seconds)
    (226/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.105222299 seconds)
    (227/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.149577558 seconds)
    (228/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.201744285 seconds)
    (229/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.103569456 seconds)
    (230/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.141773087 seconds)
    (231/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.102961718 seconds)
    (232/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.115877497 seconds)
    (233/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.10733957 seconds)
    (234/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.114919752 seconds)
    (235/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.108308861 seconds)
    (236/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.153443631 seconds)
    (237/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.092471583 seconds)
    (238/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.135020033 seconds)
    (239/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.11399642 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.134579002 seconds)
    (241/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.108893207 seconds)
    (242/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.120920228 seconds)
    (243/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110194156 seconds)
    (244/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.118892753 seconds)
    (245/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.100574589 seconds)
    (246/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.115820752 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108571237 seconds)
    (248/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.127443442 seconds)
    (249/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.100337201 seconds)
    (250/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.132879921 seconds)
    (251/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.09535722 seconds)
    (252/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.133549391 seconds)
    (253/286) benchmarking ("sort", Float64, true)...
    done (took 0.247505268 seconds)
    (254/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.089263463 seconds)
    (255/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.141396087 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.107952294 seconds)
    (257/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.134441128 seconds)
    (258/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.104858582 seconds)
    (259/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.115246734 seconds)
    (260/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.090880221 seconds)
    (261/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.131408284 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.109755678 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.128228641 seconds)
    (264/286) benchmarking ("sort", Int8, true)...
    done (took 0.238368353 seconds)
    (265/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.099267319 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.12967116 seconds)
    (267/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.117030385 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.142531556 seconds)
    (269/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.107334708 seconds)
    (270/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.132354227 seconds)
    (271/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.107118518 seconds)
    (272/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.133655897 seconds)
    (273/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.089440977 seconds)
    (274/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.13098818 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.105470632 seconds)
    (276/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.113283203 seconds)
    (277/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.096094443 seconds)
    (278/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.157725098 seconds)
    (279/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.103204825 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.129397065 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.107932429 seconds)
    (282/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.116380951 seconds)
    (283/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.108888184 seconds)
    (284/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.126231393 seconds)
    (285/286) benchmarking ("sort", Float32, true)...
    done (took 0.248888287 seconds)
    (286/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.104630297 seconds)
  done (took 41.964571901 seconds)
done (took 42.874901905 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.109119776 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.166552715 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.112159572 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.158620948 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.141483498 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.117345307 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.136803005 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.115206026 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.141767522 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.117479205 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.141000152 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.096365263 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.138214394 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.11177971 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.138269224 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.158880215 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115032822 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.133637001 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.104298541 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.130509334 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.104320688 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.131080696 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.106414186 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.12199733 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.112700185 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.137445561 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.107994507 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.138786417 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.106384775 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.131412151 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.103136466 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.134362901 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102390137 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.140986331 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.107746657 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.130661652 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.112609761 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.136739592 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.107551104 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.131600643 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.109758962 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.131391921 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.107820682 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.135845956 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.106228557 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.129973539 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.105181279 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.143243858 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.160057008 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106533702 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.109096381 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.139911534 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.139250553 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.109372102 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.129162655 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.104176833 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.132300873 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.133718003 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.131069938 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106786356 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.154356025 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.103320329 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.130274446 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.104318204 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.130187135 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.112128571 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.139074483 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.104569474 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.137035213 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.107451304 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.125682626 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.104766132 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.129263669 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.102633248 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.137217344 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.111780777 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.099509094 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.130729485 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.108891819 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.135734309 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.105037539 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.130035411 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.106493905 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.134999163 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104917855 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.121689144 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.104359838 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.13316614 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.105098307 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.13092728 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.107743606 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.134091406 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.108400914 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.139939712 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.105078317 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.132075907 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.106676487 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.133788783 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.132711576 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.104126315 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.100461163 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.132300678 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.109861407 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.129063395 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.107195857 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.142226871 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.103618854 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.133627205 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.105405406 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.131014772 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.119287367 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.139979742 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.105086307 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135013046 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.102267827 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.134904538 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.103885386 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.128813286 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103366748 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.131613656 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.106611034 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.131367779 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105130023 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.134587271 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.116135058 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.128745309 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.104506698 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.130653178 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.105442563 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.13480143 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.106490773 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.12883847 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.105269786 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.126140858 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105027494 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.129514912 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.109080099 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.131202318 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.105516876 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.132653254 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.105854119 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.132837227 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.106768768 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.13345577 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.103523957 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.12552018 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10806864 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.131291585 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.108612976 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.132784974 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.104869545 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.127008185 seconds)
done (took 19.422516073 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.101447133 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.193680448 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153808214 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.169086512 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.166640461 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.125333328 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.146258756 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.165669699 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115792516 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.163551547 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.167244584 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.155352164 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.14453406 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.141358051 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.15074745 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.11397924 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.139990393 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.123802981 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.17536078 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.160929892 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166994682 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.115309717 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.163577655 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.160985021 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112881097 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.161377863 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.14337538 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113854269 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.142971059 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.133441796 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.147273548 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.132688705 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.106952618 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.153363425 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.12098946 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.136872341 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.150982451 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.109803814 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.140871349 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113455889 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.150594521 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.139871968 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.102152854 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.148588312 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.140667703 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.112525432 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.13567931 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.112322396 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.140035739 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.108668729 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.146311304 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.162313865 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.112186579 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.143471114 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.141218012 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.114717819 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.142740711 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117831379 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.143220152 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.142690033 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.115164637 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.143381782 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.119264897 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.159677588 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.13965603 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.116849337 seconds)
  done (took 10.112843764 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.117099644 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.155333025 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.134659328 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109350078 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.128935215 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.091401408 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.125282151 seconds)
  done (took 1.840286057 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092547819 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.157616563 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.137984878 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.164312341 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.156283948 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.141662788 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147952085 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103861734 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.155256475 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.141339643 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133582883 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.188267695 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.1327808 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.115720339 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.167437233 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.10397104 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.167373652 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.10386156 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138831803 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.165191289 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11065784 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.153885206 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.118397236 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.130862022 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.153663566 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.106265796 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.201122039 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145145318 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.103541094 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.139349923 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.109541015 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204072 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.155381813 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.114579936 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.129210951 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133684861 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.152617411 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136811454 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130050117 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.136599699 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127680471 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.138523014 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.112734196 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.138135201 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11210723 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.145525233 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.142633153 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113519274 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.137310304 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134180233 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.142634656 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127721796 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.1347811 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.109616006 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.140906298 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.138261286 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.120122164 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.13589554 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13509738 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.139866744 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132139774 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.15893553 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.154484491 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132461542 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150632702 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.155003777 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.126349349 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.137914479 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112511592 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.139083617 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132202965 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.136439239 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116051458 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.14846203 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140981839 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.133619553 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.159912432 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109910028 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.146074144 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.109720926 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.135091114 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.10508931 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.148668579 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.109267837 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.134501705 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123180059 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.143607634 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.137350649 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109225804 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.1544946 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.109471922 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.144197855 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.116773139 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.137278368 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147969933 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.134839278 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.142687993 seconds)
  done (took 14.152320538 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096427767 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.101857024 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.130602876 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.098467159 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.131158004 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.107189491 seconds)
  done (took 1.650103634 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.125591116 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.124390617 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.114134587 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.129025145 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.168433868 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.120207318 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.161539815 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115496919 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.15249357 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.145500862 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.124746524 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.160267882 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.165882207 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.114778507 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.159170277 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.114007701 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.159190344 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110990738 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.149626764 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111364042 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.154633094 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.142853829 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110602704 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.156811566 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.115215422 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.142813174 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.114213843 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.150584517 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.148337328 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.116499445 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.141381462 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.115875505 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.141927769 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.117189007 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.160297191 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.141821356 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109371227 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.144866825 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.115887225 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.143612486 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.133903083 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139125379 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.121126218 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.145496212 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.143400787 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.114602201 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.144083937 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113620116 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.158424385 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.11657837 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.144688822 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.114445184 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.143324505 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.117551224 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.143064304 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.144503796 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.117698782 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.160125541 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.11415182 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.142572565 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.1110074 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.143743244 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.144045378 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.116365502 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.142830824 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.117752517 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.142434867 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.110804932 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138953987 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.113662925 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.145747293 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.111408776 seconds)
  done (took 10.616081435 seconds)
done (took 39.336735984 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.685011308 seconds)
  done (took 1.663503 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.863518606 seconds)
  done (took 1.846354158 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.780433342 seconds)
  done (took 18.788191766 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.503817569 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.598365354 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.00208862 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.171145348 seconds)
  done (took 3.256576934 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.979008938 seconds)
  done (took 1.980958448 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.309559645 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.277802803 seconds)
  done (took 1.573875123 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.824334325 seconds)
  done (took 1.816856379 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.572019326 seconds)
  done (took 2.561202229 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.363586898 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.210743724 seconds)
  done (took 1.575953189 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.588748187 seconds)
  done (took 1.58380304 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.914580535 seconds)
  done (took 15.917400689 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.247016022 seconds)
  done (took 1.259266522 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.307337392 seconds)
  done (took 1.307568468 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.68091036 seconds)
  done (took 4.680358029 seconds)
done (took 60.811935609 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103530049 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.134171026 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108259965 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.130211506 seconds)
  done (took 1.472077491 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.110281355 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.1383815 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.117873451 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.142302072 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122849243 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.143517765 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.114389629 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.200550315 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.141330014 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.116881129 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.142916541 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.114571913 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.144297706 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.113550745 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.139843527 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.116733655 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.145542293 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.115069103 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.141327851 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.14294903 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.111871494 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.143701662 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.117794431 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.140589869 seconds)
  done (took 4.182194655 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.104875717 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.100070975 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.136226319 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.103900901 seconds)
  done (took 1.451513663 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.108384568 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.153021363 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.127952823 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.149266444 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128449305 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155529783 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.13831298 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.110655291 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.140806727 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.120724208 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.139535491 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.13195038 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.156234975 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.105700578 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.150545422 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.107828642 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.134651526 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.12815737 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.146938965 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.149556006 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.109773963 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.147587023 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.118116003 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.153421473 seconds)
  done (took 4.225065577 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.179764854 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.141578154 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.161020918 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.117445461 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.189151599 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.164945678 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.109292734 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.166009088 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.109644447 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.162257033 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.143349647 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162179749 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.155494597 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.140292956 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.110160617 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.144199279 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128530051 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.16184532 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.140761037 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.123811739 seconds)
  done (took 3.922233841 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.104825337 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.13000862 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.105989169 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.108380904 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.144940417 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.113023415 seconds)
  done (took 1.727682892 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094104214 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.098114733 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.132841716 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.105392214 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.138319677 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.105658137 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.132496328 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.105858261 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105830853 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.13444692 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.105138689 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.132297146 seconds)
  done (took 2.410104473 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.389225136 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.127410513 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.124754335 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.097859046 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.135925477 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105424727 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.150981689 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.109242672 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.169345886 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.109651726 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.136992663 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.111862229 seconds)
  done (took 2.78446831 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22004459 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115059358 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291926964 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.458112492 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172852914 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189691809 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.357292618 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171946671 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.19803873 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160052042 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219436389 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179726258 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177845843 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20437089 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161527088 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.20092095 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200343217 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226417283 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172185045 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230392525 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186791279 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187622384 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20275921 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175516349 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130129103 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18034126 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.140558045 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122133065 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224490688 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194020764 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197957515 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170988888 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132768093 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256585723 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237820205 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202722535 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.40740915 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140109099 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.20322794 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.20411018 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280901352 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136632705 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246550803 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149157376 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15093418 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205554421 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180205616 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.20263808 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.153595493 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134098032 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235024709 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201087148 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.202736163 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158945133 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.371145908 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158600356 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.170110319 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21507519 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210630041 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215913655 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188881524 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.141328546 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246018529 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222247175 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196719755 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.13988656 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.189502039 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146240188 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199214959 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21942748 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198813824 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188532772 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.239082751 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154291169 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18109982 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190286376 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148777291 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200390175 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184476396 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.142642827 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173479148 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130628066 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149819957 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.207851003 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105912345 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21934377 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151414405 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.198361811 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222350831 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165027769 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170892158 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178307888 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182181414 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160351079 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.138393578 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139980717 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.185855028 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182756424 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155243787 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179682718 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137070217 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.149884361 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178080377 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.116204524 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183720887 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.154053431 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192109778 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189741795 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.121275851 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189230673 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174068024 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.18319346 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197187693 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210855015 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154042445 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126008319 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218504241 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182095596 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.156783552 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199823607 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.211454369 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.188609667 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161225206 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194538586 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217433968 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165411423 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212940444 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164182922 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126195747 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.174895568 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183454585 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180347528 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.181088011 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12229594 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.179211734 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218372419 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.149459686 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160316635 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200672593 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118539704 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150944115 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165803805 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129648658 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.166405871 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.172044714 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131844027 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181796762 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185331693 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17828281 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182200111 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165803507 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218916832 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155496921 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.18506645 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142950258 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.141467934 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.204232252 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211122588 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152460708 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224528336 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.192506703 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29150072 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179434458 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11896971 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199811937 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152004317 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.112297891 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190741084 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184346241 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187353708 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.207424297 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297280456 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.176473928 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.170015348 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17414249 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189272965 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.199155572 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180099252 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.168692233 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186963818 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194807448 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.115438539 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.146937324 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.119933786 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166772208 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151624867 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125397206 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206529364 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188551374 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.281388927 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174489637 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155455261 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201488789 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.112490694 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18990045 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.197258928 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161471189 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.208688401 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203253435 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188048084 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157080203 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199711451 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.141346029 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116758717 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.155860693 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191176172 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125468315 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153327267 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156052928 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201522625 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1948919 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172653933 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293494654 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182940554 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212175734 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.115148012 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.185420022 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193395038 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18313675 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.1859517 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142279796 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.168949298 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191380297 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152135167 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200526233 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173804706 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178560794 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206950826 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.1670366 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138359732 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166883765 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150127423 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152623619 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184251743 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162616494 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151447841 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140952883 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.147339909 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142411853 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202146969 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168808968 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204394993 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.182930498 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199104158 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118196153 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166128384 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185151266 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171828428 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106883099 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195802198 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241525055 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167450009 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153848976 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227310848 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118332011 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.378810736 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236951617 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200663184 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153466992 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132577421 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186660128 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186222356 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190817044 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204774456 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168917805 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204556559 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183760976 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135953724 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157507105 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155757186 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164314706 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.135602128 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145443849 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.166479893 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.161500342 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201607525 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163464233 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183717353 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188690291 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.140696544 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.179584086 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16563157 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216513724 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178387317 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20085605 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.180486481 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190776212 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2231377 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113356062 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153115892 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.119816346 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203284899 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152025024 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181440314 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.27710765 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262284108 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165274598 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178485713 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150131003 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.104572875 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182472071 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175999716 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294736162 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160953654 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.129997828 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248079919 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.138712398 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148395441 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18794739 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369474512 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15116747 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183169246 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.097164943 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.359605678 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105161493 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147932198 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184005741 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196865833 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.160322808 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.176341693 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177840021 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157198873 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176451827 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150855045 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234860789 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25236281 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181253455 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192321323 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.167769025 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149699621 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189116761 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22903063 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131830952 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.166904708 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181498069 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201449173 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.209983451 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.15126989 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154375983 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184536526 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17637061 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227214059 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126665521 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225379129 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155322934 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193571293 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165242874 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117265958 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183973682 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.268590486 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121628088 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222144834 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142943513 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148591372 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143434474 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14480564 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178100275 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16254921 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.151385255 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206547471 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.118463764 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189099496 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206656383 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156029735 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177161251 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132119812 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154103523 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154925467 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153363715 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115311401 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.177472944 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190608521 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.112421003 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218592208 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185636863 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175107357 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16925676 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122548122 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.672063377 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.135282391 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190131482 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127081002 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224278477 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127134337 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177122652 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170063434 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15883801 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177227417 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160980925 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.227759724 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174180347 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165975123 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109810498 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156389657 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151209892 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.110995143 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165906674 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174787015 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153099803 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.119090727 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.172136384 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153890277 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.152188767 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117096268 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200804933 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160867569 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191611118 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191864076 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146769115 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17537985 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185885229 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138445368 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.168247109 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182421026 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119466955 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161736149 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.142660184 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.114611087 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188909837 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.132576874 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170893992 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170354979 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172524366 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143026859 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144060403 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171454118 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150442373 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172867309 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109311848 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.165590816 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166917721 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137800334 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.106121364 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172730458 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170231477 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.166432821 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10466443 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.180111406 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190091885 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.103720082 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141915577 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365720083 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172311758 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205105371 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13314612 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143581148 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152620968 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163639056 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.161634292 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140102903 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13636341 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140987183 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109677385 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.194032783 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.174900428 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172402513 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203607127 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169951278 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209205296 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.142280141 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.24087089 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147994123 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162277151 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.107873574 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.136612444 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152419592 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113667427 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151562401 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.26619775 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188021802 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.159207712 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.122902744 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134563554 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.104745795 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139960917 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167631564 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163611206 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166263236 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121807413 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.125749277 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151139487 seconds)
  done (took 86.298748773 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167852292 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.140221434 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.155623495 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203560818 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174473228 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253376315 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.213698002 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234994694 seconds)
  done (took 2.641617255 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.107181796 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.165191895 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.145586058 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.131900581 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.099163427 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.342425308 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.150349069 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.130367933 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.154735794 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.140858197 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.09866347 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.583149521 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.112842095 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.146884489 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124014696 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.09601369 seconds)
  done (took 3.821440218 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.301514673 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.549889271 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.108980839 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.255075547 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.235365234 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.160304344 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.767205349 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.190618016 seconds)
  done (took 12.669209251 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.130937843 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.164511901 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.157482485 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.187179729 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141203622 seconds)
  done (took 1.883451708 seconds)
done (took 130.489112416 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.106819001 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.142776739 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105671087 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.138039849 seconds)
  done (took 1.580625627 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.114481587 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.100015053 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.125209489 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.089485354 seconds)
  done (took 1.524532815 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.459333897 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.131795121 seconds)
  done (took 1.726982706 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.12311397 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.144037023 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.114463795 seconds)
  done (took 1.485540823 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.11033528 seconds)
  done (took 1.218315977 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.1042408 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.110074254 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.153277178 seconds)
  done (took 1.479950476 seconds)
done (took 10.123417995 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122069779 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.457066769 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.406273978 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.156216481 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.741885496 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.395409732 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.077900512 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.18434976 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156216362 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139301196 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.122494198 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.717412758 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.056725422 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.353114628 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.032397251 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.448353165 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.689414682 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.132310554 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131229713 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098900544 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.036777716 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096439776 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101394541 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.131868687 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.679097523 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.432977037 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096798088 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.489858026 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124436764 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101669772 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.4192045 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099404468 seconds)
  done (took 17.526155894 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108784869 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.200173032 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.119012017 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137374735 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101567667 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.130422888 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.107595095 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143604942 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.19089747 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111432277 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.155566871 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.098710225 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.135618383 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097008469 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.147779526 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100786458 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.132445319 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.099397711 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.138629404 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098160361 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.147026054 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101131847 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.134446879 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101510092 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.1292953 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112700475 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.134008031 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.112305476 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.128963469 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103354834 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.135902384 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100522384 seconds)
  done (took 5.114216693 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.153339357 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.211847032 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14749932 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136094976 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.190588563 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.145138249 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.186646686 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.173916357 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202391211 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137353528 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1157079 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.135891705 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.133774513 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140027337 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.121949809 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.134999343 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101418098 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.130951316 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.105649275 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.129660348 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117214448 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.128349298 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101557252 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130962752 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099647108 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.14311429 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097837467 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139642545 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126781398 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.10290141 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.131384637 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098469848 seconds)
  done (took 5.475282403 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.107564644 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.138665231 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11510678 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.148179749 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.10468114 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.142442502 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.110059319 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.131851557 seconds)
  done (took 2.119254659 seconds)
done (took 31.346160625 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.124570267 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.117348693 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.148774319 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.126778334 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.14595767 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133827199 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.135040131 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.109689288 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.147947643 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.11728025 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.159258298 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108376572 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.136088135 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.101320546 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.143723707 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.107676736 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.158122614 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.118017051 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.165448037 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.125418327 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.144398005 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.123087748 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.122543969 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.155883991 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.158819082 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.129088445 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.154162203 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.113679464 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.139500487 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102687913 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.154185067 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.136093532 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.143481626 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.127995716 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.149382076 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.113611992 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.140723689 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.108996761 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.157167278 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.121403993 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.147829339 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.120552113 seconds)
  done (took 6.706375094 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.135200377 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.186586838 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.110599304 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.139789356 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.102931185 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.169978257 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.17808832 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.110260463 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.141215164 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.129443136 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.16648795 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.110766786 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.145792784 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.109705406 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.141224873 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.104447492 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.159053093 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.130883181 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.171825522 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.144000022 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.188144517 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.178871523 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.177068494 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.136569707 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.184517992 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.178108722 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.134811127 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.183317591 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.137265975 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.140092658 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.169592286 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.136827243 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.142182186 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.103045629 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.179646164 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.150295147 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.163594681 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.178898223 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.175539769 seconds)
  done (took 6.96289917 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.113466481 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.151973549 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.125371033 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.199242654 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.145545959 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.146042002 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.110026178 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.147374186 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.116774375 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.132105226 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.11203303 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.162081735 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.148967959 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.107039795 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.107240433 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.144306677 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.151182172 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.10113799 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.135365943 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118026593 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.146282297 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.112576072 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142783038 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.109356342 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.127231477 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107312914 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.131455809 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.113690566 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.147057353 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.111167145 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.134525915 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.102922666 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.138157042 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.110821524 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.144207487 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.108340144 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.15266654 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.110201249 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.141006086 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.132705041 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.143801704 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.10441294 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.150030029 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.171067117 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098548931 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.135322321 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.105696299 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.139909351 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.09869854 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119684177 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13990594 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.098564832 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.143827683 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.128488372 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098487915 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.148299094 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.104099125 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.104679532 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.138985984 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.106817261 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.150857377 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.104283145 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.148165283 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115709498 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.14605357 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.106800868 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.133026662 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.106611194 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.15435477 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.112494786 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.176954633 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.141114449 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.109022157 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.142866989 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104800983 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110175711 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.132684501 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.115424635 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.147756883 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.11348292 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.143929173 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.105209263 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.134185337 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.117160343 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.144152922 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.139957147 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.107152115 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.138125085 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102614497 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.101087375 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145664351 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.110492037 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.139680507 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.118360855 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.139679433 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.110900094 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.140899711 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.105890997 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.130486256 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114761736 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.139239627 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.102192372 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.14232941 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.102370219 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.136318485 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.108572211 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.135627583 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.098707413 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.13369372 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.105916515 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.127621516 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.101659457 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.134336515 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.101646316 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.143604417 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.10738526 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.132029838 seconds)
  done (took 15.932958303 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.253302874 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.231346932 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204615556 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.313523472 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.153040442 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.138210319 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.232978838 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.183900441 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.133485951 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.13969086 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.218317621 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.200835856 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.156107983 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.211180696 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.205996035 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.14112265 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.122281334 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.18206319 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.230052881 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.31310011 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.149792033 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.113528893 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.171444311 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.171019481 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.150779715 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.115314434 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.153003357 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.150622716 seconds)
  done (took 6.28141905 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.121426023 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.168880437 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.108979989 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.159104636 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.15774052 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.103269877 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.139824417 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.10111627 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.145940572 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.114793379 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.135287413 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.108939205 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.137219898 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.111731281 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.131025473 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.109606365 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.140818672 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.109506546 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.134058671 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.103128869 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.144466977 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.11807135 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.140204828 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.101913811 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.147586089 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.132813833 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.101891214 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.153472332 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.137613137 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.124700386 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.127469316 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.108720602 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.148462612 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.0993647 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.104407108 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.137783241 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.101137955 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.133159925 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.101778212 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.127665267 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.099281125 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.123705512 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.10216784 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.145870822 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.106041629 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.130097602 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.105723936 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.136340805 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.107046269 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.131005536 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101735278 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.10467474 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.136563119 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.111886816 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.133433955 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.109398696 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.135977448 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101750032 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.143415177 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.102524878 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.131467716 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.103789731 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.137264886 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.104773208 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.139148626 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.106442274 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.132288956 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.101659188 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.137627237 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.106948899 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.645220835 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.10766397 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.127169559 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.101161733 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.14111527 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.108290987 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.134767016 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.101074389 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.103171726 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.130468393 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.090167764 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.130781399 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.086866862 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.134460339 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.098895595 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.135136777 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.103072312 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.107051311 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.147666583 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.142169736 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.10966928 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.131555958 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.102591683 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.135193901 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.098009591 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.134825672 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.117538161 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.150904183 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.098653926 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.129316396 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.115241915 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.132800485 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.098219581 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.122407521 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.110029833 seconds)
  done (took 14.414046905 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141256366 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.185007702 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.133220043 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.118796703 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.169687279 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.178268461 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.108422976 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.140054152 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.104246769 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.119359826 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.138203022 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108414183 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.134314526 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.116054589 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.177882288 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.144117756 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.105119652 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.146770718 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.107603036 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.184534615 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.151979192 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.139686942 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.174638848 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.135167553 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.105241253 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.168504634 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.17743254 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.113953493 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.144854289 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14191493 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.146480134 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.176473722 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.173727486 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.105617277 seconds)
  done (took 5.970264593 seconds)
done (took 57.383012797 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.260853053 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.450048686 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.209953125 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.209656376 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.285980818 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.254118298 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.210929534 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.405093616 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.975124867 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.20262312 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.209026202 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.209837888 seconds)
done (took 28.023272088 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.268116667 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.379730371 seconds)
    (2/2) benchmarking "String"...
    done (took 1.518376899 seconds)
  done (took 4.034289219 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.212791631 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.211605357 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.465924074 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.21117796 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.241867839 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.241019655 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.212051065 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.215420798 seconds)
  done (took 15.934150571 seconds)
done (took 25.586551737 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.290198919 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.407838947 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.494865605 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.243422449 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.212687289 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.227192011 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.215166955 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.264471098 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.230687505 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.227460682 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.213158236 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.482663888 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.238963842 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.61400856 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.225085287 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.239556388 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.231113571 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.464590743 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.238179355 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.263975964 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.200035871 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.232933259 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.242551611 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.246708949 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.222743698 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.214506228 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.264636894 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.224858113 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.436849551 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.228896459 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.269065207 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.216509391 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.252323106 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.215777006 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.344543521 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.256509017 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.423043227 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.2341857 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.205578767 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.225214428 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.414694658 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.653396831 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.226480081 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.221087628 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.216939969 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.28749588 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.20821771 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.974601242 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.231057568 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.220733332 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.238980629 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.608010145 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.229205509 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.228236331 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.228482705 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.456029009 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.228729133 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.270306641 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.250061296 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.216546758 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.21550034 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.215760357 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.244573587 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.221507994 seconds)
  done (took 144.827354936 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.216265177 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.22786418 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.229186786 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.250134184 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.227929553 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.22879567 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.215586233 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.21748408 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.227444053 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.258196105 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.227400954 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.218635713 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.228321619 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.181046389 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.220959093 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.233326756 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.218442671 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.246466488 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.221436527 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.217946446 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.225317509 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.229299515 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.247043459 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.229112985 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.223229914 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.308683056 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.286781174 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.236649505 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.229713915 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.218426661 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.231707902 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.23690633 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.874370293 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.083859913 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.226723193 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.256277508 seconds)
  done (took 80.998245592 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.217891714 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.219790308 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.21832129 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.218780278 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.252329371 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.218857495 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.824167029 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.835397047 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.962810946 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.63909217 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.700337832 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.518789824 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.219815808 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316887944 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.234100847 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.221365198 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.235152473 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.247854057 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.23006022 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.220326267 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.824647038 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.245818569 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.419675065 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.399970563 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.23739515 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.254014939 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.619638944 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.221376519 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.254731707 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.561063691 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.271234173 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.221416901 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.64110065 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.097241933 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.337990901 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.22306849 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.255437553 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.222157818 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.512488692 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.228490249 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.221978817 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.225485409 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.228378464 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.951230966 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.238668689 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.840188357 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.239262145 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.249411591 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.239028532 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.233582985 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.232430433 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.611059234 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.020776361 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.25250958 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.222695894 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.224681537 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.220922664 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.221835583 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.221717658 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.256987769 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.62808752 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.346772443 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.231418461 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.228361066 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.256793888 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.222316067 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.420292467 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221969719 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.701455635 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.311739869 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.339909053 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.829340703 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.233645091 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322070261 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.344525408 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.224541131 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.223559399 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.223120337 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.222722817 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.335279773 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.222148021 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.655917502 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.403011849 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.241436174 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.684069649 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.333999849 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.224319541 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.648942079 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.23534991 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.223893239 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.050443563 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334062575 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.224482133 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.224625266 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.225379645 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.65892837 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.830338312 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.531210107 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.236593904 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.727817588 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.23652341 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.667706327 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.802230307 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.968240576 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.237180518 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.339614821 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.404610472 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.242150859 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.224478961 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.674948998 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.237221395 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.285350455 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.225556396 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.625246158 seconds)
  done (took 371.059507699 seconds)
done (took 598.022757449 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.953934238 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.898232439 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.029465732 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.922973902 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.893589597 seconds)
  done (took 10.846519047 seconds)
done (took 11.995769635 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.420671701 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.42356759 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.299500155 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.424034379 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.259664573 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.441271371 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.411752944 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.258138417 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.335322296 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.313258917 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.333342086 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.28230243 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.26199682 seconds)
  done (took 18.614597065 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.559536459 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.237043594 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.293711659 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.581893163 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.269653021 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.587784424 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.442027321 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.248054628 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.469286421 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.243672122 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.241887048 seconds)
  done (took 18.325586814 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.572763369 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.230007112 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.313133785 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.559609724 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.269774741 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.570777073 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.444876611 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.249237708 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.47743356 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244977027 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.242648224 seconds)
  done (took 18.324502522 seconds)
done (took 56.414279625 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.269446601 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.400288461 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.267439956 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.24124534 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.239724008 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.239239882 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.2415952 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.239438977 seconds)
  done (took 11.290894137 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.235596698 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.236527807 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.235299431 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.236721108 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.239112689 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.238016012 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.235655276 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.238650543 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.236012564 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.239692314 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.238484066 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.236158056 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.237386193 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.235587133 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.239112127 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.238980953 seconds)
  done (took 20.949223545 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.238636093 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.236896282 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.236866611 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.236697317 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.237288338 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.237151784 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.238701592 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.237783894 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.237673233 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.237731675 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.237590565 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.236821808 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.237795227 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.236447529 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.237432688 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.236552382 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.236185537 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.237580897 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.241641619 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.238282425 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.238771858 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.237830204 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.237394507 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.237532041 seconds)
  done (took 30.858809474 seconds)
done (took 64.249569537 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.235660573 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.240669797 seconds)
  done (took 5.62980722 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.301002392 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.300161934 seconds)
  done (took 3.756211914 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.240303212 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.240143379 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.241454208 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.241095442 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.241648358 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.240650336 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.242386541 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.24116101 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.24066514 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.240567229 seconds)
  done (took 13.563913794 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.240705356 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.240701314 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.239114784 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.241465231 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.241549958 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.2383076 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.242562843 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.240935982 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.243455624 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.23842164 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.241525549 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.238085587 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.24132173 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.23899493 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.241344746 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.239154271 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.239931826 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.239083137 seconds)
  done (took 23.481444767 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.254178474 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.262932236 seconds)
  done (took 3.671710992 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.369325509 seconds)
    (2/7) benchmarking "second"...
    done (took 1.281389363 seconds)
    (3/7) benchmarking "month"...
    done (took 1.349337048 seconds)
    (4/7) benchmarking "year"...
    done (took 1.337401256 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.281248716 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.260351075 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.281242629 seconds)
  done (took 10.315669046 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.242944031 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.44208809 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.546965182 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.828854911 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.244785527 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.246338389 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.124903918 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.245925276 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.250067418 seconds)
  done (took 14.328863938 seconds)
done (took 75.902287801 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.235057419 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.267602111 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.241647925 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.259251484 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.534740181 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.269697808 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.245556889 seconds)
done (took 16.210970706 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.230411181 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.246006169 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.229209499 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.2481626 seconds)
  done (took 10.111057358 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.236864068 seconds)
    (2/2) benchmarking "read"...
    done (took 1.55638121 seconds)
  done (took 4.950897784 seconds)
done (took 16.219078343 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244306691 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.245056156 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.243412121 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.241693386 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.243048681 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.245317268 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.242422147 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.242103293 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.24566538 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.245916221 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.245307147 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.244023209 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244801842 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.244507805 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241882821 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242252456 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245305179 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.242617698 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.244161125 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242481204 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244191866 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244263782 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.242653461 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.244127304 seconds)
  done (took 31.008659604 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.246046167 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.242714866 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.246316606 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.245525199 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.243897725 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.245327365 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.246315802 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.243442365 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.246135731 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.246232429 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242840778 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.244016947 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.245109762 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.243620032 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245843988 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.243187968 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.246037203 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243224563 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245632686 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.243849047 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.245654839 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243854619 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.243892151 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248075496 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.244919061 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244129038 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.247550468 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.243959162 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246667122 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.245905108 seconds)
  done (took 38.510164083 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.25245084 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.253466148 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.246657559 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.247466637 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.2463976 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.246449958 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.248147598 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.247910242 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.246292315 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.246635712 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.24668607 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.247782653 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.247077108 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.248275504 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.247547022 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.244865066 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.245879541 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.245569429 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.244780944 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.245714461 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.244391607 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.244710804 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.244690738 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.244514066 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.244819361 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.245618771 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.24481526 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.245682881 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.245450212 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.244802318 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.246193431 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.244782148 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.24551316 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.246156312 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.245598052 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.246639503 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.251462314 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.252156527 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.24593347 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.245544093 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.24420291 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.245499245 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.245147122 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.245455334 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.246706087 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.246037576 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.246079988 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.244940961 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.245894117 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.2469632 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.246782106 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.246973487 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.246853078 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.24574733 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.247108421 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.245744616 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.246042043 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.246010425 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.245906627 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.247172704 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.246723031 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.246834205 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.246793451 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.245318797 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.247555964 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.246446038 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.246777238 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.247626464 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.246357416 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.246845832 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.247789814 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.246294143 seconds)
  done (took 90.909963574 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.247746712 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.245980241 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.244048737 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.243663698 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245748574 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.246717092 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.245719603 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246109303 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244717149 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.247586339 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246814466 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.244861254 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245942977 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.247025892 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247108381 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.244507983 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.247802249 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244177232 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.248000355 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.247532402 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247511975 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.246307932 seconds)
  done (took 28.574572058 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.248101145 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.249814577 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.244742883 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.24828543 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.245507043 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.247674797 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.247543761 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.249530879 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248400795 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245109977 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246811326 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248271242 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.248082081 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246151617 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246334901 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.247076791 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248764258 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.248609807 seconds)
  done (took 23.616385198 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.246809471 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.245673627 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.248180985 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.246101043 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.247372403 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.249111786 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246934595 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.249274066 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.248620544 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.245917409 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.248543925 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251177899 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.249526451 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24860863 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249151264 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.246356385 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.250192896 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247677173 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.249828716 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246943922 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.246727447 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.249729722 seconds)
  done (took 28.620022885 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249020884 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.248929918 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.246868356 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.247804853 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.248039858 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.249860058 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.250236005 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.248508187 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.25219841 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.251043801 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247861199 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.251001192 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.250035471 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.247360527 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.248717475 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248436506 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.250076306 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.249259557 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251288019 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.247747811 seconds)
  done (took 26.146201562 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251478227 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251280492 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.252249112 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251455518 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252281742 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.251444728 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251603881 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.252220716 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.253068085 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.251835193 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.251551888 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.251941132 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25254023 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.252477458 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.25310529 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252481896 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.253258139 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25378082 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.254602777 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25431841 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.25432077 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.254708328 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.254005261 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.253728037 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.252399281 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252953316 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252942516 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.254326799 seconds)
  done (took 36.241988081 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253492768 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.253913786 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.250797565 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.2520287 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.250476079 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.250305013 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.252182937 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.252459225 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.256630591 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.253237659 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.256386814 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.255589548 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.255427106 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.254293551 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.253703943 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.254248719 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253706803 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.25316413 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252045762 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251355475 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.254685761 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254395992 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.253358743 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.252414754 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251066242 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.254667291 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252392333 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.253593609 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255269833 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.251746007 seconds)
  done (took 38.76527214 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.300580815 seconds)
    (2/2) benchmarking "in"...
    done (took 1.29948048 seconds)
  done (took 3.76790102 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.253181678 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255149457 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.254159822 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.25293805 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.252172065 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.25633883 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.256356315 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252203443 seconds)
  done (took 11.199591617 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.253404614 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.257678889 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.256827123 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.256815095 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.257304332 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.255518701 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262608581 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.277771554 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.256050833 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.256886952 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.262766284 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.262454465 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.257769936 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255182818 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.25484344 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25690878 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.257098771 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.257364279 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.257244371 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.258528513 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258144945 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257409394 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256743667 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.256258936 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.257455479 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.266919876 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.259227301 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.260723747 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256956175 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.259580589 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.25496509 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.25449715 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.258316571 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.258882499 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.258039334 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.259390226 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264500235 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.277103397 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.263338694 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257540303 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259944012 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.25404167 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.258926555 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.257838874 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258560455 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.258386704 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.260218359 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.258356183 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.255760393 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.261023654 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.264765208 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256830703 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.256914629 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259670359 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.259927584 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265249019 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.279795402 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.261719081 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.267369552 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.267109138 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.272924483 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.283869357 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258181068 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.26174123 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.268185084 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.280163348 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266972405 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.276711842 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.255948311 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.263043782 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.26338824 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271057477 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.283052344 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.259185187 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259738406 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.259709893 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258744379 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260919825 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.26452561 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.282218073 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.260518422 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259935197 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268087997 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281906411 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.25839809 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.260645136 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.259998181 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.26043246 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.262578701 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269644846 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.281850903 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.260922966 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.260533374 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.259939607 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.260609631 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.260268002 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.259221584 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261051382 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.258686595 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.262531231 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262882767 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262361351 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.26817131 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262338922 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262388953 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.2660191 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.262800789 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259712197 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.265714469 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.263421618 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263801061 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.261075681 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.265468792 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.259202628 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262553714 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.26928016 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.262297758 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.263646006 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.262176307 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.26216056 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271317611 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.287349457 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.265097838 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.26311183 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.268026503 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.274446424 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264507695 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.265144793 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.264613251 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.261533054 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.259207288 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.263760386 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.26676471 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.263848082 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266433478 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261589256 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.261843565 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.265606899 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.262885743 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.264322758 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.263853269 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.263775731 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.264037544 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.264076161 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.264669019 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.265283317 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.270154445 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.262843009 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.264122565 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.262973917 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.261456425 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265835548 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.264805893 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.264870635 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.263905515 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26628909 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.263071299 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.265429201 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266883655 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.265418746 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266926045 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.265840442 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267742649 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.265868374 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.269087239 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.262909559 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.261632871 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.26631294 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.267808312 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.263969945 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.266923345 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.262945104 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.266865101 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.274952375 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.266381004 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.268528619 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.26730138 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265220397 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267704235 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.268224933 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.268984863 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.272690445 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.267264483 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.271956904 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.267241022 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268925772 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.268400418 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.265377828 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.265998554 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.269713942 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.271096592 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.276020908 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278111574 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.291557203 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.268280337 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.272129614 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.268248474 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.270843087 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.270461731 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.268770566 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.269675637 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268664045 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264967156 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268588955 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.268682874 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.268844655 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.266587653 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.269033236 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.270703593 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.268478489 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269637354 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.268169776 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268404295 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.267521281 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270841151 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270015377 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.267045763 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.267148701 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.266633209 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.26882637 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.269445683 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.26929231 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.27429594 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.266981057 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268403645 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.269134439 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.269348575 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.265779225 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.270381962 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.269728547 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.268335651 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.275259214 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.289861188 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.269266705 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276838437 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.288391162 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.268916238 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.272835224 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.271922156 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.268879553 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.272107641 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.278173469 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.271512404 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.271946891 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.269564603 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27114511 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.273304501 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.276388447 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.269660876 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.27141612 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.271186102 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.270740414 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.269933353 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.272816652 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.270896435 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.270963388 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.271436411 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273081516 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.27294606 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270873926 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.272513247 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.274106046 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.272921172 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276736353 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.281404153 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.275691979 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.270656064 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.272535632 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.273485698 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.278396322 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.272369581 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.272553859 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.27186889 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.283994419 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.299276304 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279238536 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.292253106 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.275330192 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277005441 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.293638181 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.276285774 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.272290738 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272127862 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.270674841 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.272511958 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.271535627 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272871833 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.274285964 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273798811 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.274194696 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.279685039 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.274615487 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.270998769 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.273402794 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.27527434 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.275188774 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.273234587 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.275082126 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.276796207 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272318083 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.271807405 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.274173876 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.280289194 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.294011126 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.273669997 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.274956026 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.273115949 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.273044516 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.275117751 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.276218763 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.276796256 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.284095965 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.27640685 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.283042937 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.276659182 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.282811784 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.276701234 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.279083829 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.285298602 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.274789462 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.273646089 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.274925436 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.27599443 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282162158 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.297382081 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.276974506 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.282162097 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276453133 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.278304358 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.277605485 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.277471317 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.277891021 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.275972087 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.283329295 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.299292592 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.279400367 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278174708 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.275034107 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.276513873 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.277797652 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.275722833 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279223805 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.276630062 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.276431783 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.275767979 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.27623679 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.278181642 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.277914365 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.279229235 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.2761497 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.279020837 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283101271 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.299396945 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282255903 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.279268862 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.282776171 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278255165 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.284934932 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.298615286 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.276427212 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.278813072 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.279821639 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.277656356 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.277908106 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.277411779 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.278709082 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.278818484 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.283939178 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.280465419 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.280125556 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.281994115 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.279574111 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.27944901 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28954533 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.303853683 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.282437206 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.284215308 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.277858801 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.279913536 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.285191303 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.280132589 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.277218563 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.282713729 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28952315 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.289396336 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.280683497 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.279863565 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.27887264 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280236666 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.281842858 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.282523843 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.280784408 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.281828095 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.280147797 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.281521813 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283651993 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.282103039 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.279810969 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281203787 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.282513353 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.289368799 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.281581039 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.281066386 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282287386 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.282535615 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.281228371 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.279417328 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.282399135 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280724921 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282994076 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.283317476 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.288335426 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.288401674 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.283779372 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.280246652 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.283453077 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.281052589 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.281140185 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283524681 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.281907798 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283365834 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.282231418 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.281738337 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.282406632 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.280976634 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.283669265 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.281710661 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.284051067 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286247592 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.289610567 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.283503638 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.281577915 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.284741773 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.283913754 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.282289667 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.282701281 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.28979787 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286670039 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.295008435 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.291847595 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.286651748 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.283308528 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285924221 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.291330167 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.281640361 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.283279474 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.28411865 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.283882245 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.285592727 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.287338719 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.284369179 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.289519148 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.283706552 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.283466997 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.292486143 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.30734429 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.284764564 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.284402059 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.287382913 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.282977638 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.283769626 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.285584518 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.283114977 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290942328 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.304340049 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.285600427 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284464542 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.283381116 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.286018476 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290206247 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287628328 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.285917217 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.284828589 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.285124419 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285271659 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.287328599 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.285512601 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.284193833 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.284550253 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.290665192 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.293537072 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.284492571 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286054564 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.285937986 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.285506543 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.286965902 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287551294 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.285636602 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.284940616 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.286721969 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.287640738 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.287602719 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.287899081 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.285566815 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.287975661 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.292282192 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.293102687 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.294457529 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.30097267 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.300135149 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.29039599 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.290187211 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.290571918 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.294772371 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289336477 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.288976393 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288958485 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.288027609 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.288708149 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.288163666 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.289980236 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.290202949 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.303026745 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.312576348 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.289157001 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.287969984 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289495734 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.289499545 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.287390696 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.289557813 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.289833248 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.291006932 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.298291663 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.289763476 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.294289428 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.309005275 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.290834719 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.294365921 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.291017922 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.295538611 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.289159689 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.288856719 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.289972527 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.293386355 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.305323931 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28985054 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.299298529 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.318273307 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.309765462 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.288867207 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.290389372 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.28935845 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.291211877 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.291565772 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.291199549 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.290703617 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291444132 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.290467705 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.290779207 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.293415776 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.289609232 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.295148444 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.290684607 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.289602725 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.292076099 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.289798611 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.292532481 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.291690769 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.290692403 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.293341343 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.292809249 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.292221369 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302797354 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.317659267 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.2940272 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.291886943 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.290798379 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.294077268 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.294509183 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.302718346 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.300224339 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.29290848 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.293237187 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.292632552 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.294123459 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.292873287 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.292646634 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.291178202 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.291354507 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.293079516 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.305017201 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.319422116 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.296352933 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.291289812 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.294694508 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.29341256 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.293064782 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.293449745 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.294484293 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.293223092 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.296122136 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.298202572 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.295192937 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.295267911 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.295849931 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.302867908 seconds)
  done (took 762.227610576 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.292659536 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294041482 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291791135 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.29200486 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29191794 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293010672 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293365645 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.293246137 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.292747945 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.294061627 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.293908697 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290979701 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.292900481 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.293449619 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292743094 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.291919275 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294216116 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.293082372 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.293740782 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295904208 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.295786991 seconds)
  done (took 28.358276643 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.296885647 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.293658317 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.293448425 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.295851821 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294060953 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.297582043 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.29457653 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296914705 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.294488639 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292830516 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.296019117 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297220502 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.295213956 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.294439653 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293592882 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297552949 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.298526733 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29575958 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.29638873 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.294213935 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.2972398 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.296362626 seconds)
  done (took 29.706369323 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.298215365 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.298317206 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.295056414 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.297177217 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.297912822 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.29711244 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.298336409 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.299702618 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.298202696 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.297932424 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.297429506 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.297742883 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.304178735 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.303437681 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.298778965 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.300363163 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.300442281 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.299175965 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.297853107 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.296506909 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.299128023 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.316186625 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.296927868 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.296762164 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.299501266 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.299845757 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.29820825 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.299198652 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.299511741 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.303945621 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.29996247 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.296182024 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.300215469 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.296622001 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.298125533 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.303621171 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.299731124 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.295974454 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.299406565 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.309897974 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.321322975 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.300711029 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.304362171 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.320568177 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.299889247 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.301803803 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.308198932 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.297989105 seconds)
  done (took 63.643466034 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.300092548 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.299743671 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.299257763 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.300075868 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.302148017 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.301073645 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.301845971 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.302702017 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.299156868 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.298557945 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.30109425 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.299262323 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.29937299 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.301210907 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.300288615 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.302240405 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.299864174 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.299366115 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.298836347 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.299264973 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.299194978 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.30275335 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.30278363 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.30014296 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.300727967 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.299581397 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.301011167 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.302071931 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.301143724 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.299043196 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.304374135 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.302286583 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.303803932 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.302252821 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.299307091 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.303637776 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.303726184 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.30088752 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.303406804 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.301013083 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.303837994 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.304290582 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.303355532 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.304002809 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.302363187 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.302036229 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.301501481 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.302277731 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.302034645 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.304386427 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.303673443 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.301343159 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.30449471 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.303218223 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.303726777 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.303930544 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.301846983 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.302253104 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.305125877 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.302070272 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.301476721 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.305835809 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.302761365 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.304688262 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.306038541 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.302726656 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.302260959 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.307049584 seconds)
  done (took 89.743583875 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306642709 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.304749105 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.305748466 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305260295 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.306369933 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.305124843 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.306125081 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.306063792 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.306233897 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.306042981 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.306004846 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.3062031 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.306351749 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.308338704 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.306580392 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.306065839 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306807822 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306975012 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.307010043 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.307845357 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.307070756 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.307216895 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.307813473 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.30753375 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.306796492 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.306958553 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.307096059 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.307592935 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308394282 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.30731739 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.306986281 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.308012273 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.30774773 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.307436974 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.308597028 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.309209351 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308859764 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307858954 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.309090996 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.305432637 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.307186996 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.308268718 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.306642027 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.308808247 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.309567861 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.308470511 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.309057753 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.308715132 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.31038506 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.307655357 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.309452032 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.308710729 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.309284863 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.309637574 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.310550035 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.311620473 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.308442846 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.307973533 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308021349 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.309140194 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.308711366 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.3116525 seconds)
  done (took 82.290949817 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.310349736 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.309329153 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.307609264 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.307287938 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.310677541 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.307377502 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.308187756 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.309541779 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.310392029 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.310350499 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310504642 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306817739 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307563443 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310671012 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.307669272 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309163551 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308633308 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.309316834 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311708345 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.308576844 seconds)
  done (took 27.396942563 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.308511413 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.311661277 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.308867186 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.309108959 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.31230335 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.309017437 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.311833899 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312626754 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308502423 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312347514 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.311483385 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.309378782 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308960048 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.307036271 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.311841863 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.309960028 seconds)
  done (took 22.179750887 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.309540489 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.310370227 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.312652301 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.312201627 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.309384133 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.308808968 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.312350529 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.311025264 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.309990583 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.311647681 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.311140645 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.313329172 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.311510608 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.311066263 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.31019491 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.312514947 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.310900875 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.311941598 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.312305656 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.312553171 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.313385033 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.310058382 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.312364069 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.314179562 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.312606757 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.312286877 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.311250966 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.310374617 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.313086205 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.313928184 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.310810301 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.312097883 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.310347756 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.31187512 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.312018284 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.312170629 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.315077786 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.314121876 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.315269864 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.313882212 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.315851762 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.312155334 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.31609312 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.314685497 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.309842226 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.317222356 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.311945449 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.313465564 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.311674531 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.312693289 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.315590078 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.313693 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.314685983 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.316513072 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.31682073 seconds)
  done (took 73.406217937 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.316230236 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.314703978 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.312422894 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.314863493 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.314890699 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.311227782 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.315857977 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.314516863 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.314832107 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.313949789 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.314371345 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.316688589 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.314462333 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.316524179 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.314041359 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.317341706 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.315346845 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.312246683 seconds)
  done (took 24.88185035 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.314271044 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.312616821 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.316599748 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.313055434 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.314678231 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.317946713 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.314300589 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.315400266 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317432321 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.315296448 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316628623 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.316538026 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316679307 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.318306233 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.31457929 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31542468 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.318501566 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.317460508 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.313022176 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.314803302 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.317708307 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.317581379 seconds)
  done (took 30.169548874 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.315835177 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.314733505 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.315143956 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.332874677 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.337160947 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.31674562 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.315354687 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.315625562 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.339073866 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.373853898 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.367052407 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.332684169 seconds)
  done (took 17.19636885 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319156099 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319124786 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315631442 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320392571 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31960302 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314002741 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317036989 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316450232 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319547579 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318089853 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314471661 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317861487 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322524355 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316226204 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319483368 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319719847 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317057075 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316905636 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31491605 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318544386 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317204505 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319945504 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318623792 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319351308 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319654255 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32165845 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326796802 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316683391 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318053817 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320405945 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32263936 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317747546 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318807728 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320619938 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320722479 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322254941 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318346676 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321093892 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323293891 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317654926 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.321016515 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320822042 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321336626 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318559688 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322446236 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319499305 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320049645 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318136338 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319023958 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323387437 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323701815 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319861532 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322684583 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322445239 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325700351 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324022257 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325447853 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323467466 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325610658 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323535482 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322604027 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325291436 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323807364 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323135976 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325205446 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324247074 seconds)
  done (took 88.366805405 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324335952 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.322225484 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321930531 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321214236 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32187055 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323306015 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322292998 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324646707 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321550296 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323603899 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324527411 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325229542 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327791571 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324637048 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323340186 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323441731 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324287604 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325258549 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321913912 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325254205 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323476994 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321880911 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322214928 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322436162 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326175481 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326123762 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320657716 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322914309 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325014254 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326788254 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322498394 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32146701 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32559871 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.325319557 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321322195 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322684602 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323889741 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324824366 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322732402 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327432766 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324492263 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324716022 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327705743 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321792478 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323650294 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32463658 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321334346 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32472803 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324708582 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324565368 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323168231 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323471453 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324230315 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32517502 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324645174 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327080658 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32542781 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323413295 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32336591 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327048685 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323845209 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322950787 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327964127 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322033064 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323638897 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323969964 seconds)
  done (took 88.609846159 seconds)
done (took 1786.69455985 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.488415827 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.442132002 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.324207937 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.333243612 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.32326421 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.345471091 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.337526431 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.323778711 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.324138712 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.324022257 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.323977547 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.512707962 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.316998219 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.324719229 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.323327396 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.417993198 seconds)
  done (took 27.014266012 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.356808345 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.334872657 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.452790962 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.355912267 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.354206585 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.527320525 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.393488635 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.329147088 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.519895953 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.382562291 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.325038831 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.353406049 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.328407603 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.324561173 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.349078817 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.528713574 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.600431489 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.328466777 seconds)
  done (took 29.37619263 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.820227673 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.3395324 seconds)
  done (took 5.392164622 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.348080825 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.329392099 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.330386567 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.328386875 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.32037733 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.33762683 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.329530017 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.329074335 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.333090882 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.465338263 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.332705855 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.341175899 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.352283131 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.333445646 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.330387952 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.3709437 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.48698038 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.334157625 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.329594529 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.336900937 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.332255766 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.423701419 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.374595166 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.329868471 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.465358586 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.335188033 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.332673862 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.337342012 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.468154725 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.333747219 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.330723566 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.332088151 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.331915056 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.281936614 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.872466044 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.32332485 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.376708874 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.340013368 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.330732919 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.493712609 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.333942365 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.337240848 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.324425551 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.852984424 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.484464143 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.456131037 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.344961746 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.340593292 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.334479657 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.396458 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.334252624 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.334762228 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.378520233 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.143473738 seconds)
  done (took 85.385462442 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.345063997 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.326376684 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.505981183 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.353265085 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.328188764 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.325516414 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.326616784 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.639750272 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.341692024 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.327813762 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.616164752 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.905964675 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.348159481 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.360359585 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.166971404 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.380702086 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.343791054 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.326851578 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.328671455 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.332149221 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898022741 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.337437438 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.328193287 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.488067892 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.368698669 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.852153481 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.328193446 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.331039582 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.346803438 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.327679345 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.860213681 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.354386082 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.376804726 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.327237402 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.602566425 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.73206249 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.695196476 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.336690417 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.368205758 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.330083291 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.33872633 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.851798112 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.710895218 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.32899072 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.346044614 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.854801941 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.327355873 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.340862006 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.328860765 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.578076853 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.328346253 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.339623494 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.326480813 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.337705936 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.328674517 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.406384523 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.391412268 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.853122369 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.329224024 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.329577056 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.391079927 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.329206914 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.351226024 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.333553282 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.335158973 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.715728403 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.456553297 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.333542887 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.713169621 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.855671353 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.348127462 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.947718575 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.348356994 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.329178535 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.417443611 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.330291911 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.329738736 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.870430741 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.34876226 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.329196831 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.697292952 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.332648538 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.622313275 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.350072154 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.331495636 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.907339705 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.340656088 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.337272071 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.3316833 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.331832628 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.332460051 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.333896438 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.627461437 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.401538864 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.330339555 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.333218953 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.347532931 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.332366312 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.332781027 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.33604646 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.929174489 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.355751308 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.332178142 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.333845073 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.331448129 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.340516147 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.332634867 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.333211378 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.599236313 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.332485824 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.334783257 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.333009401 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.331503478 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.352570991 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.477534185 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.337059391 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.6692993 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.335233915 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.343658049 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.335227286 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.332837263 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.380695832 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.338240038 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.340341329 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.248688502 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.629713714 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.354688676 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.334913101 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.334359181 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.334326534 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.333732339 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.357239073 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.355325329 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.334721545 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.108873102 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.358995716 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.341957484 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.334282434 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.346619293 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.335103608 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.361594048 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.334969903 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.631732728 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.614097004 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.463667382 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.33928283 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.33278816 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.128222074 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.369280382 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.517192845 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.355529439 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.33424629 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.578384424 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.55059603 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.335297223 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.346684689 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.337717186 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.595996225 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.335732462 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.648057254 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.892590699 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.355710571 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.342904115 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.112654009 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.085723542 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.339501914 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.33681434 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.622897342 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.357162018 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.334905493 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.335097629 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.337003922 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.356011718 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.360178771 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.352391051 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.336817119 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.335518408 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.552208558 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.52877359 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.355557667 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.340384853 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.859503354 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.423460501 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.33700828 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.337528176 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.338458726 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.337243742 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.428478536 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.338974761 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.350216345 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.33912342 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.34097788 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.925669314 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.336817229 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.339835705 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.529617144 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.044868117 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.358228486 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.35451954 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.338856226 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.212163218 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.88548412 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.370833608 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.678950541 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.338437 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.379134464 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.339809671 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.443199068 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.888478419 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.340804287 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.33904878 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.006426989 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.356900946 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.008957609 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.339931678 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.33946519 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.963713543 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.35764096 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.340925197 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.339836062 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.359668453 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.63360454 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.341380486 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.376531136 seconds)
  done (took 499.473947668 seconds)
done (took 647.873379009 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.339217247 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.347273362 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.332802845 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.347068425 seconds)
  done (took 10.615316452 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.350903957 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.346767463 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.349930872 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.346566309 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.351037221 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.346981937 seconds)
  done (took 9.345149605 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.342029977 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.350618195 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.347047632 seconds)
  done (took 8.290883875 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.575908385 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.374931239 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.704585176 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.379236324 seconds)
  done (took 9.287831767 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.350605404 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.349676138 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.35011439 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.351594509 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.351840068 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.351345097 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.351484444 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.350645603 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.351569481 seconds)
  done (took 13.410092304 seconds)
done (took 52.200332152 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.346613914 seconds)
    (2/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.36060858 seconds)
    (3/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.328677769 seconds)
    (4/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.513077155 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.310370777 seconds)
    (6/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.329386345 seconds)
    (7/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.372616527 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.614811023 seconds)
    (9/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.454720714 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.385516959 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.371069863 seconds)
    (12/286) benchmarking ("sort", Float32, false)...
    done (took 2.343173678 seconds)
    (13/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.495092688 seconds)
    (14/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.348039367 seconds)
    (15/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.344720595 seconds)
    (16/286) benchmarking ("sort", BigInt, true)...
    done (took 2.341999995 seconds)
    (17/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.365554242 seconds)
    (18/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.476344569 seconds)
    (19/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.141816992 seconds)
    (20/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.709003665 seconds)
    (21/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.380796728 seconds)
    (22/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.35220055 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.685756254 seconds)
    (24/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.35863253 seconds)
    (25/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.358012387 seconds)
    (26/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.37302405 seconds)
    (27/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.4059443 seconds)
    (28/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.329306643 seconds)
    (29/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.364996088 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 2.343506901 seconds)
    (31/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.63304158 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.496398494 seconds)
    (33/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.33541751 seconds)
    (34/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.353313064 seconds)
    (35/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.337069275 seconds)
    (36/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.35595294 seconds)
    (37/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.336702704 seconds)
    (38/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.366429953 seconds)
    (39/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.500499047 seconds)
    (40/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.729684766 seconds)
    (41/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.371711052 seconds)
    (42/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.20326305 seconds)
    (43/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.351939282 seconds)
    (44/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.350225861 seconds)
    (45/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.411279633 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.457723231 seconds)
    (47/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.336542184 seconds)
    (48/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.882790045 seconds)
    (49/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.616701117 seconds)
    (50/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.711620724 seconds)
    (51/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.418166534 seconds)
    (52/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.20169373 seconds)
    (53/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.35330622 seconds)
    (54/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.334133 seconds)
    (55/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.379604805 seconds)
    (56/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.448675152 seconds)
    (57/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.332896934 seconds)
    (58/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.332440388 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.406462794 seconds)
    (60/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.417281571 seconds)
    (61/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.367709646 seconds)
    (62/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.333994726 seconds)
    (63/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.299671936 seconds)
    (64/286) benchmarking ("sort", Float64, false)...
    done (took 2.367338216 seconds)
    (65/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.331954498 seconds)
    (66/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.369068869 seconds)
    (67/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.381736378 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.689682182 seconds)
    (69/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.361755888 seconds)
    (70/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.130169499 seconds)
    (71/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.368420503 seconds)
    (72/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.173784675 seconds)
    (73/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.480930966 seconds)
    (74/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.500476962 seconds)
    (75/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.257079774 seconds)
    (76/286) benchmarking ("sort", Int64, false)...
    done (took 2.346230974 seconds)
    (77/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.372920775 seconds)
    (78/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.335880551 seconds)
    (79/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.466543465 seconds)
    (80/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.206409876 seconds)
    (81/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.343296548 seconds)
    (82/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.026027802 seconds)
    (83/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.911314025 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.016814268 seconds)
    (85/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.34100059 seconds)
    (86/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.416352308 seconds)
    (87/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.346802215 seconds)
    (88/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.366407419 seconds)
    (89/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.466120813 seconds)
    (90/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.38220695 seconds)
    (91/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.340160282 seconds)
    (92/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.343440535 seconds)
    (93/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.340289189 seconds)
    (94/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.394737912 seconds)
    (95/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.365138309 seconds)
    (96/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.34847774 seconds)
    (97/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.872616809 seconds)
    (98/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.344282218 seconds)
    (99/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.201569246 seconds)
    (100/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.360816658 seconds)
    (101/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.338105952 seconds)
    (102/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.339828558 seconds)
    (103/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.436831071 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.56540833 seconds)
    (105/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.360652896 seconds)
    (106/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.346874685 seconds)
    (107/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.449422567 seconds)
    (108/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.336326546 seconds)
    (109/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.335136526 seconds)
    (110/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.433612092 seconds)
    (111/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.336393896 seconds)
    (112/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.244841277 seconds)
    (113/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.337240195 seconds)
    (114/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.36527233 seconds)
    (115/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.434306824 seconds)
    (116/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.336380003 seconds)
    (117/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.360165837 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 1.869652328 seconds)
    (119/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.374055872 seconds)
    (120/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.335737535 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.6681711 seconds)
    (122/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.341299483 seconds)
    (123/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.361114783 seconds)
    (124/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.383101281 seconds)
    (125/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.33858312 seconds)
    (126/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.336936539 seconds)
    (127/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.342086616 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.173551223 seconds)
    (129/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.61188969 seconds)
    (130/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.362934498 seconds)
    (131/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.545940144 seconds)
    (132/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.336965858 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.456885761 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.32243805 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.57319519 seconds)
    (136/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.400984606 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.023627367 seconds)
    (138/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.372763011 seconds)
    (139/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.342957685 seconds)
    (140/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.382606144 seconds)
    (141/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.341587304 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.190413952 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.380010378 seconds)
    (144/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.451045186 seconds)
    (145/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.53616879 seconds)
    (146/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.355485541 seconds)
    (147/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.376139171 seconds)
    (148/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.354246574 seconds)
    (149/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.021745373 seconds)
    (150/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.350547813 seconds)
    (151/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.352308834 seconds)
    (152/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.225141204 seconds)
    (153/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.36023996 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.378232612 seconds)
    (155/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.355959515 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.266135941 seconds)
    (157/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.747420804 seconds)
    (158/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.36163555 seconds)
    (159/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.372890592 seconds)
    (160/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.35132306 seconds)
    (161/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.625781721 seconds)
    (162/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.466800149 seconds)
    (163/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.440764273 seconds)
    (164/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.380881941 seconds)
    (165/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.338582839 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.780143856 seconds)
    (167/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.461283143 seconds)
    (168/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.339179589 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.985238278 seconds)
    (170/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.388177081 seconds)
    (171/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.362790597 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.774821345 seconds)
    (173/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.407162419 seconds)
    (174/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.897480845 seconds)
    (175/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.376928729 seconds)
    (176/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.347897782 seconds)
    (177/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.403368009 seconds)
    (178/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.341278036 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.383036121 seconds)
    (180/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.340576484 seconds)
    (181/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.024266845 seconds)
    (182/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.361228361 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.352860529 seconds)
    (184/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.402723484 seconds)
    (185/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.343408719 seconds)
    (186/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.730015368 seconds)
    (187/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.373514697 seconds)
    (188/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.348177624 seconds)
    (189/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.340222534 seconds)
    (190/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.271179515 seconds)
    (191/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.334592196 seconds)
    (192/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.471125959 seconds)
    (193/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.02186675 seconds)
    (194/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.347924425 seconds)
    (195/286) benchmarking ("sort", Int8, false)...
    done (took 2.360108775 seconds)
    (196/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.351595251 seconds)
    (197/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.346770514 seconds)
    (198/286) benchmarking ("sort", Bool, true)...
    done (took 2.358552351 seconds)
    (199/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.417789006 seconds)
    (200/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.341405742 seconds)
    (201/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.282241664 seconds)
    (202/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.351187301 seconds)
    (203/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.345658188 seconds)
    (204/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.482204936 seconds)
    (205/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.359064254 seconds)
    (206/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.365128055 seconds)
    (207/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.352002066 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.362055461 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.563268944 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.76983251 seconds)
    (211/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.510628631 seconds)
    (212/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.368145348 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.271396128 seconds)
    (214/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.457781532 seconds)
    (215/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.89485969 seconds)
    (216/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.344846708 seconds)
    (217/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.352965843 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.360062869 seconds)
    (219/286) benchmarking ("sort", BigInt, false)...
    done (took 2.355253566 seconds)
    (220/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.286471921 seconds)
    (221/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.368270765 seconds)
    (222/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.35595963 seconds)
    (223/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.388113255 seconds)
    (224/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.342810852 seconds)
    (225/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.362326007 seconds)
    (226/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.482877729 seconds)
    (227/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.364374402 seconds)
    (228/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.464359975 seconds)
    (229/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.46202983 seconds)
    (230/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.370250329 seconds)
    (231/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.401735894 seconds)
    (232/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.346301334 seconds)
    (233/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.45028388 seconds)
    (234/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.345934045 seconds)
    (235/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.391790807 seconds)
    (236/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.356679384 seconds)
    (237/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.363844761 seconds)
    (238/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.396215617 seconds)
    (239/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.142277561 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.794941879 seconds)
    (241/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.381290337 seconds)
    (242/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.469179088 seconds)
    (243/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.38321844 seconds)
    (244/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.347008388 seconds)
    (245/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.243287871 seconds)
    (246/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.351844087 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.360617789 seconds)
    (248/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.465262718 seconds)
    (249/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.588628558 seconds)
    (250/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.515830606 seconds)
    (251/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.728229158 seconds)
    (252/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.393491468 seconds)
    (253/286) benchmarking ("sort", Float64, true)...
    done (took 2.357836357 seconds)
    (254/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.20517834 seconds)
    (255/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.746672882 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.358933144 seconds)
    (257/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.414238339 seconds)
    (258/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.446262171 seconds)
    (259/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.344012243 seconds)
    (260/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.365086802 seconds)
    (261/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.394177487 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.448996281 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.443521658 seconds)
    (264/286) benchmarking ("sort", Int8, true)...
    done (took 2.358225394 seconds)
    (265/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.359531166 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.500914329 seconds)
    (267/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.358688799 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.365513461 seconds)
    (269/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.869792437 seconds)
    (270/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.432268835 seconds)
    (271/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.371819242 seconds)
    (272/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.443999195 seconds)
    (273/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.615186765 seconds)
    (274/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.361297485 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.412642435 seconds)
    (276/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.346970973 seconds)
    (277/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.218210513 seconds)
    (278/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.412420115 seconds)
    (279/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.388228467 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.385665307 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.359537115 seconds)
    (282/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.370847332 seconds)
    (283/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.395351362 seconds)
    (284/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.886548782 seconds)
    (285/286) benchmarking ("sort", Float32, true)...
    done (took 2.365714287 seconds)
    (286/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.421959469 seconds)
  done (took 575.242026951 seconds)
done (took 576.495793097 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.395748724 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.40526459 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.372369434 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.394338948 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.483902051 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.548728956 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.38261725 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.374658216 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.419392577 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.4216073 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.371391169 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.547519948 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.374556525 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.371840978 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.373091852 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.40098868 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.371048108 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.37928574 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.390550389 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.384220964 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.388812707 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.372196718 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.422849383 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.549654936 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.378770341 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.376790411 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.377891334 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.394252153 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.485723592 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.378185381 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.376670514 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.385470545 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.372044659 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.380464646 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.370008854 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.392528169 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.386371049 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.386294502 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.378598184 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.40583283 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.36370103 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.397244801 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.376551971 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.376380354 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.376682984 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.380035196 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.375240375 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.37873895 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.404757812 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.404979132 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.364022471 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.397317241 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.380255121 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.377742354 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.389329939 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.37582952 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.380204675 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.408582219 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.395193059 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.408119834 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.367820286 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.388430509 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.378040636 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.391898534 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.384382326 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.36581976 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.378018749 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.383132038 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.378506056 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.385813859 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.37424996 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.384239224 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.379472924 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.392520998 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.409656401 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.379559078 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.378046942 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.377042793 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.384060996 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.375399999 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.386896897 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.406762831 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.382899971 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.379909458 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.406896184 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.555243168 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.388855571 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.378386743 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.389122637 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.397393022 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.385486277 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.388055735 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.383134976 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.375320134 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.388477685 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.381864078 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.382342188 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.38193921 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.38334295 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.389971561 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.368275227 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.41229234 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.375789953 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.376430298 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.377111447 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.3925754 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.384401591 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.384165413 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.403024477 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.427678325 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.381583803 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.366959234 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.391650893 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.413467528 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.389650048 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.384302879 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.374862501 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.370998122 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.375414316 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.400794494 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.382643383 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.37931869 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.412842461 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.383314271 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.378464034 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.385013262 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.38213762 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.409498344 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.500192444 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.391874984 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.411768572 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.379910435 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.384436249 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.411481846 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.414241631 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.412154555 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.384349257 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.414746713 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.397006757 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.380493862 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.393660213 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.392707729 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.383937655 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.387899196 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.375991745 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.416629002 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.410982726 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.412695009 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.403418738 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.502096782 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.381138482 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.372135209 seconds)
done (took 229.238885384 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.441060192 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.377670786 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.488714817 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.380757581 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.482035597 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.481566547 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.378970991 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.378256279 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.377390286 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.760707265 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.378652818 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.378640139 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.379434837 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.379009572 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.46288882 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.382239889 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.37936442 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.722361182 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.381243891 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.451243053 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.380011056 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.378428846 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.382503119 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.76358354 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.378044594 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.374748467 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.449338627 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.381537297 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.728031639 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.373994473 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.376877301 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.726652832 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.47183374 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.398049626 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.392076372 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.389641003 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.482926897 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.401729112 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.461727034 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.46259515 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.490407997 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.422083857 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.376585965 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.377743859 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.384644275 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.382675853 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.380157253 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.409889305 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.380191983 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.380102382 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.7249893 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.393805695 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.390578219 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.381363367 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.383373091 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.405080711 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.381686689 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.383658027 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.473176355 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.38401157 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.444930672 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.765900422 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.765276822 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.385716429 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.379872696 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.381672698 seconds)
  done (took 107.685678218 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.451660648 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.459001474 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.502899824 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.400312193 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.43404414 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.505746754 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.400769716 seconds)
  done (took 11.436016975 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.390680351 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.384685897 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.433385324 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.433667514 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.385700532 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.596701719 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.38593735 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.393544394 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.381684766 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.459119286 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.383695186 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.38634744 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.392903317 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.380573743 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.43127974 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.395432233 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.499112397 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.384530372 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.385741223 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.538167464 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.384376487 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.392264436 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.461866323 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.396097778 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.384700321 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.391051546 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.340436516 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387106806 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.38410021 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.384954583 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.38404915 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.492418064 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.388571451 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.384987848 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.385172239 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.543359454 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.386888448 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.385422728 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.387113978 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.386846766 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.387540326 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.388785441 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.386346941 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.384882793 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.389200907 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.409947767 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.389466139 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.389050778 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.388208608 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.389613322 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.463716302 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.38951295 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.38593003 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.385403745 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.464614487 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.396729645 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.389443779 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.386919793 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.389564183 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.386795025 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.542282921 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.43398429 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.388925989 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.433085707 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.389920204 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.38975779 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.390166409 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.391258662 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.479955599 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.387276694 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.435931627 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.386160761 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.610976709 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.413263807 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.392095369 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.391441578 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.391033743 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.389520231 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.384956442 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.39493166 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.388521479 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.390495238 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.395208693 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.388261261 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.38704011 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.573477559 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.544202696 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.389173403 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.401316843 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.395198923 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.388994567 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.465836546 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.390120158 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.388871222 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.441656702 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.505173876 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.466489886 seconds)
  done (took 143.398733241 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.394078062 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.396675425 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.392812072 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.412157514 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.391109195 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.388971885 seconds)
  done (took 9.66448872 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.391447353 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.393055462 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.391230387 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.393202159 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.391281384 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.391475793 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.39214091 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.393415141 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.395390618 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.393164173 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.392266393 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.394804958 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.393491623 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.392866585 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.39275198 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.393406068 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.392835394 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.391414791 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.393409481 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.392282568 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.391293458 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.392657697 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.394659434 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.392014293 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.39700569 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.394359516 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.400252257 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.392622471 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.393606659 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.401270931 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.415214772 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.39436562 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.396642077 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.398615113 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.397255557 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.394353117 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.399775273 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.394950194 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.391100889 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.39363461 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.396934736 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.395776749 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.396411459 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.395259977 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.39585451 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.399858414 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.399938185 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.403486002 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.396540514 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.395353143 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.396556493 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.397297415 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.394683431 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.398011537 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.397610758 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.420407167 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.402359971 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.39616466 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.396240143 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.396513739 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.399130266 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.396113512 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.398792461 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.401704352 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.394138181 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.397515282 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.398784447 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.401959647 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.396981846 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.397600567 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.397333868 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.396011474 seconds)
  done (took 102.820400771 seconds)
done (took 376.283463934 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.4086028 seconds)
  done (took 3.703058563 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.506404778 seconds)
  done (took 3.801862197 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.571292046 seconds)
  done (took 25.871779653 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.497486633 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.417725231 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.414435204 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.392141156 seconds)
  done (took 11.017742344 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.727460372 seconds)
  done (took 4.022014093 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.396693412 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.395498937 seconds)
  done (took 6.088996522 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.742406015 seconds)
  done (took 4.036643152 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.819703978 seconds)
  done (took 4.119604855 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.412091399 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.406671789 seconds)
  done (took 6.122349021 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.392784787 seconds)
  done (took 3.68802539 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.163311282 seconds)
  done (took 17.459023875 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.394856016 seconds)
  done (took 3.693520544 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.441050043 seconds)
  done (took 3.735506865 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.464256339 seconds)
  done (took 6.759440316 seconds)
done (took 105.413380245 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.390479259 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.398486184 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.398893297 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.397462439 seconds)
  done (took 10.881176732 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.434518799 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.433900529 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.435129963 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.443054096 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.43672129 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.433460316 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.424462074 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.425410364 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.444475587 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.437879856 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.435856958 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.437457059 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.433858873 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.42543635 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.434310837 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.435601927 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.445792907 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.435285561 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.425543885 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.437322832 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.400940186 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.444196484 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.436210848 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.401179571 seconds)
  done (took 35.676276979 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.918085005 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.471597207 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.553319493 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.453949142 seconds)
  done (took 7.694226714 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.451962415 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.456101975 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.468841058 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.508713731 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.533079315 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.465442267 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.428497048 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.422805521 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.408953319 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.455973087 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.530014951 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.470919408 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.542685342 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.401498675 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.592989086 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.401748191 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.401887043 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.454473011 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.504443803 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.538022682 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.40279249 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.454122707 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.46185769 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.472701202 seconds)
  done (took 36.529062624 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.404231555 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.421977036 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.401332776 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.400481656 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.40972999 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.402277512 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.40235597 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.403994718 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.40215226 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.949388156 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.409043063 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.416596964 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.929356195 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.410450254 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.408184052 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.405070966 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.936860981 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.94242287 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.412401213 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.409356768 seconds)
  done (took 31.577382512 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.395416412 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.396183307 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.748508339 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.653224269 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.396515946 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.40166383 seconds)
  done (took 14.291213895 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.483306246 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.663784074 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.40831656 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.80552069 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.906623936 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.411564719 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.405600549 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.683305796 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.068369401 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.043190917 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.476381716 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.479025427 seconds)
  done (took 21.137291347 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.404248577 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.403036713 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.404461609 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.419781817 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.464530114 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.425010026 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.409545891 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.395660633 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.472640727 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.488591599 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.425879051 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.466421632 seconds)
  done (took 22.481517259 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486294356 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39957779 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.39862295 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502856749 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398994279 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613657428 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.508351036 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.159144777 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.427296561 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675315845 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400127154 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498228326 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.658670736 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40115599 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409533841 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.401255379 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630798819 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946469356 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403744262 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400825516 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427508153 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404677544 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40912762 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.650654168 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.410591149 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401277895 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.663186612 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402638685 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.727864898 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.423305447 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414864826 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402702456 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677668394 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106713447 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519704311 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.647452642 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450931021 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405204624 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.418313924 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.410369488 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406356927 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41187759 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413640151 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402937204 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403012606 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401343885 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186681832 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.430834265 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.40172277 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404412529 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.70232246 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507801749 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.407582947 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403901524 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545227317 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405079075 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.408470167 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.416329227 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980676859 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403974536 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40605636 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.412606901 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.435387389 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406471378 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088286342 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.411901823 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.408144716 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.410853032 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405969292 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404509677 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4235564 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406016169 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.430618201 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404312704 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188632355 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.412470671 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41501728 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017488132 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408368306 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.412897918 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636384583 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405461665 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406501591 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.406400328 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407824976 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.197455465 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416675289 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.400556793 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.409386934 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.216610893 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.684285536 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430820999 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431500327 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.632262244 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.389610194 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40540912 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.412440516 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417222005 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429558368 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.164751212 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429892915 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.411935502 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664757227 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.621530912 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415101952 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.411307272 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933147429 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430828228 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.430646518 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408551329 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.683821211 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.064467035 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.425777288 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408675516 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426360452 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407216018 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23629401 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41280508 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.517108241 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416353055 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.712497482 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.277721266 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410641939 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478701353 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412502572 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409097766 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409272273 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412039373 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.409529124 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.647732978 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442384238 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.426606315 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.409938501 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411723366 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.406954094 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430275487 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.416641108 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.635689408 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410752153 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694028818 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411480288 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411424013 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411315967 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.636828141 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.415953424 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.754053111 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6713759 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41782406 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.418403009 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.429294917 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429705991 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513669184 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434456551 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.424334291 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.674386345 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.414872173 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.415939943 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412330457 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.418640222 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419781164 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.419743688 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430128688 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099109552 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393627379 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.413266099 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.308157622 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.427653595 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482839863 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.418939401 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.661342961 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.417787249 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458158634 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.418510061 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.410574914 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644147924 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.424369753 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.412748314 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491454039 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.937986893 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101817398 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433279853 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.412060422 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.410030207 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.410088283 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414165067 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414402119 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414326574 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.661584322 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.435510528 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.416035915 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.080728774 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422721234 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412121714 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.419815117 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.425522328 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.421293455 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41555824 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.412142633 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424052309 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433877162 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.433314137 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558786954 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.428846144 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415979986 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.93320685 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.421322005 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.415085262 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415210168 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450367269 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415443994 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278913144 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675119409 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.452601165 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.715101326 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422367148 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.432288539 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.414141357 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426238972 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436225772 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.447161886 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429939782 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.426453634 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.41690555 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417682785 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980485455 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226210602 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036640069 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424688108 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.429117237 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.424352301 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.181073112 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438557485 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41632143 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677816933 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.198719938 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438877042 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94518117 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.44579374 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.296610439 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.726573936 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658647961 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41940498 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.433898592 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.727061501 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.637748321 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452080397 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.429693935 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42374466 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.400906093 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027311835 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.44382671 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.503584363 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184439605 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450582561 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.425727429 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.416612609 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.418091301 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892275187 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.447030446 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419238249 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.433674585 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.437946039 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290444037 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.418893607 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418881346 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121024691 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.423964351 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.951910035 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44071816 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.669414996 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.436734569 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.422456631 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.416377471 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.426963153 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.685110947 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.721133997 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42777913 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419540313 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045013842 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.287644773 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.426258176 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419382019 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250868373 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437232857 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.752549398 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.428030916 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.431961771 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427472839 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420888148 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42027346 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.416705698 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422834968 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395302193 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969207776 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.423132764 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424989362 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.450047207 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280195623 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.676905857 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.435086895 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.078058004 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64994979 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423200176 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44463743 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.425865883 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422292745 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.434384755 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.423133507 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.659215559 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541859862 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.6488672 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.432894722 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.407297126 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.509377431 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.634461868 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421955516 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.440351552 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.70187465 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.423723703 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.444565596 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215385751 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450145002 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.440301313 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42698573 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.45715849 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.43381459 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501820228 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675523137 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.443773073 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.435285159 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895597819 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466001776 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431013824 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.437920267 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516484637 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424156253 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.433323431 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.203705061 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085231569 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241055774 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.085375895 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.72820104 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.432975458 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426482086 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423677294 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574413109 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423589343 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699684831 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424910425 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.430412506 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449326644 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423324849 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441227596 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.645351014 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703064485 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425212033 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426156112 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432765739 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.425846111 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.438177703 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.638425782 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978502431 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039923473 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429575545 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.428805515 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.196743788 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.723062018 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426284059 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426573604 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428043989 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.450335869 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.42773594 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.432792277 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426083525 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594889614 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.728714263 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14646548 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.460227082 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.454236487 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.200710021 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432862753 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.684834556 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424342773 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.686506839 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.108745192 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.250781161 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.697316995 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497977827 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679029064 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.434440135 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576891162 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.42599023 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.434226103 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42903512 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276943541 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.424876273 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.438349143 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089484427 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691133949 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.43183315 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.425900524 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457420959 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.438423385 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.653856385 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.236737905 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.654336411 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.440329515 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.431939785 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.430399729 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104064291 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.740799832 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437976192 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.434052533 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.709202869 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.435655988 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456003426 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.882683582 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.427331 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046453198 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.40648065 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452638123 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444259021 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.24306795 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109410009 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.4506936 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990306772 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432360554 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439999119 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.710400182 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.435641514 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.429435966 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.734719485 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.436070554 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.438210019 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691305812 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.092936695 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.316187472 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.45747824 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443529445 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.433972321 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43093363 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.57461369 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431057395 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439727026 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.909313567 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.453771168 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432842749 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443830736 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.430221242 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436915011 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.456870184 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433109351 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.43845387 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.43377851 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.423071994 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.455026152 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.43672524 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074947495 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458140516 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.099272017 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.765137073 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.688381175 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.437722955 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.424164479 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.436763908 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433089394 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433840839 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432665701 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.482152568 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051812388 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.443481795 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.452375215 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.438326377 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.650954391 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.645891497 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.434140675 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.695663926 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448740518 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456154617 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.417888804 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434308073 seconds)
  done (took 1005.098951296 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.49016816 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.470949893 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.477194076 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.472368428 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.445723336 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.492831572 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.525588303 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.470783557 seconds)
  done (took 21.179931683 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.436950329 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.44912283 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.433084841 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.448282344 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.433613611 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.980478307 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.472876945 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.442557744 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.445706608 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.438095259 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.452704932 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.210406852 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.46995687 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.452015312 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.43746455 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.445098173 seconds)
  done (took 33.790971229 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.660363901 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.696759164 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.940093368 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.515460871 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.484901859 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.445491374 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.817376289 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.460212079 seconds)
  done (took 28.357323019 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.4454576 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.446344292 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.445154765 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.446577519 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.447604098 seconds)
  done (took 8.566587508 seconds)
done (took 1278.555189972 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.441642854 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.445569693 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.441216687 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.444313971 seconds)
  done (took 7.108638198 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.422191943 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.422308383 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.42331552 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.441027507 seconds)
  done (took 10.046063941 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.266385118 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.160384356 seconds)
  done (took 5.763583255 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.437303506 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.199813611 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.174386487 seconds)
  done (took 8.148014155 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.757756449 seconds)
  done (took 3.095119307 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.848909402 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.80440242 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.629798774 seconds)
  done (took 6.618931796 seconds)
done (took 42.116906921 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.44624354 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.691271287 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.593053573 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.447921008 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.597155007 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.591242441 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.23145901 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.441720843 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.451781235 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.450956823 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.439209272 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.596861409 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.212703454 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.691391797 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.213177559 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.786979618 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.595549149 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.43586511 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.435794635 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.443622844 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.230323664 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.443476919 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.44657067 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.450939938 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.59767191 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.581000877 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.444829821 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.787164019 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.439599693 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.449729335 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.58144137 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.447851514 seconds)
  done (took 85.032494015 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.444177258 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.438978858 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.437859828 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.457782345 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.442438355 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.456205625 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.438732669 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.459282206 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.447558249 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.438542983 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.437451654 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.440582019 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.454389559 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.446761039 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.438338746 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.46964883 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.438786455 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.438096858 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.465931343 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.437496913 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.462832937 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.460689821 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.456752585 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.437545664 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.437878195 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.456760716 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.473145854 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.446567898 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.438297291 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.458333323 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.460107186 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.459497363 seconds)
  done (took 79.718163316 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.439535674 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.438634546 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.460883078 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.443452845 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.444717016 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.444912765 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.440311333 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.441675015 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.446283789 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.455254196 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.440208364 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.438926138 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.460688344 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.439683295 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.443515215 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.440777006 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.441098597 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.444044642 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.452706295 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.439916344 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.442145774 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.456692058 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.439499715 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.460945002 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.467069982 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.453320798 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.445908513 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.442044339 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.440188898 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.451963407 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.453626466 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.441410358 seconds)
  done (took 79.634641177 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.646837371 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.451715001 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.450276436 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.385349962 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.452170051 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.451467768 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.444817845 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.64705217 seconds)
  done (took 15.275158943 seconds)
done (took 260.997883708 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.443424921 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.449360357 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.696323481 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.478816598 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.442146095 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.492775643 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.470696073 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.693852682 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.47064055 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.701851959 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.482551129 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.466462719 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.454090417 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.470557416 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.756756284 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.611636918 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.420539608 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.449969895 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.819657232 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.470009539 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.756089133 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.464195306 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.748940692 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.451366888 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.454487121 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.452953592 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.446490038 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.381562514 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.491996739 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.836747344 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.4586729 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.431300011 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.542899159 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.570180761 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.687019339 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.629190331 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.46620078 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.539898793 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.688729004 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.466342641 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.447872907 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.256046861 seconds)
  done (took 86.758139689 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.450482335 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.572826041 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.453690507 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.454652455 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.453956763 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.5741328 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.549399106 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.453125737 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.453799112 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.451824538 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.451902859 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.455026001 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.455362887 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.454323326 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.454733383 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.456566476 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.451833987 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.455308459 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.456072324 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.501657395 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.580973146 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.479782117 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.44617659 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.452425066 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.554768096 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.595190311 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.451844711 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.447524154 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.497872225 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.455330653 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.456472857 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.500584138 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.456949496 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.455816611 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.574177397 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.55701459 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.478179257 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.452559264 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.573436535 seconds)
  done (took 59.276479533 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.457473472 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.727532398 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.927471419 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.469982937 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.457708203 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.459376146 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.547880584 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.465413323 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.460920403 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.458568438 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.626763576 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.466760328 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.492767172 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.9514524 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.467483984 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.459903598 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.458126544 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.457581873 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.727568565 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.467061915 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.571582865 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.464397394 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.548946958 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.472287826 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.481905666 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.458483164 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.463582763 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.039360358 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.462933517 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.626504797 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.378735418 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.551823571 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.999365271 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.937594434 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.374933647 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.4672976 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.459702999 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.630126956 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.462527733 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.459842071 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.547864509 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.46658877 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.930168768 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.167075728 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.479148277 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.461535106 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.068937571 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.627820697 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.749587638 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.473779633 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.957137719 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.462397819 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.462537527 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.461661877 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.749789732 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.4736356 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.459696243 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.100049458 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.485125112 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.550092454 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.468899033 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.461622814 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.738603798 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.460947467 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.723833164 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.462818058 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.469987863 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.484179478 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.925932433 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.464384672 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.188272917 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.482598969 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.46204217 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.631790001 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.736409759 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.112276828 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.471681502 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.749509611 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.011262997 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.556993818 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.473444837 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.031333256 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.55499712 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.472459053 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.464436614 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.464547023 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.464350655 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.51252138 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.546985051 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.116507086 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.171916795 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.135728557 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.573738139 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.480898719 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.462807299 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.110524629 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.489134342 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.465217421 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.921191748 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.18782905 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.48462699 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.46907101 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.200238684 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.485002809 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.554377571 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.474292401 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.940413584 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.467839793 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.515178952 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.465744152 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.47058652 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.490046934 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.554876775 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.475676244 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.464867831 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.159560896 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.662646378 seconds)
  done (took 193.306321411 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.457313403 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.477550182 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.474266931 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.456141581 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.45679106 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.475640341 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.45708309 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.459025134 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.463309066 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.454521723 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.457568972 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.459845152 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.459186327 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.462315194 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.490944529 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.46451804 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.457225069 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.459361949 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.458147504 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.459041233 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.459371389 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.485780327 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.459314473 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.458258197 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.459084037 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.459880671 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.466404283 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.484012052 seconds)
  done (took 66.349637762 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.469586094 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.138844393 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.473279649 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.616938192 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.495615416 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.465164256 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.616830564 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.538607966 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.471987326 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.466831135 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.46518474 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.82817121 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.475832572 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.084229872 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.69476027 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.648048441 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.080472023 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.49388198 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.463951326 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.464608395 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.617238697 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.483021427 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.821120631 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.130086016 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.473716102 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.119328787 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.461232743 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.469620671 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.46588849 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.141770345 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.472783579 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.833460536 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.563866078 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.544248517 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.151891082 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.088164886 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.111717606 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.647898946 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.471468924 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.467661245 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.466612049 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.461480652 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.110489433 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.473122356 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.469571978 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.137609077 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.496628064 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.471070223 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.47483705 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.468502954 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.538059787 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.544359556 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.842114403 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.137666455 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.563031018 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.490356498 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.624402715 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.877166453 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.473797033 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.084258766 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.483756672 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.118045283 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.492882501 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.458966685 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.470188687 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.475476383 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.641175225 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.627501131 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.092837252 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.497878381 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.078709037 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.667791715 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.472372721 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.468787096 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.47231251 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.116102709 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.074149641 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.663629484 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.6210507 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.697392986 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.467478553 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.471182032 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.461878385 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.561824036 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.478584017 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.155678234 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.082925388 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.495169715 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.474381482 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.474813812 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.474197426 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.677411297 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.179437471 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.568305377 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.086575768 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.866291131 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.846847065 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.481904798 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.543585284 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.499426446 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.840106224 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.482423109 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.541747649 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.986373391 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.839562987 seconds)
  done (took 177.285761022 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.741316392 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.493097054 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.576432256 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.649059182 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.121079543 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.110412113 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.475141217 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.610202369 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.60169166 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.768193352 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.474814021 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.562941839 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.715276172 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.563059444 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.231779384 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.553445311 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.582699551 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.635604498 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.637254051 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.47365759 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.170522504 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.799169538 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.682426281 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.493089805 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.585182343 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.354644585 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.11257124 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.019770902 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.664700926 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.46925532 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.082355036 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.469698956 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.47738793 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.234140132 seconds)
  done (took 68.558081794 seconds)
done (took 652.879857305 seconds)
SAVING RESULT...
DONE!
