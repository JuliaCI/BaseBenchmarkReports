cset: moving following pidspec: 19310
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.559375699 seconds)
loading group "string"... done (took 0.510598543 seconds)
loading group "linalg"... done (took 8.48582019 seconds)
loading group "parallel"... done (took 0.17692689 seconds)
loading group "find"... done (took 1.391906619 seconds)
loading group "tuple"... done (took 2.053550156 seconds)
loading group "dates"... done (took 1.341248381 seconds)
loading group "micro"... done (took 0.21281704 seconds)
loading group "io"... done (took 0.596064668 seconds)
loading group "scalar"... done (took 42.502792293 seconds)
loading group "sparse"... done (took 13.475928856 seconds)
loading group "broadcast"... done (took 1.108523012 seconds)
loading group "union"... done (took 14.931819754 seconds)
loading group "simd"... done (took 5.328740137 seconds)
loading group "random"... done (took 10.636506874 seconds)
loading group "problem"... done (took 2.135412819 seconds)
loading group "array"... done (took 24.833226035 seconds)
loading group "misc"... done (took 1.092897299 seconds)
loading group "sort"... done (took 3.636396953 seconds)
loading group "collection"... done (took 20.994957113 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.588459145 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134705048 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.146141511 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.174265035 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.207481835 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.14039532 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157121124 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.461885339 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.031079469 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.228687337 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.126425913 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.538361726 seconds)
done (took 5.673697687 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.257645305 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.073882468 seconds)
    (2/2) benchmarking "String"...
    done (took 0.127002955 seconds)
  done (took 0.884828354 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075679889 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.172225148 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092817996 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.108662042 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.110146512 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110861403 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093327454 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108507108 seconds)
  done (took 1.485893908 seconds)
done (took 3.3973229 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.809097312 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.837897292 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.526886648 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.130123503 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.157100262 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.129102485 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.30982792 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.1582488 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.109246901 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.115061197 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.17837937 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.380251725 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.424105768 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.972427805 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.095261802 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.130372597 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.080448441 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.730667374 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083875906 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.133066744 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.501424771 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.111206628 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.120172386 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.126217291 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.216057714 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130194677 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.179977793 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.107258239 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.687687365 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10120441 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.184976646 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.09806202 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.162047174 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.231241623 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.078922602 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.108547676 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672408487 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.188719744 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.112157128 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.09764148 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68258755 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.077545793 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.194852082 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106223906 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.112472499 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.197749514 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.125262338 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080041346 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.101005757 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085692647 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.177576194 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.452905866 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105904832 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.144709196 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.109257571 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.715988256 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09529195 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.158217658 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126493932 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.112929486 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.09656034 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.116974483 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.168411429 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.121024726 seconds)
  done (took 19.899633881 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115633687 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13906279 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095364143 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13931038 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136970004 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095088354 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083329549 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094000155 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.109664972 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.18121815 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134318302 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.142501441 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090115925 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080024635 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.120156491 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248649654 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104768128 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121331504 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081591744 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106903041 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139179969 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096832321 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109785329 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093200904 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171497388 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220369441 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108884356 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12543087 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095001081 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099377046 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143051621 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.161576316 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074383847 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094923257 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.180021876 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120252381 seconds)
  done (took 5.158151842 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.200450111 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120765399 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.18763863 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.178000996 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.149879249 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167915984 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11926116 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.263598526 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.163640541 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.1643393 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13117894 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114780876 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078080066 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096478005 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078106572 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.74819273 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.185868964 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149757569 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.124452761 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103135399 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082819517 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.447272146 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100226362 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081669271 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101914765 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.071261716 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.171748485 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103048223 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.223008805 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099589808 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.109949647 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131517056 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.201811117 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.134104973 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109248715 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137760936 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104704474 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080404122 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.216006743 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09128336 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095270729 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104788642 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133526913 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134908813 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097542749 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.090635956 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.244214923 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081347391 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115981781 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.040828613 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.11291378 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.215316786 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094708836 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096812785 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.080920838 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115385207 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084620427 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.337798633 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099981159 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.312519408 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133879574 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079910275 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077412196 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10345553 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078278598 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.407675913 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087710452 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.995852588 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.09563672 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.154977987 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099334709 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103074079 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085900645 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101282117 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101478937 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096676964 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080318779 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078000661 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096830067 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082635941 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116691473 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100886268 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078942641 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162274732 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.118589703 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099779669 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125920726 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101121059 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080261604 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127073177 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081462609 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.0999704 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.123736941 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104806341 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.114710154 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081836596 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099847957 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142399292 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081453833 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.19118968 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079317347 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124819388 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100269169 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112643534 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.118572825 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096904987 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082819681 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097286175 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080001337 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158637391 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080906069 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078796156 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099832893 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11061606 seconds)
  done (took 23.640414671 seconds)
done (took 49.382887719 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.425110825 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109735744 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10981746 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.11072461 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.109682643 seconds)
  done (took 1.627084404 seconds)
done (took 2.366881863 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.320916695 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.197129691 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09991525 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.192070392 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084193956 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196232384 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160310411 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09862161 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.208759962 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.099299367 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.171492244 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0828917 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104184774 seconds)
  done (took 2.780187753 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090553209 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117095475 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08065674 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107670128 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074714773 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089997298 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108115353 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.13584577 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088466498 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083792496 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092529226 seconds)
  done (took 1.805535109 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089744182 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115658236 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080009567 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089951179 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092748821 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089576443 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.1077233 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100350464 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108768646 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084571884 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092264946 seconds)
  done (took 1.790462596 seconds)
done (took 7.107233187 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.116083762 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.584339951 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.123849267 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.175036889 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.339633548 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.219331705 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.628361375 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.116068172 seconds)
  done (took 16.21939585 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.128370261 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.0983701 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.078650326 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.097311574 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.081477175 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.096872775 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.081238911 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.097078502 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.080670219 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095276318 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.081501408 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.094825214 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.078668226 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097978062 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.079950887 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095804647 seconds)
  done (took 2.267454389 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.115314163 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.1144203 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102575483 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.088304769 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.101022408 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100856945 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.085660482 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100752518 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.082453942 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099697615 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089118672 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104089327 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.086245035 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.098456876 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101345237 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.090023427 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.098530513 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.085699273 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10225795 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.086087507 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105293736 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099010091 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087227325 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104200453 seconds)
  done (took 3.176652014 seconds)
done (took 22.403014252 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161455324 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083830487 seconds)
  done (took 0.98493278 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098677923 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.119042318 seconds)
  done (took 0.966316642 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.10432153 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096389897 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135393849 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114313536 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081923244 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.079573444 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.130061863 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097828584 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080954348 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098207775 seconds)
  done (took 1.767979482 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083714793 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098823388 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.089155032 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.117669812 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108525984 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083504473 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.101647809 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084509677 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.102505651 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080055208 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104736595 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100613421 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.104359312 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.239481334 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.085004872 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.102894797 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107819876 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084750589 seconds)
  done (took 2.632683794 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078864553 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082595226 seconds)
  done (took 0.913052338 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081222955 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095093913 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082818973 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099312138 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079460284 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094665947 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078429447 seconds)
  done (took 1.360076318 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.478528083 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.251694277 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.31204493 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.113689353 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.132326468 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.348524133 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.131178626 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.092906241 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.111512198 seconds)
  done (took 2.781740175 seconds)
done (took 12.15317107 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.089567732 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.132462669 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.482199327 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.116421737 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.077595026 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158259952 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.262854496 seconds)
done (took 2.071777328 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335539518 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.123046064 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087559101 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.078226378 seconds)
  done (took 1.37343814 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.077131718 seconds)
    (2/2) benchmarking "read"...
    done (took 0.085109914 seconds)
  done (took 0.920040716 seconds)
done (took 3.051036775 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076623688 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077508328 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.111190052 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09362439 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.07574228 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.077269389 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.094646175 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.075649041 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095677351 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078655243 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.094055119 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.077792921 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.077195634 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093672889 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075435897 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091647509 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077412502 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.091325407 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075171183 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075051484 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094178888 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.07565895 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.091890485 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.075187775 seconds)
  done (took 2.829444774 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10250085 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096727225 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083968766 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100960225 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.081909377 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.10166355 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10004936 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079451505 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.10106115 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081601485 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099251375 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.082118191 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097780949 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083186115 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099393129 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.082765818 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.101529708 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079932584 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098331893 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.082322532 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101756835 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07917351 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100305157 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102581478 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082114357 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100199961 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.080524198 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097249602 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083857846 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.099151254 seconds)
  done (took 3.523002116 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085439319 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.075284105 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093798735 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.086902386 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092937177 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080103951 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.093274864 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.07977307 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.097435475 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.076249285 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081529544 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092806099 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078453634 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098238977 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080602383 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100387256 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095040493 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.096671906 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079515079 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.098597008 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.081792994 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.096280584 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.079309058 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.075407346 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093387922 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.075671356 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094400804 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.075782388 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09339943 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076785281 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.081903352 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.099365419 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.075434699 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.106200872 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082763218 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093058704 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084579319 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093224213 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080988769 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093283785 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076127109 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.09278995 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079844093 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.08685546 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.097293388 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.076810677 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.096608948 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.081327153 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.097033188 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.083570679 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.093131886 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079329333 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081782246 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09857799 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08134844 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093362626 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.07736519 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.0933132 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080996003 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.093450515 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.076352475 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.075469151 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100213943 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.07680341 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.117461363 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.104025118 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079758024 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081431047 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097873693 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083738741 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098980875 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094489621 seconds)
  done (took 7.084775524 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.079287345 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105024839 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078875462 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094969388 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075278403 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07610473 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10199569 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076626086 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096279227 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095148477 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095096014 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078028604 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095742736 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081202433 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095021687 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.078172824 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.105088539 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074200081 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.095257298 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08038953 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094687903 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083254285 seconds)
  done (took 2.703665857 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.216202554 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102129357 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141004345 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094922476 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114841082 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11211169 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083437096 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103661871 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100742344 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087519617 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1051189 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083823813 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11427724 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104793662 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087778807 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106460269 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083868335 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105282718 seconds)
  done (took 2.716770003 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.089937461 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097283251 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104247883 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098489111 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080005449 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10054317 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085761512 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113541048 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082390777 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099319958 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.108052261 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082700282 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102711848 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080413529 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099808563 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081089543 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098891415 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080237033 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108159564 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0868602 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104070592 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090171047 seconds)
  done (took 2.842839663 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094078401 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099050783 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100518612 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102563821 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078786466 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100384762 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086819726 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.098549202 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089037708 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100894647 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080132419 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099025987 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087370931 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098728944 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10717116 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081170459 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099290137 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08098215 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081495062 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.097300303 seconds)
  done (took 2.634446555 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117951099 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112410716 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094043839 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123924306 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112575449 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095167504 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124299096 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094177694 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113132999 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126078556 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0962066 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113518942 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124204246 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.102419359 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11297833 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106403624 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12455213 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124250083 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.095700122 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113857765 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126381603 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096308798 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124594901 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094814871 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114019412 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112492087 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095409978 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12024501 seconds)
  done (took 3.8864142 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077793539 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07793199 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095952143 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.076859735 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095630283 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077745451 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.076758878 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096480986 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079869762 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09642634 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079608579 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097472628 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079738374 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.079710459 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099167208 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.080239028 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097892973 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.076896106 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095288196 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077920131 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.079626696 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098899547 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.079757125 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095819747 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077722544 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097339878 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077614859 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076437582 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099321777 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07817269 seconds)
  done (took 3.348912766 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.086113453 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107874646 seconds)
  done (took 0.969519762 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.076210467 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111760932 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077536496 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101491473 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086725623 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098925753 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090489313 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104692221 seconds)
  done (took 1.521912277 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.10239408 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.119402191 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087684021 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112147319 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.100409549 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.117843573 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165037825 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.0873158 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107650049 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081381027 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.119333823 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080416768 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110233745 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085916899 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108853279 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095909349 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.082769131 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090969281 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.108107508 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083892372 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107097428 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116028868 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092193691 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.106730049 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084803659 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112316708 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094514415 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.112131833 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086303309 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111882664 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088388211 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094824876 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.086157924 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10600283 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081821349 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.119440247 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118099814 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087310532 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109801839 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088200853 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109742436 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080139927 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.110555938 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.088400096 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112931778 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08734331 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.106827842 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080613264 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101546352 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085328371 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098767948 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085941558 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094136008 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091881744 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.109300832 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099522065 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.10316737 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086673602 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.104737233 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.084534894 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108301409 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085406722 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110458204 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084923795 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110221824 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091543638 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10907216 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079722522 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09395072 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082275742 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109620015 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105915825 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112105528 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.105926142 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088643181 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100826021 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087808917 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106500334 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089926054 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.112271623 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.087283592 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108323806 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092268447 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104930899 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085100385 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10842284 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083740718 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.104014082 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082383227 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121957686 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084375951 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.101308419 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082268512 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112186211 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085975898 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104778567 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081945887 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110421557 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.07536432 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106553596 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088436414 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107811934 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094477192 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106020746 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088240878 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109731868 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.093816216 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106182505 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085390253 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098721832 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088553912 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103158483 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089992091 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094395878 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086793328 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104987326 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.087976107 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.113292299 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.084317596 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.105804232 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093557329 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.113388243 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.084503124 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097591629 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086966043 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.106485499 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092340617 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.112956088 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.103591873 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080691111 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079956162 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.109047971 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086643598 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.107090958 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106093156 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088255815 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076043882 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.102630003 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087341559 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111588039 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103547708 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.088554462 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111016265 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.089095994 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.104611539 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092106012 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104102081 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082196934 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.110498066 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08679705 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.099974778 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092183149 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105674684 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084888018 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105636265 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092921591 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10655783 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.088559194 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104565477 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088011065 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107521808 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082332038 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106580176 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085502358 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113651399 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.08666092 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.099826222 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079830492 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108121423 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083442115 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10508253 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082646752 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105994451 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.089035469 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102548668 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.086475668 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08618557 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118444529 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114300281 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097999499 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109575409 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094203157 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10575464 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.089907124 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.105496384 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089061706 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.108121001 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092009122 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108811333 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089128976 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105858644 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078957456 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108389672 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093728075 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10199751 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08342979 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101219369 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088098876 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113772781 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087910842 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.108173165 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085095618 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108159718 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092962025 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106449473 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086641076 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101751757 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087165844 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.11029907 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088860656 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10840548 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094289769 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107556723 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080903196 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112073257 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084667155 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109945467 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081550942 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.102501647 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083754262 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.108627699 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085509554 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104930466 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077017486 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092134018 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112341599 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10690991 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083683578 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.107776501 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097867941 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104835428 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093211213 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106710655 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089776342 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120655888 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082235375 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106290221 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09519774 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.108001026 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076964743 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110089093 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.085838244 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.10194818 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.086087691 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.104272209 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089433347 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109627198 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.08894977 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096045847 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086841862 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.104689101 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083953621 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081551509 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112831097 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107263809 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087515872 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11614754 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090166732 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.108217849 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089496232 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.107627779 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.090010498 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.108823376 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08906798 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.109619914 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085424391 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.102693869 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087954831 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102496927 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084417087 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105901435 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.088113764 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.108069135 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089720343 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.10618801 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093055218 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.107914051 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.089539966 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124688059 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103695137 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084457042 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107844467 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090311076 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.107104029 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087570183 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.101347009 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093674919 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.107423517 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093587018 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.106345138 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080126851 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108017361 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088163369 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.089520196 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.108683181 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10852072 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087702434 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.088358043 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.108551025 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116370959 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084415588 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113857176 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090430523 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10998118 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088137416 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.108662664 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086703996 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.103356431 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088063937 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.110074989 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.088497841 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.107124795 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091264431 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.108783362 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087595777 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105889945 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.090206817 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.108974411 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.090382803 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097349229 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083700863 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.103109314 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.088912168 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111606056 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.090594522 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105412704 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.086529772 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109804987 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087630236 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079449706 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.1125485 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090725458 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.110631336 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116593225 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083671655 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.108149116 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098609782 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096768572 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.086471017 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08483362 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.103500874 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11401898 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.090256966 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.113222268 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.089135979 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103548855 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.08086596 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.090166424 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.107135464 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077807933 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.104634894 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092228538 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105931784 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087189651 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.109642665 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090778401 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110024211 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092424186 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10760987 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087453765 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.109242829 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.08117936 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.104715308 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084150607 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108877463 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.091057002 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.104266731 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081535499 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.107850375 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089189134 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.108515447 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.089024498 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.107445074 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093863197 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108653469 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088978089 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114360554 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078314298 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.108448655 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.089018977 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.107871584 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084342034 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.109456184 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090807305 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110690544 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094515436 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.108664114 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09145965 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108870293 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085069922 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.107720598 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08932379 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10858546 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085142602 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.091336813 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115135073 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08549086 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108599169 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109266371 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086540751 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109790212 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.091078532 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.108985577 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094113932 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.108792947 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090125903 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112367998 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090245124 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109832418 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091395722 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.107480429 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094025277 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.104740392 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096318031 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.110761445 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.091206853 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.107785257 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08568299 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108889497 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.089165442 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107825965 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095762506 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.110186747 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085293859 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.104094166 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.086302213 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.108317201 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09555834 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115909916 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089747481 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110661995 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083688908 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.101074699 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091368828 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.105413242 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088974969 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.111610787 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094186766 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.109751002 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.08661275 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.107751108 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094608621 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113330358 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091443088 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.105960205 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092004279 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.111611877 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089687187 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106818867 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.088605905 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111753754 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091361322 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.107914055 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085311759 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119579624 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094616303 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112062062 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087829344 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.11178565 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.089246883 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.103620513 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.091517607 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.109215987 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092154706 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.110380555 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089497431 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119644451 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084758016 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.109141621 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095753176 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110254764 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.114765079 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083982191 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.090097861 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111958461 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092308165 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.10393647 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085430127 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.106687338 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089879092 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.105333435 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.08365952 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120172415 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094396242 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.111148023 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0884368 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105745059 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081968797 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.103971273 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085018768 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112142837 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.0889391 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.117310102 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085894887 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.105806968 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.084161736 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110286559 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091453037 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.112281479 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083508042 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.104526245 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086422164 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.110785007 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.096724718 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108527367 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.09084582 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111765292 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090965374 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.10658282 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096446401 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.102593 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091515447 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122565597 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.091723826 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113701927 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.0941484 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117328302 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.092244332 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.104769849 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.091349685 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.111141067 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.092106928 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.112430391 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.092773311 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126166153 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111581558 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085094732 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.109019149 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.08890047 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.10604944 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.095474583 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113226909 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.0923943 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.113471733 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08976538 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113257493 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098437744 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113312208 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094095275 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.111585642 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.089123959 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11067493 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.088432296 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.109097636 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.094076474 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.113693772 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090324593 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114282752 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086705411 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122054393 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098017823 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.112614403 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.082382752 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.106711533 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086453407 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.104717875 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.092843863 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.104206261 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.088231833 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.088606474 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.106195179 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.090468041 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11382556 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08971656 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.111628378 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.089708652 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.100406104 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09325599 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.111010155 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093345873 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103822677 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.090170045 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.112690647 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.095103865 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114630801 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084248758 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106033845 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084548086 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108777195 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080509351 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111275848 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085208653 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.109113902 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087011816 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112019985 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.093129001 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113054017 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092530523 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113913683 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089498686 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114821066 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093634163 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103888627 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083343193 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.114459473 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.087503941 seconds)
  done (took 59.592570249 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145040048 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087901849 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081068558 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101672181 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126393077 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081848396 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099966369 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082992453 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102987984 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091283536 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098461595 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078924339 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122018876 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127166104 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1227214 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091108206 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097711691 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.084213299 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102582128 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087037709 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.123843676 seconds)
  done (took 2.961832847 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102055536 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115392237 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112930754 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099261581 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106906006 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114658088 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09399332 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114907693 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.118708486 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089485066 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119318491 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114421246 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089960447 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109319507 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109576728 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092759317 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121514279 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109091462 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.097897322 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115400263 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113431313 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097876055 seconds)
  done (took 3.181326112 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.090239906 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.08859047 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.115516482 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.083580669 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.111966679 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.084516816 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.116320315 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.08689304 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.116915513 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.090317183 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.108798177 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.090443586 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.116697905 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.084509271 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.10855496 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.087103253 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.116864964 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.090312296 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.112505654 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.083898656 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.130808505 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.083219406 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.106808395 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.088423902 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.119941134 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.092187577 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.111929127 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.090263285 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.109118356 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.091518143 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.107561983 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09281974 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.114204376 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088314018 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.108303964 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.090929056 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.090438534 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.103922381 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.08704849 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.114522268 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.085553875 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.112763182 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.097705658 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.106133329 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.08536401 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.113237562 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.090607597 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.106403712 seconds)
  done (took 5.632889341 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.117155672 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.155137918 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.083790217 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.151428354 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126049799 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096693686 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.110686136 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.146907189 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.0815506 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.1117201 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.127804849 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.102257346 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.110967779 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.112088936 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090075254 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110006718 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.092515469 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10635658 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.095134236 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.110014436 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.116099273 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09409496 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.126031932 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.122067571 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090678022 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106839509 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08234173 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.113838317 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.116707803 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092692423 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111555983 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093581582 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120893181 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107620261 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084991131 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108966645 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122370228 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087134365 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.111231692 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.083295872 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.114385709 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09689578 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.115486468 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12836282 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087094566 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107665341 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086188309 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102652212 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118973296 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089111122 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117656356 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12376707 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094203843 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.112186172 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.097696133 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.127838189 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.111880816 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.088623687 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.116647466 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.101931989 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10505241 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.116651397 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.103330378 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.112471928 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096697261 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.119122333 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.106930153 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089872768 seconds)
  done (took 8.289434554 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113914072 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111115453 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122599502 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103392312 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111194152 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.090354445 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112293185 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.110078931 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09242497 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118160416 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090795598 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.159830063 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.110903448 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118447683 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.091572423 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112354042 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.090991451 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111033079 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110929664 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091914664 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111199334 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.103090581 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111666843 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122335675 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123095901 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088279125 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111473711 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.091079619 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122463498 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110910935 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103840139 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.111686635 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110823108 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102526694 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123251543 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.111310815 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085547823 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111382107 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091186782 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112679998 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089141805 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125013763 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11198777 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088718543 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112901478 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112108077 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103342545 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12421511 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117549231 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099677374 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113361386 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122893292 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090733306 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112899466 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123509219 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.131842076 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102642974 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123103536 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110883548 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123092394 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102681955 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131516153 seconds)
  done (took 7.644578795 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083080173 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.082752445 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.106388212 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.085249725 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109252072 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085813526 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088340929 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.109058438 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087505375 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.109513337 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087946725 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106996438 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086358973 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087513977 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105781492 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085460232 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106783453 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085938428 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108590785 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085879271 seconds)
  done (took 2.730270834 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.091267092 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123895315 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083871002 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110653153 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.085618526 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.112774965 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.086926018 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112577936 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091609724 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112468683 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.122786381 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098446939 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1100385 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095908178 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.121126774 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110399056 seconds)
  done (took 2.511906809 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.103853684 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.124190528 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.129321375 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089307752 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102953485 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.091072894 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105824962 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.079039052 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.099425551 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.091785537 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.109264208 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.089604274 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106482245 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.081756814 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.08762077 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.114722715 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.08242133 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.113456098 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.09035068 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.131531773 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.113277923 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.088771066 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111619784 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086179874 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108094344 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.087876054 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111049117 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080587828 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.103630531 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.08730737 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.108604858 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.091365109 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101448705 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087615451 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102855794 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.080915812 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107909106 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086969699 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111868009 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.086404195 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10534361 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.086840856 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.109967914 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.089660979 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.103755194 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088906843 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.106338085 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094740527 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.112415151 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.091449849 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.112965043 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.095897171 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.116984281 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099753199 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116302971 seconds)
  done (took 6.339536284 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097789223 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107226019 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.088490507 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101357481 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086735835 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.11176036 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088652058 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105651976 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085634163 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.101206183 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086145207 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109087496 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087245492 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110982535 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089076808 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111844954 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079051383 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107928893 seconds)
  done (took 2.601384262 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088991039 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083138295 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.112750321 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082757708 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.106320851 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085643289 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102419352 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.082178651 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102969191 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083173521 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103928471 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086022059 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101093469 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086229328 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103029499 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083778815 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.105834984 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08160697 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083762304 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101973161 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085886012 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104077256 seconds)
  done (took 2.901257344 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.10025758 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.135980717 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.102236153 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.152182437 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.115693801 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.093582617 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.125245499 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.094148907 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.134100351 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.093775294 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.114228066 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.091522115 seconds)
  done (took 2.199065312 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107949874 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14109521 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084196603 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108900106 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118725649 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089414963 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108530195 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089663149 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125296032 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12243048 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089152997 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125464121 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122164272 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1206818 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097537687 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117197861 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109483897 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089196975 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107437128 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131058785 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089477938 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122835803 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088606018 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111923327 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108697983 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099925678 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124903574 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121976778 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08981633 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126662347 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117707441 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088217519 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123476523 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122232516 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08677218 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127395916 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109100813 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131814211 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097931291 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121778222 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106665461 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097480204 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124004284 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116420672 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101910936 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112295752 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116817456 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089473514 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110332769 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137271576 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118149706 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100229199 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119816738 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123769436 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10226201 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137858347 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122389004 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120643277 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117201022 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122436894 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100676173 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118172161 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120783507 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121726034 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097642753 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123214666 seconds)
  done (took 8.249923237 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123734676 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106284532 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089536379 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126154546 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121239121 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109494226 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090073424 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112162986 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.328592558 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106504462 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15506897 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089404661 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12160847 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120777031 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10936742 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090575841 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109304022 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100258545 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105809707 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137037593 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089066424 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121634225 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120255875 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121283855 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121592016 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097575389 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109440571 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089449159 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110896855 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10916175 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097505283 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109872283 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121099563 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085986232 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121375533 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089633008 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110351933 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11653342 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089226592 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118165936 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121268944 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131207993 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090137967 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10974685 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122074265 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089811883 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109978383 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085959918 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109548416 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085985041 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123013189 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122734336 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123290627 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100745242 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111048614 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10954205 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089848439 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109640715 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089938225 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118151463 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121878344 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089635678 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137612602 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109545735 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089669833 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121751428 seconds)
  done (took 8.280051744 seconds)
done (took 157.93610502 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.101657112 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.140706889 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099111492 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.173749539 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.083861411 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140452447 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118085649 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.120778856 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.083945757 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.105025534 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.084989654 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.107708092 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.149828141 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.10508685 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.084407948 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107457126 seconds)
  done (took 2.657555678 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.180629258 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.285660995 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104671798 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.11250454 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090729297 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109120852 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088765351 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112710435 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.085066204 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.118842644 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.106826954 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087534758 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.116421246 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086542499 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.105831639 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.086912108 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.11795863 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086404649 seconds)
  done (took 2.936998388 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115354441 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.158575337 seconds)
  done (took 1.136042885 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120372352 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.184505878 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.304541966 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158900881 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.113536371 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132904339 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.161404393 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.124909915 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.202062088 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12994009 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.107997362 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.113395009 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137251908 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096135362 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115175749 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.091549577 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140454243 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114659414 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.094197688 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114043761 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116753429 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.116492217 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095886491 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114596023 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186002792 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.128386256 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.091716969 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.115650262 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114365182 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09327975 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.119678031 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.105183911 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.128040774 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.190229532 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.098029855 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.185797169 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099451683 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111847525 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.093720841 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.112600863 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.09540503 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116912312 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.128445249 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.091694913 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.114256612 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.098134969 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.113753953 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.091255946 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.121467968 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.12100743 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099468893 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.119267318 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.162839524 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.12152586 seconds)
  done (took 7.629029517 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.792682032 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.153138216 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091180889 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.892561421 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143706788 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105112675 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.796354964 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136284025 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.239035537 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.812400286 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106470696 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.131970563 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.243450921 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.261966369 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.142779186 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.334754382 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.672816399 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103190918 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.143285665 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155107011 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120617786 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119145238 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131439668 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429509436 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.112418046 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091079264 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118065065 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105570064 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.185282789 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.091136148 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115346807 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.183053118 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.26547186 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203524684 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091641539 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111090159 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089919585 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.167798912 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267923114 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217240438 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178586202 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086594818 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11085835 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102646251 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132173315 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107104319 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164981207 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175040554 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174241567 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115725422 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124249971 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100094781 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123793672 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.161759123 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10857941 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314291693 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.342306632 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112531254 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098637823 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.130789419 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26367776 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.090480944 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226076849 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138481446 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191623289 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111767304 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778872956 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.167108457 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089588631 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12152212 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118366092 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095879809 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123784398 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167527246 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.408352465 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105580172 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116795409 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08914153 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232204839 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.089961833 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110957451 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165365474 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113150734 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100370523 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128474033 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12546198 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.173611967 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.252383872 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127176703 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098512238 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118789794 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124637958 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09188781 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211655349 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219649787 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.158441311 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.237204468 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104273145 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.187131775 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167584237 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102442476 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196356603 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.101525469 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.136662822 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132805993 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.20351843 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.152912799 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.121096491 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.101818883 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124824397 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151268475 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095547457 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122622069 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.17213324 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483485939 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167366975 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087301317 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.115960023 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09895982 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162014498 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12088499 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263284423 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099577004 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.191074638 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097931876 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108838258 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099467297 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.187970228 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106214091 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121443264 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12532019 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099147603 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.249711379 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222970127 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128834466 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221860119 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183039134 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122300409 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176110544 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121483271 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172219676 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121430315 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102633376 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113920127 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772104171 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104318352 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121185878 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09632347 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188518166 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111655233 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.092202725 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.111349476 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087655094 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77679847 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.093453326 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.109019558 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.09260512 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122301644 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097841262 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118921622 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117496898 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163296296 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234504659 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103624299 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120633052 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.090348471 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183967525 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.092333404 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.112742754 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.091225408 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.08993153 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124534117 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117091993 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.092445178 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172920653 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.181247766 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.200652205 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.606929402 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091011991 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.113923814 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234269143 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090395897 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.30953346 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120780035 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.206127094 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189851292 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.087736247 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.337048268 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.170953697 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188739058 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.115196691 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174081402 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087635826 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.1189988 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164234899 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.08940659 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120916837 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.159031673 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129762503 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127982092 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.119428748 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113018541 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230164515 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108349357 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169581976 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091522997 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1245112 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.308323974 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089820902 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133894684 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.162883216 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117949551 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.09044683 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.873509655 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.090950883 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123155159 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10012968 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225345836 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.188612944 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098811133 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121197445 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10410661 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.186334 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.215397464 seconds)
  done (took 44.451729267 seconds)
done (took 59.669473069 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312617342 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264736719 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.295269649 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.197932865 seconds)
  done (took 2.028181294 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.180949588 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.153351562 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.125086595 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.113106164 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.155852064 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087832977 seconds)
  done (took 1.700695849 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.474466625 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.37550948 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.345791014 seconds)
  done (took 2.084480983 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.255102012 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.284138705 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.321653798 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.424871315 seconds)
  done (took 2.278158982 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207594926 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131677981 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.101856346 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.143845726 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.174736496 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.178665913 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.144921656 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.154641069 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131218626 seconds)
  done (took 2.298378267 seconds)
done (took 11.278426371 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.262802907 seconds)
    (2/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.28998053 seconds)
    (3/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.20958596 seconds)
    (4/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.257663554 seconds)
    (5/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.211341022 seconds)
    (6/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.252629159 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.161370421 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.141716479 seconds)
    (9/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.285031281 seconds)
    (10/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.210862984 seconds)
    (11/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.145019859 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.12716653 seconds)
    (13/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.103887155 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.120090036 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.143450372 seconds)
    (16/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.07704199 seconds)
    (17/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.159845529 seconds)
    (18/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.097694506 seconds)
    (19/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.125994898 seconds)
    (20/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.076013486 seconds)
    (21/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.129118771 seconds)
    (22/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.224522223 seconds)
    (23/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.105961699 seconds)
    (24/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.153133968 seconds)
    (25/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.163586536 seconds)
    (26/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.124501575 seconds)
    (27/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.223316745 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.120605471 seconds)
    (29/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.102599943 seconds)
    (30/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.182080899 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.227713992 seconds)
    (32/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.242152138 seconds)
    (33/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.18300358 seconds)
    (34/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.284118661 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.100523312 seconds)
    (36/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.0998445 seconds)
    (37/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.100149585 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.14405418 seconds)
    (39/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.194586354 seconds)
    (40/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.12575014 seconds)
    (41/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.142802222 seconds)
    (42/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.09494849 seconds)
    (43/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.262536112 seconds)
    (44/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.093684245 seconds)
    (45/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.192567042 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.096615587 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.124566212 seconds)
    (48/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.084814468 seconds)
    (49/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.12654421 seconds)
    (50/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.218071226 seconds)
    (51/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.179912918 seconds)
    (52/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.175221768 seconds)
    (53/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.102480701 seconds)
    (54/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.102780526 seconds)
    (55/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.123241511 seconds)
    (56/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.111197925 seconds)
    (57/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.21431809 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.115707076 seconds)
    (59/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.124479791 seconds)
    (60/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.142773655 seconds)
    (61/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.117823056 seconds)
    (62/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076619965 seconds)
    (63/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.182763285 seconds)
    (64/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.102874352 seconds)
    (65/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.120989402 seconds)
    (66/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.127110136 seconds)
    (67/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.210843039 seconds)
    (68/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.098183069 seconds)
    (69/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.19072602 seconds)
    (70/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.229099462 seconds)
    (71/286) benchmarking ("sort", Float32, true)...
    done (took 0.237495726 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.119822992 seconds)
    (73/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102580285 seconds)
    (74/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.188243651 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.118212353 seconds)
    (76/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104605323 seconds)
    (77/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.15278598 seconds)
    (78/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.089336086 seconds)
    (79/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.160980459 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 0.088075845 seconds)
    (81/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.100668878 seconds)
    (82/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.186442616 seconds)
    (83/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.078035728 seconds)
    (84/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.100211085 seconds)
    (85/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.172764489 seconds)
    (86/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.102625592 seconds)
    (87/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.079677841 seconds)
    (88/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.101675783 seconds)
    (89/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11361681 seconds)
    (90/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.112355216 seconds)
    (91/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.210274021 seconds)
    (92/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.141517595 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.144104719 seconds)
    (94/286) benchmarking ("sort", Int8, true)...
    done (took 0.219261065 seconds)
    (95/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.11445367 seconds)
    (96/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.104638022 seconds)
    (97/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.116615368 seconds)
    (98/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.100512565 seconds)
    (99/286) benchmarking ("sort", BigInt, false)...
    done (took 0.254066413 seconds)
    (100/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.081095103 seconds)
    (101/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.077013834 seconds)
    (102/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.128458824 seconds)
    (103/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088268272 seconds)
    (104/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.0998641 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.094968745 seconds)
    (106/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.136359394 seconds)
    (107/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.167562554 seconds)
    (108/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.077763125 seconds)
    (109/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078299643 seconds)
    (110/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124788978 seconds)
    (111/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.164906193 seconds)
    (112/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.083043647 seconds)
    (113/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.177268069 seconds)
    (114/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.141925026 seconds)
    (115/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.127081381 seconds)
    (116/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.128807147 seconds)
    (117/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.117471904 seconds)
    (118/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.096486873 seconds)
    (119/286) benchmarking ("sort", Int8, false)...
    done (took 0.193002268 seconds)
    (120/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.127424678 seconds)
    (121/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.097042855 seconds)
    (122/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.187315287 seconds)
    (123/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.127455903 seconds)
    (124/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.094706025 seconds)
    (125/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.154281483 seconds)
    (126/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.101555765 seconds)
    (127/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.216661731 seconds)
    (128/286) benchmarking ("sort", Bool, false)...
    done (took 0.18518708 seconds)
    (129/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.124501766 seconds)
    (130/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120935754 seconds)
    (131/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093855971 seconds)
    (132/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.078011872 seconds)
    (133/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.126397512 seconds)
    (134/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.102640667 seconds)
    (135/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096346826 seconds)
    (136/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.13313033 seconds)
    (137/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.103343 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.117277206 seconds)
    (139/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.101032151 seconds)
    (140/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.099277155 seconds)
    (141/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.16149512 seconds)
    (142/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.107403478 seconds)
    (143/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.085222468 seconds)
    (144/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.112997026 seconds)
    (145/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.100507136 seconds)
    (146/286) benchmarking ("sort", BigInt, true)...
    done (took 0.248611003 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.116639353 seconds)
    (148/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.09357201 seconds)
    (149/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.121734633 seconds)
    (150/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.077776783 seconds)
    (151/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.118135849 seconds)
    (152/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.080946725 seconds)
    (153/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.100544852 seconds)
    (154/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.100054051 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.145701311 seconds)
    (156/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.085197951 seconds)
    (157/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.127841191 seconds)
    (158/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.093155379 seconds)
    (159/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.101975769 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.10149165 seconds)
    (161/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.118372416 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.117244502 seconds)
    (163/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094219449 seconds)
    (164/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.19615743 seconds)
    (165/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.096838977 seconds)
    (166/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.120290948 seconds)
    (167/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.080093941 seconds)
    (168/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.18840567 seconds)
    (169/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.126785321 seconds)
    (170/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.145993817 seconds)
    (171/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.161360002 seconds)
    (172/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.137493225 seconds)
    (173/286) benchmarking ("sort", Float64, true)...
    done (took 0.231659701 seconds)
    (174/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.094389752 seconds)
    (175/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.13899853 seconds)
    (176/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.119343098 seconds)
    (177/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.095639945 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.119733277 seconds)
    (179/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.164307996 seconds)
    (180/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.120827231 seconds)
    (181/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.180321388 seconds)
    (182/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.083304218 seconds)
    (183/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.117450805 seconds)
    (184/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.102256033 seconds)
    (185/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.202761744 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.119320701 seconds)
    (187/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09417856 seconds)
    (188/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.103759121 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 0.221431766 seconds)
    (190/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.077674888 seconds)
    (191/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.117154463 seconds)
    (192/286) benchmarking ("sort", Float64, false)...
    done (took 0.150583839 seconds)
    (193/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.136255189 seconds)
    (194/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.080470032 seconds)
    (195/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.143246105 seconds)
    (196/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.079271324 seconds)
    (197/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.103051857 seconds)
    (198/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.078521368 seconds)
    (199/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.106286906 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.095927954 seconds)
    (201/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.114234313 seconds)
    (202/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.092734889 seconds)
    (203/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.106731306 seconds)
    (204/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.094639793 seconds)
    (205/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.185601903 seconds)
    (206/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094549455 seconds)
    (207/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.136459736 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.128892614 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.101973414 seconds)
    (210/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.117135958 seconds)
    (211/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.100305121 seconds)
    (212/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.151661412 seconds)
    (213/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.093393762 seconds)
    (214/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.100174936 seconds)
    (215/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.076421204 seconds)
    (216/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.117791264 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092021578 seconds)
    (218/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.13842949 seconds)
    (219/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.117927343 seconds)
    (220/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.112753822 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.091687544 seconds)
    (222/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.102984639 seconds)
    (223/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.080733183 seconds)
    (224/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.121423204 seconds)
    (225/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.092276602 seconds)
    (226/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.10128237 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095535289 seconds)
    (228/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130560278 seconds)
    (229/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.080466955 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.119435247 seconds)
    (231/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.194221134 seconds)
    (232/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097062549 seconds)
    (233/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.118520186 seconds)
    (234/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.094846452 seconds)
    (235/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.109545544 seconds)
    (236/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.08361902 seconds)
    (237/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.120700297 seconds)
    (238/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.076465163 seconds)
    (239/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.19147747 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.094058009 seconds)
    (241/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.119221391 seconds)
    (242/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.092056781 seconds)
    (243/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.105678605 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09679081 seconds)
    (245/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.118921755 seconds)
    (246/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.078626212 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126333123 seconds)
    (248/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.084536911 seconds)
    (249/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.179182988 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.123995073 seconds)
    (251/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077640522 seconds)
    (252/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.104651804 seconds)
    (253/286) benchmarking ("sort", Float32, false)...
    done (took 0.153756868 seconds)
    (254/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.102903085 seconds)
    (255/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.159154915 seconds)
    (256/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.125867959 seconds)
    (257/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.116209549 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.09822276 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.113593455 seconds)
    (260/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.170116016 seconds)
    (261/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.127492989 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.090279094 seconds)
    (263/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.275399155 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.095656406 seconds)
    (265/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.07841549 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.128172309 seconds)
    (267/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.161649179 seconds)
    (268/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.078182822 seconds)
    (269/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.104995446 seconds)
    (270/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.078820111 seconds)
    (271/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096834181 seconds)
    (272/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.10054671 seconds)
    (273/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.07838622 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.11615487 seconds)
    (275/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096721739 seconds)
    (276/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.113444781 seconds)
    (277/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.090195373 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.119891602 seconds)
    (279/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.097926863 seconds)
    (280/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.143612273 seconds)
    (281/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078573227 seconds)
    (282/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.11781309 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.091971551 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.120904383 seconds)
    (285/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.136853828 seconds)
    (286/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094923426 seconds)
  done (took 38.241218014 seconds)
done (took 39.134174632 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104362581 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.153471516 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.101319772 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.14530874 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.1290986 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.105513914 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.12311624 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.1028633 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.127615782 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.10540108 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.128038959 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.084541997 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.128374933 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.100171701 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.125377648 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.142759149 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.105622595 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.120721453 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.092155869 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.117863559 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.092105311 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.116836935 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.094283353 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.108424313 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101516416 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.125446416 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.095552617 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.12621241 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.092548856 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.116975103 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.09140994 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.122310396 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090685468 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12776498 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095255577 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117131429 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.100948703 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.123788196 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.095557334 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.118107463 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.097999612 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.119692319 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096349947 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.123552443 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.094281313 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.117090015 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.092870668 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130571226 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118983414 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118141607 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.097629333 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.125016564 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.100616709 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.121407591 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09110925 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119011535 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.118318675 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119790598 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.11762314 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093731017 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.138608553 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096781231 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.11669542 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.092631647 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.116903642 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.099441871 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123814827 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.092009227 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.1223037 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.095300722 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.112021904 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.093240458 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.115230539 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089890716 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.122796638 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.100242022 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.087765442 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117765073 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.096950047 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.121370876 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.093294379 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115657539 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.094697159 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.118773856 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091799746 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.108242366 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.092210885 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.12032918 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.092646534 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.116598444 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096146875 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.1212358 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.095375464 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.124889273 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.093154891 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.120910855 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.093513936 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.117788695 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.094956481 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.116480554 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.088425725 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116770558 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.0977163 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.115685779 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.094815543 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127892104 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091411126 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.121546322 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.092458025 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.116499672 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.106720363 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.123372601 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.093965867 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119569265 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.090429217 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.121365631 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.092414866 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.117306417 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.09121493 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11821062 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.095258109 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.119016402 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092245092 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.120959451 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103859693 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.113696005 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.092128467 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115738872 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.093253923 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.120091289 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094211295 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.115254885 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.092472595 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.112228743 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091665201 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.114903961 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.09742057 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115533731 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.093494916 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.118183756 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.093476609 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.119076654 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094697818 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.118993878 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.091244854 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.110281906 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09475838 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116202999 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.095656915 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.117859136 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.094208737 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.112545859 seconds)
done (took 17.432275384 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.100815077 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.188771019 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150730156 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.153972391 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.149669511 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110799911 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.129151531 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.148735387 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.102556035 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146611937 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.149221947 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.139574189 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.129644266 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.125723696 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.136041006 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.100738909 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.124534387 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109226211 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.157883461 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.145269085 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150755637 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.10207597 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146498779 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.144597493 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.099639751 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.153789507 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.12734749 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.100846937 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.128059151 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.109745707 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.140334565 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.128274112 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.101853054 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.137025658 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.107400036 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.123341405 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.135575609 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.096641557 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.124401637 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.099931672 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138028355 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.136252128 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.097126062 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.132663733 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.124717731 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.104292818 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.123731431 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.099091937 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.125499859 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.096090167 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130683124 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.145460387 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.098986461 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.127750155 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.125801101 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.100604453 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.127660184 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.104815061 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.127252727 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.104200447 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.124423425 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.128560136 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.105718392 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141917419 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.124586248 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103183779 seconds)
  done (took 9.195144049 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.114699065 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.152164751 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131268981 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107273611 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.127410167 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088877846 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114077572 seconds)
  done (took 1.791239443 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091363681 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.145311484 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.122847781 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.148947886 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.141063472 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.125931191 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133947918 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.09145834 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.14002605 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.125018491 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.11900387 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.171494209 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.117646456 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.103390025 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.150621284 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090916465 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.150608477 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.09060195 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.123185099 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.148439674 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097323059 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137947172 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.104253693 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.118776903 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.1370576 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.093004567 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.182840435 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129848877 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091305893 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.12310343 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096702383 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.188014012 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138940102 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.101624762 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114519306 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119087136 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.136396792 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121528954 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.116100604 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122087128 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.112404969 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.122743069 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.098878571 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.122841754 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.098833443 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.131610664 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.127752716 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.099726353 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.122239159 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.11954875 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.126386124 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113673841 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.117776668 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.095692181 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.125750326 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122962081 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106457002 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.120787323 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.119738756 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12404543 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.116772261 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.142041146 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.137721456 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.117692032 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134580977 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.1382847 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.112856775 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.121933459 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098516804 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.123922394 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.117415257 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.120756309 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.101011631 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.131967311 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125310997 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.118440794 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.14397022 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096604458 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.130146048 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.095521293 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.119344994 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092601728 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.132962999 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094868356 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119432528 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1084627 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12888399 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.121787511 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.096143333 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.138624633 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.096442689 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.128808684 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.102634247 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.121573083 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133040887 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.119961275 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.128984783 seconds)
  done (took 12.697648312 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094513246 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.094308918 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.123970105 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.094172216 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.119256556 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094083141 seconds)
  done (took 1.58472231 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.123901243 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.12189043 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.108201306 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.124386997 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.160108933 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.116892375 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.145745147 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10220643 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.137366141 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.132772854 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.117431147 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.146352354 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.149433362 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099569806 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.141437675 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.100104603 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.144299503 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.122823209 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.107287881 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122083581 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.110420296 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.125178913 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095879125 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.140326964 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.102822583 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.127002904 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099261762 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.132829562 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.132021416 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.102941889 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124984573 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.101588099 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.125050845 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.101780841 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.142829593 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.125095548 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095821412 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.128003456 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10109621 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.126632345 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.119080103 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123474594 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.106258647 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.129195576 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.127939022 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.100016258 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.127818527 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099042292 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.142747969 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.104049982 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.128185131 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.101002977 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.126716636 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.102980127 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.125337797 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128060694 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.102965043 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.142854577 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.100150696 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.125455174 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.097002334 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.127244501 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12755959 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.101550619 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.126296601 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.102696825 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.126593441 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096194019 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122847106 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.099511591 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.128303419 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.097079459 seconds)
  done (took 9.552201233 seconds)
done (took 35.76458755 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.67210246 seconds)
  done (took 1.634840302 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.84171011 seconds)
  done (took 1.804721519 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.381723012 seconds)
  done (took 18.372863746 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.495134832 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.589795029 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.989722943 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.165971274 seconds)
  done (took 3.205010616 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.960490188 seconds)
  done (took 1.945410267 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.305962769 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.272291945 seconds)
  done (took 1.547705336 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.811190226 seconds)
  done (took 1.787430651 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.534675589 seconds)
  done (took 2.509384941 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.355076053 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.203049603 seconds)
  done (took 1.542820264 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.578448561 seconds)
  done (took 1.560531774 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.693358164 seconds)
  done (took 15.67901506 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.244765639 seconds)
  done (took 1.239463837 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.30046175 seconds)
  done (took 1.285449208 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.613736277 seconds)
  done (took 4.59818925 seconds)
done (took 59.686978146 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102263519 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.130472806 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105308515 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.128110714 seconds)
  done (took 1.44402209 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.107463774 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.125687901 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104434702 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.125522876 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.108207627 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.128825068 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100348017 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.183400926 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.126887114 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102710822 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.126660851 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100184544 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.128328963 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099472121 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.124540582 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.102516904 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.129832913 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.100644267 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.128335989 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.126841029 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.097779414 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.126566748 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.102596926 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.124808445 seconds)
  done (took 3.818206177 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102102538 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.096953956 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.125139581 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.096263765 seconds)
  done (took 1.409938472 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.106321546 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.139513816 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.111926222 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.131554971 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.113421087 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.138692603 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.123405913 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.096520241 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.124526941 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.105787121 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.123339438 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.116013849 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138524721 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.091735825 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.133918158 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.093628834 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118490937 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.11253564 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.131048168 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.133746062 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.096318757 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.130686827 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.10344706 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.137305778 seconds)
  done (took 3.846735739 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.176756791 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.13627851 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.146430036 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.103388724 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.17122721 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.148010617 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.095635664 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.148260459 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.095420582 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.144787927 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.126311102 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.146802981 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.138272262 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.123849647 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.096635258 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.128420911 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.115549421 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.139589754 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.124566835 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.109544872 seconds)
  done (took 3.6076314 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.102982209 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.122162559 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092792145 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.094194426 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.128508438 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099315255 seconds)
  done (took 1.637551813 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092554081 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.09135294 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.118793806 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.090364333 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.122435615 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091177921 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.115509619 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.091460012 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091830744 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.118203057 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090798733 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11607271 seconds)
  done (took 2.229301333 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.380284215 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120687206 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120180709 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.095333605 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.127431644 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094144095 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133205678 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094187698 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.150484146 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.095215081 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.119826331 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.098106573 seconds)
  done (took 2.624500048 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213486407 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100812031 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268079735 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.427742843 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160159374 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171005762 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.328351069 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169021194 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.186767325 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142525499 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199543892 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161639192 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158873308 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18445338 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144094224 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.180584543 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181214677 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20516381 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153688176 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209772403 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169066907 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173511112 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185442733 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15753375 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114213477 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162547638 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.124184236 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106482186 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203376036 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174277235 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179469971 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153091733 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116948836 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233507337 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220296047 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18364353 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.38756803 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137488179 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.194891151 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.18778636 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256386974 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119515957 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224364121 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133873799 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133091478 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185771057 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161668255 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.184832957 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137515896 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118026124 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215274072 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181514869 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.183067782 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140812066 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.3463812 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152519043 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.150878711 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193547589 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190157945 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194469506 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171455542 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124440633 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.224978288 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21113616 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182572989 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.12282587 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.169643287 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129192882 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179652345 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198984067 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181851116 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171546914 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.217008243 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13890224 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168549749 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172523223 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133074415 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182046799 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166089875 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.125212826 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155089282 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115348262 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132188494 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.190384951 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10018035 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206644164 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138306414 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.194202832 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218852327 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162608664 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1660011 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16968405 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170601022 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151977386 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.096062931 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153119264 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.165145547 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162833974 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136198422 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161310929 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120277412 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.132115013 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158504476 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.100436387 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164587833 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.138429398 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173642428 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169654301 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.105660542 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168710166 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153356481 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.163541393 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176906218 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190898381 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136873771 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109645684 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197888072 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163014082 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141158647 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179847512 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191013222 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.169731561 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142860545 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175457689 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19764492 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147098583 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193609554 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145941073 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110718824 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.155172902 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164843408 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162831297 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162552727 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107413783 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.160720187 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197886272 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.132281426 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141904945 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179597723 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104319266 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134051155 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12017671 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142676481 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.147513681 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.153079657 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.11687927 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163000248 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166569414 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159570258 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165030052 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146753422 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19793299 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138393903 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.163792976 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126287368 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123636408 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.184471379 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190597663 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13422256 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20365719 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.174687783 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270885121 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169537818 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108548308 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182873844 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133386043 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.096747408 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171906398 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165551493 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168493171 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.1867506 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260960945 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.16921698 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158918216 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155533725 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173631928 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.179059048 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160685063 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.150174993 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140441671 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201254113 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099780816 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.129130986 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.104191922 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147526055 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135291547 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109362895 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186380901 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170342163 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.259046412 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166044546 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146984703 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185990141 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103040457 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17071805 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176784828 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144531379 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.188995013 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186708263 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1737863 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147903067 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180881779 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.09732027 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128178778 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.138212745 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170931134 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10933245 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139150309 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147374811 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185629064 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182349505 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154512419 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268943356 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175983222 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196787814 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.099392203 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169032951 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177105897 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164448326 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.166032741 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135925143 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.166217032 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182612927 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149100119 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195725777 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16877989 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174250557 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204235816 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.163848773 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135071823 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126189588 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171015307 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146106999 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170954827 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151663538 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112888128 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160108931 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.14026957 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130744433 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188464752 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149400216 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185608186 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.162562068 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178932207 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10265634 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149114478 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16544432 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15241454 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.093364806 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176841411 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220183961 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121012093 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164046607 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180824122 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135537253 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.352043938 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219072926 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190434926 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141208642 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119537965 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16756881 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164702578 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17019303 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183831633 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149723841 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18686842 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163014381 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.119065972 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140849176 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152748227 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154679737 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.127454142 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.137832705 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.159675108 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.151065281 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192124925 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148434479 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136228034 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169971337 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15355982 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.158795773 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147900109 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206966496 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164321514 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18455531 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.160492418 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141656668 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234359531 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100748619 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134928296 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.104049124 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184924437 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138776688 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164452861 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.224794628 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273437289 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163695152 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172595754 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144355657 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.098036265 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165651421 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155003508 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26808421 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119155588 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.140999786 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197347067 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.156117905 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136110152 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16821812 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.337796946 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149076976 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18051513 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.092692108 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.34566217 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103309859 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136275065 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165105508 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176931179 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.14221842 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.159392293 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170790408 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151087868 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165647443 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114580772 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.256674187 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220165349 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205585138 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182460864 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.119399708 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163551939 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168569068 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180952777 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148882623 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.151225077 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168243854 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189386324 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.193573287 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.108805083 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170733238 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169208 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166094928 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177808856 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13974608 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204556044 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137508268 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172874325 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145370242 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100388159 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165889501 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.257248286 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11122358 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179223305 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163262239 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138888705 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130399947 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128247068 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165919038 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149039363 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.133932461 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186540109 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.101963897 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169950193 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185915735 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136056886 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131233548 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151333559 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143030563 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149141472 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122136351 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1412462 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.173901822 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189948535 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.107591654 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182293499 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212230135 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171713464 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16571377 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120616905 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668203174 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.13216634 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18756384 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124346132 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189440662 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154858377 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173499675 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167073064 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156959698 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175443921 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156702097 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.196105933 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200951864 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.134509941 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136588152 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151724599 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148578425 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.107676884 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157575218 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169361538 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117354763 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.143831194 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.162638617 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151046032 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.149629927 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115497565 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189492803 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153378577 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188668332 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186083238 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144603747 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173421124 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180319776 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135632959 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.165055624 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176998384 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116893793 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156959283 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.136456547 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.111239683 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186289632 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.130457641 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168828785 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166859348 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141169427 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171658058 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.139594845 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166576552 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148679361 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168096057 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107113059 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159695706 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163584949 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135145106 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105797154 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161562752 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166755447 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.164226871 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10289926 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.176972831 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188541196 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.102688454 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140613256 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.356119227 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137566614 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225409811 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.128658157 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141123883 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150087248 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160860022 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.129812393 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166004764 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134803644 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108910658 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138000846 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.187209505 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.159808774 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161583917 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201142014 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167431518 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208029341 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.140725757 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.241363232 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145007268 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161652403 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.10616038 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.134479196 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149896389 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111581702 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150233719 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.262584183 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186713733 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.157604418 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.122123567 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132037315 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.103502272 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139125629 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166632053 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161833711 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163918665 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121199658 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.122584447 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150189299 seconds)
  done (took 80.061762114 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.153497377 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.137436627 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.153477279 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.199961386 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172980503 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249046107 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211649809 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232612761 seconds)
  done (took 2.589897214 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.10592341 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.163618187 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143747323 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.129152618 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.095588897 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.335327575 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.143910192 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.128315182 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.152203551 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.137812917 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.09724017 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.56503263 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.099429036 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.12919308 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119168176 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.094450819 seconds)
  done (took 3.71463574 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.292851349 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538620902 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.090315593 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.250150519 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.23003239 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.157993767 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.753131561 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.187411755 seconds)
  done (took 12.583651589 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.126663699 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.14434775 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.140440258 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.167945891 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.123399623 seconds)
  done (took 1.792183462 seconds)
done (took 122.339352902 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100057716 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131294046 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102337402 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132225555 seconds)
  done (took 1.541166065 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.11271775 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.088410971 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.117889562 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085136657 seconds)
  done (took 1.485339221 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.42729391 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.114257558 seconds)
  done (took 1.660446859 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.120529577 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.139016913 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.111221824 seconds)
  done (took 1.460322588 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10882774 seconds)
  done (took 1.201637432 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.102200663 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.104126189 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.146317522 seconds)
  done (took 1.445809276 seconds)
done (took 9.883341873 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116421625 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.530576695 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.389996565 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.142750921 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.727885872 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.384467944 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.050277187 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.160595318 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.142237852 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123999648 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111928421 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.707162726 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.037012986 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.44650557 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.020550727 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.444582346 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.680748173 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126714672 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.128682698 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096942258 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.028379554 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095031297 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096660891 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126760637 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677114869 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428400081 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095265076 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.485636879 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122016859 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100906558 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.412009136 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096023746 seconds)
  done (took 17.412801257 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1006823 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183619906 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.102864147 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12583755 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099100971 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125924292 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104984474 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.137420369 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186061455 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094527109 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142493528 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094354587 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129611768 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095824966 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14462117 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094886052 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126406089 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098068469 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131218189 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096645118 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.143647495 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094674195 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125722166 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097380742 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124235907 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.1071642 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125351178 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.108183988 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123980495 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099904744 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129965741 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096709321 seconds)
  done (took 4.888353691 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146924589 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192499016 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135227608 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130708412 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.177463085 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125770352 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.179204784 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.163983172 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188514933 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127103068 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113284217 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124763694 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131860487 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.128828275 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116565125 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126170536 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098083049 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.127189848 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.102650366 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126902287 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115699953 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124315015 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098400032 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127541397 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09586914 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139345478 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096897034 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.137773441 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123753551 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101548556 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129791628 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097435905 seconds)
  done (took 5.251839826 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.104464977 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.13315162 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113170114 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.143673504 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099002598 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.13249731 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.104300017 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126715183 seconds)
  done (took 2.058553609 seconds)
done (took 30.70319564 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113629294 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.10140387 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.139084438 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.109764943 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.13622155 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.11958916 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.124721659 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.108086789 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.137430475 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104448165 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.14076706 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.095349671 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.126090581 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.094779991 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.137280775 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.101574055 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.139643924 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.105690716 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.145131435 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.111639718 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.125854882 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.107978703 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10490186 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.147043281 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.146260387 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.116702297 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.142407605 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10288325 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.126511208 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096884787 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.139013432 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.120854872 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.131761162 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.112474425 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.131408759 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.100770275 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.126151495 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09815079 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.139502328 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.107263959 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.130957593 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.107424407 seconds)
  done (took 6.144535865 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.124861714 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.168928118 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.099456409 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.126531012 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.097562084 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.16382604 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.162533814 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.100193086 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.127197859 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.121599284 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.150848807 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.097142303 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.126695533 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.097361841 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.125913808 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.097933803 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.149114016 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.121029535 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.155635638 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.126575211 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.173789704 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.160243013 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.159464924 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.120797649 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.167721481 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.163630652 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.117903693 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.162235867 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.126912585 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.129176276 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.15611821 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.128377532 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.130212871 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.096978515 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.16646507 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.135559546 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.155046492 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.166411006 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.159264451 seconds)
  done (took 6.423331735 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10638419 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.14042332 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118873569 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.192927709 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135250315 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.142329231 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107104882 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.145273867 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113857593 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.125945687 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.106158535 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.157705609 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.144948733 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104855278 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.102142017 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.141362991 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.145581448 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.098970433 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.13052988 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.116549427 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.144761801 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.10969123 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137652966 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.107501002 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.124990509 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.106097748 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.128738872 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.111519163 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.133368616 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.104668666 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.129630017 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.101443094 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.133401728 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.109381444 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.129937795 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.104690536 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.148800269 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106445835 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.137689866 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.128934579 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.138911954 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.100421765 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.148498076 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165477445 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097311351 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.133092606 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.10383546 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.135248114 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097057242 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115659325 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136597197 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097885145 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.14285434 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.127326227 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096729332 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140668538 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099452021 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09967639 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.134017455 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.104185924 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.146557185 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.101593674 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141665896 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.097372555 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.132340439 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.096531928 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.127824443 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.102368706 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14780379 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.100832979 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165943037 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.134616933 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.103175988 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.133962401 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103724668 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136163662 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.097344861 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140613681 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107221989 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.101824019 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.136628629 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.100315888 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.130604146 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115047937 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.141331043 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.133187009 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.1032257 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.132949512 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101002618 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.126643006 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110978392 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.128286812 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.100893258 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.143613489 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.0990138 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.100440898 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.133497619 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101876441 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.125984776 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110295328 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.132541335 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.09702887 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.136550141 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.0974941 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.131065263 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.105701504 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.13109453 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.097133197 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.132313308 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.103914645 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.126529462 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.101014841 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.130733568 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.10078319 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.140847524 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.10438326 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129752658 seconds)
  done (took 15.335306029 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.24378335 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.225095828 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.198632621 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.309206927 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.149568438 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.124193506 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.220828319 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.17867352 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.128442105 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.135939979 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.183757639 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.193626512 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.183875392 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.196935813 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.188133165 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.129160554 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.117134862 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.17889794 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.223727828 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.304450398 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.147347252 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.111887486 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.17016479 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.167246073 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.146998274 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.11310239 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.151137198 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.1480308 seconds)
  done (took 6.084721257 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.113992077 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.163754389 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.105409067 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.152783969 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.154904251 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.098415402 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.13358675 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.098633106 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.141580063 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.113191653 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.130263926 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.105294409 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.134450953 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.108318299 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.128783738 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107023893 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.138898563 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.108014145 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.131596447 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.1025447 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.142583732 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.11620529 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.134711624 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.10010819 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.145295492 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.130013862 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.100831548 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.149561029 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.135176268 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.123487473 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.125694741 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.106929562 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.142309533 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.098516886 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.100427973 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.132127825 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.099974782 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.131698469 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.099734507 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.125937535 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.098007102 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.119866283 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.100657197 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.143690596 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.105147787 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.12663664 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.104037639 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.132696715 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.104700605 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.125860009 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100238971 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.100804922 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.133204637 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.109507262 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.132034923 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.104816727 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.132578255 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09996217 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.137682127 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.100802218 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.126072954 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.100466501 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.135734077 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.101877605 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.137128772 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.105049161 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130031447 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.100024861 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.13441355 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.105418355 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.131331276 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.607281041 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.12774794 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.099653086 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.138682382 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.106526859 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.131860565 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.10057339 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.100745497 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.127827976 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.086899338 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.128809313 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.085565712 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.132617796 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.097567046 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129196535 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.101336488 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.103488493 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.14505698 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.137433759 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.106344277 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.129133529 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.100698929 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.133067747 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.096038397 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.133179723 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.115375885 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.148526265 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.097506211 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.127212202 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.11344919 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.13029003 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.096240339 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.120767771 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.108364247 seconds)
  done (took 14.103080681 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138802055 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.178997593 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.130131539 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.117761342 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.164157434 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.172971319 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10678547 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.137385187 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.099411722 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.118181051 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.13420576 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107110068 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.132844085 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.11266201 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.17130905 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.139646713 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.100615725 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.143871119 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.104494785 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.181557814 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.148724686 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.137971991 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.170443086 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.132011592 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.104241314 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.16526511 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.173487974 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.112449465 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.141206011 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139812618 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.144177232 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.173669755 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170376892 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.103704557 seconds)
  done (took 5.846135045 seconds)
done (took 55.032465165 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.23168404 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.423500153 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.205401676 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.19538963 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.243630694 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.250317624 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.20069 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.389651668 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.969083157 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.194110242 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.196271898 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.197268083 seconds)
done (took 27.822455349 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.318406852 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.351453941 seconds)
    (2/2) benchmarking "String"...
    done (took 1.492119685 seconds)
  done (took 3.977393377 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.196799866 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.196960046 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.440292376 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.202880922 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.196654347 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.214397079 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.209003431 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.221399657 seconds)
  done (took 15.803861584 seconds)
done (took 25.419463185 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.285587977 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.439343759 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.465016363 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.223960457 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.197736139 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.205041054 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.20162772 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.255833675 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.21478048 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.200051215 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.198677179 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.490866045 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.234289314 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.584557325 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.199353205 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.210234839 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.216576088 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.508144542 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.216244987 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.250374913 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.187004192 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.209939752 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.20105961 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.220975769 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.210220118 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.199186415 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.252300448 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.217241721 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.494173061 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.214354421 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.243810307 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.203021972 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.260186518 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.217443441 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.31181814 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.238878571 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.436221157 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.208795464 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.195248749 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.211211763 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.461739167 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.60854028 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.200133643 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.200450957 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.202645728 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.204341299 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.190805901 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.925972584 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.213827565 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.207364227 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.231052336 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.618672691 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.203610939 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.223731571 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.212946767 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.533037983 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.203713579 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.269164435 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.23634221 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.216839399 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.201631894 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.202097411 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.262394469 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.215640393 seconds)
  done (took 144.103337105 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.201095007 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.201506108 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.201864231 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.209389635 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.201964962 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.203716363 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.201043588 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.201934803 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.203515569 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.232940386 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.203884849 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.203782937 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.209889617 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.200508922 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.205689714 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.219121939 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.21142175 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.22054024 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.223345891 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.203234128 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.207074236 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.21304534 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.220840997 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.202637144 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.24885323 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.306779056 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.251555973 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.204282502 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.213480328 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.204369991 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.247676936 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.229103068 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.831818817 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.066556621 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.218599638 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.235393876 seconds)
  done (took 80.389494952 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.203151076 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.204227067 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205203847 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.237266297 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.204155372 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.793045331 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.80063446 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.008242655 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.299584201 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.625554219 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.476038826 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.204997969 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300697872 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.216934618 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.205749507 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.22079119 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.233114102 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.213639842 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204222893 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.791446251 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.226726491 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.593889137 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.393103171 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.22062401 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238229672 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.60453275 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.205914566 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237169504 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.541284144 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.254194424 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.2052373 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.613716893 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.955288279 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.208076227 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320641777 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.207586688 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238530735 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.205877366 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.48959093 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.206558196 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.206818812 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.214671415 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.91540799 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.216073298 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.79494529 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.216544261 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.17460491 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.207131972 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.207047416 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.755254008 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.23775105 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.951291703 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.231884057 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.206883888 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.207151364 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.207815524 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.20662992 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.209588098 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.240240116 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.554356794 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.329304971 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.208770934 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.211261314 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.240959653 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.207795589 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.627582303 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.21623973 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.386877229 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.291296148 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.319406784 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.780615183 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.208579795 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307244485 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332098739 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.209710127 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.208489831 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.208302986 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.206972586 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.318913854 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.208228852 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.641863254 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.386055233 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.226242197 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.622447617 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.318272166 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.209910523 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.621967995 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.219231692 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.209416365 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.960772054 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306646447 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.20855691 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.209381628 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.208651947 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.644592408 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.210109998 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.801182917 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.478259834 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.220162188 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.97460984 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.218102067 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.653825258 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.776965508 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.886081912 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.211377239 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325439102 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.388529555 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.22705163 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.211455449 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.624766048 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.221955206 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.268865699 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.210869164 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.61162223 seconds)
  done (took 369.657481158 seconds)
done (took 595.275293068 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.908482576 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.858433309 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.997183894 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.888502844 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.855509509 seconds)
  done (took 10.641924406 seconds)
done (took 11.774666854 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.404463855 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.405185146 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272519202 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.407150406 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244786849 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.42460899 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.393424234 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.233248882 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.317822365 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.295243329 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.316483445 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265936249 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.248123287 seconds)
  done (took 18.362685398 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.558045441 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.225064871 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.307612359 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.546540977 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.26380358 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.5445088 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.433165469 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.241778395 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.422712613 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.238611552 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.229006742 seconds)
  done (took 18.14743367 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.581039207 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.225602659 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.308539824 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.564831943 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.266242776 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.558355987 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.455866252 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.244743614 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.436571908 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.237482977 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.229563136 seconds)
  done (took 18.244033591 seconds)
done (took 55.888372086 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.253729235 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.385729561 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.240235916 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.225366771 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.224661147 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.225546327 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.226191456 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.224684258 seconds)
  done (took 11.143426656 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.224105626 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.221848363 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.219445058 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.222422236 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.223165928 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.220906792 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.223075819 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.221808599 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.223057696 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.220517255 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.223485081 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.220195496 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.221761952 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.222792864 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.221739451 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.22260882 seconds)
  done (took 20.68925079 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.223391828 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.222671256 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.221440459 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.222173685 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.221605731 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.222236799 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.223209311 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.221898264 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.221934824 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.221627165 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.223243184 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.221448902 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.22171609 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.22209599 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.221631569 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.222582658 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.222706991 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.220949915 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.227072439 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.223308371 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.222228163 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.222909103 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.222395856 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.223169517 seconds)
  done (took 30.47954105 seconds)
done (took 63.448498521 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.230715883 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.220040301 seconds)
  done (took 5.590439167 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.285242862 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.286041138 seconds)
  done (took 3.713195367 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.226350164 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.226788835 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.22645738 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.225625289 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.225844757 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.22600667 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.225939605 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.225865609 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.225905137 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.227395053 seconds)
  done (took 13.402362583 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.227533625 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.225822968 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.224542727 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.226833495 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.226775391 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.224503932 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.227627746 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.227957303 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.226741264 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.224942983 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.227133672 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.224191275 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.229025015 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.224411848 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.227667572 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.22505053 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.224161451 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.225486458 seconds)
  done (took 23.211474734 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.240155211 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.24853404 seconds)
  done (took 3.629557555 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.353898088 seconds)
    (2/7) benchmarking "second"...
    done (took 1.266726713 seconds)
    (3/7) benchmarking "month"...
    done (took 1.335011173 seconds)
    (4/7) benchmarking "year"...
    done (took 1.323257526 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.265821196 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.246901361 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.269292076 seconds)
  done (took 10.200397445 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.228152996 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.42141885 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.531078934 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.815349318 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.229642543 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.231742723 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.131574592 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.232773689 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.233986001 seconds)
  done (took 14.196562024 seconds)
done (took 75.083308942 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.216529895 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.240611192 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.243012006 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.232665203 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.519305566 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.245554364 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.226587039 seconds)
done (took 16.066716076 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.215975964 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.219288817 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.228894759 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.220724142 seconds)
  done (took 10.026913939 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.228028187 seconds)
    (2/2) benchmarking "read"...
    done (took 1.544554946 seconds)
  done (took 4.915089759 seconds)
done (took 16.084696016 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22886957 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.229994784 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.230554871 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.22781521 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.227775832 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.229027668 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.227581838 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.226979225 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.230402109 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.231162262 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.231060973 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.229621076 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.229685504 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23037067 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228587479 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227975905 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230631961 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.228217936 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227443676 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228341223 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229564205 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.228692162 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.22897445 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.228644973 seconds)
  done (took 30.641523634 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.230711018 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.2288898 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.230700738 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.231251978 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.2290105 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.231163756 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.232405592 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.229503396 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.230603108 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.230873686 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228703617 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.229487101 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.231385444 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.230402975 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232278616 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.230036862 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.232711317 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229992299 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233539972 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.230089286 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.232642814 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229535832 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.229426326 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233128404 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.229588024 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230161517 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.232009618 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.230195956 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233073886 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.229890172 seconds)
  done (took 38.06663464 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.236850216 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.240129355 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.233089536 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.232195156 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.232505793 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.232629973 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.232483476 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.2328227 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.233887194 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.233606704 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.233470229 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.23247617 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.23270666 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.232620515 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.233970056 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.23289196 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.232976349 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.234100095 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.234089733 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.233590183 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.233618223 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.234125067 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.234386709 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.233940162 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.234719736 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.234320801 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.233221365 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.234020624 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.234802668 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.235373274 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.233929394 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.235384401 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.234826184 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.234571137 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.234441389 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.233616204 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.240006368 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.241976399 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.235352438 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.23550641 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.236254779 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.235176706 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.235285779 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.235796618 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.236000594 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.236312187 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.236065378 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.236801746 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.23599286 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.235864966 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.237846222 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.234936213 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.236296526 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.236529222 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.236482014 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.236131352 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.235728823 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.235448551 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.237112999 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.236241152 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.237591974 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.236768221 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.236807904 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.23722768 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.236041133 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.23629322 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.235791283 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.236517295 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.237151569 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.238142415 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.236753248 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.236979671 seconds)
  done (took 90.087343111 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.236924898 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.234823554 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.234867871 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.233666676 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234415582 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.237243893 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.235183615 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237557981 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236196375 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.23816704 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23868225 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.235169579 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235153774 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.239018069 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23783914 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.235685803 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.238199035 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.236084944 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.237967739 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.2392437 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238180118 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.236231781 seconds)
  done (took 28.35644622 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238275937 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.238972394 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.235608163 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.240183568 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.237827622 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.239613623 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.239239517 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.239549286 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237961368 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236000624 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236510067 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238620234 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.23870088 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235403186 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.236847193 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.238608772 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.239061364 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.238968577 seconds)
  done (took 23.437120767 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.236468516 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.237147305 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.239774829 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.237327852 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.23846921 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.240384776 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237004033 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.240165753 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.241262157 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.23759235 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.239873542 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239490847 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.241739718 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238472739 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241119227 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.237617532 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.240955594 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237070835 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239128113 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23898567 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.240107007 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240718866 seconds)
  done (took 28.41353012 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239714757 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.240628134 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.238649231 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.238123936 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.238894313 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.240967667 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.242457401 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.238706243 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.242143776 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.24171817 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237508696 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.240788242 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.241648713 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.238112663 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.238804909 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238657505 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.241540471 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.240832448 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241907423 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.239844227 seconds)
  done (took 25.955613932 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24301799 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242980633 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.243747338 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243241002 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.243730695 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.243436627 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243244967 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.244049264 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.24358033 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.244866691 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.242901961 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.241870644 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244487031 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.242962866 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243423603 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.243519475 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243968938 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.245028461 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.244158063 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244474297 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.245106389 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.244455376 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.244588734 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.244194795 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.244133425 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.244186691 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244846178 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.2431606 seconds)
  done (took 35.982417321 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243049885 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.244541215 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.241288846 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.242900021 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.243455328 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.242075852 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.24197942 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.242905868 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.244412098 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.241965135 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.244901711 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.244734277 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.244450791 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.245805424 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.247238317 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.245165462 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24545273 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.242715701 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242334031 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2424686 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.24609685 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244449473 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.247133382 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.243159609 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24353757 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.245601296 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24356638 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.244252761 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245871988 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.243661945 seconds)
  done (took 38.477578628 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.290037292 seconds)
    (2/2) benchmarking "in"...
    done (took 1.28989096 seconds)
  done (took 3.736653471 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.243446376 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246477364 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.246270306 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.243671252 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.2439546 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.246334802 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.246945322 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244768263 seconds)
  done (took 11.120570807 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.245933005 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.247470131 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.24794828 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.247974958 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.247556236 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.245872888 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252740893 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.269003706 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.246861972 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.248046279 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.254306365 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.253311977 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.248639899 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247860229 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.247144341 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.248462863 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.247911429 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.248687225 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.248810623 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.249749398 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248553525 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249566241 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248372182 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.246087991 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.249364638 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.257949676 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.250576178 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.250651275 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247474008 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.251109452 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.247782396 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.248235625 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.250101005 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.250354312 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.249211968 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.248216411 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255934317 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270049648 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.254325744 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.250957132 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250649726 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.247583106 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.250566504 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.251336808 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250883931 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.250044564 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.251265184 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.249479836 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.248546708 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.253991102 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.257735156 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250729253 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.248847995 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253981328 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.251688711 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255327463 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.271814713 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.254577801 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.2623565 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.260258002 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.263812415 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.276234739 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251967522 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.250269205 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260792068 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.274359127 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257659529 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.269511792 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.249676907 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.252517241 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.257107027 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262947425 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.277353225 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.251533633 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252045532 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.25330348 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251516421 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.253110047 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258974285 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.274699951 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.252930061 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25219334 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262035952 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274561684 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.251164522 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.255365611 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.253092869 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.251679233 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.252922216 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261610582 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.272962103 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.25302346 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.251226758 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.251569214 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.251200203 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.252183189 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.251216719 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25249295 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.251339344 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.253686617 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254054536 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25672352 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.263112067 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253964351 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254913533 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.259460122 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.254136925 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251310889 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.25860775 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.254015974 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253719906 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.253971925 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.26172382 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.251581942 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256406164 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.263590578 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.25446508 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.254064477 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.255575528 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.255529682 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265815052 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.281053426 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.256961842 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.255580967 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.259933954 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.270800974 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256465749 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.257168693 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.255674407 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.253609622 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.253710678 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.25704665 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.257034439 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.255239604 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.256225437 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256466986 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.254402276 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.256526773 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.257469196 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.257995909 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.256088975 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.255997369 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.256103467 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.257389545 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.256907631 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.257489447 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.261860889 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.255745554 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.25646703 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.255415702 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.25476578 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256407973 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.256385435 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.258354185 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.255389289 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.256937419 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.255695453 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.257510611 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257465643 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.258955354 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257999793 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.257527228 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260365788 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.258107518 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.260766111 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.255981114 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.255236814 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.257318827 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.258742962 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.256776494 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.258241373 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.255151016 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.261459424 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.267767809 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.258080279 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.258266848 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.259261193 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257581086 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259147194 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258831108 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.260781817 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.265599655 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.258214321 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.264873834 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.258894987 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260358887 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.260614693 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.257850032 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.25816899 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260588289 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.261109115 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.267272418 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272272632 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283819366 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.260390963 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.264207427 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.258865776 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.26391595 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.262939655 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.259502874 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.260007813 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260956315 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259190192 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260907877 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.260635281 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.259686313 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.258758869 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.259830237 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.261503701 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.261277708 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261493738 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.259351288 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261193854 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.258645576 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260280875 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.261027881 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.259411237 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.258089506 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.258989893 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.25963778 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.261505459 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.261188991 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.265084859 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.259606553 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26090258 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261425417 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.26016975 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.25964851 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.263111415 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262055239 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.259218762 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268953067 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.281028424 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.261797108 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267047587 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.280330864 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.261434655 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.264132746 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.261562403 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.260840202 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.264006601 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.274082551 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.26394999 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.263709079 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.26289657 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262171333 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26433538 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.267901859 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.261041158 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.262368535 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.265413734 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.263917645 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.261123395 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.263720545 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.263474395 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.263545373 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264844229 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.264613084 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.264003682 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263883592 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.263268394 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.263656396 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.264457673 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26738997 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.275572307 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.267576143 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.263620004 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.265663368 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.265133666 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.268115295 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.264918767 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.265009625 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.263590677 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275664531 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.290971162 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271439863 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.28463007 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.266388071 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271336 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.28539388 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.268456639 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.264277217 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265108861 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.26458359 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.264324834 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.264014382 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264860926 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.266890894 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265811759 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.267021989 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.27059637 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.267114914 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.263642184 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.267290624 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.266410357 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.267880135 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.264853209 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.26751801 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.26734841 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267730219 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.263789348 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.265814608 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271936455 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.286257094 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.266819361 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.265233697 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.266713364 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.265108605 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.265935198 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.266538008 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.270037405 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.275764987 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.270382957 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.274660872 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.268396935 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.276672188 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.268034679 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.270107524 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.278960303 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.265986675 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.265859997 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.267112087 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.267906907 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27498832 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.289017775 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.268375834 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.273701143 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269092209 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.269771742 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.269038978 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.26849534 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269884668 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.269410165 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.275659583 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.291517067 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.272873052 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.270077485 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.267445956 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.269772389 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.268595381 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.267508796 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270914729 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.269581351 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.26918189 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.270011773 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.267777307 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.270465073 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.269296542 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.269588735 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.267697375 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.270348597 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.276056206 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.292214813 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27586187 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.271461008 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.276396584 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269401568 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27616257 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.291771482 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.269888762 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.271327584 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.271479534 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.270327084 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.269293051 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.270413747 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.272199493 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.271716528 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.274548884 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.270705478 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.272378202 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.271371174 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.271867343 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.270905319 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280394564 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.296542707 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.271776953 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.276282046 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.269666164 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.272097817 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.276472545 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.271830431 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.269182014 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.274119748 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283125417 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.28116549 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.270483021 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.271897227 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270273132 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273361711 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.271718384 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.27289566 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.272821409 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.273619383 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.271516847 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.272247972 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274338398 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.272011227 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.271209269 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273244231 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.27467372 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.282662646 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.273926361 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.273374974 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273648472 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.274994528 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.271822225 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.272495933 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.274229255 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27277718 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27389722 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.274659417 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279967356 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.279965225 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.274978107 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.272305087 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.274537382 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.272228937 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.273703894 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275597392 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.27292712 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273746964 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.273546818 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.273920703 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.272652517 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.270367222 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.274738222 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.273647653 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275018172 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276412628 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.282485839 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27595972 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.273022448 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.274844199 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273770866 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.272980148 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.272806805 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.280655195 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277950738 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.286306025 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.283347285 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.279981929 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.274157479 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277895162 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.285144374 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.273444851 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.275885316 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.276296528 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.27656873 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.275244195 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.279335469 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278109397 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.282637003 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.276248584 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.274657373 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.283922077 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.300073798 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.277488192 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.277716443 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.281390916 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.27634044 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.274378338 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.277715285 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.274603339 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283742103 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.297415054 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.277252554 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277560907 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.275402194 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.276836267 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.282807426 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27822388 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.275997546 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.275037185 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.277729076 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278438854 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277721474 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.276170359 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.275883616 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.276307765 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.280200519 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.284015755 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.27508937 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279251247 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.277015877 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.277710101 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278827561 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278483996 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.275497489 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.276495915 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.276988356 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277897463 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.277592963 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.279919067 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.277635305 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.279115651 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.281088131 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279497543 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.282441055 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.289386975 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.286846076 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.27782118 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.279016967 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.278964058 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.280844821 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27923675 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.280672208 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.279183593 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.278380259 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.281159597 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.279344696 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.280112895 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.282233679 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.295265187 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.304005215 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.279734469 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.278530038 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281434218 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.281957691 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.278357658 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.282067068 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.27993501 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.284835665 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.290526111 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.281527592 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287492692 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.301969979 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.283747302 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.287641571 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.285135376 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.288761757 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.282507675 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.281933983 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.283299237 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.286304775 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.298627993 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282469066 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.292834325 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.312916195 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.301003836 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.281384359 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.283412583 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280102294 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.284169379 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.283431676 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.281910361 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.282297078 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282726965 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.28260228 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.283374284 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.287252545 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.28383077 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.284107334 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.283006864 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.280124454 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.283105063 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.280855244 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.282974765 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.282896752 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.284894224 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.28502545 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.284090985 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.282368412 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.29698578 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.312137109 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.284294281 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.284485968 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.281923524 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.285750393 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.286523033 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295434424 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.292384478 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.284870745 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.284637264 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.284724083 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.283912711 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.283844078 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.283471294 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.285119729 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.283988099 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.284649013 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.297466173 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.31215523 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.288334496 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.283360124 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286786009 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.286764773 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285336186 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.28654675 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.285859704 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.284576904 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.288262337 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.291024985 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.287009575 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.286619525 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.289103289 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.29654376 seconds)
  done (took 757.395230907 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.284316459 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284965166 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28557548 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.28462214 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284824738 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284354774 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284659379 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.284284213 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.285421474 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.284590337 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.284094626 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284550819 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284677251 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.284912968 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283734418 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.285241344 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283997367 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284836962 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.284400688 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284752741 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.284862334 seconds)
  done (took 28.172203779 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.28753099 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.286126987 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286668902 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288654795 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285943236 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.287875113 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.286321793 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287948279 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.289804303 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28449915 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.288484837 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288655423 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.286408148 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.28510262 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285940811 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289225338 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.288503058 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.287053345 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.288614508 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.286668263 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.290510894 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.287595443 seconds)
  done (took 29.520472804 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.289896244 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.290099786 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.288565361 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.287964143 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.291138643 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.287565431 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.29216042 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.29072225 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.292512771 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.288962329 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.287649896 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.290068129 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.297901672 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.297050629 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.290349118 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.290677776 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.290990383 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.289728752 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.290638309 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.288143798 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.294966353 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.309535923 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.287441837 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.288620678 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.291387445 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.291130381 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.292872801 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.292521901 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.291665397 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.297192696 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.291225544 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.290755174 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.291843431 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.290096828 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.29284695 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.295779365 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.291417788 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.288794409 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.293181462 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.301808245 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.31462182 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.292154556 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.296684256 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.312755692 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.293223107 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.294681339 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.300724409 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.29004677 seconds)
  done (took 63.271108272 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.29248491 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.293331806 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.29149367 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.2945829 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.293000611 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.292669306 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.294244073 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.292492508 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.291988011 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.290096296 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.294010234 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.29019347 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.290493562 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.292646499 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.293390003 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.290255793 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.290966909 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.292019922 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.290503706 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.291533933 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.291779931 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.293724528 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.293471916 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.292391231 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.295127945 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.291350533 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.292150717 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.293827502 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.292252262 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.290828689 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.295538515 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.294463324 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.294548802 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.292586143 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.291748194 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.295120983 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.294265361 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.291226677 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.294660616 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.291623945 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.294575007 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.295493155 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.295349426 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.295106793 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.29296679 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.29371791 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.293375377 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.293337951 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.292494211 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.298001338 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.294661153 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.292385416 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.295207714 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.293684565 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.29434895 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.296252417 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.293427566 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.293072479 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.296807894 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.294771188 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.293476721 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.295493824 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.294669011 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.296859083 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.296387819 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.294571063 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.294940953 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.297183872 seconds)
  done (took 89.159681554 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298206371 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.297246837 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.298358549 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297439092 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.296823406 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.297786952 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.297114093 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.298420798 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.298276862 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.297389942 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.299250457 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.298315848 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.297784101 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.299091732 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.297868353 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.298138035 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.298067104 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.298004563 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.29822565 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.298028819 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.299722488 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.298091486 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.298576373 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.297691958 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.298497751 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.298923694 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.299458991 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.29899049 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.299393893 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.299171329 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.299070373 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.298131229 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.299286904 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.299741772 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.298601858 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.298885456 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29801765 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.299592147 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.298251446 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.298325413 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.298876282 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.299397937 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.299718604 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.299521126 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.298575398 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.299508635 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.300765037 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.299897823 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.300226515 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.300115002 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.299622166 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.300527527 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300363532 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.300913301 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.300486281 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.299908281 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298795504 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.301443491 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.300427228 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.300733086 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.301340742 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.301631405 seconds)
  done (took 81.744323329 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.30032897 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.29984963 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.29822231 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.298868298 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.299752563 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.30030973 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.300105845 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.301435755 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.302908884 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.301377913 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30372828 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.300491115 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300730983 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301523061 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.300719053 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300579746 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.300991945 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.299952905 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302980381 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.300081298 seconds)
  done (took 27.221966222 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.300109493 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.303585982 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.299869529 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.300733688 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.301565329 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.299954591 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.302098371 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302342158 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299438756 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302887149 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.304031328 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.302489587 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300106073 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.299512174 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.303029594 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.300432215 seconds)
  done (took 22.0305073 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.301694265 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.30271808 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.303910135 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.302878011 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.301190616 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.301407541 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.304503302 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.300866583 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.300406144 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.303334176 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.304436692 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.304217396 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.304568797 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.302899422 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.302098842 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.303812155 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.302309686 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.30207197 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.305141477 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.304701876 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.302873205 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.301045287 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.304366165 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.302814092 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.301989718 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.303500331 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.303093996 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.302382457 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.301696796 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.304118452 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.302268524 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.303164762 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.301316117 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.302171337 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.304730149 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.302163966 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.304995655 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.305493943 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.305392697 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.305183195 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.304867712 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.303417801 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.304959848 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.305212798 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.30253042 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.304916859 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.302606472 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.304005089 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.303381963 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.304256834 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.306382491 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.30663791 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.307148217 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.306904133 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.305966313 seconds)
  done (took 72.907307721 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306182825 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.3060049 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.303602051 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.307020204 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.306730797 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.304193845 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.307720609 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.305789192 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304472998 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.307058009 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.304284623 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.30848879 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.305715685 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.307253469 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.305417058 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.307725288 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.304862981 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.305189594 seconds)
  done (took 24.718564678 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.305992976 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.30690423 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.307219476 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.305484531 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.304833951 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.309411844 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.305044586 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.307413422 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308086291 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.306042974 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306901375 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.309750504 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308451436 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.307884502 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.306046941 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305657038 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.308700584 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.308340771 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.306068049 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.305844203 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.308721634 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.308136461 seconds)
  done (took 29.970595024 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.306896066 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.306004586 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.306403812 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.323932556 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.328130509 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.307225205 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.307433489 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.305789336 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.331424582 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.36246305 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.356223685 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.326978906 seconds)
  done (took 17.081632485 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307737115 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309852882 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306809873 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311229573 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309456148 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307502137 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307415191 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307485147 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310680693 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30848016 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308184943 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309974169 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310780283 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307789841 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311227259 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312297917 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307915625 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308277656 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308333205 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311906175 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30989531 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310940466 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308934433 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309232466 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308719498 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309740513 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310288454 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309696465 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309562415 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31085566 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312170267 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310915264 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311535417 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308292197 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312354683 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310840574 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310640375 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312470004 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312513591 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309817313 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.312466695 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31124745 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31213189 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309853938 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312570488 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308662025 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310379341 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309171169 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309971437 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313967932 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313654347 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31059145 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313219379 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313607129 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312273917 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313358781 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309986534 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310709132 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313214088 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311983525 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311480617 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313114772 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311622352 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31177826 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313366899 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311852949 seconds)
  done (took 87.716390185 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312364452 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.312198891 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312124129 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311546089 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312605118 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31222401 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311834152 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312147152 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311798105 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311546793 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314564518 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313051009 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311895556 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312524997 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313538677 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312586629 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31397104 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313797514 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314064527 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316284987 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313373712 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314084203 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313484592 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31380379 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313541707 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315667798 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313916704 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312608091 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31429955 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313126531 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313626065 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313863065 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312993183 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.314620945 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312386325 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314247611 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314622341 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314186078 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314038862 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316132066 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314727003 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316057913 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315368945 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314520166 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315555948 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315119356 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315280216 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315639372 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314707311 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315823434 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314183093 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31404438 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314691694 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314050189 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315170989 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313402953 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31567082 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318373099 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313646857 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317870341 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315391243 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314920077 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317490357 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316188668 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315495467 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316548272 seconds)
  done (took 87.955928983 seconds)
done (took 1774.283549424 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.478239468 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.433179933 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.315403665 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.332879421 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.316125624 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.339099706 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.3253791 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.314861018 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.315682349 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.316164493 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.317321026 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.546030431 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.371833608 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.317048291 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.317054937 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.409252835 seconds)
  done (took 26.989565888 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.347541291 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.324111649 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.445672474 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.340317106 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.346278817 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.523135186 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.380333953 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.322651152 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.506766391 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.365694018 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.31210148 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.364379106 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.322297397 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.322600585 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.341140266 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.523018057 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.588295738 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.312149268 seconds)
  done (took 29.213092504 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.823546468 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.319886909 seconds)
  done (took 5.368696912 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.342538978 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.321176892 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.32378398 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.320416439 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.31156847 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.331601289 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.321507208 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.314839123 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.319260396 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.458249569 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.324570512 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.333199672 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.344889485 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.323393537 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.321097628 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.362887953 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.481459778 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.323035025 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.321652397 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.327453232 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.322451879 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.437835437 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.367150414 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.32327747 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.458288796 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.321942097 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.325792083 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.331254417 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.462935287 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.32207845 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.323221766 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.322336059 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.324891544 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.272304286 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.879033562 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.316696864 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.369240228 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.332961663 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.322708251 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.498089469 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.324891474 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.328910235 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.319371371 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.842448325 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.473270447 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.447097276 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.348262982 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.325960958 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.327073228 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.389585766 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.32589505 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.326856268 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.369821964 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.142591509 seconds)
  done (took 84.988759454 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.319034032 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.317188383 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.498819974 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.344703913 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.316195387 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.316034613 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.33717394 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.635222388 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.338166615 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.318364226 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.609650543 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.903047212 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.337303814 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.358443488 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.193523494 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.371258266 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.321165871 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.337396419 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.319944797 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.323612729 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.893916321 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.322785197 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.317005274 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.477965493 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.358627108 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.846520667 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.31814145 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.31868248 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.340885525 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.318694841 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.85604003 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.33820035 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.369483953 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.319677753 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.596409067 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.727751066 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.690966943 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.324881188 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.33372044 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.320558076 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.327888624 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.844326664 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.707216437 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.321500353 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.33683186 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.848180718 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.320113607 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.330810307 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.326644313 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.570992752 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.32138859 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.335305801 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.320232095 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.321786779 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.32122234 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.393490999 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.38321822 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.853920757 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321653709 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.321194976 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.355996433 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.323818399 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.331166897 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.323760664 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.324469756 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.712917123 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.455585079 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.325266297 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.709846823 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.854906782 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.34080649 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.943744617 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.341052876 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.32192872 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.393822404 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.322313776 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.321769764 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.847531729 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.33756768 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.322323524 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.695211149 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.324668052 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.61472908 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.343116614 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.323402806 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.906795014 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.328765629 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.329773684 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.321653664 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.323009364 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.324575993 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.325582843 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.623438625 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.365778154 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.324969602 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.323419368 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.343905419 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.324470797 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.323589537 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.326259985 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.929086653 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.346258028 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.323427957 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.328049171 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324075801 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.325040202 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.325047766 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.326524128 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.591468346 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.334792629 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.325293921 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.326898721 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.325460075 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.328355911 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.468203406 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.332079498 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.666467633 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.327103402 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.327785795 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.32591027 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.324343408 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.334053947 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.32899388 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.325896448 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.241613848 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.621685706 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.349211841 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.326050483 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.326147686 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.324135524 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.325750276 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.347019747 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.345834204 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.328780941 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.106340812 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.348465359 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.335046053 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.324648549 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.327713767 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.337471575 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.326767067 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.329357045 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.628084135 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.606461135 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.462093461 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.331702436 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.326992548 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.102557174 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.365056768 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.507916748 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.348246832 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.327022769 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.570466528 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.485039499 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.328784241 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.326270051 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.328140538 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.588707895 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.327626837 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.64033852 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.894255686 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.348069652 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.328924593 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.120897179 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.08070711 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.328146613 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.332044186 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.615738407 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.348525938 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.32728254 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.328184252 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.329021626 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.349127642 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.353568839 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.330318476 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.32871435 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.328711025 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.543685825 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.521667954 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.35014293 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.333061102 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.856370627 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.414649585 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.329106378 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.331758944 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.332464962 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.329802709 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.37848059 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.331947096 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.342306317 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.329783886 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.334262849 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.922325533 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.331157068 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.331270247 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.522532985 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.046388471 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.353152187 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.330109032 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.348041531 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.202566916 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.884050786 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.366618657 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.673854099 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.342348461 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.371322219 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.330387505 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.437792872 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.881797411 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.334422236 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.329287198 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.008361706 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.352511868 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.006241986 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.330087916 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.333301122 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.972930792 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.355349097 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.33072754 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.33164848 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.348674188 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.626915125 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.333702301 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.363277291 seconds)
  done (took 497.560117601 seconds)
done (took 645.343770571 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.33186906 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.334050672 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.323852813 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.330900968 seconds)
  done (took 10.563398851 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.341594768 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.338859583 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.34019241 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.338182427 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.340596194 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.338846738 seconds)
  done (took 9.281258361 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.332492122 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.332714655 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.33646642 seconds)
  done (took 8.246033654 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.564328031 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.368826595 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.704745807 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.354724043 seconds)
  done (took 9.235856575 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.341967909 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.34375252 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.342161597 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.341312986 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.344453498 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.345583273 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.343429737 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.34347825 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.345506547 seconds)
  done (took 13.335099824 seconds)
done (took 51.903623052 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.487582335 seconds)
    (2/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.322525713 seconds)
    (3/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.341170218 seconds)
    (4/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.321975216 seconds)
    (5/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.321658503 seconds)
    (6/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.321378775 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.771027181 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.619528146 seconds)
    (9/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.347259262 seconds)
    (10/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.328858889 seconds)
    (11/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.337258021 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.377515644 seconds)
    (13/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.362154835 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.363096288 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.737321294 seconds)
    (16/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.34296689 seconds)
    (17/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.142193676 seconds)
    (18/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.435829952 seconds)
    (19/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.345626786 seconds)
    (20/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.324680501 seconds)
    (21/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.351250504 seconds)
    (22/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.26622814 seconds)
    (23/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.336063358 seconds)
    (24/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.189189923 seconds)
    (25/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.390580528 seconds)
    (26/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.344929841 seconds)
    (27/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.339426785 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.246267175 seconds)
    (29/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.324928283 seconds)
    (30/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.324525675 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 2.363340775 seconds)
    (32/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.334881721 seconds)
    (33/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.323991558 seconds)
    (34/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.362600311 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.453550896 seconds)
    (36/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.324974793 seconds)
    (37/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.462426003 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.93800174 seconds)
    (39/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.323828805 seconds)
    (40/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.491869679 seconds)
    (41/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.451065427 seconds)
    (42/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.244316269 seconds)
    (43/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.606473382 seconds)
    (44/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.853367109 seconds)
    (45/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.329095772 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.450816896 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.601981602 seconds)
    (48/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.706121034 seconds)
    (49/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.349290921 seconds)
    (50/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.323597267 seconds)
    (51/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.334900383 seconds)
    (52/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.337686182 seconds)
    (53/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.326756706 seconds)
    (54/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.348854826 seconds)
    (55/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.343775208 seconds)
    (56/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.341046395 seconds)
    (57/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.336790207 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.398245817 seconds)
    (59/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.424691087 seconds)
    (60/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.346430957 seconds)
    (61/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.191655526 seconds)
    (62/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.173652631 seconds)
    (63/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.326453163 seconds)
    (64/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.464253177 seconds)
    (65/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.366174207 seconds)
    (66/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.112715528 seconds)
    (67/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.486202235 seconds)
    (68/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.36003743 seconds)
    (69/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.327806 seconds)
    (70/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.325862292 seconds)
    (71/286) benchmarking ("sort", Float32, true)...
    done (took 2.357731854 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.749733016 seconds)
    (73/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.135479198 seconds)
    (74/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.348101981 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.005392055 seconds)
    (76/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.34052264 seconds)
    (77/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.523923059 seconds)
    (78/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.423502182 seconds)
    (79/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.331915577 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 2.339114445 seconds)
    (81/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.326491074 seconds)
    (82/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.327740642 seconds)
    (83/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.326778803 seconds)
    (84/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.326465531 seconds)
    (85/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.339801191 seconds)
    (86/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.328224047 seconds)
    (87/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.327095081 seconds)
    (88/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.918153686 seconds)
    (89/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.370631893 seconds)
    (90/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.2038541 seconds)
    (91/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.32732072 seconds)
    (92/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.352427562 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.322399824 seconds)
    (94/286) benchmarking ("sort", Int8, true)...
    done (took 2.340731398 seconds)
    (95/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.327182064 seconds)
    (96/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.49604632 seconds)
    (97/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.391228889 seconds)
    (98/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.429022271 seconds)
    (99/286) benchmarking ("sort", BigInt, false)...
    done (took 2.340605823 seconds)
    (100/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.329518238 seconds)
    (101/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.269316185 seconds)
    (102/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.449849959 seconds)
    (103/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.180085394 seconds)
    (104/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.333879909 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.257511279 seconds)
    (106/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.358772348 seconds)
    (107/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.343092649 seconds)
    (108/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.360781226 seconds)
    (109/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.328538778 seconds)
    (110/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.582601058 seconds)
    (111/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.369873172 seconds)
    (112/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.698156332 seconds)
    (113/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.344482531 seconds)
    (114/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.344432438 seconds)
    (115/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.037141659 seconds)
    (116/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.350193885 seconds)
    (117/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.409457445 seconds)
    (118/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.359251633 seconds)
    (119/286) benchmarking ("sort", Int8, false)...
    done (took 2.341022159 seconds)
    (120/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.347398187 seconds)
    (121/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.370277362 seconds)
    (122/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.444286472 seconds)
    (123/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.389944309 seconds)
    (124/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.430444949 seconds)
    (125/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.01606267 seconds)
    (126/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.369562802 seconds)
    (127/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.329076617 seconds)
    (128/286) benchmarking ("sort", Bool, false)...
    done (took 1.877195528 seconds)
    (129/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.368875378 seconds)
    (130/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.374871861 seconds)
    (131/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.412571303 seconds)
    (132/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.186232212 seconds)
    (133/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.62591456 seconds)
    (134/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.330665026 seconds)
    (135/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.371331668 seconds)
    (136/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.355342876 seconds)
    (137/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.350859557 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.178206063 seconds)
    (139/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.624552777 seconds)
    (140/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.012201584 seconds)
    (141/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.331295166 seconds)
    (142/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.331919999 seconds)
    (143/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.33046661 seconds)
    (144/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.837898931 seconds)
    (145/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.475315563 seconds)
    (146/286) benchmarking ("sort", BigInt, true)...
    done (took 2.343187298 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.199989403 seconds)
    (148/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.361502694 seconds)
    (149/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.371881528 seconds)
    (150/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.337918843 seconds)
    (151/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.39553461 seconds)
    (152/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.330840818 seconds)
    (153/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.351449246 seconds)
    (154/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.431119954 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.354493648 seconds)
    (156/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.346029445 seconds)
    (157/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.455721598 seconds)
    (158/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.544188149 seconds)
    (159/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.330871664 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.450441984 seconds)
    (161/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.466986508 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.328285125 seconds)
    (163/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.358267742 seconds)
    (164/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.33189751 seconds)
    (165/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.379323292 seconds)
    (166/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.461100212 seconds)
    (167/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.333088003 seconds)
    (168/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.331720562 seconds)
    (169/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.374543659 seconds)
    (170/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.369598472 seconds)
    (171/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.164316983 seconds)
    (172/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.366272213 seconds)
    (173/286) benchmarking ("sort", Float64, true)...
    done (took 2.345076018 seconds)
    (174/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.345761857 seconds)
    (175/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.351984003 seconds)
    (176/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.303223006 seconds)
    (177/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.436523341 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.373678982 seconds)
    (179/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.333608611 seconds)
    (180/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.375617245 seconds)
    (181/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.338310325 seconds)
    (182/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.333636464 seconds)
    (183/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.448249341 seconds)
    (184/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.389099629 seconds)
    (185/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.335512789 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.016318453 seconds)
    (187/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.366897614 seconds)
    (188/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.339851658 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 2.346615587 seconds)
    (190/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.333593765 seconds)
    (191/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.406678458 seconds)
    (192/286) benchmarking ("sort", Float64, false)...
    done (took 2.346573355 seconds)
    (193/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.20133528 seconds)
    (194/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.364391887 seconds)
    (195/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.391033435 seconds)
    (196/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.334841916 seconds)
    (197/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.345054274 seconds)
    (198/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.205873416 seconds)
    (199/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.341002869 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.351281086 seconds)
    (201/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.89695269 seconds)
    (202/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.458023385 seconds)
    (203/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.723656987 seconds)
    (204/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.574252969 seconds)
    (205/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.495902768 seconds)
    (206/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.374714917 seconds)
    (207/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.348016779 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.347191249 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.561496856 seconds)
    (210/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.360895299 seconds)
    (211/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.487950919 seconds)
    (212/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.502835857 seconds)
    (213/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.408093898 seconds)
    (214/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.719936874 seconds)
    (215/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.727023683 seconds)
    (216/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.360341841 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.373670843 seconds)
    (218/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.361734311 seconds)
    (219/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.360397401 seconds)
    (220/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.637943115 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.41118775 seconds)
    (222/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.339398067 seconds)
    (223/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.359999549 seconds)
    (224/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.35123896 seconds)
    (225/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.434968316 seconds)
    (226/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.245023942 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.334307651 seconds)
    (228/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.354919957 seconds)
    (229/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.336485282 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.694944791 seconds)
    (231/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.358439741 seconds)
    (232/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.378663283 seconds)
    (233/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.370648407 seconds)
    (234/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.393561195 seconds)
    (235/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.719804628 seconds)
    (236/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.346230826 seconds)
    (237/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.37952684 seconds)
    (238/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.026957396 seconds)
    (239/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.488767594 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.576009769 seconds)
    (241/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.435654981 seconds)
    (242/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.377478156 seconds)
    (243/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.356038312 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.379133959 seconds)
    (245/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.361437145 seconds)
    (246/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.337017726 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.758101986 seconds)
    (248/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.351418904 seconds)
    (249/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.338462595 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.346973854 seconds)
    (251/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.343073345 seconds)
    (252/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.338125451 seconds)
    (253/286) benchmarking ("sort", Float32, false)...
    done (took 2.351382555 seconds)
    (254/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.263228632 seconds)
    (255/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.362007856 seconds)
    (256/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.47799677 seconds)
    (257/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.363990512 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.437184468 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.434659926 seconds)
    (260/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.89210949 seconds)
    (261/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.352891224 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.55415804 seconds)
    (263/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.351993175 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.718858943 seconds)
    (265/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.360647827 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.350435825 seconds)
    (267/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.347334425 seconds)
    (268/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.880101504 seconds)
    (269/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.341571041 seconds)
    (270/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.339202941 seconds)
    (271/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.380495856 seconds)
    (272/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.340245036 seconds)
    (273/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.905515504 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.396458301 seconds)
    (275/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.380415352 seconds)
    (276/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.282265739 seconds)
    (277/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.364712644 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.761876159 seconds)
    (279/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.376558977 seconds)
    (280/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.401167597 seconds)
    (281/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.654935855 seconds)
    (282/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.439266277 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.377084036 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.356542111 seconds)
    (285/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.367840115 seconds)
    (286/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.461359852 seconds)
  done (took 572.508955148 seconds)
done (took 573.754196495 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.386486799 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397122506 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.363734805 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.38588328 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.474438401 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.540315226 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.374388825 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.367250725 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.411505317 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.413286674 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.361270172 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.539867691 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.364350772 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.364215513 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.362948256 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392909727 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.353571116 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.364911976 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.380959665 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.375631782 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.38106177 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.363478875 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.416058884 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.541798919 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.370195845 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.367327395 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.36852827 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.385365684 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.476940228 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.368152297 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.370125147 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.37584766 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.354318558 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.364816392 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.362270241 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.384980308 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.376485157 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.377922659 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.369373216 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.398299513 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.356094379 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.365020949 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.365927573 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.366626496 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.368094417 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.371217053 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.367307489 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.373371096 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396530594 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.395624978 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.355028724 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.399585308 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.369757635 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.368727772 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.378639169 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.366037632 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.370830628 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.400080192 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.387346137 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.402067539 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.36586023 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.373181051 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.370378947 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.384793052 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.376331287 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.355809295 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.382050702 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.371251412 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.362317245 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.374449191 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.356269416 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.377005928 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.371891623 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.383737753 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.401109846 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.357041487 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.36437388 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.367891957 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.376075469 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.366502109 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.378597807 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397645441 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.375012212 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.370495531 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.398083694 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.54544983 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.378183626 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.370068646 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.378047016 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.387520706 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.37691604 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.381756553 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.373636832 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.366000512 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.380664813 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.373508597 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.371258762 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.373550368 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.376048113 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.379701805 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.363367996 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.403100417 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.366750733 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.367025752 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.371881641 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.384094046 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.364212962 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.370121084 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.393027501 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.417963417 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.3740976 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.372732384 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.372795209 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.404278195 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.380792921 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.375475636 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.368126319 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.371467004 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.360213682 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.384560876 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.374199294 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.369211036 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.405314578 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.375185104 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.368191421 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.359469324 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.372675119 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.401777569 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.492170585 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.384071532 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.4024477 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.36986369 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.376684676 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.403670069 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.405549179 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.404019012 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.375845103 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.40541803 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.387829266 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.368685332 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.383134835 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.382478975 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.372537039 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.376710789 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.368782346 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.402918142 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.403091847 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.401784539 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.393170129 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.493058088 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.370038874 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.374056271 seconds)
done (took 227.802250196 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.432522944 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.368273307 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.475451737 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.372122847 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.472359562 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.471591096 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.368675622 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.370467057 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.369517046 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.745550634 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.368744889 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.370710125 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.368818041 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.370170556 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.452930421 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.371981645 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.367506972 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.71076248 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.372090158 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.440843947 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.370608358 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.370609182 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.371890192 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.753675539 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.36894486 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.366520423 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.443228232 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.37342533 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.721345225 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.364641464 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.369697951 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.721687357 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.463671624 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.390918057 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.383125642 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.37935345 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.473807356 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.393961818 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.456326027 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.454578454 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.478635699 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.412303459 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.368857579 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.372052783 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.376809694 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.37565277 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.372852714 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.398468811 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.371097801 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.37329105 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.712260531 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.38479236 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.382068496 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.371795642 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.372080908 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.394735736 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.372925481 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.37619554 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.467686707 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.376046365 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.436721094 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.756398608 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.749936953 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.376492902 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.371880851 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.373348529 seconds)
  done (took 107.080331913 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.442187312 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.450366331 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.492035849 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.394830804 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.425288635 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.497596876 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.394316226 seconds)
  done (took 11.371432549 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.380450985 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.377585246 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.424761205 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.426701572 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.376373779 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.588572481 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37658427 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.387662688 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.375444949 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.454253367 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.379037144 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.379211708 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.384825383 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.372355512 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.425291514 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.388022815 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.491242885 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.376188491 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.377233626 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.530333426 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.374956918 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.38470141 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.456458656 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.388200395 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.377685812 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.384154658 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.332646459 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378717972 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.376063195 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.378863843 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.37749316 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.485570589 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.378521728 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.375581333 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.375660923 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.537058612 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.378515911 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.376884275 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.378795623 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.376695867 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.381529618 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.378818417 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.380623119 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.376667576 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.379510679 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.402296307 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.378882914 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.380705081 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.37991825 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.382261501 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.457792401 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.380925084 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.377857015 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.378604221 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.455416893 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.386803514 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.381316406 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.378892069 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.381788288 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.378663048 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.533247952 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.427408408 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.38202886 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.428503854 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.381889345 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.381738845 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.381878003 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.380930374 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.471196451 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.381194495 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.428530999 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.377902588 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.604189836 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.403480155 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.384843463 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.382648362 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.383417783 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.382253279 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.378885489 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.387524967 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.380820223 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.383391922 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.386556318 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380789714 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.381091013 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.564891113 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.537244941 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.378372586 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.394398042 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.388539975 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.378998321 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.460843549 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.383840907 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.379958574 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.433679765 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.495992772 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.459818634 seconds)
  done (took 142.63638398 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.386645679 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.390031905 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.383791457 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.406196331 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.384235788 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.383425678 seconds)
  done (took 9.614972599 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.385119424 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.385802517 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.382938274 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.385117715 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.384720962 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.382830373 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.384935337 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.384332532 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.388943276 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.384026476 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.38397398 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.385956715 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.384237438 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.386379064 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.384161541 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.384744954 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.386316773 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.381789265 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.38382713 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384141145 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.382627206 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.384959872 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.385359883 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.38450604 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.388770731 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.383823761 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.391437715 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.383936767 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.385256808 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.388402845 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.408019574 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.386933226 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.386743587 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.392416054 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.391080633 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.386811938 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.390703803 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.385093898 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.384380318 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.385196533 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.390229409 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.386413367 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.386727407 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.387137209 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.388618055 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.390235698 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.391260331 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.393415469 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.387760522 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.387973045 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.388450177 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.38938807 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.385469728 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.38917794 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.390662639 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.410032515 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.392699996 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.390874139 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.387569002 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.388018853 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.390328513 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.388193126 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.389156243 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.393961901 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.387532356 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.390175961 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.3906039 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.394037343 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.388152105 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.387620014 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.389531458 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.385688719 seconds)
  done (took 102.211897457 seconds)
done (took 374.184357086 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.884675463 seconds)
  done (took 4.170890691 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.592935367 seconds)
  done (took 3.879355364 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.529097444 seconds)
  done (took 24.824578223 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.384894597 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.422082381 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.388317732 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.380416582 seconds)
  done (took 10.860375437 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.707655302 seconds)
  done (took 3.993110353 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.394855841 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.380341496 seconds)
  done (took 6.062509505 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.727362793 seconds)
  done (took 4.01483651 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.810149041 seconds)
  done (took 4.104978266 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.401175978 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.397235051 seconds)
  done (took 6.094542775 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.366792779 seconds)
  done (took 3.653433899 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.131164511 seconds)
  done (took 17.421240053 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.38599262 seconds)
  done (took 3.67587302 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.44478378 seconds)
  done (took 3.732788356 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.370990837 seconds)
  done (took 6.657462293 seconds)
done (took 104.431492442 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.381204098 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.382553982 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.383181034 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.381400876 seconds)
  done (took 10.816249834 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.424263337 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.424566651 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.423559794 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.433603629 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.426874383 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.423424663 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.415520251 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.415868429 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.43528699 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.427575737 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.426451821 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.425689621 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.424105868 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.415563977 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.426007127 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.426228279 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.434078308 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.427092195 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.418973385 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.428973287 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.392736334 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.43651409 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.427721073 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.391144402 seconds)
  done (took 35.439496587 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.91335756 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.465584689 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.545714183 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.443510561 seconds)
  done (took 7.656766833 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.442522716 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.446149817 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.458588829 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.497723933 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.522050967 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.453758938 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.418941066 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.414840261 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.400252996 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.446180056 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.520109587 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.459841051 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.530248148 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.391722951 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.591558207 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.391286361 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.391586132 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.445506538 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.495328786 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.529861703 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.393017336 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.443076156 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.452840337 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.462305722 seconds)
  done (took 36.287277989 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.393638458 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.411249314 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.392228075 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.391539146 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.401142436 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.391724098 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.392372556 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.393686861 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.420502777 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.940374318 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.398867759 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.405838771 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.915061703 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.397269275 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.398701077 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.393478411 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.934324307 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.920259161 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.398419633 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.399220351 seconds)
  done (took 31.380173123 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.38560992 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.386108892 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.738737572 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.643569392 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.384459498 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.390000641 seconds)
  done (took 14.220208901 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.474722471 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.644171959 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.394839907 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.800587974 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.880239936 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.394258555 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.395417229 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.669624146 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.039557818 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.030774812 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.459992713 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.472232891 seconds)
  done (took 20.949510463 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.404225613 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.386389522 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.399208836 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.4027098 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.456562837 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.415594171 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.400559412 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.386822751 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.46122654 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.479121197 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.417814169 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.457309776 seconds)
  done (took 22.361239529 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475344523 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390032402 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.399526037 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491698445 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395626101 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602266875 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.491496949 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.148643243 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.417230271 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664067377 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389336407 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484744256 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.647181183 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392817582 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391820984 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.385498803 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618132623 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956180499 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396871732 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390867887 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420791235 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393306249 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390248551 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.640875097 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391746379 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390776257 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.652367625 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391593552 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.712761763 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40603435 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402880906 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391387903 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66673831 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100634333 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510244686 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.633156447 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433770047 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398818062 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.402949754 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.392313038 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398261326 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41775138 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404261658 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391332068 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391347724 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396534351 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158399285 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.422256958 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.39247912 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393726148 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.690102456 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491003962 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.398066554 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393144339 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398937271 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398641376 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.398030151 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.391032433 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968388928 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394820546 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399619352 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.396489001 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.441212766 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399115847 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089419505 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.400289013 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.399191348 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398805147 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393885795 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394872521 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433564069 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394712459 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.421149819 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394502389 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182857744 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40321195 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400104433 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042194109 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406169542 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.395734304 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62318924 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39440278 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395054834 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.392780579 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394119616 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.218235097 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409324956 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.380687704 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.398702474 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.159255865 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.661110395 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415046592 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419160193 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.619951969 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.382069508 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394882568 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.397056304 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403278396 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418808239 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.158076416 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419997733 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.400058709 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653092688 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.608183834 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397403518 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.383523605 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926712546 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429403091 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.411769336 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.400795183 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.641028416 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.04854475 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414554407 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397766482 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420784824 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397705874 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256592764 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412633131 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.499297116 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403464381 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689864197 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.302998491 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403103593 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466286544 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402079524 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398503766 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401499886 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405724677 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398028529 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.631896658 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4315131 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.413993835 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.399701641 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39941039 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.409885468 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415351583 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.404945937 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.625556697 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410244045 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679000203 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398756766 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399400223 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399295263 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.624702802 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.398195344 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.736967301 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662753538 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41322773 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414415863 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416805636 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419689772 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501449713 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422242136 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.399969006 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.662815878 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.405370078 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.404031496 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40178107 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408032645 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407501429 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.408229754 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423089174 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07969088 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375226369 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403270752 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.293061389 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.41502908 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469057486 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.406186437 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.650155142 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.418104553 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445285722 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.413128274 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.408492422 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626161805 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412107469 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.40191728 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.484283413 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.931023268 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.078220748 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417176759 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.402169958 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.399313999 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.400813078 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402649707 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40200823 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403454663 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.647754041 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.420914194 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.451601437 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.066993887 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407365074 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403579209 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.414818594 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.415318976 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.409032096 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403279815 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.416508163 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409369838 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405157838 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.420018664 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547732366 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.41787382 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404094251 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.921917991 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409157897 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403849066 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403564685 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44020012 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405910865 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2802798 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668174022 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423257978 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.71015631 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407045603 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.427738452 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.404595375 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417981572 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412696358 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.431847532 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414745831 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.417337077 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404313179 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412023359 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97265822 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225230035 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013220784 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416212667 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.407889849 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410516038 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.171152276 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42804816 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40412942 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669689212 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191983026 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428285226 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937589491 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.432320883 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.26539906 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.706215868 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637033357 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413560967 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.422207602 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.712485955 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.620480233 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442140291 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407593716 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414277133 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.392746256 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021505239 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433997451 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491803149 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174279558 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446719023 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.413347019 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.519278991 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.434169601 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871125057 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.429530057 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406731193 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415601855 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.427487533 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284529103 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409119461 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408027862 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102831806 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.410452953 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.942449849 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430979184 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.658116874 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.425324124 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.410867804 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.406562806 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.413930495 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.664099111 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.70949057 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410519187 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411504483 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017746635 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.268802964 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.415950757 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408373436 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280536658 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428616729 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.737232788 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.411710892 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.406682403 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417604371 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.410269184 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409499611 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.40708081 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.417682092 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382027495 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980867122 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.413784867 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423340333 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43991908 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255626353 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.667138296 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.424109956 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.066179578 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638491559 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417550954 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438904323 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.414363219 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411291486 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.403229665 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411986115 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.648023167 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409752508 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.640085475 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.411403853 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.422986875 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.481326202 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.628900735 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411212536 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.431101212 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.687391316 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.410525535 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.423351727 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244825419 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439335017 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.431318131 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418678611 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.450850498 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.41664241 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488666656 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.658053336 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.424966357 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.424183197 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874199466 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434271934 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419539038 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.428108999 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508063337 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425130047 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.416567559 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.18813823 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075702755 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244200313 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.076447329 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.718682243 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416083457 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416639864 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413565324 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564204169 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414082985 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688671744 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415248048 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.466835781 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444748721 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419455559 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428774492 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63061018 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690185029 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413736158 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421750944 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418447944 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.415059298 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42636992 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.6268297 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991902544 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068355002 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423434863 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.427291318 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.189432711 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713529465 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415987032 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415729408 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415884232 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.440188249 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.441465623 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.423353169 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431221449 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568010504 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.718821561 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132054029 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.449073555 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.444973064 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.190900081 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425474305 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.678634327 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41684422 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.668367927 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077965002 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.225401055 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.688075442 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494583559 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664925376 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.416748941 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567576216 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.432244149 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.418270336 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417887748 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263270473 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.415196238 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.428384939 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081710058 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683287318 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.421849355 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.43190817 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440458431 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.426940322 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.641717246 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.254442262 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.648250412 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.427690588 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.426281289 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.417938687 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084242731 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.725292697 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420403603 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.424151388 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.690252615 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421028801 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445969428 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.872297308 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.416285784 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065693943 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.396446545 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441535789 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427757615 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.235342064 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087898675 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.422278128 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995307391 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42636405 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42755127 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695447679 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.425165122 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.430197038 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700637644 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.425080365 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.429243081 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.679073977 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.082460749 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.29131538 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.435770765 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463320272 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.424334727 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420689643 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548035713 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425965706 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426410081 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.90060011 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.442189885 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421775443 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435364549 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.420159899 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426876712 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.422923404 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42222957 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.429084349 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.416141388 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.40869251 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.451189131 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.424187371 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046964333 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448946877 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.090151165 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.75912768 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.679730956 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.422715928 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.413376642 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.425948805 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423237859 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422584328 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422591047 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.458810225 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055243802 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.42619277 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.440598998 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.428362214 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.640840477 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635439326 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.442291854 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674680382 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426813943 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463226354 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.408573855 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424112484 seconds)
  done (took 999.867858766 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.471264355 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.481503207 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.479193591 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.481914422 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.462046842 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.493119751 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.514528341 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.536423334 seconds)
  done (took 21.244429598 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.437985746 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.43428195 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.43265544 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.432771213 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.424213443 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.954695725 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.450537843 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.432966642 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.435640758 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.436266047 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.430515704 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.192503996 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.45259321 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.432035786 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.422278301 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.435091085 seconds)
  done (took 33.569479762 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.761945796 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.695397997 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.073229653 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.514572391 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.423331108 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.425065965 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.841648044 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.442854858 seconds)
  done (took 28.504337269 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.435577413 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.436021554 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.436581199 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.436782018 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.437047368 seconds)
  done (took 8.507439866 seconds)
done (took 1272.092189403 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.431539574 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.433275313 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.430904291 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.431509035 seconds)
  done (took 7.053085194 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.412534762 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.413614629 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.412584967 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.429973805 seconds)
  done (took 9.994225658 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.251954161 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.172130171 seconds)
  done (took 5.751523225 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.427189321 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.189854596 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.163059036 seconds)
  done (took 8.106428441 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.736477185 seconds)
  done (took 3.061898104 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.836585414 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.792990464 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.626460117 seconds)
  done (took 6.583062087 seconds)
done (took 41.875480319 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.425580259 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.77623502 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.58152727 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.425251527 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.586469423 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.582972383 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.211218866 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.44017661 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.431754481 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.43005348 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.427154538 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.588701919 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.193185151 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.77670244 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.193080618 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.776914345 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.590082909 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.433679856 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.431230223 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.441939919 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.211830511 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.426035481 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.435104444 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.429612857 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.588508318 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.571217097 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.441406385 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.779588743 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.43926876 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.427930387 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.572728927 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.427063163 seconds)
  done (took 84.821405678 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.434449203 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.426441665 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.427863296 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.452853032 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.427941112 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.428535807 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.447405841 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.449716713 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.426588794 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.427055896 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.429498576 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.427391682 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.44507875 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.442457981 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.430693705 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.464297 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.437271261 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.442406887 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.430851499 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.426547556 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.448310289 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.459644891 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.427636465 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.443138471 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.428676863 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.429571443 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.447243938 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.461028632 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.428484241 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.446148108 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.450154488 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.448130896 seconds)
  done (took 79.372609319 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.428480195 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.429306935 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.442085525 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.441805946 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.429240953 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.439775768 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.429846917 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.437109044 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.429750201 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.429317273 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.441966074 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.429353351 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.43025378 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.430042964 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.450258721 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.428518382 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.448814596 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.448252049 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.4297014 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.447433925 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.431862421 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.428736363 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.429406842 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.430250445 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.428270517 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.449063307 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.460826003 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.437454995 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.429678452 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.443349605 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.429853181 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.458877141 seconds)
  done (took 79.309844989 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.63418716 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.439145087 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.439430052 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.374427868 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.439658039 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.438947512 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.43160762 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.63814009 seconds)
  done (took 15.166543567 seconds)
done (took 259.996500471 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.431200979 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.437586771 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.6783693 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.460528512 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.432432509 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.484667754 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.461206265 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.67838342 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.455948678 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.683896484 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.453350414 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.458798839 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.43328907 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.479086389 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.738787439 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.595731184 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.421837526 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.435133109 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.812579378 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.457112792 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.727844104 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.453992525 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.734398762 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.433650876 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.434628024 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.471829306 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.433288102 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.426231925 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.480609521 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.821547398 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.462199274 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.424178913 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.530265623 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.55213913 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.667006355 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.607428951 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.450974972 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.530410083 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.676974117 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.453939391 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.43408395 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.254951112 seconds)
  done (took 86.286340821 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.440389081 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.562976515 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.443273236 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.442394898 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.443019801 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.561947572 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.540173378 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.441877439 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.442365756 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.440809652 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.441099291 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.443272419 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.442985044 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.442476245 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.443468126 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.442815887 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.441902032 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.443825819 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.446308922 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.489717073 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.569106131 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.470063738 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.438106354 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.441987642 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.548118838 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.585234968 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.44105323 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.438056678 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.489732339 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.443475931 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.445412964 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.492061212 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.44485236 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.445830981 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.565604936 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.550508263 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.468643456 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.443635608 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.560384646 seconds)
  done (took 58.855936411 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.446813757 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.706349957 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.90223592 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.451213619 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.444774839 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.450056747 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.535633096 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.447142273 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.448705174 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.449222242 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.626037254 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.449776993 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.482723063 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.934868201 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.448889271 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.447938872 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.447577881 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.446211098 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.720256138 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.455977346 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.559235481 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.448553767 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.535950822 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.456088104 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.472853554 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.448438586 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.452648323 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.049421336 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.450171479 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.625912421 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.376342853 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.538518957 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.008172663 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.915163673 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.380015015 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.455754763 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.447608415 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.632131193 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.450135511 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.448153318 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.536441102 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.448787619 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.915678457 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.148418954 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.468912827 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.449362417 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.07455457 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.632525142 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.731879435 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.459552859 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.945679096 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.453318177 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.451093348 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.450348376 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.732046346 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.457473351 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.449055446 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.0930755 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.47548238 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.538745326 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.452057546 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.450824765 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.733631105 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.449747579 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.715572622 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.451446582 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.45821364 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.473134115 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.919823217 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.453248628 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.177143175 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.48136449 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.45108733 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.627837877 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.714788171 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.11294938 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.456064142 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.740662623 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.024207603 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.539274163 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.454929259 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.040168492 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.541264165 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.454586591 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.453983947 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.453074788 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.451790771 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.497913781 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.538226501 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.109962817 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.174017079 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.124190316 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.562553075 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.464677343 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.452208588 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.098301753 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.472778811 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.452444339 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.912971697 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.178617396 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.473239982 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.459302211 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.18273696 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.475983054 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.542275987 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.459364459 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.938727619 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.45813611 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.499901265 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.452463664 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.460073385 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.48016424 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.543646702 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.458110359 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.45598773 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.15866966 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.660843366 seconds)
  done (took 192.079993607 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.446379985 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.467663993 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.447576934 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.467979147 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.447598692 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.455401211 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.445995923 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.445604851 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.453440264 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.446338027 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.449014248 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.448220732 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.446922159 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.447213059 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.460521405 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.455196113 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.448004111 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.450379089 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.449892556 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.446625153 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.448161466 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.470945681 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.448857938 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.448277725 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.447228631 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.450206962 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.451629031 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.454424025 seconds)
  done (took 65.991615597 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.457768428 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.101798796 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.458133644 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.607822125 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.481239612 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.454490524 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.604273742 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.522907817 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.458451337 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.455599321 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.456237309 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.803812386 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.458850869 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.053127579 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.679791873 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.627653969 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.05089098 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.479978351 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.455130602 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.45723545 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.608217617 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.470776195 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.802703207 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.105163142 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.459620159 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.108140206 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.448703898 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.459157149 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.456872814 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.09643124 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.461732705 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.806449889 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.547169552 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.525055105 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.110376396 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.052095317 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.073314519 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.630941517 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.461467527 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.456782116 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.457974181 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.448289854 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.106061365 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.487492833 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.460392478 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.103690435 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.48036589 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.460739798 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.465226972 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.458533757 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.52518573 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.527625049 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.811829719 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.115187761 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.548990252 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.472445754 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.611585012 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.869495276 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.470189104 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.056075142 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.475410034 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.11556836 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.48687515 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.452733188 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.462577593 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.46661923 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.633903553 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.614537402 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.056636536 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.487338855 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.060002398 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.658769337 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.46029839 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.460316898 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.461987168 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.113611557 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.054646004 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.654148755 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.615612838 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.68716079 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.453467433 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.459778162 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.451926066 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.54984231 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.460857697 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.11799007 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.076248618 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.48429136 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.463767645 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.464727998 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.46318122 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.666541066 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.136312883 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.552424799 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.053890752 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.832507138 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.814663835 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.463790709 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.530543428 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.483079282 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.815542938 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.466335653 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.528743287 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.951066868 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.815950847 seconds)
  done (took 175.592075978 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.731463594 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.496317817 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.564355274 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.634694816 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.105449047 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.072357552 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.463972335 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.594835898 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.586475424 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.744349488 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.466959689 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.552806385 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.697681609 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.547128311 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.237737251 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.543023782 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.567286487 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.623972293 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.616413579 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.458811537 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.175682511 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.790533478 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.671998395 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.483372962 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.596841549 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.336984062 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.10146021 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.001909985 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.652192613 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.46019323 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.007691661 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.46745998 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.468762924 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.225516098 seconds)
  done (took 68.10219849 seconds)
done (took 648.239101078 seconds)
SAVING RESULT...
DONE!
