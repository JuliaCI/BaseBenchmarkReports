cset: moving following pidspec: 17625
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.410881351 seconds)
loading group "string"... done (took 0.502929498 seconds)
loading group "linalg"... done (took 9.50817432 seconds)
loading group "parallel"... done (took 0.208234929 seconds)
loading group "find"... done (took 3.33035934 seconds)
loading group "tuple"... done (took 2.212975945 seconds)
loading group "dates"... done (took 1.592404881 seconds)
loading group "micro"... done (took 0.195321894 seconds)
loading group "io"... done (took 0.550307246 seconds)
loading group "scalar"... done (took 58.334097542 seconds)
loading group "sparse"... done (took 15.818638204 seconds)
loading group "broadcast"... done (took 1.481493442 seconds)
loading group "union"... done (took 10.65685674 seconds)
loading group "simd"... done (took 3.562906723 seconds)
loading group "random"... done (took 13.266957427 seconds)
loading group "problem"... done (took 2.317100359 seconds)
loading group "array"... done (took 30.508656423 seconds)
loading group "misc"... done (took 1.208404473 seconds)
loading group "sort"... done (took 4.693410212 seconds)
loading group "collection"... done (took 22.23889323 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.615322602 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126639379 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.204343702 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.285519605 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.233549115 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.16557253 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144122725 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.2316652 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.572146207 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.20358072 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142081231 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419008131 seconds)
done (took 6.092660596 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.250438427 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.246061024 seconds)
    (2/2) benchmarking "String"...
    done (took 0.166478231 seconds)
  done (took 1.104580739 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078450031 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158238743 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110520339 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096455546 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096380706 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111240302 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095335326 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111992013 seconds)
  done (took 1.476700969 seconds)
done (took 3.606665427 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.50010251 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.860481744 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.487593963 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.147742961 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.315911712 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.297234609 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.271445099 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.200760642 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.094981176 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090477761 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175618111 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.38992436 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.385713062 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.944894144 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091757049 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.095807236 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.130506663 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.751581387 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081690268 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.121412569 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.49958033 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.19228443 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116508245 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106877055 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186755702 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133412271 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.159812326 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103136839 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.671039982 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133095943 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.179114606 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099192578 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158218585 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.186442616 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.211831631 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.095079987 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.683083695 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201797023 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100391388 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101239853 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676603858 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118502097 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.185582091 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105292441 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.090497743 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.179708759 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.102205806 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.095024207 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095414796 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087637881 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161999216 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.44451093 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105474521 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.170091631 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.095196847 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.687347956 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099243962 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.275463544 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126181366 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.099702182 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091062115 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090033958 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158456152 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095731152 seconds)
  done (took 19.92068495 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.149717584 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.166468078 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07921517 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.158812873 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.124534454 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081592903 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102470055 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07939818 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126317862 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180454195 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.14000804 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.154719901 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093797568 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091514319 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.147680925 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.233243518 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108665369 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122041632 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090657808 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091673799 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140474162 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099040157 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110125768 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093933939 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171404594 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203394345 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109487811 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123040478 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093165149 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097862566 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142417248 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146097905 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092685836 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090341951 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.190333675 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109184886 seconds)
  done (took 5.246961125 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.222187974 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.106233731 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.226890813 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.199202069 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.135098433 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.183757975 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.167019838 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254446046 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.215990104 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.168854263 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178409661 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114703543 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113731784 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081308188 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081954709 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095793559 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.471670891 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.150675874 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.192319804 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166584237 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114170315 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087204839 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363096389 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100090304 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087714307 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.11308476 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064698991 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085282998 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.201178063 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113902675 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.116803171 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.106291556 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101957939 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135039226 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19699318 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.14088219 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125455803 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112136426 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.088133429 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.22452002 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.1036805 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09666645 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.116910368 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132985091 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115968576 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.109022341 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110351959 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223592091 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.105364689 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114266563 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.085823174 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193822979 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.126488257 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.086067635 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292029986 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.127249393 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102882613 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.108351478 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.817821248 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.128703829 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085325439 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08186169 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095205564 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098829479 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09883295 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080224802 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.430317099 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107662227 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.711350414 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.094382725 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.161946333 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097837817 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11764816 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087426634 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101625983 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.109762797 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.087816833 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097082152 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087636161 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081692121 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106054259 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113020699 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102782803 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080473823 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148288924 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.111385645 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.109252807 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125530227 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.092859179 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.087387201 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130406929 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082160701 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.104144753 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.147010388 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.116726439 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113635375 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114443907 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143049789 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.087983852 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.257242525 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095053689 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12516135 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101422985 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112911992 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117164324 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081639985 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08531322 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095620049 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08190061 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148270744 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.101244378 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081306298 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.090039822 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110368537 seconds)
  done (took 29.088431882 seconds)
done (took 54.946115468 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.433896988 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08214394 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082631976 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100148768 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082848309 seconds)
  done (took 1.554254547 seconds)
done (took 2.302144507 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.323201554 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.189544879 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103081807 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188884101 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091376699 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.194398049 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.180762383 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096080057 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204567178 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085810954 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.184935231 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085927398 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104542375 seconds)
  done (took 2.806825824 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101063202 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109311132 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100684339 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116304891 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083722471 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101505644 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116001619 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.1095445 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100148746 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109779872 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083416382 seconds)
  done (took 1.879313733 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098297274 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104489133 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098277508 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113680342 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083879771 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097515191 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112818365 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106800979 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098650055 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109342275 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083990851 seconds)
  done (took 1.858948687 seconds)
done (took 7.289993824 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.091664272 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.486682924 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.144242826 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.208695477 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.349661846 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.232843753 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.55198504 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.152147514 seconds)
  done (took 14.113541831 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.164229138 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.108255958 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095130226 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091000564 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092202441 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.11195243 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091180909 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094301703 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.110393338 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.092143159 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095742231 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.110096109 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093480857 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090706684 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.108355286 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.091055031 seconds)
  done (took 2.455880057 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142877604 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.141412595 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096959417 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099647298 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.11164991 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099708236 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101599111 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.114662441 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09393084 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095783213 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.11756126 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.098534764 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097239139 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.109204976 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097734388 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117346067 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.110669173 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.098692753 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115900028 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.114879909 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099097945 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09572748 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.112453861 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099068285 seconds)
  done (took 3.419777602 seconds)
done (took 20.741163156 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.146356609 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100653243 seconds)
  done (took 1.003285226 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.138765292 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.154939025 seconds)
  done (took 1.053484199 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111143334 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089951861 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13472749 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.10249045 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.09139517 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.105642342 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115461951 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.106319856 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091401121 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091244362 seconds)
  done (took 1.803576134 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094182162 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094247273 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12029147 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.134098214 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.115309745 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093547812 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094225895 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.094055686 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112262873 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090325464 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.096590522 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.122726667 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095192156 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.124680663 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094552095 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095875368 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115009777 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093762684 seconds)
  done (took 2.647032669 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.093383137 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091798276 seconds)
  done (took 0.95270864 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092645812 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09111229 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093682347 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109715474 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090107171 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090903685 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10466033 seconds)
  done (took 1.4395349 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.484765751 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.37861361 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.354338879 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.108785121 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.147173224 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.348946585 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.150067777 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.102450646 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.121657138 seconds)
  done (took 2.999070979 seconds)
done (took 12.661963591 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091297957 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.219455778 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.598571753 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113223262 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089192033 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.15855295 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.282361404 seconds)
done (took 2.321681057 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335618716 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.140509434 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08015539 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.08908983 seconds)
  done (took 1.410036402 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082101357 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099231434 seconds)
  done (took 0.95339714 seconds)
done (took 3.136438109 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089632897 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.121929482 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.106864851 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.088269305 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089014015 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.090274954 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.105830021 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.088294202 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088293659 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.106834324 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.088440657 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08900518 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.087879591 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.102790826 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08818872 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088297738 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103679004 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088163586 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.088286801 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087777769 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103328694 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088971214 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089525813 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.103654423 seconds)
  done (took 3.079792204 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107155228 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09099677 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108760098 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092217995 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092926819 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109572267 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092533306 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.089817989 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.110007303 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.090239888 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093696188 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.108603717 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.090555076 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093122807 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107321959 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.093344294 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094362839 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10609874 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091630707 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093059358 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.108095174 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090785426 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094016405 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108390731 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.092885945 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092993652 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.105519949 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.090899494 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093559309 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093285268 seconds)
  done (took 3.698262923 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098831049 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085774566 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090970249 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114813616 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086185531 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089714932 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.101283823 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.086895643 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090784822 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089308318 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.106662674 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088797249 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086107531 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.106239587 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091741159 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092939095 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115080686 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.087462035 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086867007 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090609161 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.108858326 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086880485 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089184866 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.104754063 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.088657509 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086156987 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.106953485 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.089225601 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090810265 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088767609 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.108823991 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.092117296 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088542855 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.115271868 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09212649 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088955466 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.112289987 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.0856922 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090358371 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086263226 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.102578266 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.089069772 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.08618331 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.111087357 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.089632892 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090052023 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.087070191 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.105562534 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.089651716 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092621241 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.103086256 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.086779127 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091718621 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.106580702 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.092229326 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.086571522 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089723597 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.102324136 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.090042135 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091033245 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.102523664 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085914181 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.093450301 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090660533 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.12160519 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.0952656 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086928362 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.106826698 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090698411 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094835009 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.107059352 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.100114667 seconds)
  done (took 7.624058832 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100685885 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098265518 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.090596329 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.105896484 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089748064 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090772023 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110886415 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090671083 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092122605 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112601568 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091091568 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091288364 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106119183 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090620529 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091378379 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090112607 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11208477 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090405423 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090599338 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10639425 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09086209 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095823027 seconds)
  done (took 2.911838259 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.234199973 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096077367 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138720745 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119148886 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107893916 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11945416 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094190541 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096274235 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110206476 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100436853 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099466586 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111890854 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109216634 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116707693 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098931801 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101538806 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110193691 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101139019 seconds)
  done (took 2.850130935 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103199942 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09179839 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.128184597 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091461252 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092353087 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.11121945 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096807789 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111564277 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109868638 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.091858422 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098684999 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108741578 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093507923 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09214674 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092188947 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108224956 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092613671 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091570014 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114459472 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09829177 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.113280805 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098701658 seconds)
  done (took 3.015791924 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105238518 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091673021 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126586188 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095147464 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091879223 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107574231 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.097331782 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092123898 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.114696846 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.092271959 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091780324 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091950027 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.122629437 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091319767 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098167143 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108567356 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091896844 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093143503 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107161686 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091740801 seconds)
  done (took 2.78750878 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.166505573 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122953661 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106851712 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116209284 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123960005 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107452744 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113971055 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.12534867 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107971927 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134228104 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107803035 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107778927 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131825092 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111430143 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125068098 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115125168 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11407572 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130591737 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107997605 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12355025 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119336025 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106904329 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130666738 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107553071 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.124030758 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106839624 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107316764 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128826571 seconds)
  done (took 4.118917194 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089902752 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090647386 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090820499 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107205487 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090125015 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089763251 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.107115127 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.091144344 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091394686 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090818156 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.10816675 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090658247 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090596682 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.106943255 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090172034 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.090354886 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091002533 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.106621251 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090723561 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090455481 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.107659201 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090911844 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090958797 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09092763 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106471893 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.091606883 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08998653 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107286287 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091303174 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090142453 seconds)
  done (took 3.638648416 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.102668208 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100796425 seconds)
  done (took 0.992968635 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098137159 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105341341 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091772524 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107918156 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097623649 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0921317 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115142441 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096835091 seconds)
  done (took 1.595828701 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.1386555 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.159902142 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095513705 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10281372 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.159207461 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.150476998 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132174154 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.096531628 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107775649 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083875052 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.153781493 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083464326 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093055692 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108770995 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09242946 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099219468 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.109708257 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100459213 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.098763214 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.11069186 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096541683 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096996868 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11133631 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103445489 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087468523 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111794551 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095896094 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.104310455 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108524285 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095256806 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.09043277 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.109760263 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.094439599 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095913518 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.093567162 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.158650038 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099900085 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105660979 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092441246 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096680581 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.141921484 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091796649 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.094161188 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108038862 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095394664 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.096766481 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.113116157 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092620385 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085939723 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.105065648 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092955865 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088669894 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.108523794 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092738775 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.0942296 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116604025 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094347283 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089779148 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.106065975 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089028758 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091470771 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106783431 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095295522 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095605345 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11135987 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093264811 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092599015 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.110324743 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093923866 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093902517 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109405758 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108055839 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09373143 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.113782024 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098486532 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094363211 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107630691 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098239826 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091529783 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111396565 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096810972 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122016332 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11217879 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088105633 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088634171 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.116111875 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09397195 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095967459 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086496838 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118777241 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.094960521 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094889751 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.102989782 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092007492 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088885117 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.113916554 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08661688 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094617028 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.110340052 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.097274274 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098893103 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110472575 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095043415 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098248069 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117208048 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092613974 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.1544032 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090174682 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088639836 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096493944 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11517501 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087222975 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092401701 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.109033095 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090076462 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08830071 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.114072067 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092780104 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.095180871 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.114011076 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094208689 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09466981 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.111850042 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091752342 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090180179 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.113649289 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100079106 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094667921 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.112720383 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094299331 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093482339 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094125007 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.114559785 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090470072 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098490956 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108515913 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093116888 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095098377 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.116023043 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093479434 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089134718 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110288142 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094741847 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093627041 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.113580196 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.095016296 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089815433 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104031823 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094898879 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088916131 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.111739894 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100629301 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089053262 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.113126136 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090748624 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101344393 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107996953 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098419468 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095298661 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099064473 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117031537 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085568327 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092015609 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.114664405 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.097651539 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090772892 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.11219712 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093273592 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100608033 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.105519761 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097435611 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08672369 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.108112985 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098888197 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094384141 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096951262 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.106980589 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132130217 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.125750916 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097559276 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093512716 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112444132 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.097054102 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092775485 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.097949601 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116173585 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.097755563 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091897157 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110442778 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098968376 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089635526 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.114182729 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092699278 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094997378 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10404657 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095906696 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085448497 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.115479031 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095506731 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.0990762 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.116132426 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095199947 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09329129 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120482606 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090903315 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097535497 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086903107 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.1158675 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103767261 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.09967159 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116087583 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095449268 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092291703 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.112503306 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101289249 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095963383 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.111900453 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095098414 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087597546 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.106708402 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.099346824 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096371711 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.108348189 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093071149 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096058121 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.124526196 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091039492 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086677932 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.0988044 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115308757 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090070705 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113579202 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090416374 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092134907 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121241944 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087389984 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090662799 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115363066 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099028538 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093326209 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094342448 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.114287985 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099718822 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097103456 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.114047488 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091856516 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102655582 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111514084 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09389746 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091078979 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.125749997 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088268198 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095220449 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095548069 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.108522026 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.090780888 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099422372 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117099056 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.098953468 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092562728 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.115984273 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100795599 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099990976 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11079563 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.099480441 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.09070706 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105757692 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090926922 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087483451 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.114588 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090595111 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099391188 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.111061544 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093737742 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.097538565 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115756433 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091714476 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.098780878 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.125068204 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088063584 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087843092 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111098683 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094924447 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091643277 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109418835 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09543312 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09658219 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.117318875 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097744091 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.09112942 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095534752 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.11849023 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091491876 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.100959675 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.118952712 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.099641335 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091067612 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.116745731 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091478636 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099104963 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.107154698 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094588371 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093616944 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113104559 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091434554 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093421809 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.109040737 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088073171 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090752228 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.119187396 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.09465217 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098182462 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.113963591 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092554466 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092025364 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109262935 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.099906433 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093432456 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101479485 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.113828939 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088515277 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088364492 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.117318579 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094858284 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10030115 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.11071907 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098573094 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10164849 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.117790642 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095180937 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103214349 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.122621099 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101341235 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100235868 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.107053918 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.093956806 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099592493 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095125877 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.116506293 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097364401 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089336263 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116499038 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.100852466 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096291274 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.112002596 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088558442 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095942389 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.120918606 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.09765076 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099321626 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.116215541 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096498167 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090270096 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098308674 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.120587679 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.095501201 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103412954 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112559664 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.097846917 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091846665 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.118028442 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.095681281 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089157735 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.106597383 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091747746 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100859002 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.108272575 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099495467 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.098948029 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10967116 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093523073 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099585302 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092969194 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116602556 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099475554 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093066099 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123035721 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095796832 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093233245 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.11798424 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099635981 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088646344 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.112718719 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093371104 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10115028 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112713525 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099195161 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095424724 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118490872 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097278945 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.09914343 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100555941 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.117220343 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089070367 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101322947 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117890424 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097725321 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092239778 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11247196 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089870809 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093795313 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.11975987 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.093199775 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103305852 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.120159987 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093470243 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09323412 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.119183099 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093430584 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101183963 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.110923655 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097189312 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.089830102 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.117672924 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094097208 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.101770793 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.111924314 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.090585732 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100387122 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099712623 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118793351 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.098256646 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102318195 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.107659968 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088772785 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09858728 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.112720536 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104503698 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099023024 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.113123749 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094917332 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097486733 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.115222313 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102917738 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.091016733 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092463914 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.114636483 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097451647 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095134309 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.109326865 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098824235 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094578045 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115472363 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094953922 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.09089211 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.113069488 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101246786 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094243022 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.110744862 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092966777 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102502502 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.114267822 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.092086554 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.090219254 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121892329 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097534342 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102881099 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.112378508 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095931661 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093638589 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.116450288 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.1040241 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094021317 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114700302 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094297639 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100687233 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120947223 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089218151 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093041762 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.123736145 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101110822 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097182556 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098545198 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.114420971 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102562948 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10223173 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.116407253 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090176726 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.091165095 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.114062514 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089704126 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097873012 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121223762 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095339173 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092972572 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11850692 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099005954 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098975646 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098627351 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.108307755 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102881392 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093646947 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118139102 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089734056 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090592209 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.1173356 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100738166 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095527776 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.115298592 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097206302 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098195139 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.11074134 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093908369 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.10024075 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120620875 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101726547 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095409288 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.096808737 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.117755132 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10607066 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097221065 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.11357542 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102950142 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103584022 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115809965 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095746605 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100745531 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.120840205 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098126194 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102120655 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.114036904 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.09514112 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102610807 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.122666526 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106282312 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095309523 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.109283223 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099926037 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094482454 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.110075428 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.100045264 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10292647 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.121727609 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095741531 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093027087 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124815124 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101174067 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096228436 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.113252566 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093670463 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100073316 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113398775 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098959468 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092863422 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102356728 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.121619505 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101873193 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104660468 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.109699889 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102116481 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.099133189 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.123556594 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097229053 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090685951 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.110225808 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099123244 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102629933 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.122639914 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100096495 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099478585 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10023118 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.116077628 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096995436 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093800337 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.122918728 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101812817 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097351417 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.118434215 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.096075311 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098093867 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.117416703 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.10191398 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103024586 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.117434823 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105492981 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101974044 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.116057353 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.09432843 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097037316 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.119046642 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097762748 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102017668 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093845449 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.109505578 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102040305 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103814312 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115819343 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10318912 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103319523 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115622982 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099481493 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104396327 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.120695218 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098666027 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097562851 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.119310313 seconds)
  done (took 61.825740712 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143638909 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10441461 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117158941 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097986701 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116969344 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117870709 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09832871 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099886545 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119099625 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107105791 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098839554 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117584858 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114107282 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138810541 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115133534 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108179774 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117954355 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100866189 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098530926 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119417999 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113495116 seconds)
  done (took 3.208915218 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116160146 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112938685 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129074591 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113663123 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106752309 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129177339 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109226601 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130114075 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11286623 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107497606 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131334781 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110435777 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.12670754 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107466396 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106502638 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125934215 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113352716 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125807474 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.111103167 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109900071 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12782902 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111801506 seconds)
  done (took 3.423138781 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.128175371 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10184997 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.116953222 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.098789679 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101208244 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098138993 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120630579 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100181533 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107165361 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.113317654 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.089790901 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094457034 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098045702 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117555843 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093585171 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.100532599 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.125427113 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102130483 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10370613 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.118407586 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091253617 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099007371 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.100161606 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109602324 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103789446 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103300823 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.11878246 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102337819 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089982123 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.120886856 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.099448338 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092518921 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090252621 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.109305411 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090327905 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102682736 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.121172063 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.098393402 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099538001 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.109721745 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.099874482 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.101846012 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.08979502 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.11882655 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.098967051 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092916336 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.122002173 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.098333857 seconds)
  done (took 5.856440263 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127954442 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.165118741 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102395811 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.137784877 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133397163 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108016872 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.124038627 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136735805 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101019452 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123794748 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113068512 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.136002995 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103583421 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106329874 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.126360481 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10340964 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106090773 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.359342281 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107268957 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10325157 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.127186329 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.106290343 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.112430693 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.13198776 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104707918 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103230503 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121914385 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106900116 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.132786661 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108106052 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106014664 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126203107 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.112691205 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104344096 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.122401935 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104378638 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.1147083 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.123096637 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103288948 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102046417 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.123558223 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.106268529 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103803072 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.133745694 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102660108 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.125485401 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104500848 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100318963 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.129963922 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.104154819 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109902558 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.133845657 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104737309 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103410542 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124500343 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.112118965 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.125165296 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101733455 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.104614449 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.131322244 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100800098 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10512229 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.133569574 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102889232 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.10849173 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.132669909 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.105282102 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105564116 seconds)
  done (took 9.049386191 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132079413 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106032576 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134438165 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11422997 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107175852 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.125179173 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105612678 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.126242568 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107050706 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111187906 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126277849 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.196329243 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122125758 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111981383 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106854425 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.125786356 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10601674 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125707527 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105588936 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106391087 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.125092464 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114176913 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107603309 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.132946609 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118503584 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122698116 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106721305 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105738087 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135645466 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106237745 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1185247 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125350161 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107259633 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134356852 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.11848743 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107482518 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122480642 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109086478 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106802218 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126857274 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103572165 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114862758 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125752925 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103708475 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107620467 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127370086 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114245965 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.137917753 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111881181 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133116621 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.107355671 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115332829 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127081528 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107834026 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115641636 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.141561221 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114810924 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135872993 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106888245 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11531317 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135631664 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.124596149 seconds)
  done (took 8.243782283 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100712099 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100188475 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100543775 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119246229 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100026214 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099327157 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119843837 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101203583 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100549644 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099433216 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120246241 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101526937 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100318667 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120383939 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099932814 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099274723 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100335667 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119279476 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099751035 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099902829 seconds)
  done (took 2.967086945 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110199635 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116715342 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122137332 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108371466 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102022807 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127945867 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101532817 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102963464 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123033432 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102942602 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10943963 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130847598 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102410714 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108104947 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131346306 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108032433 seconds)
  done (took 2.673719719 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119541903 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118477047 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.185211722 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104671452 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.1231822 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108199647 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102354884 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.12615455 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10064162 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107345397 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.126914301 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.104567535 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101570801 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103615039 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122332026 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104879329 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101042761 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125086506 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102293831 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.184395114 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106313314 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103832696 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123204853 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105565305 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103650669 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.127300621 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108745638 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102312406 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.125383 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.102273817 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104536846 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131400632 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101774632 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106581296 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.123206852 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.103434267 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103201881 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103313434 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.124553584 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103413105 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105732932 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124245502 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102798098 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104903183 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.121922819 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103834023 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100821067 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.128095293 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103145274 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104070437 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.122709853 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109666673 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107038055 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.131276425 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.10910912 seconds)
  done (took 7.133660633 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113128291 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103684675 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133865658 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10021991 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102897365 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104986084 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.122907158 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105620832 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104165345 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121594763 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103720039 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10491261 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124229213 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103174397 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104189101 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124914238 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.099997954 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103786323 seconds)
  done (took 2.855341466 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107130081 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101544451 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107109216 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.122058186 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102627807 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103091707 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122247635 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101105799 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101324565 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.122726468 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102419394 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10230493 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101763316 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12218554 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103228008 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103783338 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123035624 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102139428 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102978312 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.12174932 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102945994 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.1017039 seconds)
  done (took 3.254447157 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.11292934 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.183168856 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107485341 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.193512281 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099411215 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097440156 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.129604233 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099421905 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.115289214 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.119031132 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.09814448 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.098564783 seconds)
  done (took 2.32910688 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128112937 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138751427 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123722869 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103681211 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111475438 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127745777 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107593702 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10825597 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134652389 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117702002 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127147525 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11445418 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116917121 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134725201 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112183719 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132050061 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107533074 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107447571 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123687794 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122020339 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107887316 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134391276 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107027308 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126953155 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10703225 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114944318 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135768898 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119451449 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128080937 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114816661 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112951888 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127625959 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115074688 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140580049 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103995795 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115953871 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127062902 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121254716 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112713663 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136351961 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104230556 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133609784 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114182052 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113021788 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136276773 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107627637 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133701329 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107250185 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107400285 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150116799 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111841365 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136701938 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111545437 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117255701 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136514963 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129170421 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140454523 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115550703 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13246553 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120059117 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116145181 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132163406 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117127541 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139399072 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111476391 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138011078 seconds)
  done (took 8.900602845 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143967599 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104597652 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128419417 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118701995 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137436237 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108269288 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10759724 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129925891 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108171877 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105092458 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171015053 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107869743 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137234679 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116021575 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108989795 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128490563 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108274583 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117034625 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124784432 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131767158 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129636758 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117141169 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117094504 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134374314 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120796702 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131711873 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108809925 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108356566 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127831106 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108227019 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135087951 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108699822 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116094064 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125575356 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11548224 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108460464 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129290751 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112687165 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10880727 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133096477 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117664468 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143142991 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108216097 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108617482 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139991353 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108144852 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128943977 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104689562 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107800848 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125340887 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119967685 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140156671 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120215463 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117446448 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129086923 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107851196 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109651948 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130147547 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10835113 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134295951 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116627627 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109227659 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15065407 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108308189 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130836191 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115994799 seconds)
  done (took 8.860238046 seconds)
done (took 167.6686728 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.146684273 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.185112546 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.14360311 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177826157 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093969704 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.129176355 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.148111795 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.144916244 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093945646 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.114591629 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093959727 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096601907 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.183703779 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094436154 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094813733 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.117421147 seconds)
  done (took 2.934847718 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.1921733 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.305486909 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109819491 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120025973 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101459205 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099037346 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119317761 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100827308 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100012181 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127932458 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.098637958 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096644426 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127456499 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096804644 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099458173 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120974863 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105794731 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099928964 seconds)
  done (took 3.107078367 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118645331 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141971651 seconds)
  done (took 1.150055623 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128037369 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.213117604 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.283049908 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.167386202 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122266882 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.14018317 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148124928 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13505613 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188735417 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134654682 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11247939 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.118556853 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.124625926 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105100877 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.13685288 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098025891 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126941396 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.135424921 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113651795 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102257101 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.142131255 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103349665 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.126752284 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114271045 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180839205 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134266024 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103875539 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.125365495 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.102325342 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113552533 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.12898663 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115758075 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.133675753 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.159399057 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124005227 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.155992427 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.126955528 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.100139362 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.135890133 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099997465 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104114046 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.124806126 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.113673614 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098085601 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.124208362 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.107379792 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104002956 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.123795015 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.108134903 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.12962996 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108006657 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107291636 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.174624603 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.108587051 seconds)
  done (took 7.88525035 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.868883781 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.139412797 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100741377 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.017256406 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150873826 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114222185 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.889989558 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.122796947 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257202444 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.893331668 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116602892 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.135811163 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240849515 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.283361458 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.272720536 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362424754 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.73045551 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.137289093 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129662221 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165024818 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109523127 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126921432 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141336284 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.522297383 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100305436 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100727049 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130412972 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113252155 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177839705 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101330089 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104104187 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.198672041 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.294208899 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.213773132 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102079548 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120845241 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099666773 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.186226573 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.280709473 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224222207 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.196068583 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096614601 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100112935 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131666262 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119084542 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098479602 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180827248 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192015714 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.19401901 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10496409 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.134935067 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111569096 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131553572 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.158094737 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120736893 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362975629 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.364683521 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101251301 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134027319 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11681754 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273758794 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124498159 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239675025 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129101772 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220770515 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123073124 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.84853373 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188394897 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.10069949 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108828461 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130807606 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108294577 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.109578299 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191746029 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.506589274 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113017488 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106141809 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123202435 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.237771603 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101308156 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100917093 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182070269 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101389884 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131411895 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115318927 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135092426 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189818362 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.250510838 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134833988 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110292116 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129417411 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113777217 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.10158771 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.235604779 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.232029737 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.177343634 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.235889919 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10969054 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182445939 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187059589 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107949794 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.191556518 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109194296 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.138973175 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109063255 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227851338 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.156580913 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106922785 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.128213803 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109862103 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160387475 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104580915 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111826937 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.187951529 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.563572787 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187694531 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097979641 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106239251 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134579656 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159609772 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130188539 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266126485 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111925527 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.189013134 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109282463 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.120913549 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110183926 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.184414039 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113079863 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132668528 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10973827 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133762053 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.260139605 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225262461 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.136194742 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.256628518 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.200768936 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108518271 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195174097 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108806197 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189435573 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112811959 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132529309 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103532601 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.836995909 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139048565 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108411849 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108196052 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.208241303 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101279653 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126285024 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101188926 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099478456 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.821521291 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127421643 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099749977 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10374486 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133005168 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109552536 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110566399 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.131614959 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160891652 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.268904679 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114755097 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131670004 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101357764 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.18069485 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102313291 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102560763 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125334631 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102331677 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111453923 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129791764 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104282823 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.194049957 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.157864526 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.254604291 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.638199488 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102394135 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102588518 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.268157333 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101492554 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.331117839 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112479931 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.261222331 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165746816 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120758488 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.369872986 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.189947492 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187173054 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127341434 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.171816018 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.121007848 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11074301 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.181335018 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101930122 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132479003 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.157901304 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140112085 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.115065849 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.288403276 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.12443575 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254453298 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098219304 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.19266879 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103792573 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111187574 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.350800594 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101367987 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120147002 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180764006 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130011903 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102932094 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.680494905 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103198873 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114952183 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.132755765 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.238510261 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187153408 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11214894 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136297165 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115924405 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183124417 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233072395 seconds)
  done (took 48.332289729 seconds)
done (took 64.295618201 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.266720668 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176698813 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.28056511 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174800245 seconds)
  done (took 1.884912172 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.240450295 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.154899754 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.224256823 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097957315 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.205455474 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.118818856 seconds)
  done (took 1.95941661 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.173876685 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167659368 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.146482228 seconds)
  done (took 1.405738483 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198913838 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.214841351 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.325306164 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.257275365 seconds)
  done (took 2.001198925 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.262635326 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11551924 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124883938 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.205810326 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.221129832 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.202135231 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.121176266 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175285394 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128630727 seconds)
  done (took 2.514451594 seconds)
done (took 10.681040819 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.243292077 seconds)
    (2/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.382402333 seconds)
    (3/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.275411807 seconds)
    (4/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.343967263 seconds)
    (5/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.231746868 seconds)
    (6/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.150545787 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.188386966 seconds)
    (8/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.349760429 seconds)
    (9/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.284302059 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.217710712 seconds)
    (11/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.123757491 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.108583124 seconds)
    (13/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.268029395 seconds)
    (14/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.211202709 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.18198134 seconds)
    (16/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.287388637 seconds)
    (17/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.235446998 seconds)
    (18/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.179818097 seconds)
    (19/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11021225 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.12573383 seconds)
    (21/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.124389316 seconds)
    (22/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.268867712 seconds)
    (23/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.133292135 seconds)
    (24/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.197164262 seconds)
    (25/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.107593549 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10208527 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.119554136 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.152189318 seconds)
    (29/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.168850756 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.149749566 seconds)
    (31/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.121592034 seconds)
    (32/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.346415178 seconds)
    (33/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.116087346 seconds)
    (34/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.235029457 seconds)
    (35/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.199325117 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.126683601 seconds)
    (37/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.078648301 seconds)
    (38/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.140987963 seconds)
    (39/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.105375258 seconds)
    (40/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.102780612 seconds)
    (41/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.105727839 seconds)
    (42/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.352063738 seconds)
    (43/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.124310608 seconds)
    (44/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.21954459 seconds)
    (45/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.270404065 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.102010628 seconds)
    (47/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.075645162 seconds)
    (48/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.106263119 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.126081291 seconds)
    (50/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110618914 seconds)
    (51/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.181188429 seconds)
    (52/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.132035211 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.103151833 seconds)
    (54/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.087048979 seconds)
    (55/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.132908909 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.12166909 seconds)
    (57/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.079174808 seconds)
    (58/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.08435122 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.125469566 seconds)
    (60/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.079162285 seconds)
    (61/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.126916826 seconds)
    (62/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.192951727 seconds)
    (63/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.182973916 seconds)
    (64/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.079544131 seconds)
    (65/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.1917539 seconds)
    (66/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.112561106 seconds)
    (67/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.084514628 seconds)
    (68/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.190587064 seconds)
    (69/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.179449968 seconds)
    (70/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.157155667 seconds)
    (71/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084375421 seconds)
    (72/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.166309286 seconds)
    (73/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.075749042 seconds)
    (74/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.169291775 seconds)
    (75/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.131933722 seconds)
    (76/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.132732837 seconds)
    (77/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.184363265 seconds)
    (78/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.083412363 seconds)
    (79/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.083599096 seconds)
    (80/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100374719 seconds)
    (81/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.214154495 seconds)
    (82/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.123252438 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.126212748 seconds)
    (84/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.102965283 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.106313164 seconds)
    (86/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.163854627 seconds)
    (87/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.107071816 seconds)
    (88/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110419636 seconds)
    (89/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.133365103 seconds)
    (90/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.171507557 seconds)
    (91/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.161323504 seconds)
    (92/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.107966483 seconds)
    (93/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.120921109 seconds)
    (94/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.110292751 seconds)
    (95/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.077479987 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.129943582 seconds)
    (97/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.129984188 seconds)
    (98/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.190042474 seconds)
    (99/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.085178951 seconds)
    (100/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.099639422 seconds)
    (101/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.140695756 seconds)
    (102/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.208367756 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.100051491 seconds)
    (104/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.13427927 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126138121 seconds)
    (106/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.080022011 seconds)
    (107/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.181192016 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.102278104 seconds)
    (109/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.08402617 seconds)
    (110/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084463454 seconds)
    (111/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.152423394 seconds)
    (112/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.142437909 seconds)
    (113/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.10078932 seconds)
    (114/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.084658692 seconds)
    (115/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.15383457 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.108890114 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.101210183 seconds)
    (118/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.106557219 seconds)
    (119/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.110359709 seconds)
    (120/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.153750364 seconds)
    (121/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.106694398 seconds)
    (122/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.077090099 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110582171 seconds)
    (124/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.12933424 seconds)
    (125/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.103444011 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.102869855 seconds)
    (127/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.084722985 seconds)
    (128/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.084166003 seconds)
    (129/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.107583454 seconds)
    (130/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.081051765 seconds)
    (131/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103653165 seconds)
    (132/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.110290521 seconds)
    (133/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.100739796 seconds)
    (134/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110661374 seconds)
    (135/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.077819163 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124048382 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.150888368 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104289333 seconds)
    (139/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.107459334 seconds)
    (140/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.125714685 seconds)
    (141/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.113882536 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112373036 seconds)
    (143/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.164358628 seconds)
    (144/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.124655133 seconds)
    (145/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.103479682 seconds)
    (146/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.104203634 seconds)
    (147/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.077754473 seconds)
    (148/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.10964488 seconds)
    (149/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084706752 seconds)
    (150/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.107746068 seconds)
    (151/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078040757 seconds)
    (152/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.100611843 seconds)
    (153/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.112163001 seconds)
    (154/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.132682615 seconds)
    (155/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.080558297 seconds)
    (156/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.077651717 seconds)
    (157/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.084317551 seconds)
    (158/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.123263624 seconds)
    (159/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.077743959 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.101131159 seconds)
    (161/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.081078286 seconds)
    (162/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.080622887 seconds)
    (163/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.106883085 seconds)
    (164/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077214883 seconds)
    (165/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.076808967 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.102835352 seconds)
    (167/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.082497226 seconds)
    (168/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.099641675 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108703076 seconds)
    (170/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.077147719 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.124681756 seconds)
    (172/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.100317559 seconds)
    (173/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.108399099 seconds)
    (174/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.08047995 seconds)
    (175/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.083891037 seconds)
    (176/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.106835257 seconds)
    (177/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.103170751 seconds)
    (178/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.081015964 seconds)
    (179/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.083336058 seconds)
    (180/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.079977361 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.145038101 seconds)
    (182/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.081849412 seconds)
    (183/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.079002963 seconds)
    (184/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.151576002 seconds)
    (185/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.11214136 seconds)
    (186/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.078222547 seconds)
    (187/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.078571347 seconds)
    (188/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.078823002 seconds)
    (189/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.100907354 seconds)
    (190/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.084396 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.102806654 seconds)
    (192/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.077553203 seconds)
  done (took 26.376516661 seconds)
done (took 27.298698383 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.202649119 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.126429308 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108729642 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110082022 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.198569117 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116741173 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.151170601 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110760262 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120505095 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.133284071 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100006766 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123271473 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.133431891 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.177479744 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.114436714 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.12621192 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102028544 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.121800787 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.149306771 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12549888 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.200948345 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103440199 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.120890832 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125963508 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.176804939 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129044347 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109680012 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.113703258 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.146235794 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111002404 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110866537 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.126426055 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.125454803 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.128078362 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124747355 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111226322 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102223124 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.085034592 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.134824987 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112064449 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.123245387 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.135047241 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11224298 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103418893 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.135138531 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111540648 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102903016 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.137228039 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100334967 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.112067064 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12817882 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127038504 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111972972 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.123715432 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100366352 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10368264 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.144530294 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102465658 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123777086 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124691479 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.10367244 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102992082 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.137474305 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103463094 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110712818 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103775428 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.134421145 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116403274 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110990254 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127575531 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102169971 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111500812 seconds)
done (took 9.834804324 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106755361 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148605304 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.198085607 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.211497667 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130362571 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.143291819 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117307507 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127259112 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.139640856 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.121308111 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.141499226 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.158490453 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.183728546 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.143261381 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118980502 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.1394957 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113780927 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11225035 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.206408417 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128183647 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.15348295 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.11912981 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.130133179 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.144389242 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107751952 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.153464013 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110628183 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114712214 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129081644 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.12494428 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.128293624 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.129864416 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.109159045 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12719648 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.146642949 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.116984814 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119984124 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.137748977 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108156531 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107599902 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137927308 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122877338 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.130035928 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11918663 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115416591 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.145787358 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114377363 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12034426 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.130741512 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114195025 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108232739 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155394803 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.119741394 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125085056 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.142785836 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.119786391 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120594957 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.142990917 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110199872 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119325552 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.131014204 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107474368 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.10889944 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.152623745 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.111291108 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120864353 seconds)
  done (took 9.607236406 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124653668 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137482836 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140327801 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117294929 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113902944 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.1240773 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101047485 seconds)
  done (took 1.823594025 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102650241 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185766811 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.206493829 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209064933 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.206488582 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.192632766 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.152800626 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102618443 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.137986938 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137514747 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.18572059 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.23739701 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.113551063 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.141928124 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.213941854 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.101074087 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.21495648 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.10203243 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118001787 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.21103269 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120319583 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.161729928 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115487283 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10332555 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.203627178 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.10439848 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.261242011 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147362672 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111525136 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116291087 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.141657368 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.182392313 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.208098012 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117436252 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13585268 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.182844559 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.205548744 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116289774 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.219298882 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.107183419 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.205257253 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.11738991 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.1442855 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.116811289 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.1178538 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.194700992 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121953863 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.143972027 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116474583 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.215636974 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.1144083 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209838086 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.114168532 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118817481 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.139245589 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11821984 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126222272 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.142723319 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.191175962 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146213382 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183884064 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.210683506 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.207406604 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.185055605 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.152514632 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.21168763 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.176409333 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117191025 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.137108788 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120440086 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.211288702 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116056995 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.141475792 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.173085264 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146437328 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.18546871 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.211051927 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115347203 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.143365702 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107190347 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116432947 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.128929333 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.175304436 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143561345 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115038385 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121886334 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141893123 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117256789 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.108899231 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.152845143 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.117010479 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116279316 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.146760778 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117456093 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144718843 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.189501083 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.141038426 seconds)
  done (took 15.767016508 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104854379 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105002032 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109519653 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128990012 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105632124 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105776811 seconds)
  done (took 1.641257391 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140940277 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118467374 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150854895 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.1190667 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.187913742 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.188433024 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.217668416 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113080378 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.159400603 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12734886 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.21534789 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.192407859 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.21472316 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121808334 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.220312648 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.146153196 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.194604153 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.141686828 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126062913 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1155025 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.142704996 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121871941 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116479987 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.205660881 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118779531 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.14668058 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111935155 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127299021 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.172133375 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113892954 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.146234484 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118499211 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111413617 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.136049583 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.195358396 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.137252661 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114804151 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12218123 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.145482629 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11966894 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.220819724 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115268625 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125570786 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.14639464 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113465199 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.136150371 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120930212 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112699559 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.220261016 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123153571 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.148505716 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119377368 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120304936 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.14670044 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.112432476 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112814637 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.14523024 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.197670301 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145833893 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.112732663 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.142752641 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119514049 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113784367 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.146896436 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.119198973 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12140388 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.134868751 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120028934 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115804345 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.142789326 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122368178 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119498085 seconds)
  done (took 11.23779101 seconds)
done (took 41.036010479 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.588599689 seconds)
  done (took 2.571249527 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.883336891 seconds)
  done (took 1.868077194 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.808003786 seconds)
  done (took 18.819543611 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.422021392 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.461995174 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.123839053 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.146962832 seconds)
  done (took 3.13568969 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.814438308 seconds)
  done (took 1.818538306 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283360866 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.256307075 seconds)
  done (took 1.526982055 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.712174103 seconds)
  done (took 1.71045848 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.524095927 seconds)
  done (took 2.511216537 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.284699216 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.23949507 seconds)
  done (took 1.527246101 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.604269541 seconds)
  done (took 1.606385365 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.521490504 seconds)
  done (took 20.527284404 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.256772743 seconds)
  done (took 1.263855744 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.287100332 seconds)
  done (took 1.291884613 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.515976595 seconds)
  done (took 4.521385524 seconds)
done (took 65.695551857 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.113422645 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.117714886 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.140586327 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.115575065 seconds)
  done (took 1.481359105 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122733174 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118574258 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.144632658 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118447013 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123190458 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.142185451 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.118577319 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120241811 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116778869 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.143853179 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118408652 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116849829 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145432613 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118386353 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114831543 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144945922 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121098924 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118487797 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.142383706 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118870239 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119498365 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.14400391 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121119321 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120071761 seconds)
  done (took 4.039646051 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113681863 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108991843 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110667227 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131386905 seconds)
  done (took 1.471956385 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.124878793 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130118222 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153677657 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125478137 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130754642 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153541663 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117227079 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114975421 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141671238 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126918303 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133485612 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.153980904 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129961826 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.14391397 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.12889254 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112329882 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.142108323 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.129444853 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125002423 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.151548565 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118506294 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123433871 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.147636273 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.126271615 seconds)
  done (took 4.189975592 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.190575959 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.128881042 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.172245941 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162472508 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.176246548 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116008335 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.14571395 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148393434 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.126936665 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.144799053 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.121819153 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162617352 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.149810313 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120481927 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119405726 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148812812 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.131293089 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.14965214 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.164648069 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123189803 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149788181 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.131109474 seconds)
  done (took 4.196272699 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122409071 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109366058 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.131152729 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.108544905 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121833191 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.135812591 seconds)
  done (took 1.744734362 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107474796 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104516222 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104089565 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127268431 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107436544 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104295974 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.125621615 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.103348392 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103839057 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102959962 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127807451 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103366053 seconds)
  done (took 2.33121402 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.327295735 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.10839192 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134871467 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110518724 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113789584 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.107159954 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.143514598 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.108261713 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.267252778 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.10421155 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.133329164 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.19644204 seconds)
  done (took 2.869388045 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200494582 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145772215 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255562453 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.366260934 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184403117 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162605457 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.290203 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186867109 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.175255031 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162268547 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209902632 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158417366 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153132474 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209873495 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164328068 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.156219357 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1864975 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209160391 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166559845 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234963574 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15626491 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200203523 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187283048 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173152828 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139499061 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186576947 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118666029 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127492612 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190371753 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189048814 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171721866 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175619441 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140895044 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215729872 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253663584 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198132566 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268202167 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132443188 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.192199264 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.190384147 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255949581 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16756727 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18876396 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176930951 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129591627 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210091785 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151727766 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.208567535 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.13340703 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170592906 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208127398 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177827376 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.20291907 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136085325 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307856644 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157525895 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.141860876 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190434807 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186351105 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226286112 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203165414 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122635056 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199935917 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18893561 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236663855 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.166918701 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.163450338 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151275448 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164645928 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.233442255 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207225834 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158708805 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.236573132 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1301021 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195957949 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195473558 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151884442 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230860921 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168309179 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.146122249 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148720651 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159414085 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125914402 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.186691525 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147787912 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242615585 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131941158 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.341274271 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207087637 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155274123 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187060858 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157431232 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190301278 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146820766 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.127888431 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142981671 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.161211581 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181418293 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128542729 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181095944 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138824227 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.152507216 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150587992 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122315483 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195032315 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132212723 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188769461 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193395752 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.131024203 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203627623 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147481879 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.187650347 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16716307 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218675014 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129410624 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159078377 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244865693 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168518926 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135956582 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201249575 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223746606 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.14861129 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162807964 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162656209 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222044473 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142698643 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226991859 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165456074 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134947025 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.16361762 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170961763 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186717667 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154939282 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126871226 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.191020823 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217081652 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126934677 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165447777 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181172379 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158851285 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124806241 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135711784 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162269452 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140767107 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.174776237 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137208541 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178752551 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164155249 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191111227 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154318317 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160571596 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171258325 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157196262 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.167105225 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174484901 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119170261 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.201649663 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194941492 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156271157 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178678706 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.189237359 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208927032 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17025941 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155892384 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182149541 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15428262 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120632216 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160044663 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198153104 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191711264 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.187820225 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207828756 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.190294979 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.16163052 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175548748 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167566598 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.20889186 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182744629 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142965963 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199327339 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166694354 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.147388504 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123882311 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127751288 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162776799 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128621129 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136650703 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203916662 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191937285 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204233946 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166694309 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163624136 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189967438 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.152441663 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157949513 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.202760322 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138355796 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.215940652 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1892953 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204294386 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139922167 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18652911 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120885955 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152762297 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.133412193 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189769547 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138064558 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135410553 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168679231 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21692761 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170748547 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175022019 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217990686 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162659598 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227051076 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119931156 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.187683189 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167676909 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194702908 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184278785 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156518482 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.159809406 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220537651 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140151255 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21904634 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166357045 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206315708 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223224707 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.164023736 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157946914 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147420868 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189584096 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13657413 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190188398 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147134961 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130782266 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179106321 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.138184955 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167706237 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213013025 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142372334 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205933338 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.159718574 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197969721 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124921125 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169933631 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174887986 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172351437 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103507675 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195117361 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194559202 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176469369 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155477086 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201086425 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128913694 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.345197435 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21150349 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174684689 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163547929 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137257875 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199151976 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160882824 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19109043 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184099066 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168770074 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205123146 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196167674 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.143491539 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158569373 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147807597 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178001794 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.138366398 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.180782265 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160567596 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.171291021 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214925119 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137435933 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168742083 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203982008 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144117319 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.177432591 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137881777 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251095105 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195860083 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171128565 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.19172601 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.164360773 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209036065 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12407313 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15392907 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132027958 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214997093 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13043745 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203352556 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.169623344 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21220962 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200515128 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16211729 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168603212 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.126572909 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196508369 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147687541 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216337095 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133765081 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.163677189 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214586422 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.12609603 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130425006 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18848747 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269640804 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170734363 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171932156 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.134218126 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.270400537 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153575829 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132046726 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190842631 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167192969 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.160617589 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181989995 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198211044 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140191598 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191851068 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134676608 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208330104 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18515285 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192970536 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203643086 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.145181799 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192658172 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159256658 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20213534 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14625354 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.175590611 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158074196 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222632672 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.179445624 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.160644018 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167831523 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196372168 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171773579 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200035742 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166502788 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181496525 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126295547 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191576429 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138243168 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152759059 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159261594 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.196411648 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156572376 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174914057 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198244373 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129890753 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127073394 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173929679 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16493336 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167057336 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129181555 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213652005 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128277937 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208443192 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237328965 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129354148 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165874027 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174826025 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129719213 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165711769 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142478177 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159229925 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172084571 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178978071 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.157296145 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175760863 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192125598 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191168594 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155141274 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171988085 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.334244279 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128111326 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218082763 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149562175 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223304163 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178682718 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17365043 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197473943 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148682305 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192183799 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146034948 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.247694955 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164502847 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.194682392 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130744445 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172313957 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139194911 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.161922805 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153563866 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196265459 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142175795 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135616287 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.195145795 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146070977 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.174922976 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143142126 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228509553 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150534355 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214519307 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217043828 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136746778 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205812981 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174796514 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158807589 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.165800375 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197731398 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143626574 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181896355 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133549876 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.166153162 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211509893 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.15320418 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159892085 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20224015 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168593974 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199607915 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.135386202 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206534961 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139909775 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203157281 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127511037 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.182290597 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172452832 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161937832 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126694592 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169839212 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185893117 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.192165204 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143043913 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.175984296 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218321796 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123386403 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162005837 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270784531 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18573025 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222460561 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137052272 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136216861 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173688322 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158351617 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.192863839 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170308905 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.159029679 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128691553 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.173708201 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.156747081 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141264072 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194407877 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197015039 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159718282 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213589862 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133260998 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280116135 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142233202 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198638368 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115669329 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128792151 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167880447 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133918804 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141010191 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212171872 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241314485 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162842955 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.17578633 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135188464 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.156125114 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130411681 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190043185 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150448533 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195665922 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147755278 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102188395 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169857305 seconds)
  done (took 85.971521929 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160343255 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149627495 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166892643 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221607714 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192749744 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.28941552 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227187628 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244680325 seconds)
  done (took 2.751433376 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.11852473 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158698795 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141303728 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.142070786 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.108774181 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.441970112 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.158210873 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.119118359 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.161885668 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.151319604 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.133170217 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.530137851 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.115209503 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144041366 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119968835 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132556211 seconds)
  done (took 3.967716972 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.647010279 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.542264762 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.967808811 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.290923804 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.258092468 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.203004822 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.746757219 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.195591479 seconds)
  done (took 11.949969282 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.153293069 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.148032788 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.415634044 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.747209201 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.202803347 seconds)
  done (took 2.774376295 seconds)
done (took 130.73341863 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121832003 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.121767436 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.122626359 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150648581 seconds)
  done (took 1.610950406 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.172695827 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089479918 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092047402 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116152229 seconds)
  done (took 1.575033237 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.422911794 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089425504 seconds)
  done (took 1.646169006 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.152834036 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.140068846 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.16625755 seconds)
  done (took 1.579019941 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.137983472 seconds)
  done (took 1.246578398 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.125075598 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125944563 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.227884799 seconds)
  done (took 1.592160643 seconds)
done (took 10.359930589 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118717157 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.920694305 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431925183 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131040207 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.709687436 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.426892879 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.419168349 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.174801215 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174472258 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137716032 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129559489 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687953582 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.432133774 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.870243707 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.387828477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.899505675 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.695468541 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110803359 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.14285344 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110168919 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.427393141 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108425644 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110224021 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111787437 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.718317639 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.417249296 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109017781 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.917087465 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108354525 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141429581 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.398597084 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109144194 seconds)
  done (took 20.888190683 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117164191 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.165656579 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145433965 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110699326 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113144309 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139439072 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121091251 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123854113 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202084832 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109574342 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160230459 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108703342 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.115518574 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.13863649 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134948356 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109477296 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.142262695 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112429184 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117700117 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139382348 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.131047593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108917423 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.14026517 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113228298 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109632042 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159970723 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109976395 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.1222563 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137325749 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114302571 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115054614 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138600132 seconds)
  done (took 5.248320144 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157937798 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17722698 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146941039 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146775278 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.187846858 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111872804 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.225793749 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147358742 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205504196 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112819757 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132654522 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138003497 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150232008 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111298306 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.163958632 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110609572 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.139112757 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112610259 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117474468 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139730688 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132170933 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108498634 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.140212788 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11223262 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109273767 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.161547005 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110262005 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122235354 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138282572 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113935349 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116365519 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138716166 seconds)
  done (took 5.557627445 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.124117949 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125342722 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133165282 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.161408075 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118737337 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12337797 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.152345509 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119689233 seconds)
  done (took 2.177573596 seconds)
done (took 34.983014501 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.133664298 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126442844 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129389605 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.150927318 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.185900766 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.144295647 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.124960729 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115379216 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.151857783 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129789221 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.10960684 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.11732107 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156019064 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.118944901 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.217368798 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.123054217 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.222609381 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.188180108 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.146343865 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.122907906 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.117080087 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.22096848 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121521551 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.145560352 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.187514097 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112910881 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.20987646 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12189361 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.148147195 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111848542 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.220399379 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.121853279 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117095212 seconds)
  done (took 5.982496039 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.203885046 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.150839356 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.11951368 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118858233 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120666347 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147450706 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.207394805 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.148523822 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.11920136 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118887082 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.1481997 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.19276217 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.125433967 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.144075212 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121771654 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.108342678 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.234637115 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.12114318 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.140257384 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.093227752 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.113624167 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118634895 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.247375946 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.114216419 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.148560696 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.118814845 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120984035 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.124910043 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.148891882 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120766452 seconds)
  done (took 5.393734201 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.123695249 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132352253 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.16537303 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185396465 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.149212452 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159895796 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139314211 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135610669 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.16909312 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112898716 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129375948 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.178715137 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12859483 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124317425 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.147040577 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131535442 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13678675 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.142063055 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121096617 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130318477 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.163717682 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129628834 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.136749506 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.149461809 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.11238079 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121165209 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.153020193 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128232214 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122853277 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.157102231 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.115429716 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117220826 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.144936406 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.148327545 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114954591 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.156269721 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139353109 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125219361 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.155759079 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.145663718 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.147041322 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.115757889 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.137953987 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.197057348 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.115340499 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126388262 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.154176013 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.128043558 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112050862 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131743189 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.184427888 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113126286 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.164296118 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112410084 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.1120891 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122399149 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.143061989 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.116400694 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127928241 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.145400349 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137335223 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.1201619 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153871539 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115093164 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123908159 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.141569616 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112705766 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117741677 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.168203149 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120621109 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150108161 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.142284043 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124904292 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125449405 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.15291448 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125515358 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113209731 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124826094 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.152521868 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119362493 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125540049 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.14536806 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116223782 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130351697 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.163917349 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128260884 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125506302 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.156117119 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118268756 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.116129607 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.158777315 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.114322574 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119572828 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.155184446 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.113721784 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117146577 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.156485174 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124531296 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111589928 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.167849424 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.117731276 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113181983 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.167172464 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.117546043 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119799638 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123503316 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.184080811 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.1143496 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.154806143 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.127467971 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.113471611 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121628137 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.147155204 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.113365744 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131891217 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.158774415 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121459519 seconds)
  done (took 16.980623821 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.316519354 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.301683731 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.1854956 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.240261469 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.12794627 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.235338641 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.298058616 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.302257531 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112985921 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.185615827 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.165971205 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.270584611 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.145600026 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.14194265 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.304148982 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.35854609 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.17408068 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150621302 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181393898 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127268306 seconds)
  done (took 5.46985758 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.133059568 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149689852 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166149082 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140551573 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125114779 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.159220378 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114175358 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136479106 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.154541222 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124317272 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116110395 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160352072 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126078229 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130732752 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159176136 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145317129 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.1209046 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148560399 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136777031 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118984994 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.129432507 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140615032 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.151986888 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.136062666 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.133381217 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.154558984 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.112011546 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119195566 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121211023 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.15103149 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.11891508 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.162444198 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.121458916 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106645451 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125648771 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.158230932 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.120996417 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117226796 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.147889917 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.117566592 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130002296 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.156961367 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122496536 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096876056 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133915636 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.137466215 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.129488161 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125989869 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105322849 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.163958009 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126843855 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.1282087 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.150710461 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.136746609 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121285753 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.160106305 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.125331149 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129784367 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.148920697 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.112790658 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.112304057 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.14686205 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.12183335 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129500456 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.154349511 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.133598649 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130987131 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.142483382 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.118888844 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.118446559 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.146252006 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.127374963 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.13493394 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.152591387 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.120406638 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.126488314 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.151797292 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.093558321 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123020212 seconds)
  done (took 11.698678132 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138466283 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123068568 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.160984666 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.149897574 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128187091 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.149335724 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.122014216 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133715609 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127379214 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.16007061 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127806326 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127765429 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164311605 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12489266 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121903879 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.158496523 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126562171 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.181742008 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.132358133 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141909816 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.157868288 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.118160627 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127092604 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.155294148 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143167076 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125369941 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.17178687 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.125760857 seconds)
  done (took 5.084169961 seconds)
done (took 51.734044294 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.305368818 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.473370492 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.252650904 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.253129936 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.271868128 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.261763694 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.253983855 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.254776159 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.707270534 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.227678678 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.254188798 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.250766439 seconds)
done (took 28.918901481 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.319920599 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.79415282 seconds)
    (2/2) benchmarking "String"...
    done (took 1.543775174 seconds)
  done (took 4.482301853 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.248049161 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.242483566 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.49493963 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.242712442 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.265089972 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.243986735 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.258900959 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.248537634 seconds)
  done (took 16.139310613 seconds)
done (took 26.334148053 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.294430607 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.422474952 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.485044791 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.244268963 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.274869451 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.244220098 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.264274699 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.266755664 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.252371899 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.261611513 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.648271362 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.506304576 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.245600703 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.610392271 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.24464951 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.262225839 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.261050086 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.469408828 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.247170285 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.279102884 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.222491276 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.228675231 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.254893099 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.24866787 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.250798911 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.258574949 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.273386055 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.250670643 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.41267933 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.278962089 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.281269247 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.249983902 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.274372876 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.245316511 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.253969282 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.246767876 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.413754302 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.254834655 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.223595481 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.274859287 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.427185561 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.269134562 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.245770499 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.2694851 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.262031285 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.296030939 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.224745619 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.376197696 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.266540376 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.257391454 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.330574343 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.611553195 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.263230682 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.258457672 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.257495199 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.45335183 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.263135427 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.299746407 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.272062532 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.260268902 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.247781996 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.273270717 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.258031592 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.251191565 seconds)
  done (took 146.524608403 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.247462196 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.249255931 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.248303777 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.255360248 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.247695921 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.249778977 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.247027632 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.249050422 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.248069676 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.277632592 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.248513156 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.247715773 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.253363687 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.201971879 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.258727421 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.269293045 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.252066538 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.264354577 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.2591926 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.246936173 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.252153557 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.255018123 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.24936995 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.249370569 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.28542031 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.324122438 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.27924237 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.276127532 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.263312114 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.249284619 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.288605764 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.254227888 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.858919557 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.123082685 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.267690298 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.263583644 seconds)
  done (took 81.909520012 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.251131626 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.25118188 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.249560828 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.282751217 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.250684398 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.820952998 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.827489956 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.214661825 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.389324315 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.254845874 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.577124783 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.485578214 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.253025374 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.340800581 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.261425583 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.252524521 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.266986468 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.276587771 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.255758038 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.251363319 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.822794097 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.267011251 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.448465954 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.427793216 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.265989798 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.282856461 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.641854814 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.250574761 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.249743666 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284298964 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.583140847 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.298563577 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.251783064 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.590091738 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.70559261 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.366102559 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.253372798 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285414564 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.249139512 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.535267629 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.252666553 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.251290678 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.254521572 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.888826482 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.256998931 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.825129555 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.257695664 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.203693261 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.256937506 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.251615348 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.241785479 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.915861642 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.257338705 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.251941089 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.255596149 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.252527625 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.253184717 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.28541737 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.239350557 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.349154214 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.252724201 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.253319829 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.256189061 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284408738 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.254404192 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.253198659 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.392986697 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.258217989 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.00688705 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.31392712 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.362957432 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.826908211 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.257109261 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.348540597 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.371454378 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.253385429 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.254389064 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.254982294 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.254709632 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.364747729 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.254898748 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.934837783 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.431908726 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.269824628 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.590570453 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.355602188 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.254506273 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.585393518 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.259214722 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.254345336 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.954516517 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.350485716 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.25626494 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.256430158 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.257169863 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.930051897 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.830137378 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.490460048 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.260890907 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.825653247 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.260420922 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.114226573 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.813584669 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.900928705 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.260735843 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.366569845 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.43201015 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.271768032 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.254336787 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.594322759 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.259792266 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.310044527 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.258817153 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.65806334 seconds)
  done (took 379.663451012 seconds)
done (took 609.241250577 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.134284579 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.080072449 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.233021091 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.097635551 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.093972016 seconds)
  done (took 11.794235523 seconds)
done (took 12.949011574 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.44754924 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.448178237 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.318279123 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.452663857 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.290061163 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.463753712 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.429880495 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.278867714 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.368504484 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.339857716 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.369205613 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.308986601 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.290874404 seconds)
  done (took 18.961345015 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.534081122 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.268442232 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.324964432 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.514048386 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.304991118 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.535855348 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.558707519 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.268787119 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.414474577 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.280933875 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.279270245 seconds)
  done (took 18.441620289 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.539504658 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.267228096 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.327284392 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.521067921 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.305496039 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.545334816 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.566703577 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.268937672 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.407197467 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.281809415 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.280806393 seconds)
  done (took 18.466974041 seconds)
done (took 57.026917332 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.296094426 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.35850294 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.295748364 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.277232363 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.274799981 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.275976378 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.278263388 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.277564419 seconds)
  done (took 11.492659143 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.28218322 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.275315896 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.27632501 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.276063806 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.276410328 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.276211725 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.275958777 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.275870241 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.277094856 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.277597245 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.27687666 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.276313159 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.276434326 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.275968862 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.278309959 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.278178541 seconds)
  done (took 21.590984186 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.27966603 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.276800341 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.276179861 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.276056467 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.275571758 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.278448945 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.277553996 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.276244034 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.276230318 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.277539396 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.278611973 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.277808911 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.27886503 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.278512464 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.279139403 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.279213269 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.278685817 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.278795026 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.280923806 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.278754197 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.279036228 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.278653947 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.279210565 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.279082334 seconds)
  done (took 31.835946691 seconds)
done (took 66.077335023 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.261267458 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.26318606 seconds)
  done (took 5.684150536 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.336228898 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.335900583 seconds)
  done (took 3.834841808 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.280320217 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.278463097 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.280845242 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.280522536 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.280652443 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.277778169 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.278152894 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.278045841 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.279295322 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.279449672 seconds)
  done (took 13.955783053 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.279233231 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.279105786 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.279545941 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.279345615 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.280313285 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.279119763 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.281687779 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.279389996 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.27918042 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.279465677 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.279855065 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.279844421 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.280248223 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.280790684 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.278675468 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.279133 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.279240458 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.279227255 seconds)
  done (took 24.194873109 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.29383661 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.296437676 seconds)
  done (took 3.750523184 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.406293951 seconds)
    (2/7) benchmarking "second"...
    done (took 1.321762574 seconds)
    (3/7) benchmarking "month"...
    done (took 1.385058367 seconds)
    (4/7) benchmarking "year"...
    done (took 1.376734431 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.320724926 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.300142428 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.320744577 seconds)
  done (took 10.593598638 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.281684068 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.483342825 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.614102717 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.883348567 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.283934432 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.287024356 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.191724025 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.287611132 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.288059696 seconds)
  done (took 14.764146102 seconds)
done (took 77.938274241 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.265960259 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.324219884 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.285911481 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.287159496 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.624955741 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.281748965 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.271896582 seconds)
done (took 16.505579017 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.248001281 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.251328266 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.247925953 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.280680337 seconds)
  done (took 10.190471263 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.277921693 seconds)
    (2/2) benchmarking "read"...
    done (took 1.593657311 seconds)
  done (took 5.035370554 seconds)
done (took 16.390193097 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283915756 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.282661254 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.283402466 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.281109413 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.284166555 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.282728806 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.283033972 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.282414393 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.283697127 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.283165369 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.283141386 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.283001234 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.282165265 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.282469672 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281803571 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284786848 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283898366 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284427273 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.283418514 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284191043 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283434272 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.283843614 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.282656988 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.284860901 seconds)
  done (took 31.962614559 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.286186971 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.283573393 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.282638106 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.284217168 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.285983843 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.283618714 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.28497422 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.283826427 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.284113218 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.285399371 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284230907 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.285925823 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.285985898 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.284624502 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28415778 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.283701746 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.284523323 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286574123 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286101078 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.283945446 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.284722559 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284766299 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.285004743 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286302712 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.285613321 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.285717464 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.285915394 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.285120947 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285381217 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.28568096 seconds)
  done (took 39.71483293 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.287854798 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.285001342 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.28822171 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.286060786 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.286355723 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.287966424 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.284941578 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.285672724 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.285576605 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.287290371 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.286249423 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.285578299 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.28511557 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.286787015 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.286055994 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.285015787 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.286730512 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.285175284 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.286996591 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.285146642 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.285956133 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.285558671 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.28671745 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.28660985 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.286238998 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.28546713 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.287134409 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.286994021 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.285741162 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.286815375 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.287110108 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.288084682 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.286588539 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.285816162 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.287690572 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.287592216 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.28963421 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.288623822 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.286432662 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.287925493 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.28845856 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.287048108 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.287810664 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.287302881 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.288186697 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.288207488 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.289278584 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.287224016 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.286983909 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.289325852 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.287929711 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.288435474 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.289217895 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.288305338 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.289067345 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.287627666 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.288231695 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.288886828 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.288662282 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.288504954 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.28913768 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.288753262 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.289162913 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.288956043 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.288061271 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.288106331 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.289197338 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.291378481 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.292186551 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.290329174 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.291970213 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.291728117 seconds)
  done (took 93.875645404 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.289787077 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.289874988 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.289348997 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.290319494 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.290867573 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.290234038 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.289676049 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288199857 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289614801 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.289521516 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28990604 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.290882493 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291201629 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.291524848 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29061132 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.289939011 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.290273169 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.291935887 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.289859457 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.291759348 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.291481665 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.290414749 seconds)
  done (took 29.557766176 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291213214 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.292771968 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.291605903 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.293149522 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.29224996 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.292073677 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.290868939 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.292870287 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290215837 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292497253 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291567278 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289752508 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.294153078 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290312604 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291331958 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.292755892 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293354382 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.293149725 seconds)
  done (took 24.428644945 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.293145595 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.293264352 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.292531832 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.29252173 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.291284126 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.291951456 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.292047624 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.29113902 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.291555946 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.29279581 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.29259975 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292093392 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.292628789 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29422826 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292313893 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.291586418 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.294220634 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292706349 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29212556 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294477203 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.292422674 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.293134127 seconds)
  done (took 29.609871643 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29183423 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.292757716 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.292842838 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.292388943 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.29223894 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.29241836 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.292707839 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.292716582 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.292789541 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.293327071 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293911111 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.292705022 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.29442632 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293964594 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.295539097 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291954383 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29260401 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.294724447 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292447862 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.293586571 seconds)
  done (took 27.03677523 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.29337617 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295466252 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.293704855 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295507577 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294389821 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.294362344 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29564493 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.296775794 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295892991 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.296200827 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.295998937 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.297245795 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295625467 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.296131331 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.295898743 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295587659 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.295130991 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296502347 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.295138624 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295447082 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.297315312 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.296635546 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.29603707 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.297358261 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.29748362 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297142639 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297344054 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.295881527 seconds)
  done (took 37.459791252 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298311051 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.295523178 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.29695099 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.297601058 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.296377365 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.2964853 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.296902861 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.296653315 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.296570794 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.296779446 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.297399715 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.297930209 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.298038555 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.298556108 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.299218399 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.299441243 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297770372 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.298390167 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.297926044 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298113333 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.299833796 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298390626 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.297547658 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.300070707 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298635415 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.298812453 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.298524364 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.298092804 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298762761 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.298437378 seconds)
  done (took 40.116017083 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.316527489 seconds)
    (2/2) benchmarking "in"...
    done (took 1.318035726 seconds)
  done (took 3.814183197 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.299499229 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299351093 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.298829706 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.300247727 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.301086475 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.298287897 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.298376202 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.299417937 seconds)
  done (took 11.573529571 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.291480141 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.299563876 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.300377366 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.299507324 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.299198016 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.291372267 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.30147888 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.305020565 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.293480138 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.293088373 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.292961778 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.295297732 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.295349696 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.295309338 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.293653903 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.297723101 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.304491155 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.300476328 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.300927469 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.300023834 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.300405879 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.29608558 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.299509841 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.305328023 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.29289003 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.301192481 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.302113501 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.307397769 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.295199504 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.301576537 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.297419279 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.304718278 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.302585744 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.302996406 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.301609619 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.301146711 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.304441958 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.301177912 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.303775609 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.307032141 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.301774547 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.302541597 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.296096916 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.299650992 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.298717906 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.307206292 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.301586161 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.30284434 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.294321697 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.297304314 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.304243124 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.293785597 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.305279078 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.299514213 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.30189462 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.308373266 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.311241163 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.294897439 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.297567664 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.305692568 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.31371394 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.305645753 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.302325447 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.308368283 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.298129551 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.303816155 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.308579158 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.311484639 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.303852179 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.303876276 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.30489128 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.314223354 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.308946796 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.311831462 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.304127639 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.304446578 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.29800944 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.309239026 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.306621181 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.309116435 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.310147885 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.305492108 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302816892 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.302576848 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.299251 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.309430273 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.306368389 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.306582401 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.295887161 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.309610521 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.315032078 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.306710443 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.29697823 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.302176675 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.303684029 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.307550722 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.298718706 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.302190411 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.308747463 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.307338131 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.307316187 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.299160901 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.304484086 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.311762543 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.306653278 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.307866603 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.31437044 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.298875903 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.31072235 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.315290704 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.308244077 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.301388701 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.303088956 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.309457623 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.30073684 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.3056836 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.31303271 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.303181393 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.313401018 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.307873031 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.303751128 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.310226962 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.314195666 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.309204437 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.299602389 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.311608472 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.307443994 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.305911119 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.31572494 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.307935856 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.307870473 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.305371792 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.313290157 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.301113406 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.312181368 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.301887214 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.313550556 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.308609502 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.308567516 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.303890815 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.308314612 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.306523354 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.309337242 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.312107573 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.315723031 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.305815185 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.316588259 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.307423438 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.308088658 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.311537717 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.315005478 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.310099089 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.302497027 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.311272287 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.301129763 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.312202418 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.302145513 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.31309474 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.311189004 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.309324172 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.30995473 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.299890966 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.304399417 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.31450743 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.309195804 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.309683564 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.313561273 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.312102119 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.311111996 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.302423418 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.314013551 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.303035784 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.305853147 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.31469041 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.310473994 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.311575848 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.308119469 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.31929729 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.312056306 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.310127626 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.303810157 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.307545015 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.315531721 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.314054651 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.321400696 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.311563539 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.311210857 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.305122335 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.306768769 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.314695746 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.304369967 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.314484787 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.317248734 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.317538618 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.307581996 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.315294928 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.303701816 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.314224989 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.309911518 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.318766399 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.313490269 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.313015787 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.306350384 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.316103987 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.307260097 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.315773625 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.30367831 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.315271748 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.31348434 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.311886475 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.313350297 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.306573335 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.310328098 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.317541323 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.313587463 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.313702802 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.30578538 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.31696644 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.304869601 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.308098356 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.316684754 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.313140745 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.316102052 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.321882927 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.312360754 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.318497668 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.314783975 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.310342292 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.315950954 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.313051472 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.314784537 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.320175113 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.316815172 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.31133246 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.320859133 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.317185626 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.309156931 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.314504576 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.321531443 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.314752746 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.307496824 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.317664801 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.316482857 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.314555099 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.315124444 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.308673517 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.318748067 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.319874337 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.325393978 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.308046711 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.319845724 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.311305441 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.319529077 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.312834712 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.31813871 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.315899025 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.320783854 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.325503685 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.31841624 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.311075905 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.318312747 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.315568997 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.315538807 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.308051063 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.3183822 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.317965322 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.318078088 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.314946778 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.31310651 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.31838358 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.309446157 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.318767472 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.31102207 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.326481899 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.331891901 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.320793032 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.320916996 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.321526628 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.319310456 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.321449802 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.310406896 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.312232498 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.314594677 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.312370477 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.311467748 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.32062187 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.313258779 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.32300236 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.318832865 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.318217415 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.319089775 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.319554841 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.312874158 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.322982942 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.317003586 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.318292875 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.30966771 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.319707742 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.314125732 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.320665427 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.319567451 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.312674401 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.324967697 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.32373248 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.31674078 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.314831535 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.314653014 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.312353052 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.31663602 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.322235966 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.312882618 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.320915123 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.312252508 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.317155168 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.314043844 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.324574262 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.327895386 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.313918615 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.323223895 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.319767627 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.311864603 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.314555731 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.322284566 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.325719038 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.332159672 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.312829886 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.322946982 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.321424958 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.320706399 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.319333775 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.321608473 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.320336276 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.320902042 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.325702726 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.325571104 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.315899845 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.323799508 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.331138414 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.321087205 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.320506531 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.312525698 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.322808831 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.331596908 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.314227964 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.318009372 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.316615957 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.322732559 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.321580701 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.321030696 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.321242154 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.321992958 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.325842012 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.327565054 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.323836461 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.323031746 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.327494507 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.335913511 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.326227439 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.33595705 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.315980079 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.327149413 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.321538208 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.318482592 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.317312781 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.316853221 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.326088616 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.314411285 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.32535525 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.322450782 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.319070025 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.323873198 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.330426696 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.314443694 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.321853451 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.330871563 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.316026561 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.324868628 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.32352648 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.316276323 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.325348318 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.324338046 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.315444931 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.31751432 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.319469252 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.325753291 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.318885285 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.327884841 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.317899241 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.329319355 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.324466752 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.325601476 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.323217228 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.324654826 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.318454659 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.325240984 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.324284143 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.334255802 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.320218231 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.325553911 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.318652899 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.331408332 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.335409498 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.317617202 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.329772051 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.326510517 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.317934137 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.322220008 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.32938595 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.318773948 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.328226902 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.316921641 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.319099627 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.32095576 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.326145231 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.327877996 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.328726715 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.316085693 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.320296445 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.327572259 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.326145198 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.325678923 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.322050382 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.332520346 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.318513194 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.319565569 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.326566249 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.321744627 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.331607183 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.319383731 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.321944036 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.323050301 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.331042715 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.326787313 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.327378819 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.317879867 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.320417849 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.333678696 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.330896508 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.32268932 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.321714639 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.32777464 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.320777638 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.32485677 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.322731373 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.32254767 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.322818491 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.329837405 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.321577256 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.322695701 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.320958424 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.329931687 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.33325752 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.331729434 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.320528148 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.33705049 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.337060426 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.334969248 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.320807239 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.3230555 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.324749496 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.329550788 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.329212554 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.322027624 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.337000281 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.336302886 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.333609697 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.329581358 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.329252388 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.322011624 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.330828791 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.328914326 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.324157085 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.336282291 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.325971397 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.335829136 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.33055242 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.331868164 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.322212308 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.32357447 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.325191671 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.323832429 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.333643138 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.329667135 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.333256376 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.328165044 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.335321351 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.331068669 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.334052286 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.330500618 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.32322327 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.333199036 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.323828468 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.333278372 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.334475335 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.323179527 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.333697332 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.330875728 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.325251127 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.326994878 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.335529668 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.330715523 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.322949613 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.329463056 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.335975745 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.34254418 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.331833357 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.32396925 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.328883623 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.335002024 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.332406788 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.331602782 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.324220767 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.340388931 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.344597821 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.325255426 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.329026893 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.335739202 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.341426254 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.331867738 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.332756804 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.328709063 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.329567729 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.33482391 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.333635696 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.336347824 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.33921591 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.32765676 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.334815282 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.32575353 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.328209174 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.334444642 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.34383812 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.333899833 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.32758179 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.340451432 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.344939061 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.33051156 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.346507328 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.340268783 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.331863779 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.340206673 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.325547339 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.33581967 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.329683438 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.33998507 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.332170208 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.33451001 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.335339817 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.326535138 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.335533702 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.340992543 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.34320271 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.334240011 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.325954857 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.329243191 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.336079735 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.335085263 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.334542477 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.335790037 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.336602059 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.336173634 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.328591914 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.346582015 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.34876399 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.341767551 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.337134791 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.334831334 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.335480772 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.339584833 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.330786515 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.339787865 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.33913714 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.336498963 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.33329737 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.34457309 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.335465843 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.329875584 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.330885061 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.330834354 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.339242204 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.343800202 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.355973636 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.339552252 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.339377084 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.338440307 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.337417978 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.332303228 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.340885536 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.33762786 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.332375139 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.332643864 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.33939744 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.3388423 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.338398786 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.331596214 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.340233192 seconds)
  done (took 786.959949751 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.337506839 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.338683716 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.3367769 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.336958989 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.337105321 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.337154523 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.337805727 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.336905248 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.336905462 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.33696739 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.337172771 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.337677683 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.336400818 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.339004112 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.339363045 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.338529124 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.338414563 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.337994574 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.338609613 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.33849869 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.339434121 seconds)
  done (took 29.305920172 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.33898056 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.338686882 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.338003742 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.339874232 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.338992257 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.338082075 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.338929317 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.339504163 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.340849486 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.339377285 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.33964996 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.339923341 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.340301093 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.338776857 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340072651 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.339175222 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.341033911 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.341424132 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.340993362 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.340925948 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.342576048 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.340042178 seconds)
  done (took 30.69018706 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.340446492 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.341701648 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.33323315 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.343638501 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.341574501 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.341586558 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.342490132 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.341401138 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.339289684 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.33409959 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.33410737 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.334827991 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.335531346 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.346220994 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.336798514 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.346378244 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.342052698 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.341603872 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.342546399 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.341177619 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.344323434 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.35357786 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.343304171 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.333091912 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.344842194 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.34238019 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.342491218 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.342375891 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.334029786 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.343140537 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.341711075 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.336612786 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.346473139 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.345752252 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.334823865 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.345508371 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.344170448 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.343037224 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.34372969 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.34057696 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.349792347 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.344356127 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.346302494 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.355639407 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.343061714 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.337321216 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.348055946 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.344918928 seconds)
  done (took 65.632039606 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.342952073 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.342651434 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.342867222 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.343680001 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.344624362 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.34377085 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.34305199 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.343555303 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.345641742 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.343922847 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.345924088 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.34489627 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.345724326 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.343910254 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.343386598 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.343608578 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.345347609 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.345845223 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.344947842 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.34419235 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.344507113 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.345523384 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.34537496 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.345712879 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.343135618 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.34454287 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.343818196 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.345486945 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.344617393 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.345922462 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.346022749 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.345903236 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.344777706 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.345935885 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.344566103 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.345951283 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.345951127 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.34751107 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.346628681 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.346565969 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.345968932 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.345713939 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.34714509 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.347248772 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.345889518 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.347817476 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.34711321 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.347174257 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.346090451 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.346506813 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.346197038 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.347009455 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.346620032 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.347735075 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.34774052 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.345978445 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.346983158 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.346649141 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.345790822 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.346771461 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.347580997 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.34696996 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.348842839 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.347876084 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.347463504 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.34506423 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.345669985 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.346501609 seconds)
  done (took 92.721190536 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.346632735 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.347224274 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.348334493 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.348128786 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.34886564 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.348818565 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.347015711 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.347549828 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.348198536 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.348566357 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.348125035 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.348067126 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.348401118 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.349089548 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.347917887 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.34756848 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.347216128 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.350275429 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.348110872 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.348563135 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.350057399 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.348533088 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.347711245 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.348441097 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.34971717 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.349190357 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.348334702 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.348722488 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.34814808 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.350192266 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.34853637 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.348773673 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.347012195 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.349334629 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.348944447 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.348567371 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.348537206 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.349808524 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.349306816 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.348716768 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.351221168 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.348781893 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.349589191 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.350428781 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.349321003 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.349934741 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.350556321 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.34913982 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.349898817 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.350085692 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.349642488 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.350541937 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.349114327 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.347745376 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.350019833 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.349457229 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.348790705 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.350378951 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.349408547 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.351552325 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.349203882 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.3500113 seconds)
  done (took 84.854723174 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.348431347 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.349859328 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.348996217 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.349308529 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.349280983 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.349151838 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.350308122 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.349441943 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.349944517 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.351614582 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351055183 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.349119552 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351162355 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350223674 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.353131141 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351089847 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.349285405 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.349508695 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.350151115 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.349234736 seconds)
  done (took 28.222974507 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.34839465 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.349884049 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.350223194 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.349418567 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.349680234 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.349446203 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.349302286 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350547067 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348445964 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.348255857 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.348018336 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.349476628 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349117846 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.34878769 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.351351365 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.349724065 seconds)
  done (took 22.812439512 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.350934039 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.347197699 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.350790704 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.35019746 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.34823958 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.350144077 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.349024809 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.348907479 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.350306433 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.349678705 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.350014231 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.351956242 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.350350434 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.351528494 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.350304828 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.349800803 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.349310116 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.349687128 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.349198562 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.34994408 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.349851514 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.348422056 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.349295711 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.348862168 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.349937389 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.350429772 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.351335497 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.350382091 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.350534968 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.351147559 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.349018477 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.351042647 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.350012234 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.350240364 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.349637317 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.351769924 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.349776669 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.350436487 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.351368068 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.351352838 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.351023384 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.350669707 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.350730435 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.352922916 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.35015928 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.352717178 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.351455845 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.3517167 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.350736526 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.353720853 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.352046107 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.351665815 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.350562435 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.351517111 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.352768276 seconds)
  done (took 75.499954243 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.354126862 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.352002765 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.353427006 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.352282466 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.354496611 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.352876308 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.352757162 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.354464999 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.354247284 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.351126025 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.352817111 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.353565361 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.35314146 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.353505525 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.352027881 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.353714464 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.35293877 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.352355016 seconds)
  done (took 25.578907412 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.354498286 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.352994806 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.353789549 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.353234782 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.354337811 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.356004817 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.353739805 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.352975121 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.352915616 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.354501137 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355080048 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.353866019 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354038135 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.352992388 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.354402156 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355118878 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.354379664 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.354740418 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.354667585 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.352719374 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.35429187 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.355015512 seconds)
  done (took 31.014630366 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.343546507 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.345052638 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.344922298 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.357804966 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.355104871 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.34523011 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.344648794 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.343676244 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.361132806 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.368894927 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.363840939 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.353554607 seconds)
  done (took 17.453331388 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357540979 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355711795 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.354726135 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354824618 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356830237 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355149305 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356344946 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3566278 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355538878 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355768288 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355005381 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356004738 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357010658 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356680948 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355468081 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356650136 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355390978 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356045118 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355626187 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356518018 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35683073 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357381068 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.356737771 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355571806 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356971775 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357791805 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357800957 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357028065 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356208717 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356773925 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357958781 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358407388 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357248166 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357022205 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358719446 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357932145 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358966751 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358944882 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358503166 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357307375 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.357963541 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358456262 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357161196 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357742207 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357756463 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358590189 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358193025 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358549938 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360419554 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358519611 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361047493 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358735191 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359139101 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358855623 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359725829 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358983695 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359951544 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359659611 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360142878 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358493281 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35978466 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359560681 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359823334 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360636263 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361867935 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36093313 seconds)
  done (took 90.838115454 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357855616 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.359928279 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359659073 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361080878 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360062333 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359298687 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358525986 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361111498 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361511517 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360346478 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361075205 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359637568 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361714977 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36049184 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360080328 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361238516 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360249012 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362523479 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360940816 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360399352 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360813986 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361585649 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358692092 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360212498 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359519026 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360265509 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361139976 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361883786 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361000244 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361062624 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358983396 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361783961 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359108713 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.361479973 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362023977 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361369729 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360057228 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360326721 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361379872 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361845821 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360188028 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361823361 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361222436 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362726458 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361058404 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361355375 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361779961 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360253662 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361433753 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361960965 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361281487 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362961579 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361709322 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362577974 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361636922 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361270163 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361279951 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360369999 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361709057 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362707048 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360403653 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362499133 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361264802 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361841788 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360924496 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362645678 seconds)
  done (took 91.055184625 seconds)
done (took 1842.954038291 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.518775538 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.473173378 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.35119105 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.362512213 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.351001059 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.349401622 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.361778748 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.350907294 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.350598848 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.351858885 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.350658046 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.541945875 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.386169197 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.35223247 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.352039329 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.450180142 seconds)
  done (took 27.483639792 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.378554284 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.361353961 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.472949835 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.353979656 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.378168731 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.546659161 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.41734805 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.355968552 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.52778242 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.372979815 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.351427018 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.379705993 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.354924234 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.349082347 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.375675099 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.542419554 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.613763738 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.350603969 seconds)
  done (took 29.713571233 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.804898821 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.376420214 seconds)
  done (took 5.411972264 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.375312143 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.356759828 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.357757368 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.354969717 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.34660684 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.363266417 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.353232701 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.369216198 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.360474142 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.485731561 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.357014957 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.36869272 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.372225112 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.357171834 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.363967211 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.399707236 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.501280888 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.366166858 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.362749152 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.363104423 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.355742968 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.447118187 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.395884361 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.365473952 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.479551195 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.359475897 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.362895832 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.363222293 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.473049311 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.364894633 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.355919944 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.356491696 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.355788861 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.331244378 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.899949699 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.358705878 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.379241998 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.365830029 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.364796952 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.486853186 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.356756462 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.363708207 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.357689308 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.895928826 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.462689035 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.474618995 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.365617686 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.36224356 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.357791965 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.421106577 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.356418092 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.357653627 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.417286037 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.168558848 seconds)
  done (took 86.708765858 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.355494911 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.351098883 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.534723524 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.370111898 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.352487608 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.372934382 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.351694558 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.633871351 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.373269041 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.352002608 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.670585149 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.964891825 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.362944302 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.423544088 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.394035403 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.411650586 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.36752397 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.348220429 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.352931605 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.354383507 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.92290253 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.356076568 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.352445354 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.440558809 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.393338006 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.887525252 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.352620511 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.382489956 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.3529565 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.35142734 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.942417417 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.355480154 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.408307561 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.352833871 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.640667684 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.741100059 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.701554342 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.359151553 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.390415152 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.354428203 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.379628109 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.880476608 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.723410518 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.352073327 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.353910792 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.878260863 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.351983006 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.36473663 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.353930526 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.629504655 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.351495748 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.354824381 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.354522214 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.372294452 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.350692375 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.408552319 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.399567914 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.892150432 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.353487012 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.351956828 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.357827896 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.357380481 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.355683088 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.353053504 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.355960602 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.725820964 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.61499886 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.360110249 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.722068639 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.928768794 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.352324594 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.021044903 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.366063965 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.37729142 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.398281958 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.356004968 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.352937019 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.8873734 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.359644193 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.353862504 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.699411413 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.353310995 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.655963699 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.368551113 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.359533417 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.93670068 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.363204219 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.40320642 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.355327114 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.355548005 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.352899886 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.357617886 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.644875335 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.407498329 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.35234752 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.352511884 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.36529157 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.35375135 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.37284593 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.362703005 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.002791316 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.363646199 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.352169122 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.372135337 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.352098095 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.359714308 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.357243106 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.353951194 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.633698342 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.352751688 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.379314356 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.35623953 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.353686019 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.359789769 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.446110028 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.357755394 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.6576298 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.35542843 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.353535686 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.355231212 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.362357755 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.368596276 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.354053483 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.375249462 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.325360275 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.656890722 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.370437447 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.370037122 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.355439586 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.352656433 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.366423392 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.355004801 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.417889061 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.355739212 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.123095073 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.363041821 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.371330124 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.354944492 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.360531065 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.354422213 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.381210557 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.354440123 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.655734571 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.640046272 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.600988518 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.356056836 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.353646695 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.145803483 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.356379479 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.538762851 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.373067901 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.354291727 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.634449004 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.583143108 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.357100862 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.354095069 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.353732041 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.633470545 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.36509808 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.676497491 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.95344628 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.355024868 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.358087035 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.11471062 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.164105373 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.359987562 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.356560099 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.647631833 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.370016141 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.351405932 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.354534737 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.354221677 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.352851547 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.362025577 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.360410348 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.356488561 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.355356889 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.660290677 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.54897318 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.368920145 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.353124671 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.878399203 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.385717231 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.355104448 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.360771526 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.359054868 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.355422883 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.405007703 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.355846714 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.402777408 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.35759083 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.356733249 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.899520439 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.353343022 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.36091302 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.548792098 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.072144823 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.35427662 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.353743861 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.354158003 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.434290752 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.90437518 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.400399052 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.64940244 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.359217318 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.394136594 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.365031719 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.369878214 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.905143378 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.358674683 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.353021749 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.080734281 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.354468081 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.835532362 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.354497166 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.3555065 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.003474942 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.354415429 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.3590019 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.35732282 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.353444531 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.67036656 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.354108567 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.352976014 seconds)
  done (took 503.628226101 seconds)
done (took 654.174874357 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.354785639 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.355080476 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.359347392 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.358515479 seconds)
  done (took 10.66276982 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.37278377 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.360305144 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.371068494 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.361506151 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.371970694 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.360456129 seconds)
  done (took 9.432465026 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.355502088 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.353652332 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.360569717 seconds)
  done (took 8.304636854 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.554750942 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.378869888 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.694579409 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.373303268 seconds)
  done (took 9.23472948 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.369775392 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.371509103 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.370429732 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.370099422 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.372022376 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.373090777 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.372355675 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.373176364 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.372370497 seconds)
  done (took 13.578331271 seconds)
done (took 52.447360457 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.477065215 seconds)
    (2/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.418514007 seconds)
    (3/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.451454128 seconds)
    (4/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.362088322 seconds)
    (5/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.338177437 seconds)
    (6/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.361240801 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.448111139 seconds)
    (8/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.657871194 seconds)
    (9/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.561465603 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.593235606 seconds)
    (11/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.456118456 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.391450712 seconds)
    (13/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.506915494 seconds)
    (14/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.383688961 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.4697671 seconds)
    (16/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.571704611 seconds)
    (17/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.352475551 seconds)
    (18/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.345101106 seconds)
    (19/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.39801737 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.454127093 seconds)
    (21/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.354752721 seconds)
    (22/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.555453543 seconds)
    (23/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.426815285 seconds)
    (24/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.333851787 seconds)
    (25/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.520412375 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.595810406 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.515728981 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.437944025 seconds)
    (29/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.509174322 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.5096556 seconds)
    (31/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.509534685 seconds)
    (32/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.508675595 seconds)
    (33/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.365383774 seconds)
    (34/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.335881112 seconds)
    (35/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.489403494 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.463903414 seconds)
    (37/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.588791723 seconds)
    (38/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.424275464 seconds)
    (39/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.466670754 seconds)
    (40/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.579751608 seconds)
    (41/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.469132258 seconds)
    (42/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.502500292 seconds)
    (43/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.445011961 seconds)
    (44/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.472158758 seconds)
    (45/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.651481316 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.372415837 seconds)
    (47/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.356002705 seconds)
    (48/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.533776879 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.511406572 seconds)
    (50/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.429663988 seconds)
    (51/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.447899748 seconds)
    (52/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.387714649 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.505689395 seconds)
    (54/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.333262921 seconds)
    (55/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.399559442 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.471111806 seconds)
    (57/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.334095268 seconds)
    (58/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.798576796 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.484802629 seconds)
    (60/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.585776225 seconds)
    (61/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.58841304 seconds)
    (62/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.334572083 seconds)
    (63/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.427619913 seconds)
    (64/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.514814003 seconds)
    (65/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.337843773 seconds)
    (66/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.434876162 seconds)
    (67/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.333766554 seconds)
    (68/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.347469046 seconds)
    (69/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.52313816 seconds)
    (70/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.419964477 seconds)
    (71/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.334414776 seconds)
    (72/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.498272123 seconds)
    (73/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.335056431 seconds)
    (74/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.340529343 seconds)
    (75/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.340226292 seconds)
    (76/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.528174188 seconds)
    (77/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.335378146 seconds)
    (78/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.599193823 seconds)
    (79/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.542249572 seconds)
    (80/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.536435071 seconds)
    (81/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.514630114 seconds)
    (82/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.452566147 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.501197371 seconds)
    (84/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.360394746 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.450785484 seconds)
    (86/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.474936062 seconds)
    (87/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.442581305 seconds)
    (88/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.400632706 seconds)
    (89/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.391067941 seconds)
    (90/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.698940335 seconds)
    (91/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.336009891 seconds)
    (92/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.67779635 seconds)
    (93/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.452971546 seconds)
    (94/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.397802264 seconds)
    (95/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.384649488 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.472988365 seconds)
    (97/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.447293012 seconds)
    (98/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.336147215 seconds)
    (99/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.350028984 seconds)
    (100/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.467703121 seconds)
    (101/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.568902097 seconds)
    (102/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.659555067 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.478660331 seconds)
    (104/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.396105451 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.441204895 seconds)
    (106/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.578293757 seconds)
    (107/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.388849874 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.484819862 seconds)
    (109/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.337084587 seconds)
    (110/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.560338336 seconds)
    (111/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.433254595 seconds)
    (112/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.606414372 seconds)
    (113/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.481949934 seconds)
    (114/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.486495253 seconds)
    (115/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.591568063 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.401273788 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.44850371 seconds)
    (118/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.698086401 seconds)
    (119/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.403197766 seconds)
    (120/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.564645501 seconds)
    (121/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.529268387 seconds)
    (122/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.341262582 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.47338752 seconds)
    (124/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.454131266 seconds)
    (125/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.634425846 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.465748278 seconds)
    (127/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.359824593 seconds)
    (128/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.587420564 seconds)
    (129/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.588676918 seconds)
    (130/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.518123589 seconds)
    (131/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.363713392 seconds)
    (132/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.419179951 seconds)
    (133/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.391680411 seconds)
    (134/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.393321875 seconds)
    (135/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.338526875 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.51483855 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.454349163 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.607445375 seconds)
    (139/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.477157792 seconds)
    (140/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.370680513 seconds)
    (141/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.534162787 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.435341574 seconds)
    (143/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.475309209 seconds)
    (144/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.48965575 seconds)
    (145/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.375086874 seconds)
    (146/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.524157879 seconds)
    (147/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.460148002 seconds)
    (148/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.396994838 seconds)
    (149/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.340211202 seconds)
    (150/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.626148622 seconds)
    (151/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.342559471 seconds)
    (152/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.496401364 seconds)
    (153/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.443577443 seconds)
    (154/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.40276503 seconds)
    (155/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.429207062 seconds)
    (156/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.34078607 seconds)
    (157/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.58883713 seconds)
    (158/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.429747689 seconds)
    (159/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.341959509 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.424910419 seconds)
    (161/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.599973566 seconds)
    (162/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.449217831 seconds)
    (163/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.342075022 seconds)
    (164/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.349502774 seconds)
    (165/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.351391837 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.486755933 seconds)
    (167/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.571709158 seconds)
    (168/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.342473845 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.404312443 seconds)
    (170/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.342041362 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.484550152 seconds)
    (172/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.342488645 seconds)
    (173/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.416403254 seconds)
    (174/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.340665604 seconds)
    (175/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.690559786 seconds)
    (176/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.524006133 seconds)
    (177/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.369352598 seconds)
    (178/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.527678254 seconds)
    (179/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.575589422 seconds)
    (180/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.460878494 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.562858035 seconds)
    (182/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.450135274 seconds)
    (183/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.395453805 seconds)
    (184/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.436911864 seconds)
    (185/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.445515952 seconds)
    (186/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.435749711 seconds)
    (187/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.434228485 seconds)
    (188/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.42422405 seconds)
    (189/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.357660212 seconds)
    (190/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.785885373 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.528090974 seconds)
    (192/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.344111138 seconds)
  done (took 329.656185902 seconds)
done (took 330.891346835 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.396043285 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.459939165 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.375982069 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.374451523 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.375414174 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.358808636 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.396807289 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.376036566 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.390075882 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.390867705 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.370783088 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.390154897 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.392038385 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.387483382 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.409312777 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.376379645 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.375819957 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.387169136 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.390344865 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.393507966 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37738865 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377019239 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.404504668 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.37725173 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.384989763 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38539608 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.383657848 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.368372611 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.384857709 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.39156967 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.368073625 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.38313039 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.395178329 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.388497303 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380290477 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.387326234 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37772373 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.459631842 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.397579705 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.389057915 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.386414772 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.395228467 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.381474601 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.380833245 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.388834953 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.404191777 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386441222 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.393449479 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.36705533 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.359165013 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.401652102 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.390344965 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.385791908 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.346617393 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.378723211 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.39329967 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.386452996 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.398400056 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.387269829 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378765579 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.411541372 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.397883592 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.390453774 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385811986 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.386012948 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.393997068 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.388521655 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.395872959 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.384619913 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379660894 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380449218 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.38639774 seconds)
done (took 109.148036649 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.502879463 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.372397282 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.533921787 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.386355797 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.54000417 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.499670782 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.384730158 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.387023743 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.385770229 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.180139953 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.386340122 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.388588482 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.374701532 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.385424857 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.500005895 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.387281006 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.385520995 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.077896192 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.387268993 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.514685645 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.377459386 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.388246837 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.3867292 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.183728931 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.372676155 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.370893151 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.513487629 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.386526524 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.082909648 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.368299914 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.374324146 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.081462451 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.513562265 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.405051999 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.396404491 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.395895233 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.542780624 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.390928837 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.50515455 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.505609984 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.538249517 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.424409025 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.371800789 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.378304865 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.387941177 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.387746512 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.386584922 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.415216412 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.375376311 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.386817311 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.080749741 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.397139422 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.398701461 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.389213102 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.387238254 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.407923865 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.38715946 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.388782219 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.516778777 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.390871911 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.507618614 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.188791993 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.180254075 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.389457497 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.376230838 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.389323807 seconds)
  done (took 111.580516087 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.449127724 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.453999382 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.486196163 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.381083639 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.431057272 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.488846525 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.378218935 seconds)
  done (took 11.318947916 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.385950663 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.388601214 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.429220732 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.428579253 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.389798195 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.553819275 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.390025502 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.393835425 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.389647946 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.433502879 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.390076476 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.391105599 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.399563266 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.378522167 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.429055479 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.391773774 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.50104068 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.381567766 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.390589877 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.533793463 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.389534083 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.398255658 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.432944089 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.394052596 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.392095011 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.389785783 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.166476592 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.391105606 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.392614288 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.389790235 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.39065762 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.448542715 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.393260216 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.380647491 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.391510819 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.498184003 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.393495447 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.391202703 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.390237901 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.382945688 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.390929665 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.390718232 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.392101386 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.390694133 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.391888378 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.406930783 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.391874962 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.393094393 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.392480669 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.393381945 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.434578311 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.391943228 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.39134582 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.391434389 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.437435289 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.402626756 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.391451511 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.391339936 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.392962817 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.392845721 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.535500351 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.430721019 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.391291103 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.43063139 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.394414965 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.393348905 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.393542657 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.394051891 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.477868305 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.392210971 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.431764638 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.393245871 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.56633892 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.406235819 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.390397382 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.384086624 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.384682977 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.389839907 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.378742795 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.379365677 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.378924211 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.37336431 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.377354385 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380048366 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380014202 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.533319583 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.470018034 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.370869527 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.377257068 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.36874669 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.370376313 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.416286999 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.371094168 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.363490004 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.405092222 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.474565297 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.406903051 seconds)
  done (took 142.529924948 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.368321041 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.368681813 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.35673431 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.381743803 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.353683366 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.352604344 seconds)
  done (took 9.414825771 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.354843829 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.36246685 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.36139338 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.361399124 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.362424122 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.362926775 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.362353633 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.352779099 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.365200815 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.362419147 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.364165629 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.364435555 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.365929912 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.362838795 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.362838007 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.362364881 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.363671888 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.363237947 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.362170172 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363270877 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.349259748 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.362848684 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.362861223 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.354801584 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.366544971 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.36479653 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.378394716 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.362788573 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.364453048 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.36070008 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.368273394 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.365470404 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.355590131 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.358136021 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.365516108 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.355656059 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366565865 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.365799815 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.364240696 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.365720803 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.367590713 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366279052 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.365714558 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.367428325 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.356916685 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.35677587 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.369892076 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.381720001 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.363544192 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.368864324 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.36909028 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.363211129 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.366617509 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.36649041 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.358709168 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357881198 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.368796451 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.366062075 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.365060863 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.358267476 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.367572937 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.366418352 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.357464043 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.36950864 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.363580921 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.366832011 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.358909712 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.368604434 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366357511 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.365568372 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.369865633 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.365938771 seconds)
  done (took 100.425781855 seconds)
done (took 376.516838849 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.709051769 seconds)
  done (took 3.945083394 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.617217501 seconds)
  done (took 3.853990166 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.50705546 seconds)
  done (took 22.004910035 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.420637814 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.424959313 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.362135545 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.358649343 seconds)
  done (took 10.800608515 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.611593278 seconds)
  done (took 3.846479885 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.367915933 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.373131958 seconds)
  done (took 5.978487338 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.525038959 seconds)
  done (took 3.761531634 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.577934787 seconds)
  done (took 3.814774033 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.379938807 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.367259558 seconds)
  done (took 5.991212886 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.330745872 seconds)
  done (took 3.566932913 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.428933567 seconds)
  done (took 20.665862586 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.381598449 seconds)
  done (took 3.621479513 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.391739306 seconds)
  done (took 3.627619638 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.686239347 seconds)
  done (took 5.922101083 seconds)
done (took 102.637313741 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.351296438 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.35375811 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.354471984 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.352298969 seconds)
  done (took 10.648293882 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.43144678 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.432749507 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.440186049 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.425485266 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.42598176 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.434502022 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.393933608 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.395372934 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.424524351 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.420086618 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.43518614 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.426466505 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.434426906 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.394071314 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.417497051 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.434192383 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.420931531 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.436243498 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.391020102 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.417918573 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.362504158 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.416499934 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.408587521 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.357343987 seconds)
  done (took 35.215084129 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.867903798 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.419675929 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.501360187 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.393462239 seconds)
  done (took 7.410919297 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.45570471 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.456389475 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.480239625 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.510882527 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.5385831 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.46340222 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.372627576 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.368899617 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.354330857 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.453225995 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.529139315 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.44930646 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.664500899 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.344635452 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.66281228 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.345718932 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.344501105 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.449497281 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.49904241 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.527642709 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.346794016 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.449312226 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.452441851 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.448535147 seconds)
  done (took 36.192372167 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.353598188 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.362931953 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.348198579 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.361458055 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.345997902 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.349455299 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.349176784 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.353693571 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.347148419 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.345885146 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.348053196 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.363955308 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.345866444 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.346102038 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.35459594 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.350337096 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.350468974 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.355117843 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.355254525 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.348544301 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.347173499 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.353487528 seconds)
  done (took 30.955456497 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.332485312 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.331300418 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.682070529 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.587378061 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.331458076 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.33805134 seconds)
  done (took 13.82261717 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.402603821 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.538184915 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.339899786 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.663365398 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.747992983 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.343420044 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.340481554 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.57242857 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.844405989 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.831423667 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.395918761 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.40430423 seconds)
  done (took 19.644757454 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.339033965 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.337468396 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.340500765 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.354373801 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.389974077 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.34336114 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.346182985 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.33368678 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.392620704 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.394192776 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.343369653 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.390124686 seconds)
  done (took 21.526537248 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424248793 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343027323 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.342897837 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425121192 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343281255 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.344404937 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404039169 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.035216529 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.353592031 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620210585 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344602596 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431571303 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.590789714 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343455136 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350543567 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.273074519 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575668442 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819302067 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352307653 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358931764 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381904879 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.345242802 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350566733 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.557691987 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.35125729 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34612245 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.607174867 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347122823 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612271775 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.591791485 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.593954569 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35399141 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617210681 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969375123 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446484135 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531912286 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337615152 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341306559 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.321821539 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.333820064 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341382823 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.342702158 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567341247 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331694789 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.328306481 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334751813 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018341726 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.334491263 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.325917832 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.328252554 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567532799 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414597785 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.33082719 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.325467287 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340001788 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326741667 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.332245867 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447847875 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96945665 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33919151 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337643377 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.331344619 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.324757075 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355139 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950625054 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.341513456 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.332885969 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.333873432 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327990175 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.337526274 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357447397 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325869165 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.347570711 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325731832 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054642986 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34044337 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334627114 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846010588 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342442882 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.331734196 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552683576 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328072394 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328703639 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.327441069 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.327712664 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045329013 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336597635 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.297814006 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369934165 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.024763266 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.522931471 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356909406 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359109672 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.552420366 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.296189835 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329834974 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.330436598 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335909495 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351792716 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.013801939 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330251603 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.336419339 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.578315676 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.541442947 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33082671 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.273988213 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77541932 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329828619 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.357716211 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.328545852 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.528932342 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.9188824 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.575586759 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339958423 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370573816 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329642544 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106666035 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345040711 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.342178685 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.3403344 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603771438 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.15406564 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332947327 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405362771 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329330327 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331528582 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330468841 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336359838 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.32962978 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.498694229 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337790061 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57516552 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.339331304 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331585951 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.343365643 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339485938 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.338607557 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.556907204 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332738471 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61166578 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331032759 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332442632 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332614182 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.551242321 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.331727581 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.339815131 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.672980159 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337499467 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.337009549 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579862904 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36967476 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445207451 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36457331 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.334054828 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.586872906 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.339176567 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.339127999 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333880932 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.354396895 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335813364 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.342807525 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335219802 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924870041 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317351234 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.34216629 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.334322325 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.350949743 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407645242 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.34243436 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.527581584 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.340547547 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333310115 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.342338688 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.343613384 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561702533 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575937749 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.336900043 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513646742 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.777790436 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.922111825 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353699181 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.334918031 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.333676087 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.333353575 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336925488 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336106175 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.335901737 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528158833 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589232758 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.329978497 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.929961137 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344221807 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.336168073 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.345384561 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.578009761 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.345687617 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336778738 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.336344348 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345611464 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355509838 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583758424 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562645495 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.351469439 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336059047 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.85498821 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.342991233 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.337685207 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334873584 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366285553 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.337224735 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.156139911 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678426787 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334190528 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581967808 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341626456 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.358999759 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.336561099 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337047533 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348471902 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.362198112 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343975395 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.530858445 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343111204 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343731109 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979245756 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077652245 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878563747 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354331334 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.33955097 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.342999332 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.025072568 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337868522 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33694793 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572721312 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.026689438 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338228024 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785090519 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.335327822 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053929844 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586137135 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.570977577 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347946686 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.339303036 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.588262778 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.558973923 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364920845 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340278141 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356578124 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.307985042 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852876956 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343300803 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.524175416 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024384807 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340040861 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.345840509 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.386633867 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.33953227 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.713553284 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343369891 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338941334 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339193517 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358926404 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159318755 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.348063149 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341015664 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962761113 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353579489 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.79412399 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342016227 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.537394719 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.589826582 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.561957809 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.34702838 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.354955263 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.590609047 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584551295 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345106614 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3497636 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883464316 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.198612714 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.350105093 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342150934 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122004238 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346439758 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614133729 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.344507602 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.345264473 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35447014 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342455074 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342625367 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.343116404 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348311956 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319870522 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810386366 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.337595359 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338865586 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350764916 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346422481 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.589556435 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.359258218 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.934540318 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574583484 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343372444 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380018309 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.348563787 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347881536 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.316913402 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34304529 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342471883 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358022283 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.564918895 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.343365359 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.311593363 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394729287 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.557970323 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.343779829 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353414531 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55427324 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.34917239 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.349769395 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098515323 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376498476 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348312626 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350974075 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.354907367 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38307859 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41881851 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.53976089 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.592695839 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.589961813 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.725081377 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353688346 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350835299 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.362116628 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424746325 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343778902 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.350736116 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.352338627 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936994412 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099092954 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.944381593 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597859917 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349500519 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345854451 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346721612 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587673941 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345472539 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622605087 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346418934 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.352148505 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369550736 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347489088 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359895159 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563737583 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620784477 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345763116 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355750331 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350296633 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.345699546 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596428822 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.559803973 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818314564 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883323717 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352401286 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357816873 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.044424743 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623649597 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347969662 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348138915 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347172983 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.362243755 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.351354248 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.356483221 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362510467 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572857291 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.59001953 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985265697 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.592962075 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.53317222 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.270042199 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347372339 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.596858882 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182805964 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.544755659 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955207024 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.041794628 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605588917 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423142564 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543683569 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.355420901 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585158681 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.348592099 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.351904331 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350443602 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349291248 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.348446972 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.593187357 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949509847 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603695574 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.354664934 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.34772703 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385378398 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.547829036 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.572293507 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081558819 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571498377 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599120976 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357878112 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349601189 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95381117 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597707531 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352086671 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.355875989 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556422218 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352178296 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388380102 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.224711781 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.351460573 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881017256 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.564717093 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372978105 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363950138 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.056299115 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954294681 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.35359277 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826844488 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354183867 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352901279 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632084355 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.35874743 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361133481 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639519724 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.357590962 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.350988944 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.569945091 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.947008492 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.07687863 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.376842755 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354564506 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.355352947 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352470665 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423997508 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354450342 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363019585 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.734429304 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352536641 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353325095 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36677022 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.364691127 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353139889 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.357596705 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353777141 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.362095771 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.359161508 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.324813482 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358334243 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475724184 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873689125 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356399198 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.969354746 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.68964807 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.602625564 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.363817476 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.327454955 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.359221683 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354846996 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354775364 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354549602 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.345995921 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883267004 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.35628363 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.618245732 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.363937147 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.565725711 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568401263 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368049965 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.55187466 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372610058 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381855788 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.322736967 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354437124 seconds)
  done (took 963.819737023 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.347220492 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.347154905 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.35913688 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.408383266 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.354966879 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.353147999 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.355865101 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.407024218 seconds)
  done (took 20.165359899 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.350124854 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.355303317 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.3493111 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.356091939 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.355490388 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.868277663 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.357835171 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.356102608 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.369569649 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.350279948 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.349941738 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.986449851 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.356371255 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.346987883 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.353383671 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.357766501 seconds)
  done (took 32.051969177 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.980749251 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.667293466 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.785770967 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.350209725 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.350220936 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.348790054 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.467506357 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.349549917 seconds)
  done (took 25.535280473 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.361490552 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.362014693 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.361646404 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.363613217 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.362647677 seconds)
  done (took 8.045597405 seconds)
done (took 1226.271776029 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.361620387 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.362612583 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.365056119 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.363588231 seconds)
  done (took 6.687190391 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.326044992 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.325827942 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.330936694 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.342917983 seconds)
  done (took 9.560155717 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.989412289 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.853851377 seconds)
  done (took 5.077079881 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.885484735 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.883652873 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.881362256 seconds)
  done (took 6.883596126 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.64018934 seconds)
  done (took 2.874459956 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.320695512 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.354053824 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.074644764 seconds)
  done (took 7.985701386 seconds)
done (took 40.303428745 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.349547937 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.108892996 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.506035554 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.349635888 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.511590358 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.505689089 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.600267434 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.349266477 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.361381405 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.358474887 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.350136847 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.510030744 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.587658277 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.11136111 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.586479254 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.11131126 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.512725484 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.35594157 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.349754991 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.349936017 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.614449645 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.350946373 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.375469423 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.351084784 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.512332163 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.495798652 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.362388745 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.111767141 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.347171102 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.349996393 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.511103461 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.362824948 seconds)
  done (took 81.807961564 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.350817611 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.350947585 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.359593381 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.361475878 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.351244553 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.373574527 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.354796608 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.351226164 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.351490077 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.375645512 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.358164734 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.352909814 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.352945463 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.359126292 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.354706177 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.360577922 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.356235796 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.358893647 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.36177059 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.35135226 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.35272863 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.354166623 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.352418183 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.353309226 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.352187764 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.367129395 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.353080687 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.35322044 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.352931895 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.366168365 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.369663238 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.353649542 seconds)
  done (took 76.665909111 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.353113031 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.366277697 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.370125398 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.350052529 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.354529051 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.35738691 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.35367155 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.380580989 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.354454207 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.352714635 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.352912042 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.354299479 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.354832266 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.354570679 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.370598745 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.354201956 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.364408177 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.353163032 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.35837177 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.352994634 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.372547575 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.379211923 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.35391671 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.34999685 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.357224784 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.361870601 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.355734704 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.353605156 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.354024913 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.354743252 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.369771623 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.356777885 seconds)
  done (took 76.723677917 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.596894843 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.368523763 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.37436957 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.36603406 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.374446104 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.370466171 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.365900192 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.604037504 seconds)
  done (took 14.660106441 seconds)
done (took 251.090294289 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.363411809 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.832703984 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.391906121 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.370233608 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.382080426 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.394853334 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.573650959 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.393715084 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.579975666 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.39399028 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.380630596 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.365907403 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.131714132 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.511974533 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.16896515 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.281686414 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.199835559 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.357805242 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.904531973 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.639142021 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.390889307 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.356819869 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.164759516 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.218873007 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.336999643 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.435371686 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.454314826 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.58431554 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.521928262 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.438309272 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.845762079 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.367391821 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.38281144 seconds)
  done (took 63.350653009 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.364739702 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.373600532 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.373837796 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.373493959 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.373325676 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.37769363 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.366364503 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.375960393 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.375583451 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.373863843 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.374641593 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.375144937 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.376360774 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.376147552 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.37523182 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.346697765 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.364952163 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.375786869 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.365335143 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.346994169 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.376430076 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.375415278 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.37612592 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.374385647 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.374818095 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.375866694 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.375690455 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.373685034 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.374760651 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.375623756 seconds)
  done (took 42.402949922 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.377132745 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.896066217 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.065003172 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.377987575 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.368176647 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.371339676 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.637447989 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.38151468 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.37201196 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.370343759 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.807609504 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.383514155 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.399563135 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.074678418 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.376681756 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.379074955 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.375993703 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.369573476 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.905334925 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.384085924 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.638931171 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.383384578 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.638796777 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.379701153 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.37274616 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.36962809 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.374536218 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.182359421 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.37087031 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.812549693 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.086854921 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.639765036 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.102209952 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.1254573 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.083346602 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.384550294 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.378986285 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.815463003 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.372721233 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.370720237 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.639451086 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.375577511 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.082299326 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.043911711 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.389638372 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.379861567 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.200693802 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.814041561 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.597822806 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.376170154 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.113983776 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.375403955 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.38135323 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.369591236 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.597359988 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.379138255 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.371716805 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.188664738 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.376344821 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.639478886 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.381956048 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.372714847 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.90671074 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.372901094 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.90401152 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.372988709 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.38061571 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.375135412 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.090493168 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.374566571 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.066815672 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.390465075 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.382729519 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.814941461 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.905240078 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.246872871 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.376200133 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.909415127 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.147088743 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.635090097 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.380929807 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.150230901 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.657235067 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.377520259 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.385895872 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.387294546 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.379888889 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.44571265 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.638800409 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.982652527 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.062532747 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.197524844 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.644296067 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.381007229 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.374506958 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.190780038 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.383113872 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.381497097 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.084730786 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.065036797 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.388925554 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.379397754 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.053270238 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.395467726 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.644328518 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.383399305 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.121685066 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.376644905 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.49558006 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.384383817 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.383581493 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.377913611 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.645447478 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.378033457 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.383083874 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.046683011 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.842619871 seconds)
  done (took 191.135169295 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.369357858 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.370679883 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.369974084 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.369657334 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.369187063 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.37781972 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.368840046 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.369172971 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.374009674 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.369269473 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.368917486 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.377808994 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.376383209 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.370002104 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.367770268 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.370911027 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.370847055 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.376171507 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.369627812 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.371607182 seconds)
  done (took 44.680166381 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.382887007 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.905408121 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.871070779 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.393353513 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.386377651 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.378088264 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.429070735 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.386084636 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.388254471 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.658593014 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.53330231 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.392724493 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.387683472 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.388706579 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.86698631 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.363586334 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.658454152 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.901943426 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.388924988 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.902828386 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.357574195 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.387739664 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.375507925 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.90336184 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.666365262 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.645095064 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.431986573 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.904581862 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.387330259 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.387995959 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.908415764 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.389824539 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.379949407 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.885266518 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.384988641 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.402753296 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.386662848 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.433649997 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.434546115 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.659102959 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.909948694 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.654316122 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.404899694 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.538911814 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.391075842 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.358623095 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.922712218 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.394254836 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.35878298 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.389941289 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.393036835 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.883999544 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.385543848 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.884345918 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.394144489 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.389489431 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.911865534 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.891089614 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.8800712 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.542096102 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.385356506 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.645001405 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.395909014 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.924039309 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.395782678 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.391328148 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.390629297 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.541518688 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.917785088 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.652783806 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.666828807 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.662594059 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.39184259 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.445643393 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.394855061 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.66331415 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.446225519 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.769631373 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.66661742 seconds)
  done (took 124.557933266 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.637652834 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.495286346 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.739578071 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.939020585 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.871025852 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.523346906 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.494708591 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.620472853 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.3997969 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.496366461 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.998212747 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.475025006 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.119164621 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.445828592 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.492522755 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.50193019 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.757590062 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.31951886 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.989912253 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.976161119 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.401863226 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.478150125 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.902821541 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.575271276 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.383516643 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.940800673 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.283191646 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.881668595 seconds)
  done (took 52.397732194 seconds)
done (took 519.765509962 seconds)
SAVING RESULT...
DONE!
