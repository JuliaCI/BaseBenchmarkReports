cset: moving following pidspec: 26589
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.410222869 seconds)
loading group "string"... done (took 0.58033921 seconds)
loading group "linalg"... done (took 7.320722173 seconds)
loading group "parallel"... done (took 0.161326641 seconds)
loading group "find"... done (took 1.173303636 seconds)
loading group "tuple"... done (took 1.788376702 seconds)
loading group "dates"... done (took 1.261648416 seconds)
loading group "micro"... done (took 0.224756955 seconds)
loading group "io"... done (took 1.021899681 seconds)
loading group "scalar"... done (took 39.517254747 seconds)
loading group "sparse"... done (took 12.52961597 seconds)
loading group "broadcast"... done (took 1.003758464 seconds)
loading group "union"... done (took 13.064274633 seconds)
loading group "simd"... done (took 4.878026199 seconds)
loading group "random"... done (took 9.96303915 seconds)
loading group "problem"... done (took 1.919011828 seconds)
loading group "array"... done (took 23.331531809 seconds)
loading group "misc"... done (took 1.851168074 seconds)
loading group "sort"... done (took 3.787925811 seconds)
loading group "collection"... done (took 19.043852676 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.525886243 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129401153 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.122079411 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123731212 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.150800164 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115084028 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127307271 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086674132 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.818205222 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152394636 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.12126188 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.440980085 seconds)
done (took 5.211922052 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.178609614 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086584952 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084337672 seconds)
  done (took 1.284070983 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066849579 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126942282 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06736635 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068354742 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069355896 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067997311 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068000916 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067676371 seconds)
  done (took 1.65080717 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07511233 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070609468 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070697717 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070008817 seconds)
  done (took 1.402727721 seconds)
done (took 5.709601889 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.810963623 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.207715193 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188729612 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.412505201 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.134400492 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.163238077 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.624801567 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.355640657 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194932885 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.083345228 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108246337 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.334387403 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108749084 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.632914143 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074078843 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091262012 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138989665 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.416298592 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067104475 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08257725 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088300083 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127865557 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088039216 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076248804 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146705152 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067803859 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136668177 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081103236 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066549708 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213528218 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172497623 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660837073 seconds)
  done (took 10.313632991 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099757026 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.101731265 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070509963 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126612369 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100469729 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071999754 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073596876 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068946468 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090236159 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131877012 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090813818 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104172552 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067564463 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070985772 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.087579644 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.207988223 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082798416 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084487673 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072848723 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077602607 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111531557 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081159674 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079972209 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080173768 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131717148 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182693182 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100040994 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099103416 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069292141 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083136866 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116785397 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128488797 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067937112 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068280416 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128268635 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096642084 seconds)
  done (took 4.658836831 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.019954627 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.148310134 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092946046 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139122642 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066935188 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113004149 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067128866 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083582043 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.217216673 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.396634038 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.596758479 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.115090274 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113880913 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107855651 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070023881 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070203276 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068941437 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.494110237 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.098545814 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109227968 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083556394 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07216873 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071217073 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.356301382 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069940117 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065493936 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069749459 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058586103 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12879611 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069977629 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.968204251 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.131224037 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069109975 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10402993 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.170733466 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091061109 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.282165161 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070958736 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066441402 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.157823654 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073208709 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067753183 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086717802 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066854927 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105252198 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117175625 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067627434 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069160277 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165978194 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.067231946 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066356973 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081348359 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.67996921 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153737597 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077714654 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066537177 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.256146284 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088321099 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070853657 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066238945 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.221213658 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136979205 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070551762 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069020229 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070145511 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.0718385 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.378054395 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066356864 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.180398798 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067141238 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075901891 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069219932 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072370321 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073202879 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07393051 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08992618 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068899657 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077713018 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067772373 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067977305 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06600433 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06863756 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087094274 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.377106065 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066903089 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067947113 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066287147 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091527129 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099028803 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068687941 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067056518 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102173615 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06804124 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.0670206 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.109385462 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06884768 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086400202 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070874939 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112675788 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.17001168 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.096338784 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06560324 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096545097 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070737441 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098732155 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080298003 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072319387 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.418551255 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065375585 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064832221 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068579547 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065046168 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06729755 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066869841 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07971599 seconds)
  done (took 21.649511981 seconds)
done (took 38.75757916 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245841089 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079158238 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078121574 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078294487 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082413019 seconds)
  done (took 1.778403893 seconds)
done (took 2.971001584 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125685997 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103051431 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066413936 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101258829 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066111649 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104830902 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103777215 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084835418 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103259842 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066050798 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100284448 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066044032 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065815965 seconds)
  done (took 2.375314401 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086924895 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087196339 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071490729 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085827293 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06564543 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086086191 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083371966 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092439089 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083576324 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07487718 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065410713 seconds)
  done (took 2.07343159 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086004007 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086942431 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072339607 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088246523 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06551906 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085138683 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084147945 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088446989 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084131307 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076000133 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065354193 seconds)
  done (took 2.06447394 seconds)
done (took 7.697384566 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080347279 seconds)
  done (took 1.250625208 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.61002054 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.198696999 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081584273 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113227533 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.195934334 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122865838 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.280803681 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.089982532 seconds)
  done (took 9.059659954 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.091694321 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.084276465 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07193741 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074054392 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072637414 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074878927 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069993081 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073273919 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071591948 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073690903 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070229985 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07081503 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07021964 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070462537 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072360002 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073524784 seconds)
  done (took 2.438272106 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094852858 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093219005 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076156696 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076905409 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07398567 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07349404 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076157548 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075219894 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072305494 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073776536 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076613324 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075364771 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073471899 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066114319 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07540177 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076705595 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072548445 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075636915 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076026334 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076582895 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076534091 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065967847 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073668869 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075929542 seconds)
  done (took 3.119555102 seconds)
done (took 17.050991748 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11781262 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07304454 seconds)
  done (took 1.373323748 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084820439 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085691455 seconds)
  done (took 1.354876728 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.087164049 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067408151 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09436726 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080510629 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06815488 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067202069 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.092365612 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068101075 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067954881 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067754203 seconds)
  done (took 1.948419904 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070635164 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.082042003 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072684256 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083138484 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.0757456 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065382947 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074845809 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069817234 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080396156 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.0640363 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072887353 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084739292 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073545995 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085898572 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074889613 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069978917 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072358647 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068735434 seconds)
  done (took 2.528951904 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068235435 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068849688 seconds)
  done (took 1.327062982 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069911945 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06574929 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068930494 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068418661 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065828355 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063861199 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064819831 seconds)
  done (took 1.652156699 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.396224231 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.115431625 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.320354977 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072449527 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084500832 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.258782638 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067124723 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072703852 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072558046 seconds)
  done (took 2.695944166 seconds)
done (took 14.08216392 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082611733 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088796465 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099404142 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.388184335 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093389841 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06743855 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115580801 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193544884 seconds)
done (took 2.332699286 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215193423 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.635904172 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.402770748 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206175748 seconds)
  done (took 2.439067431 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.34535957 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089566318 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060842935 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068914464 seconds)
  done (took 1.768093722 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067481107 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071789622 seconds)
  done (took 1.341293884 seconds)
done (took 6.967987498 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068682634 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088280876 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067212471 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065124378 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067845644 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065296555 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065375717 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067735438 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068019174 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065450335 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.07063272 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068372208 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0679012 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06584472 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065793116 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06787939 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065130001 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065011655 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065095977 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06518724 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068064332 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065093114 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065340576 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068132524 seconds)
  done (took 2.859994915 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087698999 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068132783 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073658302 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073854598 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071876948 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073428775 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072981571 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067627762 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07344597 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070551406 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071467307 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071525665 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070312518 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07175314 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070502263 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071491317 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073209744 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068111576 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071002358 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072024593 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073584695 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067878885 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071836349 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073475457 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071615483 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073620096 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070341038 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06795867 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073220884 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071450512 seconds)
  done (took 3.368464122 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071333929 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064998567 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065217866 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07239127 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065327614 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066768565 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065082429 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065651224 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066016473 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065204968 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06687915 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064752409 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065076171 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065985192 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066026277 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069033478 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080897412 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064521038 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064926422 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064042752 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066841003 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063255852 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063007817 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062967944 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062791406 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062870241 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06335383 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063004903 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065365276 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064906029 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068505991 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068853904 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06515561 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072022883 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068736586 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064707141 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068832051 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064444056 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065424481 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064505312 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064483955 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064535657 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064798986 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07164018 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064851795 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066818227 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065988982 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065795053 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06507098 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067508248 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.182284677 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06484032 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066792756 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065937418 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068853126 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064280399 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065398379 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064379551 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065569393 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064467304 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064109635 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064196912 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066756803 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064843023 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080062495 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071759117 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064545339 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066381972 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065796381 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067141557 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066320904 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078703682 seconds)
  done (took 6.116554861 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093678593 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090900067 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06700501 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067034088 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063304224 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066081938 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072076706 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066348289 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067420617 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083736767 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065839219 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066607476 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06691812 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068877936 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065549479 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067230684 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074040174 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063364758 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065664828 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068941039 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066450638 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071461607 seconds)
  done (took 2.768739603 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159949162 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072373977 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108684735 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077468126 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071515531 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077457385 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071080766 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07209363 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071513861 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069479437 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0689539 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071564387 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071817729 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069023602 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069306474 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068988958 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071191467 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069234 seconds)
  done (took 2.636746067 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07913846 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067454494 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088271385 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067724795 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067510162 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069998712 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072117675 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076332168 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069805051 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067677227 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07581367 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069763286 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069953143 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067267301 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069978841 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066992438 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069573521 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067224501 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076329257 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072013157 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07226051 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07571346 seconds)
  done (took 2.802325722 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0826353 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069633236 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084098622 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070572432 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064292659 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066035316 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072048203 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067351401 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071997167 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069301421 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067184061 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065974322 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070681959 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066684287 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070361004 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067315082 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068978057 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067022249 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069256419 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063206499 seconds)
  done (took 2.620337908 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089381818 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069828935 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0692163 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077431079 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069142304 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069201024 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07693145 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068675422 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069271376 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090556335 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06899486 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068669821 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077022579 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073595604 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069327308 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07681616 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076691929 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076468664 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068346701 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069126799 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090039486 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0686062 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076425703 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069146196 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068445889 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068603598 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0686093 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073587814 seconds)
  done (took 3.28488764 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068438638 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067753357 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064630184 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064777058 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065392549 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064823755 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065040286 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065186309 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067746048 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065363604 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067834833 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067688247 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06748811 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067181395 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067677195 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067241588 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067591072 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065626716 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065265345 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064952512 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067417593 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06755752 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067430573 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064767152 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064911265 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067810044 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064686561 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064841926 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067679943 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064788883 seconds)
  done (took 3.220045665 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077338728 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075203687 seconds)
  done (took 1.38324829 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065133807 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082696106 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064619281 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071289668 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071774702 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068031317 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075373443 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071286595 seconds)
  done (took 1.796415332 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084396176 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080160662 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069444864 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082603319 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078761393 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084778652 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137566714 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069424935 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07442578 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065720576 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081457089 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066711318 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074199273 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067725212 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074013098 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073819881 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065379476 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074066233 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069906226 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065975562 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068954435 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077026204 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069842129 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063145446 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068820697 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090969998 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080005229 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068112524 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071279356 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075836205 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073847889 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061520066 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067942216 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068411471 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066013865 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078319643 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0839546 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070163353 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07651826 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068582395 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078572214 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062208132 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072628231 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074656153 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07765422 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068186796 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068178855 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06242353 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065540247 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069776123 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062823061 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071268606 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062319703 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074396485 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071294695 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078526009 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066404954 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069501046 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070632826 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071233593 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074522198 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070288793 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070435113 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067345053 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077857997 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07251276 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077417009 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062609985 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061718548 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065720921 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078168433 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091566736 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073750478 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068377387 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068785538 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065326241 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071175034 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069056806 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074287344 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074684226 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067782736 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073932816 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075348974 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068117534 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070664547 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076446748 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066117316 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070649009 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066521231 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084856804 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066980454 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065861086 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065523891 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078674615 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071156191 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067561237 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065990219 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075086808 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06152325 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068443635 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068476915 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068584173 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079244399 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071549793 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072048861 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076416253 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074698688 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067521193 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070212841 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063696434 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06796561 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066042828 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074165781 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060724365 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06966856 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067504149 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067264569 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075835705 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064897571 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067026578 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.201400627 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075822185 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067785685 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065603425 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071443114 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068951998 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072586824 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077493403 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067319913 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06346556 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063496467 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072398584 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068025806 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073036415 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073944361 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071482135 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06296788 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066422785 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073246136 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078148182 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068757551 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06963448 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075069657 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070611618 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067386853 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07499925 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070705717 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067867825 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074169951 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069093841 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062644263 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071045697 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071073693 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067409925 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072564284 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071401197 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070537869 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068819724 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066687845 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076011912 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06938023 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067793454 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06831606 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06724626 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079267308 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07027822 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063717086 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06447243 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077650261 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065890188 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068024452 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066885973 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07021406 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068820278 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066640466 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067423827 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069664358 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079551275 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073037296 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068714312 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073715712 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079038904 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067855249 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070009904 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06799519 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068794747 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068201358 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076537771 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074144427 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073079847 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070720847 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064666401 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073181579 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075890187 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066822311 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06586947 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066800955 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072666058 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073677872 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072326276 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069028621 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065856846 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06889443 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071415122 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.0708323 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067761451 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066880535 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074680938 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066642466 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074952566 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068638565 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078430087 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071102902 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062807711 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070731503 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065987006 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074448511 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062614992 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065473402 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067461357 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068794985 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066570415 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07092322 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061615312 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074878004 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075351287 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068210637 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066900232 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066997383 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074402431 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068256212 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07055013 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070284817 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072793543 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077570637 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066329173 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069702605 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.077275533 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066498563 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060697149 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071816905 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065376119 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065578894 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065582952 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065304511 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.199641774 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078681911 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075375986 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062245781 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072177948 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066997429 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067816952 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063849802 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073857895 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07163917 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070051205 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075827204 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070123217 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069236228 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07251927 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068795316 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069659688 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070643772 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071306076 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069678975 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071267808 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067693606 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071987207 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06819535 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066521121 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070451659 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068944973 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069523785 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073994199 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068466556 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068178227 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.0706996 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069263041 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06964803 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069262299 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067410488 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071560896 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069486031 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068748203 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070859807 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063076711 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075806078 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067823159 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076041476 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068822863 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065161795 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076350539 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071257409 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074343427 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068991312 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06825992 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069545201 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067544449 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071544526 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074659332 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065925874 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07887337 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076197662 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068891006 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07065726 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068266366 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068883514 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066739743 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068583901 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068864035 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068414972 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068105585 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073236127 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070804471 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068128549 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07043613 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06910264 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06792027 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06914758 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062909064 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066793508 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067010222 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067389066 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07805168 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068209326 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067674626 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066913495 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069055848 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067063691 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064687675 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07630796 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077398804 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068480324 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075674283 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067401321 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.07002962 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080004164 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061912456 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066368717 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065531367 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066595142 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075998517 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068739765 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07786505 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068452773 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067437213 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064974074 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068896334 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066819469 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061978156 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06577943 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071736687 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067335841 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066652783 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068196591 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070364473 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068713942 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076941114 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065788691 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067453374 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066849501 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063683832 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065967977 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065872481 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069653341 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067758714 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064575316 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063801533 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066348517 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067462415 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068587753 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069651257 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068502475 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.208147584 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068965037 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071478122 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072092337 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063140683 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071819436 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068336943 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068288802 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067890063 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072339239 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071464318 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070308789 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077714029 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068937258 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069555982 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06873993 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066684475 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067843241 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068353747 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068478646 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067270091 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070136994 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07638879 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065889569 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071966374 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069211773 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069384894 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075159798 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070009248 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072087126 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075566566 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068509404 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070831252 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077332187 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074001893 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072029867 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06957511 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069607447 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074630168 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067499456 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075152402 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069229268 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068592472 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070374786 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066301882 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068211882 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067743141 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06753222 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074882946 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.0688657 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06700881 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068053538 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065505049 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070191522 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071436458 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075371237 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070494841 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070997042 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063464389 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065414391 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069453304 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06557384 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069807287 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070430009 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07358672 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070497678 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068584145 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067030718 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07761024 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074083804 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072179873 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065660792 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071441885 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068655527 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070299403 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068546698 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068416258 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068534883 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072093115 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069635957 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066775951 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075176054 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071403704 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068623484 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069182794 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069192795 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068525941 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06267217 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068643677 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069730722 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073305924 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070186918 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067945278 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079042798 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065568088 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068044822 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070945792 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067313186 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072601626 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062921277 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069161519 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069214249 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068985449 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062949477 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066805257 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065717307 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070219709 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06706499 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062978654 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078882956 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077049954 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071453628 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066786267 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066222384 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062343688 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062505893 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066082522 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0680316 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068527279 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076987728 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065670316 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065696593 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061575781 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066430777 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069596221 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070148947 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063934945 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061682013 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06604672 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.204932918 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074353104 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06696597 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068049978 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071316308 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070596947 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066650406 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071472248 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065190854 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072959533 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082068476 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068839859 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069410801 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075023213 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076987643 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069384125 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063318709 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069138717 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071746558 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069134357 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069550085 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070059427 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084607229 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071324898 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068701397 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067140654 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071509794 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068617712 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076479723 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068884804 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070043603 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07350519 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070218585 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078199034 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071227369 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076842584 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071614742 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072058445 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067359036 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069570794 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066229621 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067857293 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06981778 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06919559 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073890444 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076595347 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067639316 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079184174 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078808022 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070464315 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064478933 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067126965 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067642811 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064128615 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070231578 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066166271 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066130828 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066070446 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06729473 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068970603 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073408527 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068783054 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068815883 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067616095 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062234106 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070238978 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070967261 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069327888 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064424643 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068026159 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068428245 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072250196 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071452203 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065212204 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068832059 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069512526 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068910159 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062887213 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074378693 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067295654 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069872415 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06718817 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068014379 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068791541 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071020726 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073069535 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069126006 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070061935 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071709597 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069891403 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06490893 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065022487 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07316748 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065835192 seconds)
  done (took 43.569537461 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1029807 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064505429 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06349084 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063148095 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075719201 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064452487 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063446174 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06435524 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06440914 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066942501 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063204287 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063616918 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07261121 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079438639 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075400996 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06811649 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063298886 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064198978 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063435336 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064244099 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072178511 seconds)
  done (took 2.765780085 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07558795 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079678786 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077123726 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084042085 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072437781 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072675694 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077417704 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07254923 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080403462 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074125788 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08071365 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072622274 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074492855 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074133214 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074310456 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072293196 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080220229 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072840117 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072227576 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077240903 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072172372 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077641324 seconds)
  done (took 2.967281429 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068472516 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067795097 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069327729 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06268082 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067890518 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063226396 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071261389 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065361266 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.079913206 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066401355 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066107679 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067136149 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068803734 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062522838 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067304088 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065178228 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10954258 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070213984 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066673285 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067856291 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062445118 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068856467 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06223841 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063035813 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066082602 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070426856 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067509594 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065335078 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066482244 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066075083 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066808526 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064499756 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068237568 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067931375 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065847281 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06598248 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066673366 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066871915 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062643525 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064795709 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06762497 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062770034 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067437971 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068550652 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06492187 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065020508 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068536212 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06681352 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061982087 seconds)
  done (took 4.608784452 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081454718 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112221402 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068755388 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090696026 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08538962 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074118446 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071141594 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091980988 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06490324 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065928286 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083305365 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080930167 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067210942 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071884193 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070861705 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066598734 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068416332 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066086611 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070693936 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066029809 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.0709341 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073809686 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081744057 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080199361 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07062006 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065588456 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066053462 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071402654 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079642113 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071259175 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071775822 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072148094 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082295212 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068360153 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065777442 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068827448 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08304911 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067115442 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069431831 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065003915 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069441247 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071206731 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073798822 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084058228 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067400812 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071992001 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06697228 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064329126 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079465281 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069431701 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074957359 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081241624 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070897243 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067021993 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071755836 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082313089 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067030371 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065738045 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070376799 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079579259 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064689023 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070735196 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080711977 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06935461 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074635611 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081461107 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072333449 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071128475 seconds)
  done (took 6.459111782 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078381766 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09712705 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08577622 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085532568 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076635979 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07718482 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076840764 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077046154 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076928158 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082172416 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077384247 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118811498 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072836572 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079874753 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07739509 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077376186 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077027797 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077208972 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077562653 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077242394 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076834332 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084867862 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077452513 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084933904 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081573762 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072391169 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076865805 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076705254 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085007869 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077041542 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080967298 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076684859 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076701256 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084997567 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080640381 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076660122 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066394238 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076678512 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076640922 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07684003 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071601804 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084778979 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076527568 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071706526 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076731584 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07683566 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084818616 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081917748 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080287162 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081680758 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076981454 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08459543 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076463756 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076969398 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084997296 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.087865011 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084425615 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084954575 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077377728 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084739362 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084760462 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087757357 seconds)
  done (took 6.299013404 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086647164 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076553005 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.084266375 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062823205 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065547033 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073717008 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065675114 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06616709 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076078939 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076429382 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078200201 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073931462 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076733469 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078967613 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073335706 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076736535 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073345317 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073704439 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0764751 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073555526 seconds)
  done (took 2.815207904 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076813027 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085237895 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06815069 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074253652 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070587245 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073114688 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069646673 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070357224 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068396105 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07036831 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078168993 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077626478 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06832857 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073230662 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077269962 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072899108 seconds)
  done (took 2.493027407 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087219898 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.075319653 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081936555 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067339884 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068216358 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063822553 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067012281 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062798646 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063330905 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079893994 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067306662 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077831924 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067674354 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065998372 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063949855 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.072416338 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06364438 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064826889 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066599887 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079732903 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071352162 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065593244 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070375654 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066795853 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069851022 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071986734 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065952663 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067008481 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064538935 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067584811 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070571853 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07106817 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064043337 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06492008 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065754719 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.0643577 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06686633 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067422345 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072967059 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06702809 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065080161 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069517882 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067055198 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068397429 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063363312 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067996462 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063950943 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069501543 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064899077 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070094333 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067358877 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069813994 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068088778 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074843938 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070499088 seconds)
  done (took 5.102226507 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08168812 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07170101 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063190028 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.0661198 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071125594 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069062873 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070763111 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069208115 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069485091 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065634655 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069122129 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070317212 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068693063 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070785509 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069124384 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070826775 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063774201 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068856762 seconds)
  done (took 2.582396419 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073710426 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067305312 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074754334 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067658166 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067820112 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069597697 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063353823 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066096972 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065881823 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067318169 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067192055 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069659632 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06616613 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069489884 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067390843 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06689984 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069445639 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065623695 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066889231 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063154335 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07007998 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065918553 seconds)
  done (took 2.818374775 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096370951 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08444716 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143784874 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080207143 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086025958 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072689894 seconds)
  done (took 1.891329437 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093855236 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102367553 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068325703 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070764089 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078028546 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071337052 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071273374 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071716787 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080182632 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07746305 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071350165 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080052884 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080265693 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079620111 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07705703 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077557778 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07140473 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072005896 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06771872 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08628357 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071810882 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080446764 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071873985 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071567246 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072297347 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079473032 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080328229 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077798395 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071607552 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080071434 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077424216 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071239462 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080417692 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077560912 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070493505 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080269264 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071510246 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086344053 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07716722 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079424741 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070491782 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077498445 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080352565 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076432337 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080794076 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072073035 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076218187 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07142635 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072068855 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087615235 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078266059 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079214406 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08054254 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080660268 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080312248 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087926582 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077808922 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079406432 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077724117 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077744447 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079965767 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077849962 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079893461 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077852848 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078095537 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079891168 seconds)
  done (took 6.450836011 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106726786 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0688058 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071896131 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077844987 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079827869 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072060535 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072434513 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072479673 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071945892 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0691831 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111632727 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072208214 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07988743 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080071442 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072418796 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071817847 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07215303 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080087097 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068620562 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087785458 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071666446 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079811007 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080015194 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079435872 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078112965 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078366877 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071924535 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071795205 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071742405 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071485376 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076724325 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071925205 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079408636 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068397287 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079778691 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071821818 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071680752 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076348312 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071496324 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077661064 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079492471 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085448723 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071909566 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071708998 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077589685 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071649276 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071624078 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068465364 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071923148 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068593608 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077809392 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077929091 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077735333 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07908021 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071787783 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071740356 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071794893 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071321264 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071669171 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077588457 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079338606 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071690754 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087648789 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072314385 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071811047 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079603724 seconds)
  done (took 6.357744845 seconds)
done (took 131.236036405 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186845619 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164387168 seconds)
  done (took 1.675944117 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071744338 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101212081 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079985373 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130648583 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065985567 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099463585 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099012702 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.0773692 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067607238 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068346935 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068336571 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070417168 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134040656 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065790292 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065633432 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068542965 seconds)
  done (took 2.673825174 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101621885 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.168451375 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104786188 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066648755 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102207624 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075017554 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066375653 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077603014 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07329657 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066973917 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07492513 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072631756 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066690916 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072590894 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.0730522 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074826474 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06649287 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075306488 seconds)
  done (took 2.815458515 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103121699 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093876707 seconds)
  done (took 1.548048266 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160613143 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.110270725 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144261212 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.350708079 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166667116 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.127905514 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127598508 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127500615 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116498813 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123659332 seconds)
  done (took 2.897273084 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102525877 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.159096283 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.270801104 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120601468 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075285327 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097213907 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120982704 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080290828 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082259879 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081263969 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082405051 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078765906 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103099629 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075857964 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076082591 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078142669 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106462186 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074478343 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076475639 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079223281 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103337431 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06777688 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076008518 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07513503 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079902537 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079982142 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067712892 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067119585 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079331241 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076940528 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079229239 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096196846 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079943324 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109664854 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072674845 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.111013946 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078844236 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076090816 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07679703 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076301204 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080878216 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080112737 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074330822 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077739823 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066513796 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079182694 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06760403 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067516787 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080109728 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068757823 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080038879 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.08123941 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109544253 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068609582 seconds)
  done (took 6.101938961 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106184197 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105629935 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071426593 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114644591 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102544094 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071950179 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104232716 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098346061 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107682082 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072225319 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069723085 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072104052 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084732144 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086674797 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115167993 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106890613 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073591684 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070743061 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106447342 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104643685 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068755384 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09806477 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09171089 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10582805 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067226335 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070084147 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06862527 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071791165 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079294584 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081034988 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071795835 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083474286 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.090665326 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078720537 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067421133 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069610557 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0698775 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080283668 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079055767 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078416865 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077184881 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067051299 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067175938 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071153574 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071742181 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069374178 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081390139 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08331754 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081607842 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071230555 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072025355 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069700374 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071207736 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082773053 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079801671 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084373484 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082950748 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070252759 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069971062 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074226841 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084269338 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08183752 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082209019 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071678133 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081650189 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070403018 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083882799 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088345165 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070609297 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072080336 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070286971 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071127332 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071671761 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080393787 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080323886 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071458699 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071806155 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070027779 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083155644 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081568903 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070087797 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079342776 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069214343 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070331352 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071511419 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071730556 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.08020349 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082461523 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072200282 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070381882 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071560451 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070253667 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069305792 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079233953 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082460509 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080741308 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079094239 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07024321 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080257082 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079765501 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070883195 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079787641 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069204044 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071356723 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070093904 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078881134 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.208352063 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083480827 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071828892 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070827115 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081601193 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083590459 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070597419 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080543563 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084136967 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.082357371 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.07084207 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08454637 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07138804 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083787851 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072483145 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083113928 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071594681 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083399343 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071349287 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071232999 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07163255 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.082713975 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076019901 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071345062 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071770048 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071929855 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08315586 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085318066 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073779638 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081415374 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.082130834 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072956551 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08124117 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070449665 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082396019 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071693816 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072417682 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069579766 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084754948 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071045858 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070524277 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072360395 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083836191 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070058446 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080172223 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078056894 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068448783 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082587179 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079901645 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077298635 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081026237 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070266837 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069063243 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068375303 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07003461 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07714967 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079297026 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070067095 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069539196 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079227797 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080626935 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067660566 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079112154 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079388358 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080963577 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070771276 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07187521 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083547642 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083875199 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080936175 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080631528 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081212825 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070836371 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079812565 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080432094 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069841047 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088502989 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069282743 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08510902 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081221883 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079534344 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081048977 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082833082 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.083070407 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083113786 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084314492 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070437205 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069932671 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081748072 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070372019 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071330963 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.080860275 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071675601 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071525828 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086194406 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068415481 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079197327 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067350739 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079660922 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068250089 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070897104 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085323978 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067243595 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070068219 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080096226 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070429723 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077898886 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080893117 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.208739916 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070951591 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072990003 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083552605 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082992488 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069967328 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070354132 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072600266 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080327037 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078839419 seconds)
  done (took 19.058895491 seconds)
done (took 38.124324411 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.221932766 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.159136644 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.19382421 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.123971726 seconds)
  done (took 2.152699549 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121607733 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.106026826 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.097255096 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067643167 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103050026 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067594326 seconds)
  done (took 1.947604291 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.326147932 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.218675597 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189706642 seconds)
  done (took 2.116647762 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210715763 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.197405525 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.433272193 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.273418068 seconds)
  done (took 2.616896664 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14938614 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093930437 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069873617 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086871896 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138892769 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.166352033 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104093188 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.129833998 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081247432 seconds)
  done (took 2.456392506 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.15407304 seconds)
done (took 12.831653913 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.277795525 seconds)
    (2/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.11457784 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.113962193 seconds)
    (4/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.18235014 seconds)
    (5/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.230568403 seconds)
    (6/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.214919471 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.105867534 seconds)
    (8/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078860857 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.152501789 seconds)
    (10/309) benchmarking ("sort", Int8, false)...
    done (took 0.157600987 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.202768421 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.211412128 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.126477808 seconds)
    (14/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.207716407 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.074094178 seconds)
    (16/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078483305 seconds)
    (17/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074926377 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.0806175 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.158760498 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075127299 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100337429 seconds)
    (22/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.134747009 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.204039999 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.106811238 seconds)
    (25/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072515013 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.104312001 seconds)
    (27/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.1560167 seconds)
    (28/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075975686 seconds)
    (29/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.185165819 seconds)
    (30/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.182650822 seconds)
    (31/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.111782599 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067340404 seconds)
    (33/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07449121 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.146980339 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073035902 seconds)
    (36/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.180272037 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073904183 seconds)
    (38/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140551545 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.177737258 seconds)
    (40/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.166085894 seconds)
    (41/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.119745122 seconds)
    (42/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.181084786 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.167122634 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.092265317 seconds)
    (45/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.218560413 seconds)
    (46/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079459367 seconds)
    (47/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079498872 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.103036616 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.178421641 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076019203 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091172923 seconds)
    (52/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077573505 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074863112 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.142568118 seconds)
    (55/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078817722 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.093502258 seconds)
    (57/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.052547848 seconds)
    (58/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076254474 seconds)
    (59/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07415507 seconds)
    (60/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053777717 seconds)
    (61/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.166745694 seconds)
    (62/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113956045 seconds)
    (63/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.208773496 seconds)
    (64/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054070054 seconds)
    (65/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.101294184 seconds)
    (66/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.075393209 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069218818 seconds)
    (68/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.159965886 seconds)
    (69/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.10369021 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052088712 seconds)
    (71/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.217698217 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075037319 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067966981 seconds)
    (74/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053696364 seconds)
    (75/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.159166146 seconds)
    (76/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.154973251 seconds)
    (77/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.066257399 seconds)
    (78/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078601249 seconds)
    (79/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05493497 seconds)
    (80/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077497115 seconds)
    (81/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.180577453 seconds)
    (82/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.082047197 seconds)
    (83/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070793805 seconds)
    (84/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068215092 seconds)
    (85/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.230502844 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.070334445 seconds)
    (87/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06853532 seconds)
    (88/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069428025 seconds)
    (89/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078816955 seconds)
    (90/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07035741 seconds)
    (91/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064309818 seconds)
    (92/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.113829337 seconds)
    (93/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066275925 seconds)
    (94/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.081147916 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.113164359 seconds)
    (96/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09571645 seconds)
    (97/309) benchmarking ("sort", Int64, false)...
    done (took 0.069546271 seconds)
    (98/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.103519459 seconds)
    (99/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069173398 seconds)
    (100/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.077612749 seconds)
    (101/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.052915438 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068063182 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.150166864 seconds)
    (104/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.156165769 seconds)
    (105/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07282706 seconds)
    (106/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100500386 seconds)
    (107/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071496564 seconds)
    (108/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073331535 seconds)
    (109/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052420416 seconds)
    (110/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090116285 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.188422513 seconds)
    (112/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073881342 seconds)
    (113/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.155413103 seconds)
    (114/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074277023 seconds)
    (115/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07244955 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093372147 seconds)
    (117/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.181227066 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094491149 seconds)
    (119/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073049336 seconds)
    (120/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.157030941 seconds)
    (121/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072147908 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143556343 seconds)
    (123/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072604414 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06530862 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073403074 seconds)
    (126/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.111380279 seconds)
    (127/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.162248924 seconds)
    (128/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081169069 seconds)
    (129/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051216136 seconds)
    (130/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121038634 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139726866 seconds)
    (132/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07258062 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090601136 seconds)
    (134/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189956967 seconds)
    (135/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076094664 seconds)
    (136/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062215795 seconds)
    (137/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.10884922 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.090112858 seconds)
    (139/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081210284 seconds)
    (140/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050390887 seconds)
    (141/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067381807 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051575383 seconds)
    (143/309) benchmarking ("sort", Bool, false)...
    done (took 0.137315895 seconds)
    (144/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073331179 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064495989 seconds)
    (146/309) benchmarking ("sort", Float64, false)...
    done (took 0.130492298 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072627412 seconds)
    (148/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.179096154 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071008453 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064951701 seconds)
    (151/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.0507427 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072409923 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.11304608 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050518391 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088438392 seconds)
    (156/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.063031779 seconds)
    (157/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.0660608 seconds)
    (158/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070256042 seconds)
    (159/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086431892 seconds)
    (160/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.196797668 seconds)
    (161/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072311261 seconds)
    (162/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052304413 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.09009035 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.142339864 seconds)
    (165/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050674039 seconds)
    (166/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.141733228 seconds)
    (167/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.30285839 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067518807 seconds)
    (169/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073045135 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.113964877 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066457323 seconds)
    (172/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050852118 seconds)
    (173/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.218124674 seconds)
    (174/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050361371 seconds)
    (175/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.05060667 seconds)
    (176/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062783719 seconds)
    (177/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061525764 seconds)
    (178/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073571361 seconds)
    (179/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050601108 seconds)
    (180/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050392788 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092210336 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05037282 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067054496 seconds)
    (184/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.152514489 seconds)
    (185/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071685501 seconds)
    (186/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079656269 seconds)
    (187/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089178853 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.180934814 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071818934 seconds)
    (190/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066420281 seconds)
    (191/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077869849 seconds)
    (192/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089314849 seconds)
    (193/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148650346 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064804628 seconds)
    (195/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.050625171 seconds)
    (196/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051113369 seconds)
    (197/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069070421 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089827106 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071251673 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.257262336 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094943806 seconds)
    (202/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062878287 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.125754934 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075972806 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093943 seconds)
    (206/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051560497 seconds)
    (207/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070126224 seconds)
    (208/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076045103 seconds)
    (209/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.11223962 seconds)
    (210/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051237089 seconds)
    (211/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052388421 seconds)
    (212/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074270568 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064451829 seconds)
    (214/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050686968 seconds)
    (215/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069051477 seconds)
    (216/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05217133 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065477471 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093944609 seconds)
    (219/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050704896 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075202406 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092225198 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074169505 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.142400664 seconds)
    (224/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081788661 seconds)
    (225/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066525723 seconds)
    (226/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.198950393 seconds)
    (227/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067202271 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096370806 seconds)
    (229/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051643842 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051751041 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.0712804 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065822596 seconds)
    (233/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050637427 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064339908 seconds)
    (235/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05067425 seconds)
    (236/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050823537 seconds)
    (237/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064546053 seconds)
    (238/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051948155 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111249156 seconds)
    (240/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051227433 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089122921 seconds)
    (242/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072275687 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072555783 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137480989 seconds)
    (245/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071444316 seconds)
    (246/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068168766 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065335709 seconds)
    (248/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051863895 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183663967 seconds)
    (250/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.099183681 seconds)
    (251/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076900992 seconds)
    (252/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053266644 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065369739 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052148382 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064818544 seconds)
    (256/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077958732 seconds)
    (257/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.07131984 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065359679 seconds)
    (259/309) benchmarking ("sort", Float32, false)...
    done (took 0.132807786 seconds)
    (260/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051771302 seconds)
    (261/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07873952 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072125282 seconds)
    (263/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076587504 seconds)
    (264/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07021999 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073997752 seconds)
    (266/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068304784 seconds)
    (267/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065337695 seconds)
    (268/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.117599036 seconds)
    (269/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.161553928 seconds)
    (270/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06509678 seconds)
    (271/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050748612 seconds)
    (272/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065963098 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088512997 seconds)
    (274/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.06764719 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139947024 seconds)
    (276/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065571871 seconds)
    (277/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073590551 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08823501 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065188472 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128364822 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050535014 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073255103 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06368552 seconds)
    (284/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050649877 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063498733 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096268813 seconds)
    (287/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078329487 seconds)
    (288/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064484173 seconds)
    (289/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066179294 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072876646 seconds)
    (291/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051793647 seconds)
    (292/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066178544 seconds)
    (293/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052598946 seconds)
    (294/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.194863222 seconds)
    (295/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051538039 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071045517 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066241926 seconds)
    (298/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050756507 seconds)
    (299/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178386973 seconds)
    (300/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052048485 seconds)
    (301/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068183653 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08826299 seconds)
    (303/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060653948 seconds)
    (304/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063209123 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071043895 seconds)
    (306/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051690793 seconds)
    (307/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.052743967 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065092893 seconds)
    (309/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051968766 seconds)
  done (took 31.328659463 seconds)
done (took 32.718112795 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088321559 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095848969 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074883232 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09401926 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081723977 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076055759 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072859004 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078693146 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080379834 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082084637 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078329682 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054331209 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074728905 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074788651 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074948761 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091788632 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078744097 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072831762 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073295071 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06469847 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072773897 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065611208 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067454835 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053638409 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078791189 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071848447 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072100635 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073999724 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066056524 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065421891 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069026946 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073567808 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064997989 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078212059 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072167654 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073001032 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074569662 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076741434 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067099097 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065789146 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074826915 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065564857 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072985035 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073987922 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071905847 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071561822 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073773523 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078179908 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091584112 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067696519 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075132921 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076053406 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075842591 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07318598 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069444994 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.0727957 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07095408 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091243175 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073216658 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067611188 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073932389 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07410936 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07130866 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.0723973 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072466615 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075439087 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075247391 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070997921 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074417589 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071480976 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064935116 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072659941 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06893366 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06491219 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075381772 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077475893 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063893395 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071400757 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072373561 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071059165 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064733064 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066957936 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066676019 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071648934 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067294069 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05375645 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069290844 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071981853 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064251528 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072803576 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072003102 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072595106 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.0666429 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075370382 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06452464 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070717448 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065252955 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065339455 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066922382 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069298456 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064875281 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067175697 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074341974 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066552466 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071348078 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07855053 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064732724 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071875941 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063979175 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064757252 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079174518 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075315317 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064908916 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067191982 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064039337 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072071751 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064001577 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065231592 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064513217 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064621325 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071334962 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064641306 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067067123 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072180669 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077397798 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.0639659 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067399003 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065796764 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063799899 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069876602 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064102971 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064515393 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067344183 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063133635 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06812 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065706841 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074331183 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067672681 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071735185 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065562234 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071903752 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.06904246 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070397187 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069530158 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063094938 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.05813846 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066021789 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066123262 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065682034 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063849672 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065512848 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063864021 seconds)
done (took 12.273262247 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.074314267 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14551227 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101284866 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096770849 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086413143 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067060063 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076582239 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102265456 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067915177 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102551623 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088464884 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084913937 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112268906 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064806558 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066277522 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069700034 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067032414 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081480875 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101193644 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08675005 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116384091 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065020397 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094337542 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08980539 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087486142 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101819967 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069447026 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069970691 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069419945 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090742882 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086892462 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069514039 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06642879 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097198265 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092468935 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083507338 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066040634 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08231613 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06621315 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065221107 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067145837 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097979073 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079455315 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080033287 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070125775 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069106681 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067076071 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083660066 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088493333 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078327369 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086391005 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102901355 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068544128 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065477635 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064104997 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08539416 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065219819 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068518109 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06583057 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068479456 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066224441 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069213768 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080957838 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081539219 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069967369 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079728978 seconds)
  done (took 6.789641826 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087167051 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094229827 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086769457 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087348832 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067749085 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068454754 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066720383 seconds)
  done (took 2.041573336 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06959768 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092496639 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090798057 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08927485 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085228035 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087996466 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075692349 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066455286 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080743817 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067822451 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087780878 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102312939 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067232971 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072749621 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091270402 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066446487 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090863209 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066683636 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069730305 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090806185 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068230814 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082219479 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07002882 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066520581 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080671318 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067238827 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114142452 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070481291 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067934681 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069216349 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063728666 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107771737 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079586961 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075427599 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066241271 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080809659 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08044114 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064238751 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082929252 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071182627 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080011415 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066396888 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.0677215 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064089204 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070653278 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07627341 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067687537 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06678773 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068845632 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086439095 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066936334 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079953529 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06998547 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068614315 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.0677041 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070239195 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076636587 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067317041 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086768058 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067581859 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083122804 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082599392 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080176453 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082423393 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068860157 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080024847 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080465647 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068604853 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068140124 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069632396 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082594301 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06459709 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067485002 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076671354 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067973299 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089531973 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089263192 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06778607 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075599868 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066575332 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066279175 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066395608 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089362618 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068391848 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06602784 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070503017 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06947818 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064627982 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065257396 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070032125 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064204161 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067613783 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069592087 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070001448 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069209 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082982774 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068839246 seconds)
  done (took 8.750061284 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071115163 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07089195 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070989129 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067572206 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068236859 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06835275 seconds)
  done (took 1.923035174 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097402132 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070539648 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080360357 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072578849 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105252509 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087074828 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086972792 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07846531 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083569494 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078517945 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086940111 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088399804 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093144122 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072830765 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086561019 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071731569 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08787678 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07564928 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078903973 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072916206 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08667402 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072695122 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073245399 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081853339 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075758645 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071978727 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067158359 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079295242 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078495098 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078231823 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072705405 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075671161 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070184406 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078333557 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087045759 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070698838 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071572149 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077105314 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07204335 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075490911 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088380008 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072669032 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074350607 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077042553 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077504597 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070220077 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077211072 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075207249 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086257323 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076964183 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076694003 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071158365 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075300938 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077125488 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070058674 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077750271 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077123993 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087010969 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072196394 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070307081 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068927243 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075560398 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077812732 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075095293 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078436078 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077151905 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070477711 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072396342 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073089945 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071826511 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076833517 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069168447 seconds)
  done (took 7.070750302 seconds)
done (took 28.07886131 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540124741 seconds)
  done (took 2.008498781 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.617005483 seconds)
  done (took 2.111355756 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.573798594 seconds)
  done (took 8.06989893 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.411426346 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.502422806 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.722379765 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132379421 seconds)
  done (took 3.304474518 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.702410181 seconds)
  done (took 2.207996871 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.220897779 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.207629203 seconds)
  done (took 1.940476194 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378936008 seconds)
  done (took 1.875957203 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.138979555 seconds)
  done (took 2.638273662 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.264360347 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175244842 seconds)
  done (took 1.942435936 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.482896829 seconds)
  done (took 1.984108755 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.848548162 seconds)
  done (took 6.351294921 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.220863369 seconds)
  done (took 1.760467598 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243062262 seconds)
  done (took 1.744094598 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.71742407 seconds)
  done (took 3.220795169 seconds)
done (took 42.662198306 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084015636 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084554776 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080987102 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079307409 seconds)
  done (took 1.81454127 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081367611 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075480433 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.079390727 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074985898 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077623864 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073146041 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074954863 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076832653 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073083747 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073359882 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072993662 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072602368 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075134173 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074759476 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071285521 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075248253 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076345813 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07299482 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076050838 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072866592 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070519057 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075220526 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075494616 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071624925 seconds)
  done (took 3.296159092 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081764661 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07522936 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075650523 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072269531 seconds)
  done (took 1.817207464 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081919719 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.099091535 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091261156 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078623274 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09265412 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087195761 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069301044 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069118697 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070686387 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077808681 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068183603 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097161055 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088583867 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077888436 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080137349 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066042696 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.0685766 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087496789 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078420013 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078737512 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070473534 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077949565 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068350648 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089420053 seconds)
  done (took 3.420002247 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081539765 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.108126496 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078837283 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089686296 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091732722 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065578602 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074635546 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090757261 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126817096 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065588084 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07098105 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065704899 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073863015 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06474539 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07659836 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10798341 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111057409 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068563631 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097587837 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065091956 seconds)
  done (took 3.191528077 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076016518 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071429622 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065867496 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069268255 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077955334 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072660083 seconds)
  done (took 1.950278554 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071328959 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070094031 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068684553 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066652732 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071661044 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06717549 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065931119 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067599561 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067214508 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066884085 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066465431 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065779271 seconds)
  done (took 2.32839389 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.207071545 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068244759 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069281509 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066024902 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070883506 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06635319 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080830043 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067752142 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091324526 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066537784 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067756373 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071353837 seconds)
  done (took 2.507011369 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214919645 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077276369 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241091809 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141050623 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112666537 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116483824 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104553957 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114686657 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143665313 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10182925 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169784425 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169286356 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10899818 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138763852 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089042914 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100977888 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156517827 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164015463 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106003065 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16827462 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146954427 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126222681 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14914541 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102113808 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112237079 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123455762 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071474307 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080086942 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172625506 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134476017 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146359546 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11212469 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093712539 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178433304 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174617832 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142968894 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137422495 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084694182 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105018013 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135695772 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203311633 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091589501 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166322607 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109145691 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221962107 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141224796 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12507895 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.12343583 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107613753 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090607393 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147815042 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18700604 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139828655 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088694126 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115655823 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116207446 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116666353 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104603367 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184691362 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16652271 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129639384 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072349262 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101492372 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155965276 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135309419 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109956214 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126697114 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094326324 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137804969 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15775727 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121232398 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148223588 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.131191968 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089412462 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12068448 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141580985 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129630095 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162799639 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125549696 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072870118 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125740691 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103620606 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080883326 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147364086 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078003558 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182794503 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099168462 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110939891 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117738864 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109892307 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109611189 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160991364 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145712427 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102768239 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064909086 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250531101 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.126508884 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151312982 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088651302 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110442393 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119887579 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078836681 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140177685 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074994692 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125145327 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077688903 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130080226 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131333574 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077829533 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124306356 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105570986 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102175005 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133680172 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163948927 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089198209 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082012325 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172138974 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123279799 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104809083 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146643039 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158812868 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103081331 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102648584 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151558889 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181485484 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090014199 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165373477 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107870762 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08413308 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087996565 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126007399 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112724016 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124841858 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081967286 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119567388 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170491733 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075090063 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096396039 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135369223 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079370994 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081285174 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106253334 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10572341 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096103504 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100261951 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103805736 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138035556 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124277181 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105717865 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124523896 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098116845 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32262396 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092241504 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106340711 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109037945 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07123798 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139761152 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160711275 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079385219 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165748478 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124028586 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10742458 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121050419 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084838251 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141319154 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080061254 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070264287 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14792119 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111461223 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111269569 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153347406 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106669936 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129263288 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121034006 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136052191 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133170726 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.132764517 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105625243 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089346366 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112951922 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127389409 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073518638 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091923884 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080887273 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104721586 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097137375 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083420335 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143374961 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124971246 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102004257 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113194225 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096834855 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149684228 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076781595 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129920333 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120410252 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096331174 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.155482678 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154072581 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132261818 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099324184 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137643745 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069901708 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073515389 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088821464 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123409563 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082428556 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083256388 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.266060941 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152944478 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132417794 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140185822 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114370223 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121571787 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159131441 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070786967 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118873504 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151168685 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123028132 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104912605 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09120969 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099620614 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144694324 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109196894 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185327291 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118990637 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126872903 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154962463 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101441275 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080813991 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103543693 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138350452 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10588018 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145885053 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100100372 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089034638 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111088541 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075242689 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100044632 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128569449 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121246717 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136947973 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116668238 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134179204 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078162138 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117635336 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122321307 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123967634 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064249603 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121531339 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163442909 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094744892 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119077182 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154241144 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078825768 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.126690672 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176540379 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144932158 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.231127206 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114145103 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123480754 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131456282 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121850462 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141978251 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109190901 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13943753 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111685028 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087564257 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08935345 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098538898 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106544186 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.0955198 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108747077 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115799186 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096504566 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133930818 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106035655 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111037156 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11980439 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099580176 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091732639 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098218545 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179749255 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120616412 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173755767 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101324897 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147532093 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165875874 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075530895 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079948766 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079224805 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140660002 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084735827 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131868328 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.099935908 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107810285 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125614732 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14459051 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096456457 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068825236 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110033795 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135454789 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114567903 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099019217 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105393121 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165768384 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101800038 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079222831 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114310802 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106062203 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103188824 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17321199 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061350272 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098035549 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076318187 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080154215 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128006839 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.300964385 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083548723 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104016343 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121318889 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114291136 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130213947 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102177872 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100792677 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118339009 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152704694 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129811632 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090624489 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112791465 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148746262 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159839427 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106584807 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096814315 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177192009 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156311569 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162025664 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089386181 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118452031 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115694456 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111327879 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140298153 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083857559 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16598989 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082470757 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137871092 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104597529 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090039782 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131271643 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.100767839 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088881544 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149981975 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118705563 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083391975 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078002275 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119278693 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121491945 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107702106 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07554999 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140490878 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073638657 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133814362 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16193598 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080785612 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108561151 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096393951 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079439501 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107319552 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102260118 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087370505 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.239033449 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181005447 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089908233 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152914332 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135812796 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113400168 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138106987 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104138962 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642707631 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078665795 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155097614 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11895528 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175300542 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100906522 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119655748 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111629868 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12544819 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147351518 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105827833 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.183150619 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133237829 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118270981 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079603737 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103744095 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10547774 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089430621 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109348775 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114787206 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117717771 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094553056 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117438719 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125997811 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082070284 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096715771 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158983293 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118176588 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144896488 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14212781 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086041224 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119815399 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139349281 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080620723 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.123449117 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153238012 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106321125 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099303597 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081270686 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102016053 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159551785 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07312305 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160775295 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269234192 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115867372 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119938404 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.118923412 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137687118 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111315697 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122665345 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094198921 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111699385 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114384309 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082483692 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078015225 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106084216 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113648029 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099622125 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099751612 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099768449 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154635472 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072571432 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100248589 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106287751 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145907033 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176809692 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.08937435 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083169503 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120972047 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114313885 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114927189 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122656412 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079416617 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082657077 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081891671 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078011799 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110362537 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11403601 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10504975 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111849415 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165257492 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083863676 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.234484395 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096475086 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106016983 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070006183 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078580415 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096951391 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099534928 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108600913 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102193694 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161796381 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096122326 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090342934 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093082761 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074208481 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083837623 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13007419 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109812122 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118736321 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098308511 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061598485 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107998695 seconds)
  done (took 59.481099281 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113331803 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084333777 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096972373 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145024712 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12428719 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203681033 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153642204 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189561325 seconds)
  done (took 2.751979748 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071244569 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09724659 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103876181 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085095479 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067458433 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068911994 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234147258 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082352904 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06718187 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090079158 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079216766 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069183479 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.429703382 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066316439 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067767542 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062048073 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067621971 seconds)
  done (took 3.417801293 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.391859182 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.612242099 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.383885319 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073569306 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.457893492 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092264522 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.137171971 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.13359142 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07315579 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.524608726 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701632824 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127818886 seconds)
  done (took 18.329349836 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080409051 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07284889 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.086118105 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085178777 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072131321 seconds)
  done (took 2.01140942 seconds)
done (took 107.877000679 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084249305 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.383797442 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053259177 seconds)
  done (took 2.084501115 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087253363 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088536467 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086968819 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083833951 seconds)
  done (took 1.971707373 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078076691 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07952317 seconds)
  done (took 1.779279832 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.238068983 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169364736 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088354309 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086788196 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082505426 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081558133 seconds)
  done (took 1.87270612 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075709189 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079189856 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074312672 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076846899 seconds)
  done (took 1.922956422 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080317017 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.0543296 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055669136 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057788414 seconds)
  done (took 1.865366637 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091189244 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083229998 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080278321 seconds)
  done (took 1.872229032 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106830106 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087710106 seconds)
  done (took 1.81095958 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08639291 seconds)
  done (took 1.704892825 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102966555 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.108953397 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133346879 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112122796 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141782526 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110134351 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085233197 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086637994 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07729533 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087650674 seconds)
  done (took 2.665580933 seconds)
done (took 21.74355827 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08326257 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.370710493 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360830984 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091202866 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667682536 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356764195 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.00138494 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093006723 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115721082 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067652151 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085004009 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649129576 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.991785933 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325436062 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.97734266 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.413960432 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.659273621 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068472762 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067908812 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06770199 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.985469715 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067679362 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067784548 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068328764 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.660673931 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372987031 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067796864 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.419074245 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067931904 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069386669 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355100078 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067991908 seconds)
  done (took 16.386062736 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074341187 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126730749 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077384881 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08766776 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071109139 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069729665 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072073876 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069119598 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122480084 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067983724 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085401974 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067749233 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071937706 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068804365 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087933787 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068057408 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068874799 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06860642 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068323951 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068846033 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087450009 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067632141 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068146938 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068336995 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0681866 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08048294 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068485605 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068310852 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068494499 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069927174 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070956136 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068494583 seconds)
  done (took 4.047785666 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122363196 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.130547701 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074613936 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10550553 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114165302 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070276427 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147527721 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093195167 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130822304 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067736113 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085272326 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.0679175 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102539618 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069471903 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089271438 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068592281 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069561917 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068663635 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068601112 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068752884 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088132606 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068307543 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069147668 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069549836 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069125839 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082287849 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068917854 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069407138 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068599243 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070377881 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072039834 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069268878 seconds)
  done (took 4.312661259 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076090047 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079255111 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08628833 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088871369 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073041793 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074955546 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075675904 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071524257 seconds)
  done (took 2.260901238 seconds)
done (took 28.633401374 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082983573 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071705753 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075983368 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086297985 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076232386 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080157581 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06730567 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075847019 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072423149 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07335995 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07489969 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067373621 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071683496 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067290353 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074148954 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067872626 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079671018 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072046625 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078973679 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079477084 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070183281 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073564634 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075705049 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079505061 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079878634 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079528131 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077883366 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07321694 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069235618 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07101747 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077583409 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084671443 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.06898997 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079654749 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068008024 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068291899 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072130124 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067810751 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080052007 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077601503 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070022511 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077481935 seconds)
  done (took 4.745509297 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092472761 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.0943296 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085410776 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062451814 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06665084 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066084974 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089622257 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06010507 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.05985197 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088558531 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055333129 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060165717 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063726341 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053400451 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062878838 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056447826 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062316645 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055291285 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060632271 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.05958464 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089144469 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053449239 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077740964 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063573438 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056208857 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061624857 seconds)
  done (took 3.39773611 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078281284 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.090386912 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09124674 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131100031 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105465577 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079769765 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080832769 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096810512 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089488699 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067327781 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071572426 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093207411 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09200294 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074682284 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06770853 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087699178 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085197051 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069548521 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073968308 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097415722 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08776352 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087025151 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099539773 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08396136 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067113165 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070573835 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071712716 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082413388 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072742814 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077587666 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072088041 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072103136 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070193287 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.091308867 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07198564 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070070154 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093398931 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078764886 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079998331 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068859197 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071653414 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06877303 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093659219 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133831597 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067523005 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075108278 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076034286 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077544799 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067742644 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087989735 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078915199 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06770058 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070778347 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067270756 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068237269 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081479829 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070614222 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070238668 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076949659 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07040048 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092246331 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071983151 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083764494 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067148954 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075528165 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066608748 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068045406 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06594845 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096194455 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069499943 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112044478 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068328246 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068302269 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076732814 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075554636 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073578787 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068115243 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083271629 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077574199 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070884924 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076115866 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07077184 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070489783 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091113197 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070090538 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068889663 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068318382 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073208072 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069804696 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068770152 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080963537 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.0668628 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070306037 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085109893 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066807794 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068700979 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073261936 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072199396 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066968137 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078390594 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072084051 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067879369 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077266475 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067546173 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070113815 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080529443 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073865214 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066641096 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072189342 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073777413 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068403713 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069017807 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070391096 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069381004 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076679476 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073865026 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071378777 seconds)
  done (took 10.692651639 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168690757 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158218208 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070586186 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150399168 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076842392 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079346693 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151707082 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095263952 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068402286 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069005201 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069038848 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111479533 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107403561 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11997078 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079209935 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067652413 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084734022 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115177177 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153503377 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147835019 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085103471 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077166981 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.06985377 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068884401 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070751238 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078659963 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085983674 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077655708 seconds)
  done (took 4.428639746 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084203139 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104352333 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077335067 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093480796 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.093631241 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069036872 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070411896 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069668529 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081487935 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078871148 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067693661 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073566355 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074619665 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071235153 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06924101 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075191908 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076256744 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069984576 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071976697 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073648248 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078143468 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093304827 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071846465 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067721966 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072978096 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067453576 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063690573 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085081704 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068192958 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095034332 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065995603 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076095438 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082768461 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068584828 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067769128 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067443494 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067454065 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068258851 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069310398 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066526356 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066244405 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057061237 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06673596 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079367448 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074298716 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055970136 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072716318 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073291737 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073007131 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065054191 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070925774 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070095024 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070909227 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075705341 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073098215 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07355245 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068794984 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074177708 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076477686 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067440564 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064572635 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066470114 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072463859 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065635437 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076321382 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072453315 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066349365 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067349448 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069807974 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074412955 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067617041 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070772802 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065321628 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069784563 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072050204 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069182538 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068918458 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06601505 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067300159 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068507334 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054862667 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067643531 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053330788 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071193944 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066132302 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066634041 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067726077 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073040018 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080103199 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068664272 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073328089 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06866663 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066688342 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070878711 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059856856 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07032686 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083265853 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082842943 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067683135 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065383692 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082649766 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072427629 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066834576 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055716868 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075298939 seconds)
  done (took 9.191990052 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094959466 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072676021 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086591962 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094736216 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088016564 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075904589 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078226634 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069664299 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083507999 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074152889 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077091602 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068184597 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078672869 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077945356 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070590189 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078152074 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072516443 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085830561 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08339543 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068701102 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076284143 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081026626 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091540464 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08293953 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081312993 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082715886 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09108023 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072306955 seconds)
  done (took 3.917636207 seconds)
done (took 38.003210321 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.714108919 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.886949203 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.717388526 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.087619916 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.842892602 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.804704588 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.806969873 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.714481254 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.851059958 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.749053446 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.925098839 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.827705256 seconds)
done (took 64.576717859 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.758070929 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.85240225 seconds)
    (2/2) benchmarking "String"...
    done (took 1.985039592 seconds)
  done (took 5.487651788 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.983355992 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.270545701 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.965740203 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.7165671 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.71859682 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.056531621 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.524335476 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.256906686 seconds)
  done (took 30.161319059 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.881318156 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.95614688 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.411036625 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.444338051 seconds)
  done (took 15.395911006 seconds)
done (took 62.522289236 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.724525984 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.735300114 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.719234261 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.695026371 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.774626005 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.733239439 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.760742585 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.905049684 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.712206985 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.701279761 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.714909366 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.154296964 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.713888316 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.801219158 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.711223508 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.722235784 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.724902004 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.144864928 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.878945212 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.726426385 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.727189895 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.728522707 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.720476207 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.722545424 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.744672398 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.713542785 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.153061758 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.715527149 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.330821995 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.723375841 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.746665071 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.964537071 seconds)
  done (took 202.391099822 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.716979076 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.835245029 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.871937101 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.760211567 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.037195915 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.897634607 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.838110671 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.227006562 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.721379626 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.73716354 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.80134426 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.713852938 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.84022737 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.666633848 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.745478726 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.812057408 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.997209989 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.860421726 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.745326058 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.894351041 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.718635779 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.732241443 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.691684261 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.791409899 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.748654823 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.808069081 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.880245633 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.736476253 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.914961597 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.944794528 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.737627164 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.722067518 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.937857517 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.592730279 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.725809954 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.73477552 seconds)
  done (took 167.79066764 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.095266116 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.719026271 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.719113577 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.720956023 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.731195053 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.718847281 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.839480969 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.842731098 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.315678778 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.306125902 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.770763382 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.717445259 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.543821965 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.715859777 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.78856241 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.729665566 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.723089192 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.735949974 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.748010553 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.719941973 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.72089902 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.844566457 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.72868249 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.861250123 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.727770963 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.719989936 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.725833399 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.090813977 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.717471768 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.725441771 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.981367635 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.719151377 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.718663654 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.607407563 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.972478462 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.809155004 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.718346167 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.725106433 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.720321875 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.941617397 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.718108502 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.720741404 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.723107834 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.719463181 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.889738659 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.716762206 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.845301299 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.717550607 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.221903518 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.718521653 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.719234673 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.720806282 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.380707858 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.394204162 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.720467621 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.720689172 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.722812202 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.721917747 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.71898808 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.726386252 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.417187238 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.79371031 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.722510426 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.724839866 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.727073155 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.724527394 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.905121711 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.719966296 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.025033053 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.779867227 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.858391844 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.843415196 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.720773596 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.789414187 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.814049161 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.719074099 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.722518205 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.722256442 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.722738093 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.803717597 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.718486701 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.723078718 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.847028764 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.725112694 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.723471847 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.771097151 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.793923569 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.718228016 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.62009382 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.723046202 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.722494952 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.026879791 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.786806593 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.717729808 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.723136859 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.723300174 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.85169531 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.84044624 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.49236947 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.72178235 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.390897516 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.72369706 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.863833565 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.721431093 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.90443658 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.723802276 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.806198149 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.725942812 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.725801528 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.723717177 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.756946268 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.725904104 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.782345549 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.722955442 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.100801636 seconds)
  done (took 396.712857835 seconds)
done (took 770.699834946 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.423992217 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.37668998 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.485071223 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.402268254 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.369665953 seconds)
  done (took 13.71275342 seconds)
done (took 15.369188607 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.810050633 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.813583384 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.74414585 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.811568942 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.743571329 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.815697353 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.794373018 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.746527995 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.781567149 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.750053186 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.783541259 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.750679374 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.737507418 seconds)
  done (took 24.737618023 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.969716106 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.967767793 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.796227753 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.962342945 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.775221395 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.962726829 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.890030331 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.878722093 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.8845772 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.742636371 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.739800211 seconds)
  done (took 22.227830887 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.975122912 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.964939063 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.806511099 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.97013847 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.779266103 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.968073412 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.906796905 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.882705642 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.888324147 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.744069412 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.742147745 seconds)
  done (took 22.287491597 seconds)
done (took 70.910341556 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.73628674 seconds)
  done (took 3.392980785 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.757926414 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.917872042 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.739046432 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.736022679 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.735761348 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.743913867 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.735703376 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.733836573 seconds)
  done (took 15.760235857 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.734649041 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.735937661 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.732717673 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.7355684 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.735108299 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.73670237 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.733168097 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.73625262 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.735225915 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.736406049 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.734494269 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.734217046 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.734298778 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.737024143 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.73750783 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.738955497 seconds)
  done (took 29.427566365 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.736019728 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.734091175 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.735660416 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.733256894 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.732414947 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.733912118 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.736567941 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.735650778 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.734480162 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.733943685 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.736419631 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.735060516 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.733478951 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.737000843 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.735751018 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.735449238 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.737020826 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.738211455 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.74067599 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.735097508 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.736920034 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.736280486 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.736399032 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.737365909 seconds)
  done (took 43.318564548 seconds)
done (took 93.556688792 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.590666768 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.099394689 seconds)
  done (took 8.350545833 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.739551515 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.738209875 seconds)
  done (took 5.176586227 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.740520909 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.738852485 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.739215994 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.738627921 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.738931651 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.7398752 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.740878339 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.73847243 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.740285451 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.738571421 seconds)
  done (took 19.056237908 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.738884931 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.738675008 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.735723457 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.738445583 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.739205094 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.736767962 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.737856084 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.740392224 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.740364534 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.73589928 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.741073443 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.737625457 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.740678989 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.73572203 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.738937535 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.737164233 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.738145632 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.737362418 seconds)
  done (took 32.951102214 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.740023596 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.740861049 seconds)
  done (took 5.145201688 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.736959391 seconds)
    (2/7) benchmarking "second"...
    done (took 1.737984576 seconds)
    (3/7) benchmarking "month"...
    done (took 1.738539509 seconds)
    (4/7) benchmarking "year"...
    done (took 1.736680828 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.738035098 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.736835543 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.737225165 seconds)
  done (took 13.824227332 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.742003783 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.897214292 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.964426201 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.38554821 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.741892318 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.745075214 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.687413046 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.745345978 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.745700654 seconds)
  done (took 19.316297489 seconds)
done (took 105.481479925 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.567568263 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.727826422 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.049735551 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.771931079 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.788255356 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.030885709 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.76036023 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.03436711 seconds)
done (took 42.394489687 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.818618089 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.295246 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.32834028 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.191789848 seconds)
  done (took 12.476141923 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.715244475 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.248816122 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.767420321 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.312919782 seconds)
  done (took 19.730571781 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.104017071 seconds)
    (2/2) benchmarking "read"...
    done (took 2.077421489 seconds)
  done (took 5.849308706 seconds)
done (took 46.539037393 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.740375783 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.740690572 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.740200485 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.737435116 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.741013826 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.739820185 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.739473366 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.741412078 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.740003711 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.736841434 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.74120558 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.742774159 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740286756 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.739423137 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738167879 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.740484458 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.738486309 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.738730791 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.738280677 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.737603769 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.741844673 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.737973644 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.738063325 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.740194789 seconds)
  done (took 43.413151629 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.742377547 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.738728566 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.741872641 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.742050243 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.7387274 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.741565239 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.741885016 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.740142935 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.742353103 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.742368731 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.740080571 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.740801596 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.741581228 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.741083783 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742420832 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.739348836 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.743040554 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741158181 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.742397008 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.741204482 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.743143495 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739238193 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.741211016 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.743127849 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.74191339 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.741562701 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.744296523 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.740708008 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.743393215 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.740158456 seconds)
  done (took 53.908488232 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.747682752 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.753846168 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.743967675 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.742550195 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.745175798 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.743262158 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.744840303 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.742885761 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.744827721 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.744628931 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.744004824 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.744803267 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.743837569 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.745594381 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.744065596 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.744873011 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.744912982 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.744511228 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.744251678 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.743686387 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.745024918 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.746203656 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.744518712 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.744698528 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.743147285 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.744251727 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.745674142 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.745358184 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.744370282 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.74444321 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.744568395 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.744222341 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.746179009 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.745105285 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.747295747 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.746018907 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.750963352 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.753127877 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.746303913 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.74485184 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.747012832 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.745575387 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.743741859 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.746692075 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.74472087 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.746103809 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.746102357 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.745480538 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.747083464 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.74703234 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.747412284 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.745346794 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.748508916 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.746645701 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.74775232 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.746093306 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.747853388 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.746693824 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.747005932 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.747838016 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.746633277 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.747775483 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.747422529 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.747821591 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.748746375 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.747129746 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.745824069 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.746551162 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.746383469 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.747113505 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.748575739 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.745273766 seconds)
  done (took 127.378204843 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.747352156 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.744568012 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.744322888 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.742160172 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.74386423 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.748176163 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.746272048 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.748071987 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745078853 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.747159994 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746418453 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.744275152 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745533904 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.74887131 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.748446006 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.745470973 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.74660635 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.744385263 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.746655626 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.748454479 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.746743768 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.745845577 seconds)
  done (took 40.086119732 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.748274114 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.749624367 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.745525036 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.749623919 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.743096491 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.746603901 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.747674146 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.750170993 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.749514539 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.745296093 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744737592 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747924425 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.746652593 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.744934275 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.746572412 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.748389749 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.747540575 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.747826445 seconds)
  done (took 33.120074051 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.746820739 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.747590626 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.748074053 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.747095706 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.746623763 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.749100089 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.74657814 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.754030535 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.749312731 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.746156273 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.750739543 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750025907 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.74941446 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746347542 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751823322 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.748502471 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.750540008 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748163786 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.751023475 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.746812145 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.74877657 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.749376748 seconds)
  done (took 40.147135165 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.749709973 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.751855886 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.747198089 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.747198115 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.749444632 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.749016727 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.751308507 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.746920066 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.751073221 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.750700205 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.748150772 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.749738972 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.74944304 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.749372075 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.748951631 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.747428541 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.750466196 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.74924376 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.751768696 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.74839124 seconds)
  done (took 36.661628274 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.749666375 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.749381623 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.748164892 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.748237121 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.749379451 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.747728754 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.749792414 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.749944003 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.750891166 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.750211132 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.750783176 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.750493379 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.749779906 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.749719468 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.752007425 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.750207674 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.752556717 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.751528921 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.752414227 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.750956306 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.754322672 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.750309248 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.750827309 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.749174918 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.749407641 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.749336575 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.751889296 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.75046885 seconds)
  done (took 50.683013159 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.75403628 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.754260299 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.750196632 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.749181969 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.752669804 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.749911109 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.74911118 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.750513895 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.751828254 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.750138485 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.753153735 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.752567441 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.752748122 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.752173299 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.752478835 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.752185215 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751678073 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.752196745 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.749357389 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748845134 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.752649737 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.754678597 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.752303232 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.75009122 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752050005 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.751863754 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.751845639 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.752686826 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.754543404 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.752268544 seconds)
  done (took 54.229456009 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.772248955 seconds)
    (2/2) benchmarking "in"...
    done (took 1.771910927 seconds)
  done (took 5.21955094 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.751798191 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.754484565 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.755117501 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.752080995 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.751921901 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.753431777 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.753823335 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.751584176 seconds)
  done (took 15.700642773 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.751897552 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.756216201 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.755607214 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.754507596 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.753273584 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.75308567 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.758313515 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.754241103 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.754072961 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.75310644 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.760274835 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.763814456 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.757210905 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.755454436 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.757661897 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.757047027 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.757143704 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.754935921 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.75598067 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.755504269 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.753287416 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.753400189 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.755259195 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.751045509 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.755445314 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.765463631 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.756649172 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.755899328 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.75434084 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.755669247 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.753376762 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.756403215 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.755364401 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.756355409 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.758311921 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.757673297 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.763688641 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.754629755 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.761087038 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.753682823 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.755386918 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.753269395 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.755091197 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.757209033 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.757054237 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.75616692 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.756148918 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.756054412 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.753597394 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.758921395 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.766114754 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.754742735 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.753485391 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.758690461 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.757179294 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.760569436 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.754318277 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.758411851 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.767826276 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.765299971 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.767296459 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.765033831 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.756234182 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.754763454 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.768214364 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.783661174 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.762162227 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.755134773 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.757052353 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.758096807 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.7626652 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.768510762 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.770065192 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.758459848 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.758044019 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.758354361 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.75562422 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.757993089 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.761487651 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.758698497 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.757069114 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.755529577 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.767414258 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.7848665 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.756603681 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.758082857 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.757216962 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.758016415 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.756620249 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.768975946 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.758355206 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.758355279 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.757462819 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.756608441 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.759222817 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.757684943 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.756957678 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.759129289 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.757226139 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.761830768 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.755945504 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.76197093 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.770395937 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.759050352 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.757628626 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.764318917 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.758784565 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.758036872 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.765491296 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.761082363 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.758716956 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.758726913 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.766237107 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.75832117 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.761348785 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.768394779 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.760133413 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.759426508 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.759076477 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.759990625 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.769148033 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.786900176 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.761256883 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.763001939 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.764466129 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.772982015 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.761515624 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.76249869 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.75988133 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.759102579 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.758768847 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.760820873 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.761355751 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.760043771 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.758428604 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.759495301 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.760921914 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.762364004 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.75764192 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.759678724 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.759709379 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.762634592 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.762117505 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.762426046 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.760961997 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.759282541 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.765134521 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.763226314 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.759541368 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.760832701 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.760668865 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.762815073 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.760537245 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.759660344 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.761625222 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.759477244 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.761913194 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.760683364 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.762288907 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.764074944 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.763938827 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.762604562 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.767616117 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.761120036 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.766550184 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.761785084 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.760758061 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.763815593 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.764852005 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.760984832 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.765089578 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.761209613 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.767793458 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.770857525 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.763946668 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.761195581 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.765398744 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.76320559 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.762152629 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.764854149 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.767414608 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.773047583 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.762253477 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.768378079 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.76070855 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.763279289 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.763503001 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.763866629 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.762775547 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.762286166 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.766633046 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.77367671 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.776800904 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.770996487 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.76656423 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.768843071 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.764614823 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.767598355 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.765412848 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.763928367 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.765650676 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.763034773 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.764620785 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.766711107 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.76390906 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.762642367 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.763244963 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.766291338 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.765636359 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.763435064 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.765843711 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.764425084 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.764691401 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.763125891 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.767799501 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.765355063 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.764731456 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.764038232 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.764057158 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.7625713 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.766006902 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.764604604 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.770525913 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.763355038 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.766612799 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.764763651 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.765120995 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.766277412 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.766924233 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.765878536 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.763990371 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.770449214 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.764175806 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.766190225 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.769810508 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.764173809 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.76379307 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.767228476 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.767321955 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.765901273 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.769489288 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.777525329 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.766048013 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.76432166 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.766692297 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.76535651 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.766729344 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.772418244 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.765394419 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.765837918 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.767148076 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.767076131 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.766134232 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.765526655 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.76683356 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.767324122 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.768246311 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.767998913 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.767549907 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.765944182 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.768629183 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.766693362 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.765124945 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.770303966 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.775151736 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.771099842 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.76784849 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.766253134 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.767499503 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.773958217 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.766666742 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.769469203 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.767383934 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.780852643 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.776441282 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.771659624 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.76882949 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.770133021 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.771722481 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.77170038 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.770448002 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.769369609 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.768272419 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.768611918 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.767707476 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.766590902 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.771004652 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.771316841 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.768979259 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.769161356 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.77579377 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.771222329 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.768154557 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.767450791 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.76889347 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.771231387 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.768873328 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.771899216 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.770188353 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.769403779 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.768380311 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.767121366 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.773821524 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.769815781 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.769586931 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.76788874 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.768402574 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.767723575 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.768732716 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.768710684 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.774113074 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.77814434 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.773632767 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.78132921 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.770495174 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.779680191 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.769433809 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.772163676 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.777248194 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.768618668 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.769747673 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.769503106 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.768820964 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.776761284 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.769223975 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.769152026 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.776166714 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.770615581 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.77080528 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.772041375 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.769962059 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.771943694 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.76874741 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.776184793 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.772555013 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.776707452 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.773348547 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.769980521 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.769892759 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.773245998 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.768765157 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.775211868 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.772072553 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.772216278 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.76923405 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.772398621 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.772355703 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.772478083 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.7741575 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.769463374 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.772868518 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.777032497 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.772703625 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.777906931 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.773611378 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.777782992 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.771823899 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.776731396 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.771675937 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.771807997 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.770038421 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.773642054 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.772777803 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.77183916 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.772465282 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.772969724 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.772293135 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.778000378 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.772184655 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.774644169 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.772935907 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.773414087 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.772245203 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.781966744 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.801003219 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.773257579 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.780589983 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.770835218 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.773649894 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.777397534 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.774157101 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.773142094 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.776787397 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.785926645 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.784543681 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.776227866 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.772241922 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.772982912 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.772613195 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.777468622 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.774971159 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.773104589 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.777378127 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.773338102 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.775098503 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.778727685 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.777544542 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.775050646 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.774816403 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.776044955 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.78556815 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.772929981 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.772655672 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.773142824 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.775487168 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.777010882 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.775310756 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.773931595 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.775632267 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.777372327 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.77612516 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.782036641 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.782496348 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.778036218 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.772665498 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.774699247 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.775578025 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.776054034 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.77321608 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.774745566 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.772926502 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.778022048 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.776234347 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.774942264 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.775266859 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.775644011 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.776208924 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.778792495 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.778989719 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.785661356 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.776003767 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.773150937 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.779528919 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.776572836 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.774493923 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.777055815 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.783694495 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.782357084 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.789067254 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.786060579 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.782923826 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.776931533 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.780139216 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.785004498 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.775290896 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.778710278 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.776410143 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.776972003 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.776737298 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.782305868 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.777730569 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.782897712 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.775116654 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.778152239 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.785355699 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.777861588 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.776807329 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.780139415 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.781682471 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.779345652 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.776330199 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.778781459 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.776820824 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.784250634 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.778114493 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.776568235 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.77908693 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.774279948 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.780178106 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.780787454 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.779084666 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.779798575 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.776461092 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.778083743 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.778685784 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.781065242 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.778306192 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.778444354 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.779240598 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.780696439 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.787171978 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.776483632 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.779340174 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.778313874 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.778764132 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.777034846 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.780455598 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.777223087 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.777329052 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.781430488 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.77887109 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.77985264 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.781283801 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.779207583 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.779441156 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.783193925 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.779583592 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.783197602 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.790951983 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.78992831 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.776495322 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.778219668 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.781516078 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.780510033 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.779050929 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.778976907 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.781653821 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.779543235 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.782036233 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.779227685 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.783634894 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.78295788 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.796381305 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.782739829 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.778786752 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.782772941 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.78524461 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.781217348 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.778205179 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.781034106 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.785163094 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.784018054 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.790355413 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.78216681 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.787792372 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.779948892 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.780765425 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.784135327 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.782261952 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.791290504 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.78083708 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.778754945 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.779808505 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.786336782 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.801400754 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.78345079 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.794747687 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.815534507 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.777676916 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.782023823 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.780198519 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.782354204 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.78218763 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.781533711 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.781279383 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.783931207 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.786311116 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.782061422 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.783121488 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.789307156 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.784523251 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.783934264 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.785924336 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.781187133 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.782444769 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.781322268 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.783347472 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.784167148 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.783664436 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.781342648 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.783845041 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.783526886 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.797391856 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.796317495 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.785669909 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.78088209 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.779897638 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.786107225 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.786218064 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.796660972 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.793462171 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.781102668 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.782644685 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.786627391 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.784239216 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.783657543 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.784127983 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.784254618 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.784331455 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.782833346 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.795366858 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.794425528 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.788880222 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.782627947 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.785086081 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.784451504 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.785040221 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.78268846 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.784132429 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.785249252 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.785037748 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.789470631 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.788193278 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.788137621 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.78894383 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.795292589 seconds)
  done (took 1057.223492592 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.785245326 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782927946 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.785111348 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.785861471 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.784265887 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.782121654 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.785054551 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.784554665 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.78342853 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.785640942 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.783766686 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.784509246 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.786759655 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.783118358 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.785121011 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.783780388 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.784264428 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.786382581 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.784407292 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.785132979 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.783500129 seconds)
  done (took 39.181029253 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.787669807 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.782993768 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.783460994 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.787639727 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.785710344 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.78785957 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.782904634 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789489261 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.785278295 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784219676 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.786376199 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789185075 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.784413999 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.784084611 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786801012 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789235092 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.786873996 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.786769564 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.788561484 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.786499641 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.790054192 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.786515343 seconds)
  done (took 41.012904803 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.786755455 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.788075859 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.788907881 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.786710761 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.789330396 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.78581845 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.787643521 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.78909218 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.788052683 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.789797739 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.787143661 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.788954716 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.79396305 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.796011915 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.789399262 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.789908905 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.933612471 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.788730591 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.786919009 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.786895656 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.784177364 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.79299459 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.789985881 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.787474728 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.787534924 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.785702286 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.79061798 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.796957501 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.783617285 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.788747599 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.789136279 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.787740998 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.78221383 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.788957863 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.786248769 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.788707318 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.794143703 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.783391482 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.786306847 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.787751331 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.793565541 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.811265467 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.78092528 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.790353137 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.791029287 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.786279062 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.787693408 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.796395589 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.785495219 seconds)
  done (took 89.518180184 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.788784834 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.782573633 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.781279937 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.784651125 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.785186493 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.784349838 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.783551049 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.784067988 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.78253986 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.780662062 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.787105868 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.779148188 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.777037129 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.781444957 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.782575276 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.779897975 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.78028025 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.78264501 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.777028256 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.777846311 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.778716142 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.780254347 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.788659888 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.780473287 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.78114133 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.77805518 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.777958259 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.780704001 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.781876861 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.774127639 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.778452721 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.776268055 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.779920626 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.782568221 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.775453798 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.776968023 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.7787327 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.773826102 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.782909001 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.780742836 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.77882552 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.780438412 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.779916591 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.78012682 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.7746935 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.779713845 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.771543901 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.76952492 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.770544365 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.773826619 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.781332933 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.771748546 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.772278299 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.76890961 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.771345433 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.773710873 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.774374069 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.769771508 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.771947463 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.770636012 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.76873821 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.77250649 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.775627214 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.774430772 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.772791297 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.770639643 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.772058143 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.773629904 seconds)
  done (took 122.608978819 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.770341961 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.770616611 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771201305 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.773197865 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.775840715 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.774500977 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.77262497 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.771391516 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.77228531 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.774437602 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.773088447 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.772772688 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.774672057 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.771619605 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.773139781 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.773566399 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.77042725 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.770022928 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.773163888 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772998415 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.775486396 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.774591175 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.774228092 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.770893208 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.773819916 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.771606426 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.772763108 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.773965644 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772693924 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.77252643 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.772237253 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.772884966 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.77584365 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.773942447 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.772085906 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.774717703 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.775992537 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.775566567 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.779854127 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.774107714 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.774233435 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.776442178 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.77638801 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.78161398 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.776963759 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.777645262 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.777231541 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.776299404 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.777977931 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.780539675 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.771738951 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.777576197 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.773856636 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.770131299 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.774311832 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.780336854 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.774113102 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.773004041 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.776679615 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.773767695 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.781877958 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.776184221 seconds)
  done (took 111.705615463 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.773667301 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.773766941 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.773182977 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.772877879 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.77366582 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.772383604 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.77448008 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.774170001 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.775571465 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.78130977 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775320018 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.771355316 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77240552 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776246154 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.774297055 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7727554 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.772698416 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.772294579 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.775504433 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.772160886 seconds)
  done (took 37.176552956 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.771409782 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.774468335 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.77371603 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.772198299 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.775670931 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.779122585 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.772276974 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769610167 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767499163 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771250252 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.785898612 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.769612852 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767945062 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.767164787 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.769687657 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.767139177 seconds)
  done (took 30.053658712 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.766972669 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.767742255 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.767604619 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.767104294 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.765628137 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.77139453 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.769897654 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.764057702 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.765770959 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.769858003 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.774148429 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.766109802 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.768873723 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.765693766 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.763560442 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.767430447 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.769222904 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.762090919 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.766770667 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.763518835 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.765734556 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.764595655 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.772731934 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.766113615 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.762955074 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.763323249 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.762809204 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.764927812 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.762127028 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.765906419 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.763488526 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.763401871 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.763253612 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.767412105 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.763532431 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.763067173 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.766266625 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.765169332 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.766076963 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.772354672 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.765240759 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.762011748 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.765068961 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.765823889 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.764662932 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.764927942 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.762289807 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.762785098 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.762687094 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.762067562 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.767011225 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.763880849 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.765343775 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.76659122 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.766613773 seconds)
  done (took 98.814048931 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.767585884 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.766331282 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.762812509 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.76637241 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.765777874 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.766121138 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.765431262 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.764865018 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.76289183 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.767400777 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.764622632 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.766227764 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.764363728 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.766730037 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.765743155 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.766209377 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.765417538 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.772411886 seconds)
  done (took 33.474763818 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.762744206 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.765940899 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.76577096 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.772013898 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.762449475 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.767161022 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.762102768 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.766296064 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.765797421 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.765765353 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761697317 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.7662502 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764940967 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.766345339 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.763083741 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768620786 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.765305164 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766420181 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.763052094 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.764228309 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.774610571 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.766737847 seconds)
  done (took 40.534395193 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.762495557 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.763798955 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.780414465 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.790038243 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.784601961 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.80192512 seconds)
  done (took 12.371114299 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762502442 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.763812447 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.767085304 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76322538 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765090584 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761884468 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761122252 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768031401 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763546958 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761600746 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76065573 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76245109 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765388208 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765831512 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763248394 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.763607142 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.760660836 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.760006275 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759089737 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765885992 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760947515 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76260598 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760026653 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.759764569 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761523468 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.757744764 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76070596 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.759904635 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758171153 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760837093 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769979309 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.758954991 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765624932 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760830635 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763985756 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.761895871 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.758961596 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760495621 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760217987 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.758991829 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.763267352 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.761506802 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.762627359 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.759865402 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.762042719 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.757110055 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.760280516 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764830504 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.758103483 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76269616 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.762794089 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.758096077 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763049533 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770882986 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762742648 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763515479 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760079434 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76184584 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.762866703 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765466578 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.759507231 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76060869 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758341911 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760462258 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764171948 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758766025 seconds)
  done (took 117.981180961 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760939569 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.759360162 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.761274197 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764976966 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.760291015 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760346185 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.759658308 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758719321 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760687498 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.759781397 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.763714328 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.761025662 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.758869125 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.759875174 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763590785 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.757215387 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.759643926 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75694543 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.758085454 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.761138815 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760899456 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.758468999 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.758622706 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.758623725 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.759152288 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.762487815 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762737432 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761147172 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.757704686 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.757634226 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.758093355 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.761055591 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.758946109 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.759139145 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.760203981 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760468897 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760104036 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764144942 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.762182034 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764299463 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.757458302 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.763144818 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.760202576 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.762873742 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757859377 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760047649 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.757340789 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.75863625 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764561828 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75939407 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.760373821 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.759810319 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758431926 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760922937 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761190925 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.756287931 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758211253 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.758513916 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.758781958 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760190398 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.761099516 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756197414 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.759531621 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757889454 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.758093533 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759973658 seconds)
  done (took 117.843838802 seconds)
done (took 2451.709216642 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.760375949 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.85186504 seconds)
  done (took 15.291783617 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.941113807 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.888543026 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.774840758 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.818602999 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.769525438 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.791579939 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.790521519 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.771168219 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.775518275 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.769880673 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.772414171 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.95882383 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.775432603 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.770895092 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.770016699 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.868560877 seconds)
  done (took 50.862318785 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.780944721 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.776464247 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.787204839 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.778298366 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.773392142 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.794958138 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.809619992 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.778749474 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.834299662 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.789230889 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.907860229 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.788115481 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.774360904 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.83314033 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.790233595 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.788888589 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.871562226 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.847025568 seconds)
  done (took 34.202142808 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.84986884 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.776878282 seconds)
  done (took 10.334627999 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.79608988 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.777741235 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.798617259 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.791138822 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.772299642 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.780208542 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.774645021 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.787881474 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.77643264 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.7797339 seconds)
  done (took 69.534798441 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.778677446 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.775329734 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.772307328 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.772831076 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.764967403 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.765221957 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.772027896 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.767850264 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.460395621 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.807225256 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.779028781 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.78165029 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.773568481 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.776923711 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.776680323 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.798800135 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.907739553 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.775443975 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.774953378 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.781388577 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.774639552 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.82715366 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.790983285 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.77806255 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.804871521 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.459363107 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.782584919 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.781924979 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.900575394 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.775765791 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.772743347 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.774040768 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.778519648 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.171860244 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.072193692 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.776490039 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.781842245 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.781722909 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.776005742 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.881641964 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.773835108 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.782138263 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.747325006 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.052929995 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.896520016 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.820476729 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.165230518 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.781529112 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.775385708 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.81084709 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.779478639 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.776247102 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.789808593 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.291243075 seconds)
  done (took 127.551670027 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.774111562 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.03739398 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.924644745 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.769412964 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062426585 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.980565944 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.768015121 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.819105011 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.772310678 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.0053185 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.986108369 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.879819621 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.772659783 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.771670858 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.767223849 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.767247678 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.936069508 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.847195634 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.772777711 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.771698323 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.80302427 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.019994592 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.90077496 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.774728063 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.79566176 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.984205975 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.899975803 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.881758012 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.279498488 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.771225159 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.839480333 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.77638999 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.776872916 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.768074601 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.931689139 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.870190038 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.861907131 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.774379726 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.772836675 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.76982613 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.448801059 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.968471083 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.874073272 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.920577412 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.025566274 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.979839379 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.562940951 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.772815461 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.515093117 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.938395635 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.009553055 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.012596207 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.901466704 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.775614903 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.042745507 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.773222552 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.773736695 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.009067076 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.011402479 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.881365038 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.775352015 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.773532385 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.771624461 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.021375004 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.777409399 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.86823017 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.777600765 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.770234392 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.87147432 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.88236229 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.001511515 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.987752576 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.808030568 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.068764701 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.242957892 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.026502276 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.84585641 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.009259053 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.777511506 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.771500324 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.860010565 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.622278026 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.977068635 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.024569622 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.033193677 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815497613 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.496775931 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.772491494 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.006352632 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.00348127 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.031409788 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.017347765 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.927042493 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.095194424 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.773450033 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.774381039 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.027204774 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.910527899 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.777543387 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.140488209 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.008721532 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.339347703 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.805489074 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.119741178 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.912939201 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.77703431 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.419405779 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.776480082 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.005351032 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.817244238 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.775693743 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.777731727 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.994897667 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.764643533 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.773902837 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.590645897 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.837274222 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.776903637 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.01303872 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.778311794 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040527214 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.777701334 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.018403371 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.25589645 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.811347984 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.952331261 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.020082665 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.780109161 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.039017408 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.023996419 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.893209705 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.049568281 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.702445263 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.775811149 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.070780973 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.778476556 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.775569268 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.951244548 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.780303284 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.00425606 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.777978922 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.066955292 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.804554447 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.938472597 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.777174612 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.035795825 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.813813133 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.829224046 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.779594005 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.908254013 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.77846344 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.668827124 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.931828027 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.780021072 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.778722502 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.324693078 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.781000189 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.934740469 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.01456283 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.797965055 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.851115564 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.452676228 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.775851726 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.869071821 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.802546108 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.13384795 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.778724938 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.991676615 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.779472288 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.325215197 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.779080845 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.024822722 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.018075247 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.780514176 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.774113725 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.69541273 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.781869674 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.780077551 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.939577944 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.5825665 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.780331924 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.9840581 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.785714816 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.912175228 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.777434948 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.857391277 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.134330613 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.777950762 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.780210753 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.779229102 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.782279191 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.779670713 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.988115863 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.810385222 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.303206557 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.920393156 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.051514844 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.101702249 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.035222316 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.826276189 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.782254117 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.024063853 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.77880968 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.843002144 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.780158697 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.802726594 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.012429621 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.785493355 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.995308517 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.063663041 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.711983178 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.83240971 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.783547974 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.782801769 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.697342817 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.931950964 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.86896163 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.778130393 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.780141471 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.898936977 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.905747703 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.995323549 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.783042084 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.006133052 seconds)
  done (took 883.056551114 seconds)
done (took 1192.513748553 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.780589597 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.779345951 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.769160755 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.781301444 seconds)
  done (took 28.82101661 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.790577721 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.788933723 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.790476164 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.783941401 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.788929246 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.783033645 seconds)
  done (took 12.435233671 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.850102877 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.776666593 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.783099469 seconds)
  done (took 21.118052839 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.857088883 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.195185567 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.900898528 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.227897611 seconds)
  done (took 9.895171893 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.789472188 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.787644879 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.787666676 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.788575238 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.790024048 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.793992034 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.78983845 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.790029415 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.793890356 seconds)
  done (took 17.821856849 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.239675182 seconds)
done (took 96.041462274 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.772217842 seconds)
    (2/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.797091783 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.781273297 seconds)
    (4/309) benchmarking ("map", abs, Float32, false)...
    done (took 3.262980176 seconds)
    (5/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.248490358 seconds)
    (6/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.073392615 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.106990583 seconds)
    (8/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.805787578 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.251513215 seconds)
    (10/309) benchmarking ("sort", Int8, false)...
    done (took 4.852388715 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.785366908 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.767317413 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.968406089 seconds)
    (14/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.073830384 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.918162447 seconds)
    (16/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.873064618 seconds)
    (17/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.815266876 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.828412326 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.787380193 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.8176233 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.870579783 seconds)
    (22/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.293041295 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.147745661 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.427776771 seconds)
    (25/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.804518316 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.073151655 seconds)
    (27/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.949005404 seconds)
    (28/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.820000318 seconds)
    (29/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.789702702 seconds)
    (30/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.406804011 seconds)
    (31/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.948124915 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.475684515 seconds)
    (33/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.868442625 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.904219794 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.996417041 seconds)
    (36/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.707214654 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.898342353 seconds)
    (38/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.78648397 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.786723505 seconds)
    (40/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.337596427 seconds)
    (41/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.586388787 seconds)
    (42/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.880182398 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.969639478 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.028633712 seconds)
    (45/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.3298284 seconds)
    (46/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.904407488 seconds)
    (47/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.040008848 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.968384474 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.031801167 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.90085195 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.788718385 seconds)
    (52/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.914556794 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.049637285 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.816072134 seconds)
    (55/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.790648693 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.917302192 seconds)
    (57/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.086528235 seconds)
    (58/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.800631357 seconds)
    (59/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.81254474 seconds)
    (60/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.140775849 seconds)
    (61/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.770788706 seconds)
    (62/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 3.544991059 seconds)
    (63/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.781252112 seconds)
    (64/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 8.257878395 seconds)
    (65/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.850282769 seconds)
    (66/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.983358672 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.849636574 seconds)
    (68/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.877697886 seconds)
    (69/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.926318009 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.076401254 seconds)
    (71/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.259338445 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.177661772 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.888494904 seconds)
    (74/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.26201089 seconds)
    (75/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.064542558 seconds)
    (76/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.338517552 seconds)
    (77/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.727098579 seconds)
    (78/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.785338959 seconds)
    (79/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.82940566 seconds)
    (80/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.875798118 seconds)
    (81/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.889669753 seconds)
    (82/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.926389057 seconds)
    (83/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.854107596 seconds)
    (84/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.849133876 seconds)
    (85/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.938547121 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.085946533 seconds)
    (87/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.914809153 seconds)
    (88/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.791965333 seconds)
    (89/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.20651618 seconds)
    (90/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.757948392 seconds)
    (91/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.147368959 seconds)
    (92/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.949993974 seconds)
    (93/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.130680983 seconds)
    (94/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.894917139 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.775513809 seconds)
    (96/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.872398907 seconds)
    (97/309) benchmarking ("sort", Int64, false)...
    done (took 5.46554618 seconds)
    (98/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.927004326 seconds)
    (99/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.901052744 seconds)
    (100/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.684146524 seconds)
    (101/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.076767024 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.027836916 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.899847164 seconds)
    (104/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.009679137 seconds)
    (105/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.044961004 seconds)
    (106/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.117958818 seconds)
    (107/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.92012845 seconds)
    (108/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.910689183 seconds)
    (109/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.350215144 seconds)
    (110/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.805241069 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.78953814 seconds)
    (112/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.816326318 seconds)
    (113/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.090736015 seconds)
    (114/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.870853013 seconds)
    (115/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.87466997 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.170405567 seconds)
    (117/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.090041702 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.422861911 seconds)
    (119/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.821137063 seconds)
    (120/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.89122429 seconds)
    (121/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.81171815 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.787655528 seconds)
    (123/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.194243229 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.123939834 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.015601511 seconds)
    (126/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.991319371 seconds)
    (127/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.274346377 seconds)
    (128/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.696909541 seconds)
    (129/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.918790042 seconds)
    (130/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.789228143 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.78697223 seconds)
    (132/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.82114958 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.76755662 seconds)
    (134/309) benchmarking ("sort", BigInt, false)...
    done (took 6.792488318 seconds)
    (135/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.809802541 seconds)
    (136/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.995478578 seconds)
    (137/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.982851228 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.118614626 seconds)
    (139/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.297389038 seconds)
    (140/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.961145258 seconds)
    (141/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.874635376 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.774298423 seconds)
    (143/309) benchmarking ("sort", Bool, false)...
    done (took 2.320797622 seconds)
    (144/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.813931148 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.123438995 seconds)
    (146/309) benchmarking ("sort", Float64, false)...
    done (took 5.561406454 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.057131574 seconds)
    (148/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.777671872 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.005756173 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.08288193 seconds)
    (151/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.099514429 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.042412241 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.89265003 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.168690164 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.708292717 seconds)
    (156/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.163131308 seconds)
    (157/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.009950056 seconds)
    (158/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.898653168 seconds)
    (159/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.806918043 seconds)
    (160/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.775275683 seconds)
    (161/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.918124857 seconds)
    (162/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.251948229 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.116083126 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.808318128 seconds)
    (165/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.97560813 seconds)
    (166/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.778574957 seconds)
    (167/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 8.008754543 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.021558725 seconds)
    (169/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.819737328 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.864197169 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.78962669 seconds)
    (172/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 8.45937054 seconds)
    (173/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.775595721 seconds)
    (174/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.605233889 seconds)
    (175/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.889024822 seconds)
    (176/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.072181373 seconds)
    (177/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.092295695 seconds)
    (178/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.811407869 seconds)
    (179/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.090195008 seconds)
    (180/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.939665494 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.856749961 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.953224402 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.7919353 seconds)
    (184/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 3.362993776 seconds)
    (185/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.824577015 seconds)
    (186/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.356619172 seconds)
    (187/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.949217751 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.26951545 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.068095213 seconds)
    (190/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.873449861 seconds)
    (191/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.473098695 seconds)
    (192/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.803331197 seconds)
    (193/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.872734444 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.502996869 seconds)
    (195/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.925499066 seconds)
    (196/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.085753628 seconds)
    (197/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.874441811 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.223658248 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.830078969 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.869121912 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.998244665 seconds)
    (202/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.288761704 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.781026807 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.855612317 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.472982134 seconds)
    (206/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.049530135 seconds)
    (207/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.863220998 seconds)
    (208/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.291711136 seconds)
    (209/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.227098767 seconds)
    (210/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.889921247 seconds)
    (211/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.119427399 seconds)
    (212/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.814528187 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.855400223 seconds)
    (214/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.864268699 seconds)
    (215/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.866486926 seconds)
    (216/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.948847646 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.180115612 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.587462047 seconds)
    (219/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.882588952 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.596185119 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.429287203 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.004000827 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.796421871 seconds)
    (224/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.63569053 seconds)
    (225/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.801083534 seconds)
    (226/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.45095451 seconds)
    (227/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.719111851 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.874047677 seconds)
    (229/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.961462965 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.733622639 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.884370779 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.17416836 seconds)
    (233/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.155721231 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.840940115 seconds)
    (235/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.896393138 seconds)
    (236/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.05940159 seconds)
    (237/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.89641402 seconds)
    (238/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.92395867 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.874959548 seconds)
    (240/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.720185726 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.844240702 seconds)
    (242/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.823256036 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.955802568 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.676731578 seconds)
    (245/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.820764981 seconds)
    (246/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.882875682 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.082600432 seconds)
    (248/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.776869101 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.794620097 seconds)
    (250/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.927256203 seconds)
    (251/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.910744633 seconds)
    (252/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.712167395 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.970267667 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.263001516 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.17498191 seconds)
    (256/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.799162082 seconds)
    (257/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.983084107 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.136917661 seconds)
    (259/309) benchmarking ("sort", Float32, false)...
    done (took 5.57124435 seconds)
    (260/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.281104844 seconds)
    (261/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.493627614 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.833360842 seconds)
    (263/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.810692005 seconds)
    (264/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.883856705 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.16465165 seconds)
    (266/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.863830097 seconds)
    (267/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.394564199 seconds)
    (268/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.88452595 seconds)
    (269/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.031175734 seconds)
    (270/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.88512177 seconds)
    (271/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.191383426 seconds)
    (272/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.799367788 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.754645731 seconds)
    (274/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.997434532 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.802335303 seconds)
    (276/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.200615872 seconds)
    (277/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.809230594 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.714667589 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.106015676 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.906990245 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.981771559 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.888287803 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.884777759 seconds)
    (284/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.988208021 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.948357348 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.028692483 seconds)
    (287/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.407897418 seconds)
    (288/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.949518896 seconds)
    (289/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.806036925 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.559997858 seconds)
    (291/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.273051324 seconds)
    (292/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.891373843 seconds)
    (293/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.787821807 seconds)
    (294/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.469389909 seconds)
    (295/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.785659985 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.849282608 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.800709696 seconds)
    (298/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.482077953 seconds)
    (299/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.80331087 seconds)
    (300/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.144085253 seconds)
    (301/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.562342917 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.847289865 seconds)
    (303/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.97811117 seconds)
    (304/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.056520046 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.923321908 seconds)
    (306/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.00917665 seconds)
    (307/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.78866944 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.267276928 seconds)
    (309/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.380306877 seconds)
  done (took 991.940203412 seconds)
done (took 993.734113058 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.83462252 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.830495525 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.81372403 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.833835106 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.924136076 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.841840086 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.821181657 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.814680188 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.859679039 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.862674959 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.810953713 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.839987195 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.814652375 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.813473102 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.811906623 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.828125044 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.113470772 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.833666555 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.828118094 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.821638896 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.829348809 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.811778002 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.86175808 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.840367399 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.81683535 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.815922917 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.815264005 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.831621977 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.9271886 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.816948559 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.815982617 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.822792102 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.115052659 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.83027424 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.808570662 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.831141577 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.820597183 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.820330466 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.816847635 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.844953728 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.247067166 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.811484708 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.81553144 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.813185697 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.814069794 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.818523777 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.815638138 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.820198418 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.828727894 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.828182043 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.245358429 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.831735966 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.817532873 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.814826463 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.825309427 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.816082145 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.822257773 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.8334431 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.835790035 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.829296989 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.1056671 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.838486316 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.816694685 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.829780246 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.824433241 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.281758418 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.809735781 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.820856502 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.248070035 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.821320403 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.28478869 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.826610201 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.817994362 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.83100741 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.846002275 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.117123301 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.829352335 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.816060759 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.823860535 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.814205348 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.824195946 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.829388481 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.818953354 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.818156779 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.83046564 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.843236627 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.828872546 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.818655114 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.825956525 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.834834042 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.822646949 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.828867088 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.819600514 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.81358829 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.825492204 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.825607256 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.819096292 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.821823682 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.820343412 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.825818535 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.247457551 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.835829839 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.814493069 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.815868146 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.816555906 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.831847008 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.243325679 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.819616729 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.84175443 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.866311447 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.821337652 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.108400729 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.840503441 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.832481101 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.826726041 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.820925191 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.812291923 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.108222063 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.267728544 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.833530761 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.819551782 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.8166029 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.834367213 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.820444928 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.815895617 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.121762366 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.840090851 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.834812586 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.938989648 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.82921584 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.851328243 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.816766394 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.821876973 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.84687402 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.835929277 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.850028285 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.819802072 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.837083604 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.834458191 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.816739153 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.831019647 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.830533279 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.821697307 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.825644001 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.812801582 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.848949722 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.832450664 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.830681828 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.842829153 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.941755831 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.817669 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.109398555 seconds)
done (took 285.526605351 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.890993408 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.813394839 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.917075262 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.82212176 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.900904594 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.903707872 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.816983039 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.817390174 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.815981536 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.194525426 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.819314667 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.820985771 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.816693434 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.817403181 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.902131416 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.81985856 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.821478054 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.155622662 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.818794854 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.892220318 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.815011 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.816969104 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.822156285 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.193258982 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.81232217 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.812487833 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.889156128 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.82158025 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.159722693 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.816292079 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.815640753 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.158469032 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.912594768 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.841053741 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.83515058 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.827575797 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.904477967 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.827874362 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.9022659 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.903933886 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.920788693 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.86085502 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.814270394 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.819055487 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.824154398 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.820697286 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.819443347 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.851192425 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.813300687 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.820639098 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.159731676 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.833295216 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.830972639 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.820008691 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.821844954 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.843515695 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.820293827 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.824460904 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.914407819 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.82183459 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.885283794 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.199228247 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.196819444 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.824128252 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.820149083 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.821064845 seconds)
  done (took 181.010367066 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.889433672 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.893832729 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.888045313 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.821085244 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.871354188 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.889780914 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.820715127 seconds)
  done (took 14.819562758 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.830133846 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.82416455 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.873498495 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.873326853 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.82111206 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.973473734 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.824960744 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.83392494 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.82304482 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.877996522 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.823208013 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.825279096 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.830373528 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.81697719 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.870711829 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.836070907 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.939871585 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.823729269 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.824822618 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.973666406 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.8227052 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.833248921 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.877270885 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.833691249 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.822814804 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.828650466 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.415529643 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.821830874 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.820905896 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.82535371 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.824140707 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.866259889 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.826891694 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.818148243 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.823013863 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.93844067 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.826076906 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.824123887 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.825290557 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.819374431 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.826284479 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.827190596 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.826352151 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.822921693 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.824916689 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.849563172 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.826008284 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.827906473 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.826830084 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.828356843 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.876458118 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.828281713 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.823433265 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.821895301 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.879486084 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.83383042 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.82583656 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.826556281 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.826662034 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.823346763 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.975499234 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.873611119 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.826436019 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.874181406 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.827768645 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.829771065 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.82643395 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.826563865 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.921790107 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.827295093 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.874288134 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.824376501 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.986072119 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.848605429 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.828082783 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.829697505 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.827148873 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.824916624 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.824173066 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.831981431 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.826290889 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.828656423 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.833452958 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.82612576 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.824410497 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.941425955 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.935000699 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.8258104 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.839279914 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.833661371 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.82806227 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.87807956 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.827922252 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.826338853 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.883202441 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.942270981 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.884475705 seconds)
  done (took 201.506980722 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.831592863 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.83412295 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.828702922 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.845040763 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.828211262 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.82644548 seconds)
  done (took 12.742348751 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.830480923 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.830747839 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.828069965 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.829932428 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.829451498 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.824717592 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.826813636 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.827896704 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.832152091 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.828347791 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.82853799 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.82686999 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.829058869 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.829615151 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.829956588 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.830753156 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.829100374 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.826795405 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.831968304 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.83449183 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.984048968 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.82982269 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.829760132 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.828759117 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.829271883 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.829993147 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.835064783 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.831521045 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.83199961 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.835304002 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.832454655 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.826719627 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.82883062 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.83507731 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.834259507 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.829487002 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.833950756 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.830035151 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.829003532 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.830221325 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.831397376 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.830355746 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.831001299 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.827827044 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.830828147 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.834519559 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.832054349 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.837445062 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.831314774 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.830168342 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.830904032 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.832272206 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.830422681 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.829767292 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.831402169 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.834425085 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.834220205 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.8311685 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.83079798 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.831885289 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.83181955 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.828698691 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.833346378 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.835583868 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.829429144 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.829683199 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.833160883 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.833467302 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.832512298 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.827828338 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.824819719 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.824918027 seconds)
  done (took 134.711781074 seconds)
done (took 546.546959006 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.935023665 seconds)
  done (took 8.681418811 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.938087152 seconds)
  done (took 8.785581824 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.230581816 seconds)
  done (took 9.980622938 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.838016165 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.844382349 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.820528473 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.823749425 seconds)
  done (took 29.08234357 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.880294436 seconds)
  done (took 8.629974964 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.832526849 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.818840898 seconds)
  done (took 15.437366792 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.834694851 seconds)
  done (took 8.583589464 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.927117904 seconds)
  done (took 8.681355211 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.842339952 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.859843092 seconds)
  done (took 15.465296466 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.805428353 seconds)
  done (took 8.555917333 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.435522753 seconds)
  done (took 11.193181649 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.834636189 seconds)
  done (took 8.599381069 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.825950311 seconds)
  done (took 8.578937766 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.853802931 seconds)
  done (took 9.605456204 seconds)
done (took 161.609689562 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.824466143 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.818909423 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.820069564 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.821327344 seconds)
  done (took 29.034450397 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.865562214 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.862970647 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.865536123 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.873319441 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.867189068 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.864598434 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.857412531 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.855955816 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.873723993 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.865822326 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.865900712 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.866685605 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.875483497 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.857023944 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.866599391 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.866237167 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.878346008 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.865311387 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.855074109 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.8698741 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.830938647 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.875493961 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.870554373 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.832207899 seconds)
  done (took 46.479406807 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.02951813 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.901032028 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.988278971 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.882333211 seconds)
  done (took 9.552897171 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.88420818 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.884785757 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.901330649 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.933237522 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.972956331 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.889710692 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.854511399 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.849354109 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.844633922 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.88511769 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.959858055 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.878788043 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.971924766 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.831244067 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.019478568 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.829092978 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.828736319 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.882925646 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.934898875 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.964090593 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.831873761 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.881109274 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.887709612 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.877812266 seconds)
  done (took 47.23281512 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.82963181 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.838563511 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.838001478 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.831532657 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.829602824 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.830949684 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.839071496 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.832584849 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.853392204 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.832299455 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.831680852 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.827824632 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.827076428 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.831605599 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.829326689 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.850657614 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.843813833 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.829736099 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.833156069 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.837822532 seconds)
  done (took 38.448130314 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.823816775 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.678377956 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.162946309 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.0747421 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.819653811 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.816248492 seconds)
  done (took 31.130300956 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.835871144 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.82761156 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.821829013 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.875769747 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.948847017 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.821264527 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.819569649 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.832057897 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.86479374 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.882098254 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.842311345 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.839717668 seconds)
  done (took 23.958055502 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.812786588 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.817052532 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.822195367 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.831257725 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.827947081 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.828324797 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.832068996 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.819303274 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.831359163 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.840153593 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.823757054 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.829078457 seconds)
  done (took 43.65941367 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902301037 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.705433999 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.83913209 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.493853383 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.284523526 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.02806978 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.343277588 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.150879027 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.81644126 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.088437681 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.834109127 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916484468 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.072566086 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81590719 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.835416361 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.304111846 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.106984354 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043145003 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85408256 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.697669963 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862911517 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.255167666 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.64403954 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.869859034 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.030440912 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.945221522 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.078190159 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.772745538 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956183143 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853068897 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829872036 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.819292422 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094095856 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218088814 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919425193 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830189144 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.431467903 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.53168786 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.80428652 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.578154903 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.596578698 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.936074931 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829236291 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818076203 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.756660258 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.217157561 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18816699 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.830849359 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.527349132 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.822853423 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.834091162 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907704427 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.824031433 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.634148575 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.734885132 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.088192634 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.819311463 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818605879 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.385462485 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.932642103 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.245670204 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.790953994 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.021001256 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.590818203 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209983985 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.969375722 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.827076266 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824007705 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.760394374 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.580170846 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875727328 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.960765891 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.836777302 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.472430417 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134216525 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.88943477 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.757286435 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102684407 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.930453237 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.787946453 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048206124 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.77763524 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759449011 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.678664697 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.754062191 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092979539 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852226979 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.444141786 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860319298 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.149473989 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.83064938 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8358462 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824424042 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.045763505 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.699288712 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818448162 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.620087081 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.965840834 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839177497 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.150783583 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750771038 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.815662857 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074777995 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.027634537 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.946027619 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.31987317 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973208008 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851299163 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.831924937 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.639549007 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.860292839 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.087856264 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876478251 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.936721493 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881253805 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.780092196 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12023676 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885568689 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.916191331 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.887852875 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.937844022 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.141779251 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.110055971 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883813258 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.817190634 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.821897483 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.601012828 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.373358123 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.08493361 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.820008833 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.214690598 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.853663223 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.817223176 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.75673598 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.439098322 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.889434861 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.79810322 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.043239117 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.673212389 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.120807015 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.753447042 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.966940503 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.929380701 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.040941229 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.462388347 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.892013648 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.075684465 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.187315819 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.976462529 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857960579 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837223681 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936537595 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839187926 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.139220716 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.102752622 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.820753072 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.820828447 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.657990688 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.812366957 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819009636 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.823825235 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.563275016 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093490761 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.840138979 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.820211176 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.709506257 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.831860839 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883416018 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824078253 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.827632851 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.360707156 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.526943225 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.824766232 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.434954912 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043230019 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827898881 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.60011209 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930653781 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.905010964 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.100167612 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879820908 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.751064942 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.528886506 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.511999464 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821520139 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.755771862 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.81931996 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829927066 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832456599 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.199543718 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.097353772 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863611719 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.597712466 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.859714896 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.831227028 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.824674947 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821551622 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.363419235 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.943448887 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.296862646 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.858112032 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95914872 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.835023943 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.755008527 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.823880236 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82466792 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.820873262 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.778999369 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873339788 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.592686963 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205543313 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.074841572 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.431283308 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.835051618 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.612229796 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.877272935 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.847195143 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.624960033 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.661820484 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.848817393 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837396459 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.837552945 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.603462144 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.527693909 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.469629047 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133682163 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13606747 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262504942 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.199046174 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.11558791 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.1610308 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057039835 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.35272479 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.88289029 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164551601 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768978226 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906165554 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.467785605 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173390537 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837573303 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053244611 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205842295 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.713237069 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.846214774 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.036490655 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865474774 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.635877339 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.77561923 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.02483907 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967545411 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.579551308 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018616155 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.156594397 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.53255371 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.935211062 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.823093954 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.503848419 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909819303 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.537844664 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.18881152 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.269221376 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.750681974 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317398125 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.827161846 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.269778606 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17836674 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.049029611 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.939890316 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759330509 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.838534278 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.837533319 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.824184378 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.81895354 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.675578229 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.075850438 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837840647 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060579951 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.986940502 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116055953 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.72915795 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.83190062 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826369722 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131369399 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.510705344 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985607377 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.164741398 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.337655771 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8263127 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.759282889 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.757885875 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.515744522 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.835703248 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.800282688 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046985393 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.014796508 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.736105876 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.228770889 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059939575 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.080206013 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.841022109 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.102467446 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.101812061 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.526853813 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846482987 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.929194787 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.500690033 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.925911335 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.097127715 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.062531015 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.576721206 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.049440258 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.872576924 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.638032641 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.825044841 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040762418 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.098281903 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.726794854 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053798503 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.551367759 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.830830948 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142308682 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884657519 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.727709667 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.973012919 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.017852089 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83633252 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913977117 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.836469173 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.838990961 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.838385574 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873780522 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.757480497 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.948334842 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.842092449 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917489946 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.945378148 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.350590104 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.831940228 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113066161 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187931769 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.158604989 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.887086304 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.830166103 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829090928 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.765132518 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962787109 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.276973026 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103840146 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.962260459 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.124780461 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851254921 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.499946759 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.091182696 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06459477 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103639323 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.72334392 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831941957 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.866426174 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.096963562 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.844184762 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.040900256 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065230915 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154479935 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301606696 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.965533355 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.190308241 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.102375166 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.200510346 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.829776339 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.419267987 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.833307279 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.514513989 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.869665229 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.732834476 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087108825 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842209846 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218593067 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.852178999 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.030260287 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.348342786 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.61369032 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.118297839 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.821547494 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.895832404 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114328737 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.224949024 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146073291 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904026939 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84632488 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.55109396 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969917326 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.690401959 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.09876669 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.831909738 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044700228 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.542068305 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.8438248 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112814237 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139759118 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.828795984 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.6947676 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837396861 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.842243166 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.056969963 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105712213 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.081987738 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842279297 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.841734921 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.648046029 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110947932 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89255098 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.769200024 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.834066039 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932348136 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.083401631 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855345168 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.351430284 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.546270262 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133146452 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.755978925 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856781833 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.230922864 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.196223464 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160026218 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.373250176 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061940047 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.396622894 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.706771369 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13122338 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.840627276 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.233420919 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136551057 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.838653529 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.348855988 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86852734 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.108779216 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155856836 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.85439736 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.627064673 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.803067527 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060309459 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.393314535 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772647762 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.831364623 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.891449147 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.835232106 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.9652218 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.843336087 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.702999594 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.673693167 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.578105211 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329215574 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.840764311 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.82446495 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.571305601 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.357562518 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860870744 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979287832 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838790991 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.551629044 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.129392194 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.09340783 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.35287261 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.834876215 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.840100238 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836335728 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.765626595 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.032195849 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.214823292 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135972227 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.182369981 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.868556031 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841423539 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.051962753 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04957563 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.7323836 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967861991 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.219193142 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869610907 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.603868605 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.516058392 seconds)
  done (took 1659.859972043 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.863613096 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.860283674 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.897411678 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.880641654 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.911074101 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.928895617 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.94975454 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.939332231 seconds)
  done (took 56.994508688 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.841503704 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.046900342 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.852086783 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.845569896 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.847897981 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.857164759 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.009844729 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.849292966 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.848943847 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.855681354 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.844589332 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.839460208 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.1475465 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.861358202 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.845393079 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.825665971 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.850646619 seconds)
  done (took 73.879842621 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.843892316 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.047607233 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.882101436 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.858603789 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.77912058 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.855763771 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.779859293 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.894037982 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.845158361 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.050312813 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.477810191 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.847477557 seconds)
  done (took 89.933102481 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.854723942 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.851433093 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.853314776 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.851388062 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.853276915 seconds)
  done (took 11.039546187 seconds)
done (took 2162.980221583 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.089542065 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.068506133 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.069924524 seconds)
  done (took 5.910303967 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.99417219 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.039918512 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.159581115 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.166285203 seconds)
  done (took 10.132197148 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.137822836 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.228077258 seconds)
  done (took 6.137211955 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.244360296 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.858446055 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.231664289 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.84363148 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.845366374 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.846903159 seconds)
  done (took 22.312067661 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.850442719 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.854325367 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.852380337 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.856070174 seconds)
  done (took 9.186051363 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.826940418 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.518982775 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.828601791 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.845323284 seconds)
  done (took 20.791292162 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.596489418 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.250282752 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.5927373 seconds)
  done (took 9.210735892 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.303905145 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.728243109 seconds)
  done (took 8.805014758 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.112984805 seconds)
  done (took 3.884732044 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.981146485 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.126174701 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.359166674 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.357453122 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.447006855 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.671009792 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.151727002 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.078389794 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.248633566 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.271787044 seconds)
  done (took 24.467070593 seconds)
done (took 136.032602464 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.225160052 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.093069945 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.048685294 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.23069441 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.065734458 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.04941057 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.059427063 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.216448327 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.684815314 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.681375227 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.188941352 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.066910849 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.994710209 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.087242532 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.001435743 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.212198465 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.10222439 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.232519139 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.882651426 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.079666902 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.066126144 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.816343504 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.03150258 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.826430756 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.099295655 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.000201803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.409529422 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.209935042 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.040733312 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.412145204 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.019119923 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.237857368 seconds)
  done (took 170.149314012 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.576517705 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.844118848 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.843986672 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.844530375 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.313534221 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.84487861 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.845182112 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.844701512 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.989920818 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.967803371 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.846936419 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.310424479 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.845684803 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.84465996 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.845019883 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.846644739 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.100265245 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.608090812 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.851744892 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.852955957 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.860122445 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.250712517 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.860741302 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.284527651 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.142047042 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.866514897 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.825116603 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.862837838 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.850095359 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.80691394 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.854886602 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.844796132 seconds)
  done (took 206.952366065 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.866340373 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.845173315 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.844758668 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.846339672 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.84699868 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.863819988 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.848263537 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.846270718 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.513726488 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.508732388 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.855279641 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.851439815 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.851122283 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.847209733 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.851446894 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.845751266 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.851173941 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.850843409 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.850296294 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.852020018 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.854764117 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.630328317 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.853910625 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.655731943 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.852458049 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.852343685 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.845535317 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.860741231 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.863510442 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.862662627 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.86044033 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.848015796 seconds)
  done (took 219.966861426 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.053929552 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.858841252 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.860355803 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.798704042 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.859566793 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.857412818 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.819989949 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.056636815 seconds)
  done (took 18.967070266 seconds)
done (took 617.820821 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.303087055 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.139024753 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.025864247 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.883446872 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.128985297 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.910075221 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.881321862 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.945183679 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.59454608 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.944297468 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.511600387 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.889471288 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.609368224 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.894624853 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.00135032 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.937131221 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.462354805 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.558513757 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.050039503 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.941158756 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.056211659 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.809668011 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.952328692 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.616410641 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.624598803 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.845518549 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.042364029 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.467406068 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.886547688 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.039986538 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.600978644 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.245032555 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.880931914 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.874952388 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.934376311 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.911451764 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.214248001 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.882757958 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.994808637 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.612378994 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.94930706 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.488690666 seconds)
  done (took 102.321071699 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.845062475 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.849334564 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.847302619 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.84641043 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.850936524 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.849177039 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.846937501 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.847087278 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.847425505 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.848885426 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.846050528 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.849245617 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.846757345 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.848527369 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.84737974 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.84530719 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.84874712 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.847452766 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.847404271 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.848920683 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.845841645 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.846293538 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.86310702 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.847611718 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.848838685 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.849558691 seconds)
  done (took 49.845244673 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.864264852 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.021998238 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.108649716 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.87719325 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.86218387 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.866738071 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.881553416 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.867546287 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.866107696 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.864610929 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.967147297 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.867693237 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.883788459 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.112736637 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.872205163 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.865760156 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.863533176 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.863444473 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.031396846 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.875956372 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.880940894 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.86891369 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.882516202 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.8758523 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.863642011 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.863076312 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.867357053 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.344742607 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.869593684 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.96698066 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.906478059 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.87969822 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.287871259 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.126575012 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.911816005 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.871333628 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.86555919 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.967279184 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.868295916 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.864054092 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.877481768 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.867129832 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.110469745 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.33294041 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.873427833 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.867729862 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.354944446 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.972236619 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.901879719 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.872673738 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.112839056 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.87633871 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.866648831 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.863917838 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.899267078 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.869633111 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.864000476 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.205789532 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.874837174 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.88036704 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.868999812 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.864285638 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.034803865 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.870273583 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.024316444 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.869047691 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.87306417 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.866587132 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.109516408 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.874940953 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.345299926 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.873483559 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.869291297 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.968328605 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.026718436 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.375679122 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.872542481 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.038536104 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.299528234 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.884853673 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.871303074 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.333763 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.885721222 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.870748162 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.872599974 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.867978979 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.870719061 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.920279024 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.881532932 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.272725697 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.346671791 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.213769351 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.889631111 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.877898254 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.867813851 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.206603192 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.873700073 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.869066052 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.10914338 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.345381766 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.875538768 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.874823583 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.332936884 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.87624467 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.885247345 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.872217576 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.119564715 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.879203114 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.9162878 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.867929287 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.871283656 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.87117055 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.884670852 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.87183178 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.869532528 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.32174025 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.986822549 seconds)
  done (took 231.481083768 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.859259522 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.871151971 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.860661549 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.873190756 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.858387261 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.866178333 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.861176885 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.861960042 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.864816164 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.860529361 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.859800007 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.857736784 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.860124492 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.864910483 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.903434693 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.868933448 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.475755838 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.862195913 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.858561754 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.869477769 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.506554313 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.86432942 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.863140575 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.876851816 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.8641378 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.862321238 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.865075934 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.896400274 seconds)
  done (took 167.308530456 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.871308526 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.97966092 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.879550802 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.893396031 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.874387675 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.868514654 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.892182565 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.880310558 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.871185813 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.869272212 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.867798669 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.926796827 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.878468696 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.967608162 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.898515205 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.89872461 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.96830705 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.87939453 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.869070654 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.870898626 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.894882044 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.859558098 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.927104643 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.98461272 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.881494767 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.982228129 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.866573599 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.871520926 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.870884532 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.983776145 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.882043644 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.92957656 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.891307203 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.883509443 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.984716336 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.978358963 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.969907631 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.896457166 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.87377705 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.870855072 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.870642827 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.858138333 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.983162429 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.885595486 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.87131495 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.971503903 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.883577563 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.875119204 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.882559015 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.871758584 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.884451623 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.88403437 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.929379167 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.99498467 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.896913969 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.897345534 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.895952508 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.142311748 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.880810265 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.968294482 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.862767532 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.98579867 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.88716556 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.85686339 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.867518402 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.870185631 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.89220517 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.892148539 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.963900543 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.870684437 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.960410066 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.897583003 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.869436617 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.866338576 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.86962938 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.978902307 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.975144091 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.899071073 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.896606178 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.889892719 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.851640598 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.866160864 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.852148093 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.8818626 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.868945259 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.977346213 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.974083365 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.874201572 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.869910085 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.870462824 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.867536855 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.888513702 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.981537503 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.891920817 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.953619486 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.932423986 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.933689548 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.878621264 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.880693827 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.868311775 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.928095351 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.878376295 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.876979892 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.187678849 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.929552327 seconds)
  done (took 202.125058134 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.34153799 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.918129994 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.91812431 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.187406998 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.282743751 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.726114532 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.907550309 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.912754124 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.937026989 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.09954621 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.984346907 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.937210454 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.898739046 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.88378737 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.91127184 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.937308541 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.920585583 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.225784827 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.042669771 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.047397922 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.889349359 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.219414322 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.226882888 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.34809195 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.945798002 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.242540539 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.584797501 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.159008522 seconds)
  done (took 61.432265174 seconds)
done (took 816.291973775 seconds)
SAVING RESULT...
DONE!
