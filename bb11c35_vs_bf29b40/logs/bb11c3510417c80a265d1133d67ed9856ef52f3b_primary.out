cset: moving following pidspec: 27485
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.519785102 seconds)
loading group "string"... done (took 0.543373675 seconds)
loading group "linalg"... done (took 9.044111498 seconds)
loading group "parallel"... done (took 0.180090345 seconds)
loading group "find"... done (took 1.303915286 seconds)
loading group "tuple"... done (took 1.951564165 seconds)
loading group "dates"... done (took 1.373015405 seconds)
loading group "micro"... done (took 0.197728041 seconds)
loading group "io"... done (took 0.517274921 seconds)
loading group "scalar"... done (took 51.596022361 seconds)
loading group "sparse"... done (took 14.236702416 seconds)
loading group "broadcast"... done (took 1.346793102 seconds)
loading group "union"... done (took 10.428723434 seconds)
loading group "simd"... done (took 3.09770992 seconds)
loading group "random"... done (took 11.747674331 seconds)
loading group "problem"... done (took 2.235372551 seconds)
loading group "array"... done (took 24.738241712 seconds)
loading group "misc"... done (took 1.162295218 seconds)
loading group "sort"... done (took 3.845294817 seconds)
loading group "collection"... done (took 19.660076368 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.6319029 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.189191068 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.215839924 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.29578722 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.24379682 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165547808 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.162560585 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.254349443 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.669180225 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.215213681 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137078983 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.506045959 seconds)
done (took 6.516455878 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.258513569 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.182224513 seconds)
    (2/2) benchmarking "String"...
    done (took 0.172616127 seconds)
  done (took 1.130934388 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078224509 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157772207 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.11027054 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095851746 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094558523 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.11126722 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095404027 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111355097 seconds)
  done (took 1.554567456 seconds)
done (took 3.802737536 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.521173795 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.887014849 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.527865653 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.169170938 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.308032185 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.322018187 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.323745816 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.207312067 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.094962396 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.094729484 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.181888182 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.400261541 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.443873939 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.9717583 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.094243488 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.117945547 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.122005673 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.785063667 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.082542301 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.127321031 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.505892013 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.196495747 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.100700307 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.125143737 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187857573 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136627598 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.165697408 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.107460434 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.678577118 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.136580997 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.188437521 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.100595798 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.162891483 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.199326228 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.213944841 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.094932806 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.695827866 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.204549626 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.092136005 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100538118 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.674545073 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.123362958 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.192038539 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105970384 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.09425941 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.186462092 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.09584105 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079975835 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.118628434 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087748678 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.169011461 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.446651594 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109370157 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.175737517 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.096068201 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.697477388 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.103084118 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.278880901 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128454114 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.09471808 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.093431674 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.091178729 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.16222782 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.097241288 seconds)
  done (took 20.493732367 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.150905524 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.170843216 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079257778 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.159957138 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.128107937 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.083102633 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.104901039 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.080324623 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.128108124 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.227067403 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.142322639 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.158324864 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094215757 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.093071669 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.148444313 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.235044778 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.10995 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.12637336 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090631667 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.109207244 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.127598995 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098777957 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110673003 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095185807 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173620361 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20806722 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110503586 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125079214 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092659091 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099286006 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144136546 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148706742 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095889166 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09116801 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.191144188 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109850222 seconds)
  done (took 5.440092856 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.205559399 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.127123185 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.218836112 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.166410946 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147586481 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.174394445 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.155387772 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.28780565 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.299819896 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166089653 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132895699 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10857214 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099058339 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08305522 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.08024686 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.535664241 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.142998547 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.179129972 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.13942179 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110783101 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083452627 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.389391182 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086227765 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.101396534 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090229879 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06750662 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.201912637 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10612838 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.088076364 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.110455988 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.091842253 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136966726 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197070093 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.13627648 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125411934 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104949117 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084781332 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.222202227 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096635363 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.136354854 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081003327 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.111439069 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138908604 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117682211 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.106349378 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.114993433 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.227679125 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.085446429 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.107982462 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.073122756 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.201196981 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.129594628 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.082951123 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293951001 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.121396424 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090390404 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.084776691 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.251694861 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.118123392 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083471291 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.100320341 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089140137 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080509742 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.443068017 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112106436 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083268854 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081171896 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.166331275 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.624525872 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091123464 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.109109262 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088676153 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087587156 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.122203462 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.144428662 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.100856312 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082114531 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081470142 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099219508 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.087755786 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094780638 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105550105 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082506982 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149723848 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.102489484 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.102035741 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101605418 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12967123 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.088898654 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.100193128 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114712804 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101164265 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086375571 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.176014205 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.092086808 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112304009 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.088096201 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.147280859 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085237709 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.211685129 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.085420006 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.109624449 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.104907718 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130624375 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.1062379 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082229129 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105588798 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081772148 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082316534 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16875412 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.086251685 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084034005 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084989943 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.115224125 seconds)
  done (took 23.334676657 seconds)
done (took 50.044518593 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.46606216 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.088556639 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086350145 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107033229 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086942114 seconds)
  done (took 1.692704674 seconds)
done (took 2.523953786 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.335965194 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.202615222 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.1022224 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.196737005 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088414593 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.205599359 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.191988034 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096898183 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.21878067 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.087388366 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.197079686 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086604994 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108193897 seconds)
  done (took 2.977691963 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105642358 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113221513 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.122576277 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105928278 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085098109 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104224866 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.1216826 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114278982 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103246668 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113599819 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086020051 seconds)
  done (took 2.00838334 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102521071 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109418475 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10117739 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120148408 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08634629 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100950478 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119975292 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112621243 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099820031 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.116696858 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086527396 seconds)
  done (took 1.9910912 seconds)
done (took 7.809558179 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.108449859 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.769332805 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.151336263 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.215270747 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.364243316 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.270104514 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.565963366 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.17855403 seconds)
  done (took 14.616345751 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.131649872 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.165561239 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097908222 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.09422571 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092715033 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.117832047 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096845626 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094767527 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.118835272 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094843904 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092846392 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.112579841 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.094088693 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095968027 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.11455898 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.095793304 seconds)
  done (took 2.600455317 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143992916 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.146048394 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.100446643 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.101112892 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.115333222 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099923976 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102697144 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.118299097 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.096919864 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.098259647 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.119978239 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100407216 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098811238 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.113230397 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101161358 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.114550148 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.112450911 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.100822077 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.114059051 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.118549421 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.103017694 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098577395 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.117457081 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101165074 seconds)
  done (took 3.555918076 seconds)
done (took 21.607820734 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.154181905 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104438677 seconds)
  done (took 1.096832544 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.147920586 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.166727688 seconds)
  done (took 1.156184951 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.117069229 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090941026 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.142976826 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.105539985 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092787909 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.112342771 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119943501 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.110883766 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094206852 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091940547 seconds)
  done (took 1.923799648 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096906019 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097402715 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.126000181 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.143941731 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118494755 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096634216 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097094705 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.114139329 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.09978837 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091876337 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.115812571 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112820388 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097851071 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.130890205 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.098116265 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.098741331 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.121209772 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097293423 seconds)
  done (took 2.801533316 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.094359599 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094894998 seconds)
  done (took 1.037683936 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.096508957 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091862385 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094124239 seconds)
    (4/7) benchmarking "year"...
    done (took 0.1130075 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092343092 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091931035 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.110476999 seconds)
  done (took 1.538207268 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.509016191 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.27273854 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.377609875 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.109960272 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.151814264 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.360715157 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.150558301 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.10621327 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104908213 seconds)
  done (took 3.025842483 seconds)
done (took 13.424375852 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.096065719 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.22550331 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.768510196 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.116461771 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.09159717 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.167920334 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.30022589 seconds)
done (took 2.619301915 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.356493729 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.152888407 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087531249 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092227629 seconds)
  done (took 1.534359833 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084187853 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100319745 seconds)
  done (took 1.040295243 seconds)
done (took 3.426335382 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090646629 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.090590736 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.089575412 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.107685516 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.123488171 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.089092791 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.11266728 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090414325 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089622285 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.109695188 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091015349 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.09128229 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.089876373 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110419745 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090309378 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088622591 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106804106 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.091004142 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090965463 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089747844 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.107482669 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09053619 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08987642 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.106785037 seconds)
  done (took 3.213226877 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.11526402 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092806764 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.11174486 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095859313 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095452893 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.113694769 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096485426 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092479478 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.113118613 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093271046 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095835352 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.112972849 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.093509195 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095797148 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108476842 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.09650875 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094289696 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109644965 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093644768 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096041247 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.094492162 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109991549 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096434626 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094881734 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.114263584 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09561009 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091552108 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.111372118 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0954545 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095363045 seconds)
  done (took 3.866243247 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.100029455 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086935942 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089974248 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.118302301 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088038881 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091369203 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.106447624 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08947776 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.093208098 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090685679 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.112681022 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092539936 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086937175 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110808947 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093165876 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094772596 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.118296106 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.089530425 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.087962733 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091691523 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.113366461 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088995628 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089993791 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.109836942 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092646956 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088901047 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091720537 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109280425 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092222778 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089475404 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.113028113 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.09532006 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09157444 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.119459641 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095371198 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091148279 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.115081872 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089558071 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092980056 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087264184 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.106449314 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.092262025 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.088404289 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.116539387 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092438685 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.093746607 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08774853 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.112547187 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093153471 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094665954 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.106011901 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.089012755 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094251269 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.110677174 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.095684952 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.088774535 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.0900566 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.106417269 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092679955 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092106401 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.106344754 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088817251 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096077421 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092147492 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.126578716 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.098866006 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086809093 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.111720717 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.092970123 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097386286 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.112461861 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.103277377 seconds)
  done (took 7.906675092 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.106524904 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101211698 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.09157461 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.112508601 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093150621 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090756865 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114627811 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092254896 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091776287 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118221863 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092655664 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092811503 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109527138 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093441517 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092195932 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.093182977 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116206062 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092492507 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090582036 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111812996 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093256121 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.0958986 seconds)
  done (took 3.053965519 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.239063115 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099266353 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141833019 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124885944 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111361749 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.12273277 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096738247 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096282092 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113630506 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103127982 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100194111 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114003902 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110211655 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117444481 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101825735 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101677446 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116416074 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102645535 seconds)
  done (took 2.981804905 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.106986621 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094272165 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.134261952 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094941246 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093917977 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093130819 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.118928555 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115678795 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.112344759 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094925775 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100769031 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112496254 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.096116189 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093780254 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093109494 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.114553418 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093738982 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09302597 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120155401 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099970884 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.116085242 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102468056 seconds)
  done (took 3.165445075 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109182751 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094799544 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12991175 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098056115 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092881706 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.111467945 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.099062976 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.095060401 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.117647127 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093973389 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093937855 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09232113 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.127780835 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093873197 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097772047 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113126187 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094368923 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094271324 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113167905 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09426576 seconds)
  done (took 2.926007797 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.17835096 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127926527 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111554786 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118151155 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128228635 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111202305 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136033182 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111375219 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10950333 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140589506 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110711792 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108876226 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137563256 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114550653 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127160484 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118384623 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116940117 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136424462 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110527792 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128756556 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122863265 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110104395 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136358681 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11004026 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127748929 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111643377 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109400885 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133901386 seconds)
  done (took 4.31570924 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094007441 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092358354 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091796147 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.111745721 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09285768 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091382448 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090415259 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.112478656 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093399106 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091185855 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111759997 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092722387 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092836247 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.110029633 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09362694 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093077588 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09193486 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110044052 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092507558 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092659824 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.110395012 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093244772 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092659068 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091220802 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111099789 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094264184 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091737933 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092168838 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093852155 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092296265 seconds)
  done (took 3.793323917 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105892089 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101996393 seconds)
  done (took 1.082912352 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.101412037 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107022936 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.09180827 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.11173144 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100427529 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092509369 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120286665 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098936622 seconds)
  done (took 1.699173585 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.148683373 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.170617222 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.09896357 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.104802654 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.171277943 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.161378857 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138794853 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.098494013 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.112179836 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086769754 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.163999096 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.086994238 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09515084 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109965104 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.094764349 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099653652 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.113776359 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104863154 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.099705707 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.114456967 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09960237 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099609001 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115263698 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104994696 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088384417 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.115899849 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.098801469 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.105080024 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110671759 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.097004722 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091802585 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.113771966 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.098157596 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098375263 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.111329784 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.153857968 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120703025 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09283785 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.096077939 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116851734 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.130468731 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094309999 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114140262 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.095112128 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098770847 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.117149359 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101098142 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093883965 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.086117556 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.109784751 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094994328 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08959629 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.112135942 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096454705 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.09325089 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120215412 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096749181 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.090302148 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.109591262 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.09061291 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093016014 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.109650605 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098802476 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096363404 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115462948 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.096254913 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093226406 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.112679177 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096844099 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095177341 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111816665 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110639222 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.095106418 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.117302961 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099040796 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094928603 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110132682 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101158133 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09298274 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.113800461 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099182207 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123931736 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11571761 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090994435 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.090538961 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.119558997 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096041939 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096937785 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086876504 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123368038 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096479032 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094283606 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.106267897 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093673541 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090923793 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.117915185 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088724346 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094783414 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.113102531 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10059057 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099855583 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112288792 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.098206338 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099169506 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118800265 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.096163221 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.162528205 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093391574 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.090179125 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09731351 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119141432 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08980581 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.094753056 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.1124141 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093784733 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089815251 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.119021041 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.096031046 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.095432367 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.118149169 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09845566 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.096621731 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.115534939 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095240339 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.091316135 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.116927016 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103318263 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096875842 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.115393722 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095750654 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094668812 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.09322013 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.117985535 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092662334 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100351572 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111468694 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.09460246 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096184821 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.119517422 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095867648 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089679968 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.112131736 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095729378 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093898133 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.11625936 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.096458951 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089793633 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.106015639 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.095936871 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.090853382 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.112408201 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103438954 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.091927168 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.115652913 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092977671 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10182932 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.110182287 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101053373 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098233011 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099994801 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120466584 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.088261235 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092185569 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.118568973 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.097871915 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090764076 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.114567725 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094591806 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101191818 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.107246218 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099355287 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086799109 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.110260348 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101518285 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095421103 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097487607 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.110670598 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.136338601 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106212866 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.12061741 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.096101182 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093985174 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.117944866 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.095693893 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.096954189 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120018077 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100248377 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09445067 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.1137001 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101042175 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090682571 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.117391406 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095170304 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095809103 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.106074032 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096162995 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.087189585 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.11894962 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.09872162 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099714207 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100065822 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.118023469 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094830806 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102171418 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.111480856 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099765965 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087355822 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.121111009 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105617418 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.101272665 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120854696 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.098020771 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09235246 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.114855136 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105517439 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097325025 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.116065466 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096559176 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088315709 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.107731325 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102289883 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097799015 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.091404601 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.113824425 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097950551 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097349912 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.113683607 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088676187 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099046542 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119275697 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090840613 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095017445 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.111707401 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093552907 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102435146 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.107619867 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.092420675 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096899648 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.119245726 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095403951 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093859926 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.117929025 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101324506 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097967286 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.115299384 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093902414 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103054185 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092803383 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.115851466 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.092368917 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097816764 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.108704871 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096516057 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095551368 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.11183045 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.092149738 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098633712 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120482501 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101912354 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09395887 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.118933748 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102326949 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100253471 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112971891 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.1015382 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.091192172 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.106490637 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.093026489 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088023891 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096051785 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.111174665 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100173932 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093515662 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113320066 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100018065 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098106582 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.113801477 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102295779 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104917992 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.109598646 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089158146 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093301673 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116067274 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.09251109 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091532285 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.115723509 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099585196 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099128406 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.119147869 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.093094198 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096099693 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.122257802 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.093335143 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101718686 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.119458418 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102730679 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091907778 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098743439 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.122171377 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100408232 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088146478 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.12380637 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095279705 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113558716 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.09338254 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.094065203 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090287265 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.108887863 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092649612 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101824181 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.114390889 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099530108 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094485057 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.113589294 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092602562 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09019145 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.121478855 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094874462 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101514825 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.11532519 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089042045 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089235211 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.09911926 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115945384 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101594351 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090239728 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.119289973 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102750071 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.097735345 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.114865766 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104773693 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103374066 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.121803246 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102802083 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088207652 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.112260205 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101547471 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094693255 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.117811462 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099011096 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090572243 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118303288 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101853643 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097682815 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.112393382 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.090429969 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096682465 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100773051 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.119072286 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098869357 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097386747 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11603018 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.092351071 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098739681 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.120191386 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097208822 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100166073 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115589878 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.1006655 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092098028 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.119974954 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.096724419 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089857435 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088267758 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.113588836 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102301687 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089662358 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.119645837 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100719311 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.09240207 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.113040928 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101244365 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092239393 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118316463 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10255091 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093467452 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124780345 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098445991 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094358587 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100834039 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.120479298 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089642269 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.09407475 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11571696 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103966531 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094278101 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.121855213 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097155539 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100573955 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.11950561 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102278955 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101110252 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.12070589 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.091144119 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102775839 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119432811 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099080477 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093644467 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093736886 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.111027931 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.096480085 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101620478 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.113422366 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105489393 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101325081 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.114522753 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095463491 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101262797 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115365307 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105570728 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092775553 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11874446 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.091534149 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098988774 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.114967453 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104528615 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092649124 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.10968375 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10257019 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101659711 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099217747 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.119840736 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103199111 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.0897659 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.111380342 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100603875 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092645261 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.127331813 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100968544 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.09499374 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115128658 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098411631 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097845217 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123578713 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.092425741 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.093038732 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.116399793 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099666034 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095384477 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.110930576 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101983969 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095454962 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097560713 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.117101433 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.092278458 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095135848 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.123469414 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.095063395 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091719033 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.114460329 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105005693 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094824035 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.114745041 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.091290298 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102438985 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.119514709 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104153768 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092720609 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.117503909 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.095044975 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098322439 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.12266434 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.095640357 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096803042 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.114710763 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103445235 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102191811 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.110249393 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.09546538 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105858216 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121548313 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.102236065 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098512228 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.115677885 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104827182 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103713086 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098775513 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.111479616 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.092092102 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094511053 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.111202803 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100184428 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102652362 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.116410234 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.095139535 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100339134 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120953423 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09998437 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098735885 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089946632 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124925688 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094684372 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099937424 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.111094528 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.092051273 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098303782 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123602486 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09761095 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.09786439 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.118353779 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099700986 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091672598 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.113939697 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.102392684 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102081994 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10194865 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117286523 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095512158 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098665691 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.127418972 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098788014 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.096189658 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126515208 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105260486 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096648068 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.11796228 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10180118 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102734869 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.120289142 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.104902291 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094189772 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.117237947 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104784179 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104034049 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.128294457 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09684088 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090224412 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.12232302 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.096234766 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091845892 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.121317087 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106183402 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103682354 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.117175702 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.095077982 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105767214 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122477436 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098914963 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094283916 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.114741369 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103320413 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094904186 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099049228 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.114749206 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105043019 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104076679 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.124629041 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.107685038 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090767316 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124290456 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.100861893 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104508008 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.119568841 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.093264419 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.091223677 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.119793993 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105779011 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102855712 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100295245 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.122947462 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.1028357 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097307906 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118520158 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.095479745 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103386729 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.123437603 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.0992395 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099358308 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.116781381 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099489117 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099209428 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.122581446 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104772928 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.099586897 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.126412073 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105350853 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.096335434 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.113518139 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100302774 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099750596 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097410342 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.122657835 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.095219853 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091083209 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.123937308 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106380764 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096845447 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125172901 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10528183 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095812105 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.121555325 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106193287 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102561877 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.119439051 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.099658764 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100532921 seconds)
  done (took 62.998210409 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151351184 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104890102 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120685475 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100376727 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117531287 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122244605 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100425282 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099663251 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122035862 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111041739 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099781976 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120119903 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116560962 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141769505 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120161924 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109163423 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120445045 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101093813 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099755849 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122973802 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116003997 seconds)
  done (took 3.345452073 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.119100148 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.114000608 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.13217842 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114689576 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107049894 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.132384174 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110905222 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13182483 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113701145 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107911834 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134993503 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110080773 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.129168324 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109480885 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108036204 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.130209829 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114360404 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.126515873 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.112873508 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111709003 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128736676 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112672335 seconds)
  done (took 3.540173884 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.109048958 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102767514 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.101718162 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.120796461 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104069977 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099906317 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.126842223 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101399089 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108848348 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.119401828 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.094134223 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.098029362 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.123644218 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.10133692 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094178853 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.10042972 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.130149368 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103518183 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104986284 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.121649474 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.11204142 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099238005 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.121884876 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.09360269 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.110689827 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.126976013 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.10186638 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102333009 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.112857418 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105039542 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.100682821 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.117200524 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.101410624 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.093067605 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.092184868 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.124686834 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10383436 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.100047521 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.121299306 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.10007277 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.10124261 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.124107977 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.10354772 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.100054164 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.120808596 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.09939061 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103517943 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.099471792 seconds)
  done (took 6.089889104 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.130610735 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.168335566 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104462473 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141406268 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.138143363 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109964697 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.125253188 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140990076 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102630407 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.126901067 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.116410004 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.136707966 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106282091 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107535314 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.125364787 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.107583546 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106054632 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.123179272 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.110023473 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104421678 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.129934213 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.107396633 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113495668 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.134553897 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106703892 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103015147 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125213126 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107770224 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.132798489 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111171163 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.349400625 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.13033252 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.11618116 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107069392 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.125486924 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106062231 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.115409821 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.127716417 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105800527 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102282812 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.12642587 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10822253 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.106397583 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.138346775 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106265043 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.126206504 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10585817 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102808277 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.13480314 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105867972 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.110688462 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.137468265 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105583946 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103499226 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128996882 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.114633691 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.124535728 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104657482 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106549021 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.132555995 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103742853 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105971046 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.135572578 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105635437 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.109210096 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.136759322 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107103064 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104803679 seconds)
  done (took 9.275592312 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.139415325 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108543817 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137686567 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117059883 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106356719 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.129575707 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108175967 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.128288863 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109368436 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112860994 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127689054 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.207782238 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.126935578 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114032967 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106522483 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.129460413 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108528561 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128788567 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108409311 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107630119 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.127495384 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116906561 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107503833 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.136140624 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119513412 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.125364751 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107855277 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107408592 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137451593 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109506692 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117893924 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.130073924 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107979467 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.136248881 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.120268791 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108227252 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124307464 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108649353 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107035389 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.130107954 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.1058757 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115696267 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129972164 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105112692 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128199436 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110448133 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11685314 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.14057584 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114394895 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133547768 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.109477557 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11698763 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130008674 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109833809 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116296007 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145522435 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11630951 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138101647 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109452627 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.136188053 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118357825 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.123925042 seconds)
  done (took 8.460705737 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103023311 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102451637 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099217657 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.12293106 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102146551 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.102368118 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.12167636 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10342055 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102307206 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100622494 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122678366 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102283525 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10130228 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122942249 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102011582 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100590247 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100409171 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.122524949 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101773267 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100401403 seconds)
  done (took 3.081964556 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.1128058 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118629306 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.124120099 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110940825 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.104048895 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128269279 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104923562 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104424323 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124173897 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105130191 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111282773 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.13252678 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105198351 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109814132 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.132222589 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111383133 seconds)
  done (took 2.785320702 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.122923583 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120428584 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.197880441 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106473276 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.1268566 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.11160133 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104147391 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.128203659 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104116615 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.110013254 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.13053386 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108004637 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103255302 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.104327143 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.127133316 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.108281 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103624864 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.130172251 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10495882 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.194480454 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109160501 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105643051 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.126525214 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.10859455 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105932 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.130839997 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111672153 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104942184 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.128187412 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105750953 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106400541 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.134009273 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.105590142 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108948993 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.12659811 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.106216072 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105287154 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.125492744 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108892576 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103818154 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.106513322 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.128237051 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.105791558 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106649264 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.124935126 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106881204 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103209262 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.131915253 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107225236 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.107275979 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.126494595 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.112555737 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108057451 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.135408415 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112683968 seconds)
  done (took 7.388937102 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116700022 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104886581 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.13695511 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104975783 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105499643 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.105396273 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126675985 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106562285 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105644618 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.125436791 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106402109 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104998196 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1275207 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106451751 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106138376 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12734873 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10364312 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105370377 seconds)
  done (took 2.978239945 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110603115 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104741627 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108969665 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.127291568 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104060112 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103763336 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124973967 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103683901 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103194817 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.125095325 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105682433 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104519334 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102818445 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.126437974 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105758163 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102984426 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.126013392 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104301437 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103731826 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124054786 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105736889 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103734486 seconds)
  done (took 3.388814004 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.116822071 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.188718552 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.111153715 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.198928701 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.101915188 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.099758215 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.133475995 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101885917 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.116556924 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.12306129 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.101207486 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.099871678 seconds)
  done (took 2.45135325 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136597607 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14279558 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12779924 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106611972 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112765508 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132278139 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109168359 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108690016 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141115546 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119918173 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13066097 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118046403 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117114989 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140629835 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113536989 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135279712 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110144626 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109116419 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127662944 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126035149 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108187 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138687418 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10959524 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130360024 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112002358 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117282029 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139328082 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122287044 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130433755 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12000043 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114090465 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130106071 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118644103 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141862232 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106737624 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117141326 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131010299 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125410962 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134387541 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119477664 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105721835 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137388127 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117975076 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113584715 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139802581 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109416088 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136421863 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111080003 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109330182 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152672891 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113819265 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139478462 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114130298 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115863155 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139332162 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130507303 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144022177 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118396474 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135547147 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121564216 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138067214 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11647891 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117196498 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143999716 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113824444 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139032313 seconds)
  done (took 9.169614474 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147586359 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105988379 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132072328 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122230849 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138482278 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110871553 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109682526 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131045108 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111271154 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105705604 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176329493 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110381217 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1421183 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120384826 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108733429 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131966291 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111154825 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116626336 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129276965 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131793551 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130783816 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119615667 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139528149 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120352759 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121386219 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135536494 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110652406 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108549994 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132873119 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111333012 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1363421 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110756958 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118486465 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.128318449 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119730342 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109372947 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132080515 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115606129 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109588824 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137956044 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118803373 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146930699 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110731671 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109640627 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144648987 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110688995 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133053172 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108257489 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109078738 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127635939 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123846551 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141883426 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123826895 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118157786 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131866339 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111375244 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109512267 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133092912 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110216145 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134619296 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120846915 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110328252 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154213549 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111822233 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131162688 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119630311 seconds)
  done (took 9.111464379 seconds)
done (took 172.921959836 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.155998585 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.19594712 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.150038424 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.183971075 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.09652108 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.133182226 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.153777156 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.152715644 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.117663036 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.097551323 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.096613731 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.1001948 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.188165349 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.097132866 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.095984608 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.123731097 seconds)
  done (took 3.098947453 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19826379 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.31646422 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.113255825 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.122896663 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105859063 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.103514417 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.123785759 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.104654908 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.10076838 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.132024902 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.105084193 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09907442 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.132240378 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100235523 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100964557 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.126735858 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109159956 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.103263921 seconds)
  done (took 3.266637931 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.123526708 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14715019 seconds)
  done (took 1.245436653 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.134949164 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.203260523 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277735651 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.177059205 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.126614031 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.142169777 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157032858 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.137656915 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.185223203 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.138144285 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11733017 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.101519521 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.150654652 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.107583005 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138346404 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.103279441 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129983643 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.13964271 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116634231 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.103510153 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146271727 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107451438 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106424511 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.138385782 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.173142227 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137186941 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10718269 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.126775197 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.105602177 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116351618 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.131454343 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11877348 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.135825706 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.158484343 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.129100973 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.152180443 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.134863772 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102633318 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115344851 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.125468632 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.106319196 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.106099405 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.142876209 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.102076576 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.127482205 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.114307487 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107334255 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.128776585 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11247943 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.112140441 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.133482541 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.109580677 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.173204958 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.112377903 seconds)
  done (took 8.116793799 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.868370814 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.144625811 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102344816 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.021145364 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.154072356 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118297744 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.868872024 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.149108141 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258748939 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.882412816 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11900613 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.138102398 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.244583358 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258500415 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.990127471 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.334465432 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.743093489 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117244044 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129914585 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.168595018 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131500176 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131378653 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122237712 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.424315849 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102793741 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.124400481 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11054419 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135687517 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15986049 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124237765 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106252192 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200960875 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.267387943 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212928068 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.104273804 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101228258 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123979332 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.165663461 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273123199 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.243856798 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.167357999 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098247909 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123844922 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110425083 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.142264105 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099880136 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184981106 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.169558796 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193108106 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.128178936 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115774058 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11208844 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13256367 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.181637468 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100625761 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.335648648 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.330931017 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.124695924 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110297867 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.138858697 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271568778 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103054501 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237145016 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.150029916 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218879345 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.103366559 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.815986658 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.187189006 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102554754 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107968428 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.133291635 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108379365 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131632624 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163230424 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.398398517 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.114248199 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128816522 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102977362 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.247339685 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102045321 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100480005 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186111822 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12514122 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111631339 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115819502 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137539082 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190705026 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.227759378 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136409534 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111330333 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.130215817 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115752302 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.103499604 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.235670138 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231943808 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.180705654 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.237711165 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111171464 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186294715 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187290276 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10952527 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.191166414 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10869591 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.141458356 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110583253 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22907775 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.160121916 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102510147 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.130095319 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111699667 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.162916575 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105879495 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111002525 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189166563 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.460036229 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186725769 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.100351104 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.1053365 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134965694 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160636174 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13260994 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271113312 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111617798 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.188211761 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108806713 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.121384193 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111633927 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.187217885 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111215405 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133770396 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111230402 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112083574 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.258535804 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225202453 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.137934854 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24785998 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.17011511 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.133889917 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193175546 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111880153 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191708193 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113028103 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131655856 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105403491 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803432737 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116133292 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.133226363 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108547715 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.210878688 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102865183 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103059221 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125392895 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.101482944 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.809302413 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10385767 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.127486633 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10444786 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109805726 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.133495973 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11120078 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106948722 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.185327494 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245586924 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.139136766 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109194274 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125211792 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161736407 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.126930939 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104084509 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102101918 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125857585 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.113542962 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106826863 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12791473 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171834273 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.181449322 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.234483962 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.528095044 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12582747 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103916622 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242482419 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125196352 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.307493113 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112046581 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.237667979 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189968457 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100209962 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.350882199 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.171658815 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.207778258 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10516838 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19332248 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10010495 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.134790359 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16059275 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.126639998 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111200986 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.182156689 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.117094848 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.139140989 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.023797272 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103657856 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253856771 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099352971 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.1908791 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103854423 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134878596 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.30392164 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101893695 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143445988 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.183364699 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108804841 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103394428 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.609450457 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102581982 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13812772 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111000784 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.259994781 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.167929216 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.133440283 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113246863 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.138617748 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162634916 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.237798992 seconds)
  done (took 46.168500147 seconds)
done (took 62.864831542 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.30368257 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264071061 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.308049298 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.215402998 seconds)
  done (took 2.158714335 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.27037708 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.166566716 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.240425221 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10111116 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.252836841 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.10152323 seconds)
  done (took 2.13292894 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.498739099 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.38145775 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.314267002 seconds)
  done (took 2.197387506 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.261731933 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.2514341 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.358538643 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.417750999 seconds)
  done (took 2.404195113 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.310608255 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133713492 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.130426799 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.21781591 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.261914516 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.236880145 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.153079366 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.20130568 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.157402126 seconds)
  done (took 2.849579813 seconds)
done (took 12.739298119 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.315283484 seconds)
    (2/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.357923456 seconds)
    (3/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.369785128 seconds)
    (4/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.249898014 seconds)
    (5/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.26345045 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.238702806 seconds)
    (7/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.250834191 seconds)
    (8/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.352635447 seconds)
    (9/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.252723541 seconds)
    (10/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.202221939 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.114408813 seconds)
    (12/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.20648449 seconds)
    (13/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.291369496 seconds)
    (14/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.342904802 seconds)
    (15/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.112838028 seconds)
    (16/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.242466737 seconds)
    (17/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.156793148 seconds)
    (18/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.194509997 seconds)
    (19/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.301599545 seconds)
    (20/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.120365422 seconds)
    (21/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.202927287 seconds)
    (22/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.131332473 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.166428855 seconds)
    (24/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.345945502 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.134844936 seconds)
    (26/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.327997813 seconds)
    (27/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.084814951 seconds)
    (28/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.112150606 seconds)
    (29/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.27355491 seconds)
    (30/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.15846973 seconds)
    (31/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.119425753 seconds)
    (32/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.157974904 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133339884 seconds)
    (34/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.082645705 seconds)
    (35/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.270819202 seconds)
    (36/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.101768402 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.139414078 seconds)
    (38/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084778499 seconds)
    (39/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.195088568 seconds)
    (40/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.083235653 seconds)
    (41/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.108800802 seconds)
    (42/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.089142137 seconds)
    (43/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.182820481 seconds)
    (44/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.215727154 seconds)
    (45/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.155644507 seconds)
    (46/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.111780627 seconds)
    (47/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.276969983 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.108331967 seconds)
    (49/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.221267536 seconds)
    (50/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.195537839 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.135401237 seconds)
    (52/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.098470679 seconds)
    (53/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.193635091 seconds)
    (54/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.188408572 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.14019078 seconds)
    (56/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.187475832 seconds)
    (57/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.142906754 seconds)
    (58/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.308965397 seconds)
    (59/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.102213494 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.164069221 seconds)
    (61/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.113876606 seconds)
    (62/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.082925288 seconds)
    (63/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.150308818 seconds)
    (64/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.119291602 seconds)
    (65/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.088990825 seconds)
    (66/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.214110588 seconds)
    (67/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.221133994 seconds)
    (68/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108532231 seconds)
    (69/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.146841019 seconds)
    (70/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.139771316 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.147895804 seconds)
    (72/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.083720384 seconds)
    (73/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.185654661 seconds)
    (74/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.084259147 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.130323689 seconds)
    (76/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.10689085 seconds)
    (77/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.115223816 seconds)
    (78/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.139711683 seconds)
    (79/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.108490501 seconds)
    (80/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.200036874 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.138690048 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.155832758 seconds)
    (83/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.201178061 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.132071048 seconds)
    (85/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.084997808 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.132185474 seconds)
    (87/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.083692965 seconds)
    (88/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.181117081 seconds)
    (89/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.268557348 seconds)
    (90/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.109046818 seconds)
    (91/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.215279823 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.108974224 seconds)
    (93/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.110950874 seconds)
    (94/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.084824219 seconds)
    (95/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.119239631 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.127363463 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.115271157 seconds)
    (98/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113969206 seconds)
    (99/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.08323665 seconds)
    (100/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.137477236 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.110344362 seconds)
    (102/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102246975 seconds)
    (103/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.133243253 seconds)
    (104/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.158630066 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.129633987 seconds)
    (106/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.083279241 seconds)
    (107/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.173768983 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.110901238 seconds)
    (109/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.084125692 seconds)
    (110/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.106847781 seconds)
    (111/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109745267 seconds)
    (112/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.195869544 seconds)
    (113/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.108776466 seconds)
    (114/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.084566465 seconds)
    (115/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.233188274 seconds)
    (116/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.109950992 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.113986545 seconds)
    (118/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.103036351 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.133469754 seconds)
    (120/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11426941 seconds)
    (121/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.08465013 seconds)
    (122/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.240248087 seconds)
    (123/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.112930482 seconds)
    (124/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.083680662 seconds)
    (125/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113341402 seconds)
    (126/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.10720341 seconds)
    (127/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.106658879 seconds)
    (128/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.104833392 seconds)
    (129/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.137358431 seconds)
    (130/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.089815822 seconds)
    (131/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.199096058 seconds)
    (132/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.088828268 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.156938616 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.133402802 seconds)
    (135/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083921346 seconds)
    (136/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.137330817 seconds)
    (137/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.156799508 seconds)
    (138/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.084151442 seconds)
    (139/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.084430993 seconds)
    (140/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.109041892 seconds)
    (141/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.084754235 seconds)
    (142/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.089215637 seconds)
    (143/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110553301 seconds)
    (144/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.24197505 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115580509 seconds)
    (146/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102137698 seconds)
    (147/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.109869878 seconds)
    (148/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.084837709 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.110316012 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.134662145 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.110862676 seconds)
    (152/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.084832695 seconds)
    (153/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.087098262 seconds)
    (154/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.162433676 seconds)
    (155/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.08932018 seconds)
    (156/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115690843 seconds)
    (157/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.082999865 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.13623764 seconds)
    (159/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.083800587 seconds)
    (160/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.084995248 seconds)
    (161/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.220389135 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.112155755 seconds)
    (163/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.089379303 seconds)
    (164/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.083164569 seconds)
    (165/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.107329687 seconds)
    (166/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.104318694 seconds)
    (167/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.084123556 seconds)
    (168/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.082476557 seconds)
    (169/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.08321283 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.138188996 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111439254 seconds)
    (172/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.115788297 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.157866533 seconds)
    (174/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11354503 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.10938781 seconds)
    (176/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.141728411 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.111858003 seconds)
    (178/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.083524959 seconds)
    (179/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.084165819 seconds)
    (180/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.108514211 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.131891882 seconds)
    (182/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.084824963 seconds)
    (183/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.095031328 seconds)
    (184/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.136767688 seconds)
    (185/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.083231864 seconds)
    (186/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.102480488 seconds)
    (187/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.083148873 seconds)
    (188/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.109188829 seconds)
    (189/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.085784715 seconds)
    (190/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.084186937 seconds)
    (191/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.084334391 seconds)
    (192/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.083307259 seconds)
  done (took 28.732190078 seconds)
done (took 29.736149085 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.220746152 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131091755 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.112978104 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.111501446 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.212152659 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.11793635 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.151279609 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.115084929 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120651041 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.138958364 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.104341955 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122050578 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.136822357 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.185227587 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.141247055 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.106073747 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.104165638 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.147316796 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.125272238 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125081958 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.211715181 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10679222 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.145457873 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.105759367 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.208986529 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107369891 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110451115 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.135203677 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123095475 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113343209 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.134792656 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.105177655 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.124691723 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.146997884 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104970534 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113078696 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102388847 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.114440364 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113970692 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114699628 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.145586659 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115227744 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.1125921 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.129421628 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115795297 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113445175 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127402975 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.117113886 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102214968 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.136150073 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108595742 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.125107529 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112199398 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.128587054 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103025532 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10389123 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.145483501 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105314852 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.1225006 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.130377974 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.10538252 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103958535 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.140008427 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105115834 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112292346 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.128385323 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115247135 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115319946 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.136302921 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.109172815 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104269144 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11145925 seconds)
done (took 10.111598679 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.111719513 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.161461056 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.206630654 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.221387048 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.135494631 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.146332978 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.129920278 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.135608596 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.151286031 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.129530491 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.168409385 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.137557542 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.220522004 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.119551634 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.144855008 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.118480205 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.122295683 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.142765387 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.198780342 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.15456193 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.135813279 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119702086 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.166895993 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.12887367 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.136566994 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.142610294 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111058866 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.142536149 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.112054765 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.118139193 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.155137235 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.111476326 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.135107096 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136928273 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.126260766 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.147129528 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.121329554 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.116033189 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.136039813 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.110572851 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.118303452 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.158277353 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.110300748 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.145991566 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.118276201 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120706079 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.147459984 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123211423 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113152457 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.143637318 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.115197455 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139502838 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.146211712 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122102767 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.144411508 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12348272 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121448555 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.145759274 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11401271 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120398095 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.13501939 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.114009726 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113962081 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.160499992 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.112435111 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121729364 seconds)
  done (took 10.061504699 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.129851129 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140686849 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.144453836 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.11996652 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113226227 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127510175 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102334838 seconds)
  done (took 1.940291861 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.105582721 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.195407519 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.215079677 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.217097017 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.214543094 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.199383041 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.154116383 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104594877 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.138179421 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.1400897 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.194373129 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.248153564 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.138259823 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120920329 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.218760647 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.105499001 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.222005316 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.104895597 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118804927 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.219070992 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12092009 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.161713561 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117215342 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103048926 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.21567547 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104511387 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.270616525 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147246286 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115539548 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118388739 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.143690123 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.18453907 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.21764175 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117640216 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137003079 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.191093987 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.215968966 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118047951 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.231591959 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.107946249 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.215889347 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117948902 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.145919574 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.120156941 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119065104 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.202674307 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121638374 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.145288152 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118308234 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.224760315 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.115785484 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.219911628 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.116086984 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11760708 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.140350648 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121854948 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125818125 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.147124009 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.199673793 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.147988627 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.189502356 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.218227828 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.218428487 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.190162439 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.156597134 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.219522985 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.187145372 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116351355 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139664516 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120051603 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.219873475 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.117904293 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.141723481 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.180622897 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148451731 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.192546478 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.218924156 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116729529 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.143710042 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.110263828 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11668478 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.130057413 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.182651769 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117299995 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.144717597 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123636912 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14238126 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.121111896 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109233961 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.153023938 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.120269809 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115467449 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.151436328 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.120953177 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120093158 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.220871226 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.140080688 seconds)
  done (took 16.240745909 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.110254736 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.106553217 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.110183704 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.133054387 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.107028943 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.10670644 seconds)
  done (took 1.747061226 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.146443406 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120042258 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.15515605 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122132479 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.1970131 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.200114172 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.230084913 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113965849 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.163821773 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131694945 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.226113851 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.20148952 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.229341445 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.148081974 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.205530871 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.147138509 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.205369364 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.143721052 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129655873 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117855952 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.147332136 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123911632 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117379023 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.217895233 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120066071 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.150290214 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.114075626 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128526964 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.155821027 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.114978373 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.149095445 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.122836525 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.11272021 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.139241209 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.20557172 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.139804864 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117376909 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123232129 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.149945616 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.123431979 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.233198122 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118275013 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125933619 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.151081155 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.115012846 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.139150472 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.125935299 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113838435 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.230735424 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123066098 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.150723213 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122731314 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120398569 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.150527529 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113529121 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114253443 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.150813982 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.23176694 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.124947521 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.112738559 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.146425317 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.122729725 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114259107 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.152070747 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.123119157 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122579188 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.139806493 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123201211 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118159649 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.14897569 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.124775225 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120019485 seconds)
  done (took 11.61541728 seconds)
done (took 42.658813781 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.552651805 seconds)
  done (took 2.629038823 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.919414423 seconds)
  done (took 1.997735646 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.104255302 seconds)
  done (took 20.214177932 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.537573043 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.620396668 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.050352711 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158568694 seconds)
  done (took 3.444989947 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.043725375 seconds)
  done (took 2.141542146 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.300085468 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.272614227 seconds)
  done (took 1.65850085 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.757717289 seconds)
  done (took 1.857452016 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.551726585 seconds)
  done (took 2.635494782 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.358887002 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181991339 seconds)
  done (took 1.63529864 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.630674444 seconds)
  done (took 1.72788028 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.354100273 seconds)
  done (took 21.453847687 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.244521084 seconds)
  done (took 1.345297255 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.287502894 seconds)
  done (took 1.392718677 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.802432255 seconds)
  done (took 4.905104438 seconds)
done (took 70.128440169 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.118309415 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12071065 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.144288016 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.118948147 seconds)
  done (took 1.595061693 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.127427938 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121212518 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.149149913 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120945178 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12745309 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.12010613 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.147291336 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122286452 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117776774 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148894164 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121062191 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118519479 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.149688619 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118700819 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118424869 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.150196362 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125261216 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119920652 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.147592281 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121751149 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.12106748 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.150444733 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12411603 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.123469645 seconds)
  done (took 4.219510348 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.117519979 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110889177 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111576411 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.136213591 seconds)
  done (took 1.581275299 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.130189068 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133782502 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.157947653 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.129679438 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132876649 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.158812919 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119910066 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116944235 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.147832377 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129889475 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.136320501 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.160566564 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.133496991 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.147413684 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.133251946 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115693349 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120792512 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.158876044 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126795875 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.153842253 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.121664826 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128641436 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.151460527 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.130634558 seconds)
  done (took 4.378990376 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.197658891 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.130611746 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173432945 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165417894 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.174999117 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.118287256 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.142369779 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.153861102 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.125105138 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.147890638 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.123936752 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166084099 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.153304407 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.122472992 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119713141 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.152524838 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.133083612 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.150300022 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.163425538 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123631383 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.154393421 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.132985812 seconds)
  done (took 4.33432 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.123421129 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110444611 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.131832648 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115089787 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122923671 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.139107065 seconds)
  done (took 1.857200055 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.109851081 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104667741 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104972679 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.130842745 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.110524918 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.105024373 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.130007808 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.107153467 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104892952 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104697689 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.132260596 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104892041 seconds)
  done (took 2.456783998 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.340751887 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.10998068 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.13792411 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112087569 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.11654459 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.10841859 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.150999568 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.109530132 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.273591312 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.108749782 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.15062382 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.198773014 seconds)
  done (took 3.031918455 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210894978 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147678541 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.30593111 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.372178832 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167675754 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191401719 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.271535692 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194571611 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.211981105 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139819989 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250232179 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157453309 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183882927 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176401209 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168497109 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.157966256 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198593878 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220366314 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150138837 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231355435 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157324418 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196479472 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207786793 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153036608 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136436718 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191767755 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120948254 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156845166 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172247794 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194396658 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199294703 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150621723 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144891562 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223071941 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263351828 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201340486 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288763335 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136191993 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.202724835 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.186803876 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259905288 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168962201 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216640563 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15627028 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129758383 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208334414 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180872869 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177196868 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.157767215 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144728027 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209709526 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17576416 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.20745468 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135498551 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319267432 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196066167 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142713926 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199915574 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185323989 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219541701 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193254245 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.125808449 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207591066 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184381149 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209886551 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141715273 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.196692096 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124866189 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19529446 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222764403 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182965466 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188386363 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.230902707 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131057329 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186848099 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174004549 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206495742 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178262001 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189248849 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121057009 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177993982 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137843251 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126953056 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.231668796 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123666748 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229615268 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132626935 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.344178578 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216537044 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157866445 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189640176 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185671971 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162507113 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174065479 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.10731076 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147419212 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.192858388 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157129462 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161897965 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159184289 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167678345 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131302918 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178950996 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125667925 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158888623 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.156496327 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165894138 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18788336 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.133960824 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194462403 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149839847 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.182200348 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170192785 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214718653 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133259594 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161501034 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19165675 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186913651 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.134781729 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20694948 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1862647 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.172708635 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136388656 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197478717 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216252137 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143844373 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218102152 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139390761 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135856307 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.170591544 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160278006 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188615207 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.153103412 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158402602 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.152127952 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226712307 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.128274719 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167274152 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169013693 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163300223 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125887118 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164957634 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138128601 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140854271 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.174864733 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135003152 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182686303 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158258503 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18562304 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157056496 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163019145 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179781035 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16210858 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.162640917 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174317017 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121426407 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.204044381 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186750391 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158326062 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202539073 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.192310097 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218957765 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160416641 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161922768 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179310111 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156503677 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122012961 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190107103 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15841176 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189734658 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.182656614 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217797035 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.197468525 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152763964 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177240947 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169349336 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.206189366 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154366618 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.173512771 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157652211 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194419338 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.121207377 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.153929143 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.131253329 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13737137 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159632286 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135547395 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204866591 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165069903 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213884741 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188059113 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140372759 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214306762 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128809318 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190588615 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.166590355 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169758013 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.182889376 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211723857 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192694476 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143112791 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189548256 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.123782391 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125904394 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.162232739 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164383268 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164004621 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138248091 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141316216 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211778361 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202544705 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148496499 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226623574 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196898296 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195180953 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.150881173 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16895422 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201838153 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158767032 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.212061647 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1394378 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.186272253 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181679862 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168516597 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190393919 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186596475 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16326049 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219561063 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.156130385 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161175036 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150710634 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189184358 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137790077 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195409224 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147412588 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159727883 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153756026 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.165768893 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127966231 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214603733 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144947358 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200383399 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.16115959 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200484719 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125489548 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170247449 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161271663 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174166238 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.110277541 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170846572 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214632251 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174319024 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159029436 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20626811 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131807797 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.348456362 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19229823 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208320156 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135733455 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171296501 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163849448 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19317041 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162417878 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210480806 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14108738 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209786304 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18694405 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.145576558 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131102038 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179761101 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151682027 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.170810991 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.134647699 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.187513155 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.144318718 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217251018 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139348527 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190180767 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161758128 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.179678992 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.154488746 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13882146 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228376158 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187375955 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176670317 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.185483994 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.16857841 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222288068 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124517074 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158523334 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134061602 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211548413 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131053292 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191132417 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.180387202 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221456178 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194480669 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162279376 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168739039 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.128861447 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18652676 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150307403 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220478613 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136513144 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.168766828 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195076232 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.160484532 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131804494 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190307715 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306029464 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149592311 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203564983 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.115719445 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.299955355 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131399176 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132398856 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195393154 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172381606 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.163102488 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.185406959 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192943869 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143226309 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194512548 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138643472 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213689823 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222583126 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171612952 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202841383 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.145776961 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191160066 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161598124 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208849147 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143117399 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.177723334 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164058787 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213410532 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.211850457 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.13383059 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15880804 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188607442 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15694927 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202512807 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137104711 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221451271 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127673394 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194776108 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138207784 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155931503 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159314239 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.208012284 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131781605 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212012564 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188263791 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134729644 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127426606 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177406551 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158144684 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169824886 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.132008607 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213942538 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129840944 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195160303 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181431908 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158995102 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159296347 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147123816 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162123007 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142044192 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172171532 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132985811 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172323607 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213283062 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13128191 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212341669 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192741583 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167848102 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18725363 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143792727 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.695352087 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131071923 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184116656 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177788754 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220172121 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151907768 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193491429 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161441446 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177483309 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166885421 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178367002 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.24173415 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194202425 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.160376799 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161868208 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145540065 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139889352 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.163279545 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153046957 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188525664 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14166233 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.164317799 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.158728057 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170751098 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.149128923 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140516942 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214908417 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149276052 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215177761 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21236823 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138998604 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192818344 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174517925 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161270159 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.164948805 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204063312 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140402967 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18034278 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134379823 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.165925869 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185617764 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124156938 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189373663 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162824179 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190736129 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159396467 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.165866559 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162621928 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171871938 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162314897 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156187468 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.156007035 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190488486 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137419802 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127525876 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188615171 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159822272 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.186543835 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127831722 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.173317785 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213728378 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124043649 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163750572 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276588716 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190113632 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217584695 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.143344579 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134767808 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174570251 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155811876 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.185826412 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161633402 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.160738458 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132229718 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.131271059 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.196059003 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.148069327 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191449493 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177015388 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192206348 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222308829 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137716186 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.323314786 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143013723 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159392795 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.150257339 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130731239 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141970236 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164617401 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14174944 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218759751 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211806257 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.155837339 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.176727829 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13802188 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12482674 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160410556 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168212256 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181354074 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161780853 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17586799 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.108334673 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143830125 seconds)
  done (took 85.477331032 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170037919 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15615167 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.173403762 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.23014328 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201530927 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.303957898 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.239347681 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268346525 seconds)
  done (took 2.943345895 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.123514972 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.163627228 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142652572 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.149110327 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.120864711 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.455980996 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.160762339 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121825177 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.170157271 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.163130152 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.145998128 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.634899095 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116060723 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.149026011 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.129464366 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.121791111 seconds)
  done (took 4.260403056 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.579899919 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.603064213 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.377983271 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.795580361 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.237836416 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.183427122 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.823200947 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.19591106 seconds)
  done (took 13.99889318 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.149562449 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.139266009 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.324212246 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.267167308 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.152572593 seconds)
  done (took 2.235510831 seconds)
done (took 133.462872013 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.126294952 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126132758 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.125202626 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156612064 seconds)
  done (took 1.723499237 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.18678027 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.095004883 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.096745687 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122581759 seconds)
  done (took 1.702794407 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.45562286 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.094453143 seconds)
  done (took 1.77805267 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.152629409 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.148308683 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.172592891 seconds)
  done (took 1.686971901 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.144933441 seconds)
  done (took 1.350294053 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.130853368 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.122511363 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.24616218 seconds)
  done (took 1.708930777 seconds)
done (took 11.158690909 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12361376 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.423614007 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.435486251 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137541311 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.712095927 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.431420517 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.07552693 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.178250495 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177089471 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.141100484 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135397297 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.691084903 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.060200422 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.365596243 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.014839762 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.484019275 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694633412 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113372606 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.149113982 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.1141292 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.082697747 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112393831 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113834768 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113214808 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.720490227 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423356508 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110892993 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.500779265 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111364498 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14157051 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.40194181 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.1118804 seconds)
  done (took 17.797431667 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12099202 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175546959 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148571765 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113906225 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115140136 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142802508 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124591899 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12312104 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.209218182 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110768214 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.165890466 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111776721 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116349195 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142604709 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138632115 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11079038 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.145257068 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115635933 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119396286 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.14267656 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136320685 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109907043 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.142880529 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11464715 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111196515 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.164295688 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112729456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122811742 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.141262225 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116876729 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116589566 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.1423304 seconds)
  done (took 5.439242022 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160819949 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183373344 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150711579 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151733246 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.190394395 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114716202 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.226250827 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150439451 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207213845 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113021052 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135374662 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.14170369 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153230582 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112211374 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.170140064 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112336474 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115703841 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143800234 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121031317 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.14085791 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137833055 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112201463 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.143065445 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115448028 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112314205 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.164978264 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114438384 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124702554 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139040918 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.117705874 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117762727 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141380658 seconds)
  done (took 5.748442711 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.128296578 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12820953 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.136149826 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.168379442 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122766201 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125587671 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.158183603 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123836257 seconds)
  done (took 2.303177427 seconds)
done (took 32.493896632 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.139304533 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.133516583 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132358862 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.155416204 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.231122969 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.120246632 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.13070526 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.148545223 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.128583893 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134227861 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111253655 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.150581555 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133948733 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121639229 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.229843299 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.126718472 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.236131749 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.230002123 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.120880933 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126525263 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.15032918 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.205251879 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.154296832 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.120958496 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.204180324 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.146143969 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.190033284 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.153555816 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.123241017 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.113470575 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.230563317 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124289648 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.14812261 seconds)
  done (took 6.310415183 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.217185639 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.121907631 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.152562037 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120944575 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121975334 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.151368288 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.219369948 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.152261802 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121376833 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.11941581 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.119377295 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.231434029 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.125721269 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.148408502 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123606343 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.114439322 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.250161003 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.122538661 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.142436242 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.097442598 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116527293 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.119587216 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.259973614 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.115703803 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.151720805 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.12287152 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123423366 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.124608417 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.153565959 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.123972644 seconds)
  done (took 5.602602581 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.130226068 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134793464 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.167749864 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.189937706 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.149109734 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164599104 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.143355469 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135404305 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.17551207 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115914137 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129663376 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.18203008 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132679512 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.154568507 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.120672578 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134116979 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137662763 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.146891261 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122468417 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131867455 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.167278659 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.134023816 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.170867453 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.125284938 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.113099683 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121933112 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.155431996 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.130190587 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121834771 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.160200177 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.117253979 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117758795 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.147618476 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.15131533 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115104382 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.16005971 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140666228 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12711836 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.160645492 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.146570939 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.147855143 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.11952459 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140952366 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.201807186 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.116843927 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127479949 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.155471479 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.130140242 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113851402 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132573074 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.189841599 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.114878137 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.165660204 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.117177693 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.113039907 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153348941 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.118239947 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118203538 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129189978 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.1497376 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.139697299 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121929959 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.157293094 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117666689 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123897713 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.144596471 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.116193287 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118833038 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.173319549 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123025355 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.151363562 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.144409329 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.128071195 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.127324619 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.154374647 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127747929 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113552095 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124346265 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.155391733 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.121505819 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.12644686 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.148096286 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.119752148 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.13162339 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.165934408 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129499656 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.126450716 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.159320771 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.119406162 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.116188031 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.163034745 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.116093606 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.120559572 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.158859187 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115924511 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118557323 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.158702108 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127055709 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.11318043 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.17015109 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.12047145 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114532109 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.169031315 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123787182 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12146006 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.124396795 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.189614015 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114584073 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.155338689 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.130792794 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.115224774 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121684009 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.149837551 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.115383688 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132372249 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.161550155 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122452798 seconds)
  done (took 17.341642485 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.334292853 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.318255049 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.183866568 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.320930511 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.161395165 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.216103925 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.314479125 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.317370795 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114616764 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.185183144 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.200387359 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.285890027 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.117302429 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.142627153 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.318359433 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.370535175 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.178083231 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.15169738 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.184544115 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.129216854 seconds)
  done (took 5.784010037 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.137366411 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150946597 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.170549754 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144679531 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125695432 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.16130485 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115917424 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136478329 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157819107 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127874234 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118129743 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.162056598 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127232845 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131262738 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.162894755 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.153950558 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123482194 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.150813039 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138358741 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119276591 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.137692969 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142244357 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123916903 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.171160865 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.13366135 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.156960357 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.116279059 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121245061 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121740017 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.155755751 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120406458 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132215447 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.154118009 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109679488 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127280541 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.162949399 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.123404967 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116796876 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119590139 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.153946569 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129972358 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.128295554 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.15524087 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103766021 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133392651 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115089258 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.161230716 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128761508 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.10979633 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.16599785 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129541727 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128850687 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.153777483 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.138410725 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.122913599 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.163332826 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127874934 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129407713 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.151556489 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.115299212 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114355684 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.149927198 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.126896879 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129532775 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127046407 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.168738781 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.133221684 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.145778774 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121921551 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121394882 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.148850737 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.133181642 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.136695549 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.153327583 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.124676288 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.129111193 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123162676 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.130031574 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.127060987 seconds)
  done (took 12.007709343 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.143324924 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125254346 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.163794214 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.15462657 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.129429275 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.151712482 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.126740954 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.136651785 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128873845 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.16551115 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129853905 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128748067 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.169403765 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125858652 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123405285 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.164002829 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129094424 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.185459428 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.136673797 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.144434443 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.160469328 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122804628 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127978009 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.158055146 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.147969824 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126845248 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.17381185 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.130343486 seconds)
  done (took 5.260759733 seconds)
done (took 53.524663289 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.401450052 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.575311722 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.345781654 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.338649035 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.375609491 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.339513923 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.336889571 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.341111062 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.98335861 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.313703386 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.340447549 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.350139969 seconds)
done (took 30.283488532 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.34098629 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.849067911 seconds)
    (2/2) benchmarking "String"...
    done (took 1.643390692 seconds)
  done (took 4.722748712 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.329968459 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.330240893 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.564829809 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.333798556 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.331390949 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.347285936 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.328704915 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.332473864 seconds)
  done (took 16.7994712 seconds)
done (took 27.422617738 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.417680043 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.532352455 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.59731938 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.329833418 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.346491697 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.357049387 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.331995236 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.360264518 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.339498899 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.331322873 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.743179703 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.59959167 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.335694601 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.713281781 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.331830862 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.330362579 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.344487507 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.5680834 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.328095419 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.358125642 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.306595071 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.306500382 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.364893664 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.332783739 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.334873539 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.330947896 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.366474848 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.331061129 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.531097484 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.371966915 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.361548243 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.331704042 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.369436785 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.328877095 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.332358931 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.338312865 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.520064558 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.337725515 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.31191339 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.333390977 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.530517612 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.349593391 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.328878635 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.335896807 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.331081456 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.411087295 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.312807868 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.442259005 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.355363089 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.332078219 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.341915366 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.717994225 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.337263305 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.330473944 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.329319789 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.555253065 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.350854716 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.397217872 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.351264906 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.329227875 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.329404436 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.331129445 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.341647789 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.339919566 seconds)
  done (took 152.081682468 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.329949477 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.333864511 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.334051863 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.396679644 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.334991847 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.333987857 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.329324861 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.330947197 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.333887457 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.363720197 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.335642375 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.330416279 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.334921384 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.283128453 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.339907765 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.351185866 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.334795557 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.33021634 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.33779894 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.330499058 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.332612764 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.336294228 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.348649356 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.330163635 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.37881853 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.409815847 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.36300572 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.337885578 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.344989892 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.331803065 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.374355567 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.381200038 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.96188205 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.201589803 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.339507186 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.355385455 seconds)
  done (took 85.087034829 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.330998896 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.330145153 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.32983583 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.365898274 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.331303912 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.909753045 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.922038905 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.860770536 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.368699282 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.729243481 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.635380027 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.335377555 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.425892647 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.343166792 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.333541635 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.348536463 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.359532115 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.332148033 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.33216747 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.907387563 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.342961464 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.502512758 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.50880646 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.347225616 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.363744624 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.723328417 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.330242385 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.365399409 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.66312767 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.380741215 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.330769419 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.725020367 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.473494986 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.44602375 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.332503092 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.363647542 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.330354716 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.611701267 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.331045482 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.331328521 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.332190101 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.334020032 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.022918888 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.336175703 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.903683967 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.332255771 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.295706021 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.3363168 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.331260941 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.40365273 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.030964122 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.336520825 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.332620623 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.333867006 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.330223583 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.330617623 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.363964838 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.447867961 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.426212993 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.331892863 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.333771314 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.361866058 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.329623564 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.387130162 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.330606184 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.329788323 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.384353918 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.572313989 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.697770459 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.890026754 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.329405435 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.424410226 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.450383275 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.329848175 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.328533697 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.328297825 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.329952081 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.327434055 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.439424884 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.32857286 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.728276142 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.502173057 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.34712886 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.639243889 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.334377857 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.424753384 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.329472569 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.682074763 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.335004278 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.331147612 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.056723791 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.424710531 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.329896819 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.32977685 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.330890727 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.730567746 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.891600943 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.572334404 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.334211065 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.628367335 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.334494741 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.744630459 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.874502003 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.003793551 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.335566556 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.444846963 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.504594655 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.348977533 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.330225368 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.645420247 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.335920539 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.385716706 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.33511579 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.733189043 seconds)
  done (took 379.637188838 seconds)
done (took 618.032602233 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.220050159 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.168081849 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.312034414 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.180096403 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.15506418 seconds)
  done (took 12.264116212 seconds)
done (took 13.492536022 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.520433244 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.522362407 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.395486728 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.521247338 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.362893773 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.535831334 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.507424625 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.35608645 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.444181651 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.41065959 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.441686606 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.383274368 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.363266014 seconds)
  done (took 19.993862555 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.620011448 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.342373897 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.402267824 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.620472536 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.379568892 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.607544927 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.657046412 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.342973481 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.486881058 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.351106808 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.351895529 seconds)
  done (took 19.392738128 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.619429449 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.34383226 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.392978672 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.620913334 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.376340639 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.609709474 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.645696112 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.344020995 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.4870199 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.35374804 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.35011038 seconds)
  done (took 19.374840293 seconds)
done (took 59.989216162 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.368169699 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.430388128 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.367759053 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.351388326 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.348718128 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.350520812 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.352934802 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.351664115 seconds)
  done (took 12.152734975 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.350011426 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.34875967 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.348430932 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.348212486 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.3479291 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.348267611 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.350113823 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.347781322 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.347093376 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.3488679 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.348853022 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.349175196 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.348407448 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.348386968 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.347571102 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.347740976 seconds)
  done (took 22.807004462 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.349728152 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.348885793 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.349245809 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.347844458 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.350604853 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.350339759 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.350530337 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.348637706 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.349090544 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.347667336 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.348761961 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.348787489 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.347784699 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.347400042 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.349291701 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.34871368 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.348464414 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.348696832 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.354171428 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.347506995 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.348534581 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.348643033 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.349256304 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.348738912 seconds)
  done (took 33.609352541 seconds)
done (took 69.79945294 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.334553206 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.368567257 seconds)
  done (took 5.933374916 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.409526228 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.409496218 seconds)
  done (took 4.049216084 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.351993279 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.350585259 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.350378333 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.349109291 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.346471475 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.34960465 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.350124098 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.350230566 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.349280944 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.347911603 seconds)
  done (took 14.726729514 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.348626632 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.348089287 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.349899551 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.347546533 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.349667809 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.349881398 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.349134647 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.350219953 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.349362908 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.348744313 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.34966701 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.349688113 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.349840754 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.348215843 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.348745411 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.348887903 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.350065015 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.350389089 seconds)
  done (took 25.518718464 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.364586046 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.370706212 seconds)
  done (took 3.967713865 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.489750348 seconds)
    (2/7) benchmarking "second"...
    done (took 1.390848754 seconds)
    (3/7) benchmarking "month"...
    done (took 1.464647475 seconds)
    (4/7) benchmarking "year"...
    done (took 1.455745406 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.393007435 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.371672919 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.391783551 seconds)
  done (took 11.18960549 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.350584427 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.556109351 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.683526314 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.895174868 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.351231731 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.352752501 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.185803942 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.354462005 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.355511976 seconds)
  done (took 15.316515514 seconds)
done (took 81.9337117 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.334333388 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.375748612 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.356661121 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.364569838 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.64504816 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.390069423 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.339123326 seconds)
done (took 17.039204748 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.316682588 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.321613405 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.321104709 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.346865676 seconds)
  done (took 10.538770909 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.337103679 seconds)
    (2/2) benchmarking "read"...
    done (took 1.628848928 seconds)
  done (took 5.197697066 seconds)
done (took 16.968169959 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.349732743 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.350041338 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.35041172 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.351798267 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.350100584 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.348843354 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.352424971 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.350224009 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.349152296 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.351725977 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.353456866 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.351060333 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.350431267 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351154672 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.34874529 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351197207 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351486459 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.350630888 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351621559 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.351452402 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.351755296 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.352477242 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.34922696 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.352654308 seconds)
  done (took 33.654710295 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.353304559 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.350651854 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.350766622 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.35246193 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.350660496 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.350346099 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.351666362 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.350417018 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.349712806 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.352251917 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.351889299 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.349757502 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.350908419 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.351108275 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351392777 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.351079283 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.352733805 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351006031 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.352232781 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.350535093 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.351425574 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.350684591 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.353122766 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.351875717 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.352776681 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.349660208 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.351962505 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.351120907 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.351864859 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.350726562 seconds)
  done (took 41.773478654 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.355194234 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.354632077 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.350832387 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.350323709 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.351296958 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.351698318 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.353345596 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.351362252 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.351353661 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.352188073 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.350981144 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.350787286 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.351924183 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.351094318 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.351798175 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.351782124 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.350828396 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.3522425 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.350540969 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.352457798 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.351151917 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.3545594 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.351861722 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.35214443 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.35096689 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.351775453 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.351573729 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.350913847 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.352727128 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.355637485 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.351918896 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.350525214 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.351735186 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.352811567 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.353262244 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.351907669 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.35688694 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.357397262 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.351470373 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.352346042 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.351515277 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.351413711 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.352286294 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.355354382 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.350873698 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.351267063 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.352993926 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.352449661 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.352493103 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.353562912 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.353538808 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.352171024 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.353009593 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.350138316 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.351468351 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.352949022 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.352227479 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.350895934 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.351491896 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.351214857 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.352669451 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.351202767 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.352098459 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.351789217 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.352420449 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.35200576 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.351558647 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.35201678 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.351873782 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.351954755 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.350567452 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.352373037 seconds)
  done (took 98.592730176 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.352557936 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.352919665 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.351776291 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.352508044 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.351133572 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.353550106 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.351919624 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.353223742 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.353722873 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.352798182 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.353168551 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.353322593 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352326713 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.352882939 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.352075165 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.353527895 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.352632258 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.352653447 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.353165365 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.35282098 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.352364526 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.352854096 seconds)
  done (took 30.993978801 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.353742687 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.35527798 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.353237367 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.35576505 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.357202611 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.354379133 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.353911734 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.357114862 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355508865 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.352817822 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.35398191 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.353980124 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.355092938 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354316524 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.35410245 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.356453722 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.354261101 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.357591471 seconds)
  done (took 25.623815551 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.354758039 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.355939782 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.356273016 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.354448902 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.357156352 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.357380517 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.355163122 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.354128501 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.354147446 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.354260165 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.357648894 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354194075 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.355912778 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355409347 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.352800248 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.354713035 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.356835196 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355909751 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.356255197 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.355827542 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.355839371 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.354949086 seconds)
  done (took 31.056486038 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.356885847 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.356431913 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.357294252 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.35577532 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.356412205 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.354714361 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.354351182 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.355802021 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.357635512 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.356345725 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.355543664 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.354447412 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.356736463 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.35651528 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.354053797 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.355604001 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.356914443 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.357234778 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.355633299 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.356032153 seconds)
  done (took 28.357219183 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.356321727 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.356228493 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.355907722 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.356397363 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.356757407 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.356665795 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.35500817 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.356877623 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.355288856 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.355652202 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.355063601 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.357669758 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.356679466 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.356555209 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.356037085 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.354952873 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.356998089 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.356090391 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.358379138 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.357059619 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.356329266 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.356441247 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.357383237 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.35710688 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.357010639 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.358581503 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.357677744 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.356084636 seconds)
  done (took 39.221125819 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.357734157 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.356741667 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.357608301 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.358251929 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.357391149 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.357462602 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.354101562 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.35696296 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.357849009 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.356645713 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.357892058 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.357696801 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.357909144 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.356655012 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.358088917 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.359224299 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358489226 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.358027848 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.35858184 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356416102 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.357560024 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357850717 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.358308975 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.357125916 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.358220597 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.359066163 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.358813639 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.358190059 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.357526685 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.358767877 seconds)
  done (took 41.970260206 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.381358343 seconds)
    (2/2) benchmarking "in"...
    done (took 1.378393831 seconds)
  done (took 3.99900964 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.358127942 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.359144241 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.358473318 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.359003152 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.358168698 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.360439148 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.360182271 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.358467069 seconds)
  done (took 12.111230121 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.351391809 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.359947709 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.360132587 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.360715838 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.35832497 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.352112569 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.360539393 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.36381838 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.355413912 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.354993721 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.357654648 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.358038184 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.356771581 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.355387438 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.354853451 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.356785987 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.362926694 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.359943181 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.360246917 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.360875595 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.361316428 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.357510654 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.35777791 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.365008966 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.355476534 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.362377206 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.361288937 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.364331347 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.355770671 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.358258128 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.356720501 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.363965601 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.360612028 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.360798793 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.359624454 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.361845171 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.361511222 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.358501264 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.361321147 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.365721387 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.363357747 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.362037715 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.35714643 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.358046994 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.357666407 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.363998338 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.36318193 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.36287681 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.354649333 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.359280979 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.365198229 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.355635772 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.364444658 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.359005635 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.359694031 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.362845274 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.367215598 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.358554315 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.361502194 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.364824112 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.36946172 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.36560296 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.36019798 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.365881854 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.365284529 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.370746721 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.36413645 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.368232704 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.36481964 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.364035615 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.362798077 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.371182318 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.368485715 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.364955324 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.362068884 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.364461618 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.356035368 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.363898668 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.364797458 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.363998944 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.36660756 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.365763397 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.365343649 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.370228604 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.357570328 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.365570227 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.363527582 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.366072997 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.358130198 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.366806064 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.369868055 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.364687334 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.357907112 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.360368016 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.358451298 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.364902261 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.359393212 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.359457208 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.366486954 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.367433212 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.365218464 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.361014272 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.363962802 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.365580863 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.365937153 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.366227527 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.371287645 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.36068902 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.367089771 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.371635512 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.366760897 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.360710881 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.362673354 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.367516033 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.361493936 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.364780531 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.367258337 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.361546664 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.368356867 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.367905412 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.367543153 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.375354878 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.370025329 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.367253212 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.362091667 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.373282143 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.366446387 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.364800403 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.370636252 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.367704872 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.367554879 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.362550063 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.369775283 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.359723409 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.368113125 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.360361864 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.367880445 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.367682495 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.367472581 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.36128709 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.363662876 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.361653489 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.363264321 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.36533463 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.370621345 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.364168022 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.369383095 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.365961541 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.363225561 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.364064802 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.371658078 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.369921161 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.362602798 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.369349436 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.361962793 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.369317471 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.362881931 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.369848082 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.370504522 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.369523758 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.37019227 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.362462788 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.364052921 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.369068825 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.365817907 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.363503839 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.371072102 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.368061181 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.370775118 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.362472775 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.370348416 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.360991986 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.366896726 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.373129901 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.369748283 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.369523863 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.36395881 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.372257045 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.371716743 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.371024644 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.366397328 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.367655922 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.369773673 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.370478313 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.373554892 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.37043486 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.372490742 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.363415758 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.363769637 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.37194677 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.36575857 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.375711192 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.375887286 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.373781301 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.365123885 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.373188136 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.365428783 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.372851745 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.36826663 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.373519701 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.373340558 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.372257725 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.364543529 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.373214186 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.366054957 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.373287302 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.36487376 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.372780033 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.37389975 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.372131528 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.374294924 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.365739304 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.366919428 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.372952066 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.372232512 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.374064375 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.365054614 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.376261519 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.364823333 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.365216044 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.375018325 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.373558119 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.37300536 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.374458369 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.367376949 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.370992357 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.369507238 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.368343251 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.375388017 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.369562345 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.370406952 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.374919018 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.371147102 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.368954098 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.375040798 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.372407354 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.369167659 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.370816484 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.377021292 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.374970728 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.369176288 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.378815166 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.377117989 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.375760819 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.374936801 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.369476164 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.375947219 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.374939644 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.379121474 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.36829293 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.37711451 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.370203737 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.375904408 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.370029029 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.368811601 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.370421568 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.372987904 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.377080951 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.376949717 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.369603149 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.376429927 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.375494434 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.373962803 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.37008488 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.378856832 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.375216031 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.371270706 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.371908162 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.370151136 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.378085863 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.36783693 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.377644438 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.367646565 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.38110449 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.385022671 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.376597357 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.374057864 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.37851444 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.376727901 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.374058174 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.372246781 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.371738092 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.370171106 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.369800633 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.370502292 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.379214942 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.370355743 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.378509798 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.371183639 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.374034328 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.380919118 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.377363487 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.370533836 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.3778288 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.380000579 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.378379248 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.371537577 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.377575249 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.373122474 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.37418528 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.371533004 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.37248082 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.378664465 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.376406136 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.373384337 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.372390686 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.373195238 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.373928092 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.373571616 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.380300158 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.374334352 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.382148232 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.374351457 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.377638777 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.374384793 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.380071308 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.38309215 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.374233832 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.385208095 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.381285265 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.372550893 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.373584155 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.379776328 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.379735803 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.384168296 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.372554383 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.38221253 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.38145889 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.381470455 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.381255307 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.380569053 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.379842113 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.378144387 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.382521466 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.379334881 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.376342163 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.376450418 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.381909489 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.381577543 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.380794901 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.370165627 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.377144385 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.382034002 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.373374495 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.375495004 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.373466354 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.383625241 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.380193411 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.381398683 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.380300539 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.382218472 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.380368051 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.379939361 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.383129318 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.381678775 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.382443745 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.379811966 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.378168129 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.383898125 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.371324401 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.381230988 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.37880276 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.374013916 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.36886591 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.366040901 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.372904124 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.36632732 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.375982832 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.371476512 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.366860008 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.367736712 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.374475588 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.364639677 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.373728077 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.384408599 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.3657777 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.374535632 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.371046319 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.36604831 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.374436604 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.373789839 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.36394788 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.367292165 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.372780775 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.376439841 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.366705115 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.373595806 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.365237348 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.372643431 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.37274942 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.373394544 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.371642262 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.374445816 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.362974168 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.370286899 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.367086581 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.370521743 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.363509459 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.363729142 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.367579774 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.368787828 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.369156773 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.361007807 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.367279427 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.36846427 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.360627398 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.363239098 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.371409066 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.357730139 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.364684056 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.355683391 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.361560613 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.359630121 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.359716928 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.360519037 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.361593978 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.353805934 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.355022329 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.35882788 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.361331805 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.359739997 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.356265036 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.358019947 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.350932106 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.348516462 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.35697427 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.35047803 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.358565956 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.351124085 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.353309998 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.347202865 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.352314798 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.353850256 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.354055592 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.345937247 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.347266762 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.353502554 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.348184384 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.348541939 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.347467328 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.352028258 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.343242435 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.346255887 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.35024953 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.339348818 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.340569169 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.347722125 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.340691647 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.341096155 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.341362008 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.347898281 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.348989825 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.338998181 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.337247786 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.345471068 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.342694029 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.344279594 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.336110034 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.343620815 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.334040715 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.341055276 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.342175812 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.333506752 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.341498474 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.339481009 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.342686363 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.337342326 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.332847467 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.33220227 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.341337438 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.338738983 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.331859254 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.339614389 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.33572951 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.336559616 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.335719267 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.336874165 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.32810573 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.329223455 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.331360661 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.33504048 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.337694478 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.328775812 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.329010867 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.32839363 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.334773418 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.334337733 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.335221356 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.335962784 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.324876506 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.332772199 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.325584688 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.329736074 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.326624345 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.327073748 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.334326414 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.332918939 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.325533298 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.329355648 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.333810406 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.329703341 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.322788817 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.323101519 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.330976827 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.329999549 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.32805736 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.321385431 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.32275299 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.329894709 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.330022076 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.329445597 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.324249303 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.332606381 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.331697256 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.320934572 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.321142014 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.322825474 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.328180514 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.330736427 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.326198335 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.320451822 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.320702214 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.330355482 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.325094779 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.325241377 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.322467549 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.318744962 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.327328889 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.318186976 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.318196562 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.319710941 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.324261532 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.324141834 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.321387903 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.328149235 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.325428077 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.323203089 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.335861899 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.320844474 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.317604558 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.32408654 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.31950942 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.32212644 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.315193149 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.322423725 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.321305634 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.321094019 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.322327635 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.315356103 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.322064219 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.317288701 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.322838034 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.320241576 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.313752943 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.314410685 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.320107465 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.323291689 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.32032787 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.318188985 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.31869513 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.318674548 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.311728259 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.323533506 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.323031429 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.323229958 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.316640711 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.319125544 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.314071161 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.315023911 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.315891746 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.323753816 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.317117115 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.318705166 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.311196757 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.319377823 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.319838645 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.309512815 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.311413096 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.311041194 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.318612324 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.320815583 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.325940631 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.317258877 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.313596282 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.317719862 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.319393961 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.310682114 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.319670963 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.319276075 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.311733012 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.312178809 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.320332234 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.320323465 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.317956032 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.312711302 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.323486063 seconds)
  done (took 810.315384932 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.319077458 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.319136048 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.31891218 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.317594538 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318583281 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.318436416 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.320058434 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.31949468 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.317484882 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.320172164 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.318633362 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.318884893 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.318903289 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.320712401 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.318677939 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.319680549 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.31877684 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.320524775 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.320068487 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.32039888 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.319208071 seconds)
  done (took 28.910599303 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.320234374 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.320100634 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.320656625 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.319796212 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.320361824 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.32088764 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.320905727 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319877012 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.321260097 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.319330315 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.321743367 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319943403 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.321833544 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.320425839 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.319829172 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.321416802 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.321343588 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.321625127 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.320629804 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.321895449 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.322419752 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.320189444 seconds)
  done (took 30.265022669 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.321370749 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.322882891 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.3132261 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.321217013 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.323498271 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.323125802 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.321592231 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.320350345 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.320203912 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.314431393 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.313734728 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.315807909 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.318222525 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.32633647 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.317803499 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.323624984 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.323106981 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.320564309 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.322274824 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.321946798 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.321424682 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.324465817 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.321097224 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.314980301 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.323451346 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.32257196 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.323874976 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.322756035 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.315642023 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.325039553 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.322546591 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.31431996 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.319680826 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.316936475 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.316087091 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.324867197 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.322852271 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.322941138 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.323660283 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.325850728 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.33639738 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.32453568 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.322706003 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.327178431 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.323235458 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.318433878 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.328000064 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.324212829 seconds)
  done (took 64.645323241 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.325134901 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.325501974 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.326567078 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.324770227 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.325111805 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.326303507 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.324507252 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.32496048 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.326283498 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.323517709 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.32419223 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.326139387 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.324988095 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.325655853 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.325951645 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.325609135 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.324087797 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.325326695 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.324182918 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.325251522 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.325433121 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.326790254 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.326865787 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.324682658 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.32610159 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.325811484 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.325569632 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.326179396 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.325488114 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.324769979 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.324787171 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.326769685 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.326089882 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.326433231 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.3262442 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.326659995 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.325070951 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.325392261 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.327500121 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.325767637 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.326602174 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.327932478 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.326406427 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.325211833 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.327177139 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.326889259 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.326408419 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.326122128 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.327550886 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.326140226 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.326540829 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.326925798 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.326585058 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.32612744 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.327386648 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.3284452 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.327779266 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.328264471 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.327619611 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.328914689 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.327815245 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.327689742 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.329058133 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.327189568 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.326941377 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.327699236 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.327304797 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.328874501 seconds)
  done (took 91.399703725 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.328643822 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.329992579 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.327834003 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.327244807 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.328429679 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.329076774 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.328565028 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.328931456 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.330108573 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.329356177 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.329254915 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.328731874 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.32859563 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.330838385 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.329191307 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.328797333 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.329741855 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.329737287 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.329864779 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.330541067 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.328786521 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.329942513 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.329423458 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.330821558 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.330156442 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.329217762 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.330176522 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.330606692 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.329937962 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.33068842 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.329145069 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.329958049 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.329674514 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.330123484 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.33080136 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.330094883 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.329850764 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.329179837 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.329463367 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.330742185 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.329626576 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.331200918 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.330806939 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.330859685 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.329972394 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.329257452 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.331575045 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.331390017 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.33390547 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.331738341 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.331399298 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.330398881 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.330875556 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.331116166 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.331339342 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.332095499 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.329918215 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.332781297 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.331143548 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.332471825 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.3325911 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.333492219 seconds)
  done (took 83.689281194 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.333639995 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.332930172 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.333621529 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.330937499 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.332558762 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.332800011 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.333539217 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.331977989 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.332441586 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.333236806 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.333423455 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.333866119 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334398236 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.334484456 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.334549154 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.335623768 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.334365583 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.333047683 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.333718995 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.333115095 seconds)
  done (took 27.886580655 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.333747325 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.334635523 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.334084142 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.333906075 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.334615821 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.333135158 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.33327088 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334066005 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334043708 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33491552 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.335070107 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.333954037 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.334035856 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.334451931 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.334806602 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.334386152 seconds)
  done (took 22.566707202 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.335893257 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.335934562 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.33327868 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.334289377 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.334723088 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.33588753 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.334590832 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.335675024 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.334451263 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.334782939 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.3340319 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.335478851 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.334754771 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.334329254 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.335585136 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.336835513 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.336232884 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.336233607 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.335553347 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.336294076 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.336293642 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.335765741 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.336643105 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.336090114 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.33629609 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.336760145 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.337325801 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.337652951 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.336494933 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.338437623 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.337012732 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.337180712 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.33650293 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.33748541 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.336077736 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.337671733 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.337440298 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.33649581 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.336302354 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.337341085 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.337404561 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.338455242 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.336909465 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.338238947 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.33667549 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.33632998 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.337013935 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.338409062 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.338182583 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.33798877 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.337605867 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.337232509 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.336474242 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.337736189 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.338117281 seconds)
  done (took 74.726778316 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.339050903 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.338675368 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.339654501 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.337613791 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.337975184 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.337036429 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.337560167 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.341957555 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.339269147 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.339379655 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.33992335 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.339758611 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.339362367 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.339451313 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.340091559 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.340126115 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.339028528 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.339649673 seconds)
  done (took 25.329309822 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.339165002 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.337783967 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.338040489 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.337818845 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.338501861 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.339550311 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.337790755 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.337613209 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337055557 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.337043714 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.337509059 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.338179816 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.339503255 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.338085668 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.337630249 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338546979 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.337188923 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.338941806 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.338713099 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.339333118 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.338220818 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.338171732 seconds)
  done (took 30.664093209 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.330607725 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.330965281 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.329849442 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.344427034 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.341247332 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.331252445 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.329831313 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.330438648 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.350462797 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.368790641 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.364364631 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.341592897 seconds)
  done (took 17.316860956 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341496446 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34085714 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.338982012 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340164484 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339873226 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339886875 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340405348 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341725156 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340915209 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340707872 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340508453 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340213845 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3423283 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341213107 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341956474 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341331905 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340785351 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339980393 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340827754 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340357736 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340209202 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340839118 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341108533 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339684804 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341908519 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341660834 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340395568 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341263036 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340812218 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338713202 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339857561 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340785707 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34006369 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340888328 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342475429 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34100825 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34146585 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341040452 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340757472 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341349551 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.341175431 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342561139 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34312008 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341628758 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3416938 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341536974 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341580033 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341639076 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340510536 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341700098 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341932214 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341771411 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341917334 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342283248 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343089187 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342620394 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342006974 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341515848 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342895399 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342789114 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343861335 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342559765 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342662738 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343126825 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343356349 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342275558 seconds)
  done (took 89.755136024 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343958003 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.342448502 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344722127 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344404456 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342937527 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343560671 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343056139 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3444482 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343249489 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343909625 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344482012 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345274127 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344083555 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344016298 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342938606 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3446193 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343747784 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34495204 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344897777 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344499403 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343794368 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342726642 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343220911 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343996469 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344636454 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344802822 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345059117 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344933807 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343678176 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343809072 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343617942 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344008217 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345128302 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.343974488 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344049791 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346356931 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346515974 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346089961 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346001293 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.346147627 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344970321 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.346023553 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346350161 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346127 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.346204232 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34587327 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344802865 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345291878 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345984277 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345864006 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346330197 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345710774 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346682812 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346476666 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345567821 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34671472 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346855903 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348576472 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345788634 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346625543 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344838503 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34504165 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346390214 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344698051 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345414782 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346376069 seconds)
  done (took 89.997656941 seconds)
done (took 1876.054951707 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.502554705 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.464597632 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.335667572 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.349933349 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.336614554 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.332866061 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.350023052 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.337214335 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.336686219 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.335503805 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.33598932 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.529731359 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.367788729 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.336878139 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.336215982 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.434877239 seconds)
  done (took 27.253364225 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.36365383 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.344716783 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.451601457 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.340681408 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.363863839 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.524159419 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.397012488 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.342022489 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.505045802 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.360081177 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.335914867 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.362904581 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.341258475 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.335476518 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.361253507 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.526633193 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.578090994 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.338032185 seconds)
  done (took 29.403221153 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.767185603 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.358192046 seconds)
  done (took 5.356465886 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.361757879 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.342156041 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.342519902 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.340747096 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.34749434 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.334003427 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.340478745 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.348068132 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.34370003 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.46553432 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.347224773 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.352629648 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.356072928 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.342163934 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.34660481 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.382971188 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.478267057 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.349771433 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.346773364 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.34621972 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.338948139 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.426554845 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.381865849 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.34784299 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.46116604 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.346872284 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.342872861 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.347596666 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.468332467 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.35082436 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.341595643 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.341584132 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.342936941 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.335586439 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.810944905 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.335372762 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.36541276 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.3497782 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.349750394 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.484133069 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.343088873 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.347377395 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.341243106 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.78609006 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.478965874 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.460791506 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.357137275 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.343161395 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.34546885 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.406021155 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.342349881 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.342240656 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.396725105 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.146008188 seconds)
  done (took 85.761754488 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.387660849 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.335332125 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.502716706 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.350761486 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.334694256 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.334901587 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.335800263 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.60639012 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.379925898 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.347397717 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.618788156 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.847996349 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.345780587 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.345800725 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.864296187 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.341261371 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.337588675 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.335045166 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.337312094 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.335723272 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.844699897 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.336907481 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.336584692 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.383021235 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.373654304 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.802962518 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.338402974 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.35019074 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.336252476 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.33686101 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.806368394 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.336881781 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.406351629 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.337851179 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.606164189 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.695191003 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.666670705 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.343931617 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.339972063 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.34163 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.365694766 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.799622108 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.683461253 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.340825076 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.336588595 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.795546888 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.337059981 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.347855055 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.34088743 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.568050348 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.349199795 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.339009004 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.345987817 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.339988716 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.338905698 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.422089227 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.342671738 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.831169839 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.33863356 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.33809095 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.356514061 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.337123337 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.344282694 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.337955947 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.338613924 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.685063287 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.533577338 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.339243432 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.683262023 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.796723267 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.337992268 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.882667743 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.338299212 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.355050635 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.544319635 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.346189155 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.339669205 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.842650931 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.344673508 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.337570911 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.666420615 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.342791717 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.632255446 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.355570791 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.344384775 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86955979 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.34685242 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.367518943 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.338716826 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.34201155 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.339156178 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.344038049 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.612413819 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.373154801 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.339366485 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.33979295 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.366460116 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.340421261 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.353918689 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.339777953 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.875373032 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.343040751 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.339055205 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.344323112 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.340379868 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.340584538 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.343500015 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.341070278 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.580530792 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.340281542 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.346367656 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.34110673 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.340973721 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.340964342 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.388874329 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.346233729 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.63465783 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.343625749 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.343094873 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.346532981 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.340885009 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.35455693 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.341234696 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.346450611 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.203547511 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.577531613 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.357859157 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.342662266 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.342851344 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.345161106 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.340813255 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.342658919 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.375078261 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.343639138 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.088864181 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.362677682 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.365008858 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.342475292 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.350308881 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.342668507 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.346846937 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.343697481 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.637708395 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.611027465 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.521486797 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.344457536 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.342719847 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.083589217 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.392655912 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.482303137 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.358020109 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.342506337 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.562255719 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.591077708 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.344772883 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.345569162 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.345859961 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.572996933 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.343290767 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.659984211 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.837872459 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.343665172 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.346576003 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.08958772 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.043124473 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.346846228 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.343557079 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.628597749 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.359728632 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.34261574 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.343934554 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.345399579 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.343513222 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.346263892 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.346489113 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.345247646 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.343171817 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.618370594 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.518910439 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.361252581 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.349087774 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.813446001 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.387513282 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.345935018 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.351212228 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.346632373 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.343985533 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.355252248 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.345136925 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.373393502 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.345081492 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.347358871 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.831552166 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.345356578 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.349092158 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.497892509 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.001721005 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.349088829 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.3475929 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.345712168 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.945297225 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.87344386 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.420335747 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.644279399 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.358289039 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.383748785 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.345661073 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.37016812 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.846640171 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.348895786 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.346207408 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.97220372 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.346619806 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.755120802 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.346886213 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.347915761 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.889471174 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.346648023 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.352359345 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.346531229 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.347430129 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.631467346 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.347648492 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.346544271 seconds)
  done (took 497.829635763 seconds)
done (took 646.833574557 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.347226821 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.353187704 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.332569811 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.355385245 seconds)
  done (took 10.630534267 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.365956112 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.355392809 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.365587526 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.356052011 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.365216739 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.355453499 seconds)
  done (took 9.408419055 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.351890782 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.355397209 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.355681889 seconds)
  done (took 8.309075369 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.566226888 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.367434737 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.703654057 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.364500646 seconds)
  done (took 9.247275671 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.366631194 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.366565819 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.366250734 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.366416117 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.368931396 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.369843722 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.366737854 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.366386297 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.368377035 seconds)
  done (took 13.549909855 seconds)
done (took 52.387286853 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.47807635 seconds)
    (2/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.332070471 seconds)
    (3/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.307582128 seconds)
    (4/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.333278805 seconds)
    (5/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.494156571 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.421859997 seconds)
    (7/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.530611392 seconds)
    (8/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.333087133 seconds)
    (9/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.492664278 seconds)
    (10/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.415066121 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.388625377 seconds)
    (12/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.155020876 seconds)
    (13/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.335155591 seconds)
    (14/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.461719034 seconds)
    (15/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.386885334 seconds)
    (16/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.48115332 seconds)
    (17/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.417525552 seconds)
    (18/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.461067086 seconds)
    (19/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.097522168 seconds)
    (20/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.334489014 seconds)
    (21/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.462742821 seconds)
    (22/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.431627337 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.449364289 seconds)
    (24/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.242068537 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.428462144 seconds)
    (26/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.347633221 seconds)
    (27/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.193842558 seconds)
    (28/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.472444889 seconds)
    (29/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.60297982 seconds)
    (30/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.565174445 seconds)
    (31/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.360142692 seconds)
    (32/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.432489501 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.436751592 seconds)
    (34/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.109298348 seconds)
    (35/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.335006562 seconds)
    (36/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.426016863 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.420290486 seconds)
    (38/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.103379113 seconds)
    (39/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.336290655 seconds)
    (40/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.349172576 seconds)
    (41/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.485307574 seconds)
    (42/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.614326165 seconds)
    (43/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.339186535 seconds)
    (44/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.50100347 seconds)
    (45/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.431032327 seconds)
    (46/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.394792617 seconds)
    (47/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.335034437 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.486578532 seconds)
    (49/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.419425454 seconds)
    (50/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.335170331 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.493972578 seconds)
    (52/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.334592722 seconds)
    (53/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.120965404 seconds)
    (54/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.479979362 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.503753742 seconds)
    (56/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.600565843 seconds)
    (57/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.355061074 seconds)
    (58/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.544834666 seconds)
    (59/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.465601921 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.505945039 seconds)
    (61/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.391078766 seconds)
    (62/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.487484198 seconds)
    (63/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.565633926 seconds)
    (64/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.338893336 seconds)
    (65/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.574016388 seconds)
    (66/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.340452575 seconds)
    (67/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.300992164 seconds)
    (68/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.439720221 seconds)
    (69/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.385781759 seconds)
    (70/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.42647186 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.586483547 seconds)
    (72/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.340316093 seconds)
    (73/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.477137808 seconds)
    (74/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.338371509 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.446840746 seconds)
    (76/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.336404587 seconds)
    (77/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.401579331 seconds)
    (78/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.362501412 seconds)
    (79/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.337677145 seconds)
    (80/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.063511921 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.468366799 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.44376742 seconds)
    (83/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.682707161 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.473549202 seconds)
    (85/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.3375028 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.468497951 seconds)
    (87/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.337276114 seconds)
    (88/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.342203552 seconds)
    (89/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.345051447 seconds)
    (90/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.537974056 seconds)
    (91/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.521599148 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.512350776 seconds)
    (93/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.018632527 seconds)
    (94/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.339327625 seconds)
    (95/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.362193587 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.543233959 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.391251059 seconds)
    (98/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.38780166 seconds)
    (99/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.45609487 seconds)
    (100/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.40287915 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.479015971 seconds)
    (102/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.470422502 seconds)
    (103/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.464910965 seconds)
    (104/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.353249218 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.430948901 seconds)
    (106/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.237332931 seconds)
    (107/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.422217321 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.359249699 seconds)
    (109/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.366715929 seconds)
    (110/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.503304359 seconds)
    (111/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.537937778 seconds)
    (112/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.462265325 seconds)
    (113/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.631725902 seconds)
    (114/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.072344127 seconds)
    (115/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.395893372 seconds)
    (116/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.159986542 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.400241118 seconds)
    (118/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.530138847 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.518999478 seconds)
    (120/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.388786071 seconds)
    (121/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.339569624 seconds)
    (122/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.538073149 seconds)
    (123/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.40050068 seconds)
    (124/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.357025151 seconds)
    (125/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.413734333 seconds)
    (126/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.444661128 seconds)
    (127/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.379084073 seconds)
    (128/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.406475384 seconds)
    (129/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.405297839 seconds)
    (130/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.478516448 seconds)
    (131/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.36178195 seconds)
    (132/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.537220932 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.491734329 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.451589599 seconds)
    (135/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.206948026 seconds)
    (136/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.396680845 seconds)
    (137/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.578806199 seconds)
    (138/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.018493908 seconds)
    (139/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.201295202 seconds)
    (140/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.342824178 seconds)
    (141/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.50901059 seconds)
    (142/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.482679651 seconds)
    (143/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.361755741 seconds)
    (144/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.057113054 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.426639087 seconds)
    (146/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.448965777 seconds)
    (147/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.349663757 seconds)
    (148/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.35488398 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.469726361 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.462395288 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.506786944 seconds)
    (152/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.34926043 seconds)
    (153/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.160102751 seconds)
    (154/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.525398213 seconds)
    (155/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.342637248 seconds)
    (156/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.44846091 seconds)
    (157/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.462355763 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.597117114 seconds)
    (159/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.394535248 seconds)
    (160/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.343423677 seconds)
    (161/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.514542986 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.470059457 seconds)
    (163/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.54005365 seconds)
    (164/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.604350084 seconds)
    (165/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.178342997 seconds)
    (166/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.423143799 seconds)
    (167/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.342586237 seconds)
    (168/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.490656428 seconds)
    (169/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.342850829 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.447804026 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.362645544 seconds)
    (172/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.439468826 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.480274893 seconds)
    (174/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.391907193 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.51717561 seconds)
    (176/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.534005526 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.582416859 seconds)
    (178/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.363072285 seconds)
    (179/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.207245423 seconds)
    (180/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.391617739 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.564355363 seconds)
    (182/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.507388967 seconds)
    (183/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.343571084 seconds)
    (184/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.369845177 seconds)
    (185/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.44822467 seconds)
    (186/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.475992387 seconds)
    (187/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.444045861 seconds)
    (188/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.580868447 seconds)
    (189/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.059659717 seconds)
    (190/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.179461061 seconds)
    (191/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.343732735 seconds)
    (192/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.178891238 seconds)
  done (took 344.589844546 seconds)
done (took 345.836767537 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387341858 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.448154941 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.372086213 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.371211581 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.371581981 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.371388937 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.396464973 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.372243987 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.385724419 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.386088275 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.369990079 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.384235537 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.385787032 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.383977715 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.405915534 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.373750962 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.372136906 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.382988544 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.387288925 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.38804305 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373559522 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374668807 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.396461589 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.37361706 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381488518 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381177623 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.380474303 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.368601388 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.385928436 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.388232853 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.365463673 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.383767868 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.389067475 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.385355118 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374519704 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.383570607 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37548287 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.451062227 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.393900717 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.383870637 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.381927502 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.38981192 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.379637995 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.379348364 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.385468232 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.398076081 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.383336848 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.389854599 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.365739459 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.370481459 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394003505 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.386569045 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.38252991 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.366849974 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.371939863 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.3938973 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.384858661 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390340024 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.382817406 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376757651 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.408854799 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39138308 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.387406955 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.383609486 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.383134393 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.388281652 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.385298608 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.392942676 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.381503543 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377493607 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376985434 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.385100106 seconds)
done (took 108.942766389 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.5029938 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.376423422 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.516922521 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.382671261 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.540360783 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.512670681 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.383609355 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.384143323 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.382983523 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.201659709 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.38385277 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.384507235 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.369605313 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.38495304 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.511099545 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.383840316 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.385883901 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.096837025 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.386981112 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.523423656 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.375008787 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.384930361 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.385397835 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.208343299 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.370418769 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.374437828 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.522754385 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.386071121 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.098672571 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.370945928 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.375595372 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.098006211 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.525138923 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.405364008 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.39584776 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.39475704 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.543055467 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.388658016 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.507316659 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.506900002 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.519129622 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.424133404 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.372369034 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.376546957 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.390005135 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.385728168 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.387425083 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.415422333 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.380418524 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.386721308 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.099301931 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.396682873 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.396260493 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.38686954 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.386403123 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.405851286 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.38744857 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.387580912 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.527933432 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.387155405 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.507361975 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.212574352 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.205304873 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.388034745 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.377708843 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.38929331 seconds)
  done (took 111.756534136 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.449349228 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.455448621 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.489291314 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.380616267 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.430951231 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.48973258 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.380831766 seconds)
  done (took 11.341685297 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.386989679 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.388595665 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.428619291 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.429172101 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.388375954 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.535652106 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.388794093 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.391393328 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.388894544 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.434564358 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.390323496 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.388807332 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.398129357 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.380064244 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.429139165 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.392920745 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.496014158 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.381314399 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.389430908 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.535439073 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.389974125 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.398754334 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.432897643 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.393158543 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.390383079 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.387835081 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.156295304 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.38877568 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.389342711 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.390538402 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.390049727 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.436142201 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.390900086 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.382581134 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.390458596 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.498155218 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.390295153 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.391205181 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.389955861 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.383972307 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.390011843 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.391584092 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.391093791 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.391856143 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.390237956 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.406003786 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.388764101 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.391869277 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.391076133 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.392413202 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.432778835 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.390276973 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.391892729 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.3902509 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.437889937 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.399973162 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.391456458 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.390667536 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.390830729 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.39288129 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.536963751 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.431941837 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.39210979 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.430853094 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.392372392 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.393003272 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.390819236 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.392847285 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.439014136 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.39292083 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.431811969 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.391729596 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.563591889 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.408812108 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.393801395 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.387580549 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.38844267 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.391688586 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.382211727 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.391651912 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.39211076 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.385897159 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.39098575 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.39204618 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.393451375 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.54546497 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.492555682 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.393463084 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.397446738 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.392799983 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.39218671 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.438902858 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.393313874 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.394614665 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.437964052 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.500040062 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.439011879 seconds)
  done (took 142.803773648 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.398801174 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.398367303 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.388707913 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.411986032 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.386818487 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.38590826 seconds)
  done (took 9.641474845 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.388058695 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.397956552 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.396004579 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.395289548 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.395770171 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.394160534 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.394320996 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.38890565 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.397202153 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.395201807 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.394318968 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.396104676 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.395629972 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.39560305 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.39635563 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.395278992 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.395542296 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.396289982 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.395865981 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.394672558 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.387126062 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.395449761 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.395585556 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.38928493 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.398489044 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.395537576 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.408385582 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.395412792 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.395134571 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.397555074 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.398761179 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.396718893 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.389573041 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.392360509 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.398623629 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.390249865 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.398835448 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.398127628 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.395763637 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.397218416 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.397683157 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.396957524 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.397027028 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.397665759 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.389327856 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.392373951 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.401815985 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.411329156 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.397352244 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.399368452 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.399430433 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.397783463 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.395567391 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.399119052 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.390732545 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.392948528 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.403304403 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.397219294 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.398077985 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.393533098 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.399075024 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.397937632 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.392713224 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.400081538 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.398397889 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.400876469 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.391169983 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.402252355 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39924792 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.397150382 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.39998578 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.398965913 seconds)
  done (took 102.813729413 seconds)
done (took 379.618829415 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.683112793 seconds)
  done (took 3.958548484 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.464627248 seconds)
  done (took 3.73920028 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.894357991 seconds)
  done (took 23.175953128 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.443210162 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.390268281 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.399876884 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.394636885 seconds)
  done (took 10.901551464 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.684600207 seconds)
  done (took 3.960955419 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.393491994 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.391961152 seconds)
  done (took 6.060660464 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.619551131 seconds)
  done (took 3.895692952 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.595158312 seconds)
  done (took 3.879151505 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.416416249 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.403693797 seconds)
  done (took 6.103335197 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.366986835 seconds)
  done (took 3.643078725 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.809747361 seconds)
  done (took 21.085699158 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.403943003 seconds)
  done (took 3.682436151 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.464362249 seconds)
  done (took 3.741400119 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.960172079 seconds)
  done (took 6.236041578 seconds)
done (took 105.33963272 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.385910961 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.385538884 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.387679312 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.386279415 seconds)
  done (took 10.82195351 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.451129337 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.450915207 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.45726882 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.452572107 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.451751436 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.451499168 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.425683144 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.425550481 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.454371809 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.452833102 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.458574778 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.450849031 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.453858113 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.427283485 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.452136091 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.458680703 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.453948361 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.459124239 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.42698286 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.452667452 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.401422521 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.453066221 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.453290732 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.402280997 seconds)
  done (took 35.954862517 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.910420609 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.465110473 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.547420399 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.444932325 seconds)
  done (took 7.645607217 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.479123468 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.483356748 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.499796574 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.537016934 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.564892254 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.499395371 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.428210472 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.42381106 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.40936231 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.484332647 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.534960229 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.467942821 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.607628768 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.401726776 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.620811476 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.402406973 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.402445332 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.484378784 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.535029863 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.563254265 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.403051067 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.480791569 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.487007697 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.469120586 seconds)
  done (took 36.948649607 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.413276778 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.425326553 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.40451297 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.417800052 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.405826757 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.406240164 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.407480343 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.411988637 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.404445812 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.405311432 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.405415193 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.418104443 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.405856251 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.406924095 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.412664213 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.408765833 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.406855474 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.412264684 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.415183528 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.405623068 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.406276277 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.412898361 seconds)
  done (took 32.298952241 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.390728664 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.390650893 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.742153341 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.647320515 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.390309223 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.395685449 seconds)
  done (took 14.238350822 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.467431674 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.609311885 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.39888631 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.746409573 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.837552813 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.403992314 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.398306996 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.641885659 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.941902575 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.938010612 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.460105902 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.468172399 seconds)
  done (took 20.592238094 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.405634567 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.396289259 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.401588512 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.40973737 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.520776317 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.457369608 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.460616067 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.391134301 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.456864602 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.456683777 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.459298999 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.455215874 seconds)
  done (took 22.552308515 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491282929 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402172937 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.402544541 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411367711 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402065838 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.247072927 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.422802084 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.105625501 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.406960666 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678595106 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403833775 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491265419 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.657293307 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405350141 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.407445 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.373645749 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636156308 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90905093 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403602635 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403198517 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435491178 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412477528 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409957275 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.631489809 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.2478888 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404107168 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.666243649 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402885493 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.694195059 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674486146 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.673385352 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40908125 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678987759 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044349355 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501034235 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.614695295 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40651207 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408379119 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.376903021 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.41360838 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405973277 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422655046 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668984376 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410294621 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405710082 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415605241 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.121504636 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.412490156 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.404530211 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403570102 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.67210864 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506878485 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.408366428 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405351788 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445541435 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40381767 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.410532386 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530429173 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969829614 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406423811 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422255178 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.409975189 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414736338 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410468639 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061656106 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.41308893 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.410696726 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.408942191 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405665015 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406720873 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429264607 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407502996 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.42929673 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407063345 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201601353 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415420538 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408673851 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976688253 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41814106 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.413119863 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636777823 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40599083 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407588216 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.404450594 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40813603 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160311776 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41460611 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.378528594 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465073695 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.111792512 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.617528529 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428881414 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436845373 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.628884325 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.378763247 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408271844 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.408840662 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409185555 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429646762 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.116577152 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406992331 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.414528272 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665124643 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.61847173 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414111579 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.394040219 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886512613 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42227757 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.438914932 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.421443692 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.625312728 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.051406523 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679616476 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429027253 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441464263 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409762868 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212886357 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409849858 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.434946238 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.417514668 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684073773 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.260621935 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40868877 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480708179 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41443397 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410817123 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410772229 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41145474 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.409445803 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.601115736 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421902699 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.682901918 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.417438244 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411585024 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.409997228 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429769727 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.412833721 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.631666249 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410190835 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709115936 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410279352 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4108028 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411130839 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.632631023 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.410887466 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.435845248 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.672515821 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417725823 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.426513043 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.682561238 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446824529 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519556031 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4406365 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.425702434 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.671982328 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.417432348 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.416682339 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411550725 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413190001 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420199776 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.420486441 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415537573 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063983959 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387761093 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.413478057 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413326667 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.42669131 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480795463 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.420940945 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626595356 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.413271798 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418576997 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.422522464 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.411540465 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642268344 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.681255564 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.433861025 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.492235731 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.8898015 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.057635062 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427884828 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.413698476 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.413586012 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.414162869 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413350894 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414452744 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.413697144 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.627021388 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.684435955 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415314891 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.064375474 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415690955 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414375348 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.420583963 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680516236 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.427340651 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414752466 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.416679586 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433690334 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.430638151 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.68742169 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55521738 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.428490962 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415039046 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.933579051 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.423401965 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.415033838 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414419219 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446121368 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414596933 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257733073 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675484085 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414129107 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689749215 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.421608644 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.433013764 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.412760797 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419187833 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429765494 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.436832583 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422775761 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.626586394 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.418995076 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41779013 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977962344 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222022146 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004164959 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422816467 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.426016507 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422169142 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.129483461 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416467597 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418395101 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653396444 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.124061824 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416769801 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894516116 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.415964198 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180948109 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.68589548 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654186364 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428631681 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.422596823 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.690938847 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.633516066 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450493461 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.426719717 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423073946 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.390652803 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971876024 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417436947 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.500016262 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132229235 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423572766 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.421153838 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.481651702 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.418174836 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808603818 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416739304 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418466549 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.429345733 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.425054889 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263277969 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.419007721 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419075188 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081094139 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.430291632 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.903659731 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419950234 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.632524992 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.687316233 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.671039035 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.423937337 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.446258617 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.671589304 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.688782946 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425821596 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.428077413 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0144537 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.28608233 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.426583313 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42077805 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24043913 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42655365 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.722167234 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.429127433 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.435751903 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424819306 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421687693 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421087695 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.420470516 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.426064427 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394827755 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930911238 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.431442836 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424847818 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428668363 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427184189 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.675300153 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.437298986 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.07005323 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649109162 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417102198 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455777626 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.42628282 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434269749 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.394598853 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422515559 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421621253 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505210113 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.642931213 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.428704105 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.393807207 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.423429771 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.631002312 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422036363 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.423292401 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648649058 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.422118182 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.444004909 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228614148 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452949854 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.42229599 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424154393 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.428867862 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465194961 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490133905 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6356295 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.691848502 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.699585899 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819710036 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422828112 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.443778537 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.438985497 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517787017 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433794906 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.436995063 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.204009503 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074030611 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22849343 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.072299443 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.694784928 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.430497956 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429614749 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424220751 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560802879 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422906547 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699642865 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423321248 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.419236001 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450232167 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435955284 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440114502 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640696988 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70064463 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424444228 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426283997 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431642517 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.425793335 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.698371651 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.638516014 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939626825 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00089935 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425621577 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.432759197 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.142642382 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699736617 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423913198 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425719898 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426417029 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.447992279 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.425417842 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.4318361 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435168107 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561070094 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.695941357 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077602333 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.694907501 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.467440259 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.945755122 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43404117 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.67939797 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193983651 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.63863549 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077953267 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.187457151 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689782141 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496770847 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639729036 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.423039207 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564257358 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.425882545 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.432137536 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427379585 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426788825 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.42686295 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.696346925 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084669163 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690440495 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.43355125 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.427652661 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464159731 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.641072353 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.649134685 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.188768479 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.649171226 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.700143025 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.438722316 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.429142901 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.081070998 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699593488 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434291417 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.435527703 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656046801 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.42884622 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45553374 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.117971247 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.427236592 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994045849 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.318844782 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449083613 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441993881 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.196284357 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080675087 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.429802731 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9624488 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429428847 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428307156 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.710417939 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.436907891 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.427495884 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.714140463 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.433808982 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.438460262 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649684336 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.082374181 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200177108 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.433058842 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434604251 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.432138943 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431162587 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435031596 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42925075 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43857341 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.826942109 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.430681195 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430789606 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444585649 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.434892601 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446667852 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.435544616 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430387143 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.439480907 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.41432189 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.402410339 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.457934943 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.556362442 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987982995 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439094242 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.10478267 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.778401629 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.68664141 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.437522245 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.408357394 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.436406645 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430843504 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43023926 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433051045 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.425645453 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023892728 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.435905397 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.709154846 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.443073662 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.642109809 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642411029 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.432562944 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648399388 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437009409 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457965715 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.403963474 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432549378 seconds)
  done (took 1002.656840422 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.440114232 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.459055904 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.461456841 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.510925148 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.466809802 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.445493134 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.535859387 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.51132187 seconds)
  done (took 21.141765183 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.43267651 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.433744636 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.431094271 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.434837127 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.435383916 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.908074246 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.428850781 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.433643066 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.446830892 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.433573896 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.433305364 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.115679078 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.453281381 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.439055731 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.422800451 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.439974838 seconds)
  done (took 33.439670818 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.550396809 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.628226848 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.469397754 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.49612236 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.475747953 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.429021319 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.688145468 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.454054805 seconds)
  done (took 27.503311597 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.44029169 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.438794952 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.441468035 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.439148089 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.440186701 seconds)
  done (took 8.512284926 seconds)
done (took 1275.584226401 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.440600513 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.439412588 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.439716463 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.441635166 seconds)
  done (took 7.073279895 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.407967794 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.405698414 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.407744105 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.419109424 seconds)
  done (took 9.952638812 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.146984064 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.040783801 seconds)
  done (took 5.499968519 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.93014813 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.935106981 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.930525473 seconds)
  done (took 7.108740237 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.713352686 seconds)
  done (took 3.02437982 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.371524208 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.428915656 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.106909653 seconds)
  done (took 8.220224698 seconds)
done (took 42.190818455 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.425919893 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.691385814 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.584223064 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.429721063 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.59129548 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.585559335 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.234331538 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.435937314 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.432442189 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.427773526 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.429313147 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.608368146 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.150062182 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.674029458 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.153364723 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.769532602 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.591901325 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.433818894 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.434245114 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.428611458 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.235938964 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.435663088 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.441178892 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.438088614 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.590938948 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.599399991 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.429254735 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.768558006 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.441136277 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.433168044 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.574138642 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.428797692 seconds)
  done (took 84.641603321 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.439415216 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.443763572 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.439633801 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.429343978 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.44667859 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.438976373 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.429925668 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.430892319 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.434745966 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.429357043 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.431120502 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.445789158 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.446526156 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.432310237 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.432121794 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.430681089 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.430670625 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.430991129 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.447431015 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.433089456 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.431235923 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.430136736 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.432103661 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.43146322 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.431162774 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.430867138 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.450684324 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.437821749 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.431415693 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.43169961 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.431366668 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.450684994 seconds)
  done (took 79.259544875 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.432404023 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.44883467 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.432630588 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.432126323 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.431304416 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.454755108 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.434876852 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.432441135 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.432696923 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.436513252 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.432209458 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.432170183 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.45138362 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.432127101 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.435315721 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.432120355 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.433676675 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.438984694 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.437553086 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.452939227 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.435995397 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.433677779 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.443526794 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.432688205 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.437726126 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.433472641 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.433432532 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.438703008 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.434141401 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.438187837 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.441170603 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.442801287 seconds)
  done (took 79.310321351 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.673206693 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.44805277 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.451092625 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.442857341 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.451039508 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.44910441 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.44391976 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.678847973 seconds)
  done (took 15.356661612 seconds)
done (took 259.88094717 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.445817693 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.945912156 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.474155329 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.440129076 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.459140007 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.46889195 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.660775207 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.46608304 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.664884922 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.458602697 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.457499483 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.44663917 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.249797855 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.594833477 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.279896326 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.38992439 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.332604098 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.438183502 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.015125193 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.728893593 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.466376725 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.435583487 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.27731604 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.338115631 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.428294817 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.52282975 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.542071538 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.665650485 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.603345397 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.521715333 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.965662508 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.457137123 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.457815746 seconds)
  done (took 66.419976007 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.44214324 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.450388907 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.451449623 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.451923083 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.451268919 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.451383252 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.441659038 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.451131849 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.452463915 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.451504701 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.451861473 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.45120539 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.451491764 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.451882313 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.451382131 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.427793494 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.443666375 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.452554585 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.442392801 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.428595913 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.450486392 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.449894803 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.45256661 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.451851139 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.452057142 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.452359154 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.453042909 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.452948753 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.453214728 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.452826836 seconds)
  done (took 44.790958639 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.452243532 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.024878545 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.174236066 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.452067575 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.444911153 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.449673345 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.736523386 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.453734532 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.44776846 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.448295731 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.925947554 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.454071797 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.47699544 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.192425575 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.454356997 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.45353916 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.453188285 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.445005351 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.040177693 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.45356819 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.732073131 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.454921126 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.736086456 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.454315783 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.448584446 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.445601622 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.449281717 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.265727205 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.465653854 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.927750069 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.242483115 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.736906875 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.190908723 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.229580995 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.241871349 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.45948274 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.453233897 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.935692889 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.448866581 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.447261623 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.732584913 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.447279098 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.19015097 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.124759468 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.465910674 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.456243178 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.300182443 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.93650266 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.694279926 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.454848218 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.227469679 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.451803228 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.457471301 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.449219291 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.691979625 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.450598755 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.447161788 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.322678609 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.458132886 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.734480844 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.456926903 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.449001842 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.035203917 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.449122692 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.03539048 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.450457658 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.457180147 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.449612282 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.192364085 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.452315481 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.142001665 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.467427451 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.458232312 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.932931732 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.037629678 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.335888832 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.451387265 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.043719178 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.219415731 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.754111771 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.454447446 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.253284043 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.754961896 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.454264341 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.460169075 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.458849769 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.459665324 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.521556288 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.736835265 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.067847875 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.153519386 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.319994513 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.740242742 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.460422468 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.450706489 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.317065919 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.459626808 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.459218899 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.197306477 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.1479382 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.46952812 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.457940103 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.132012697 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.471208816 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.742668039 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.463303076 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.234794015 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.453070904 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.522134383 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.460138408 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.456745382 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.454664716 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.741157077 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.455596399 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.459824714 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.147628897 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.965107262 seconds)
  done (took 201.70523086 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.446969456 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.446227147 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.4475083 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.447780643 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.44632981 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.454055151 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.446623628 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.44854319 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.451815788 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.447509769 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.446352371 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.455901151 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.453185879 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.447041408 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.447131344 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.448595803 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.447668528 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.464636348 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.447052041 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.447857045 seconds)
  done (took 46.319066029 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.461357077 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.013247296 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.98742361 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.463021717 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.462334693 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.45391421 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.510519829 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.464188396 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.461881462 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.754325754 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.628373494 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.468884666 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.461927741 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.462458677 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.989829358 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.437855508 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.754006214 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.014038819 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.463631981 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.01531767 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.437764771 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.462160733 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.453176731 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.016712434 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.766530684 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.743198181 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.514311086 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.017544373 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.464702011 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.463689206 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.016082897 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.463811721 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.455062241 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.005404164 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.464329906 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.477745203 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.464191406 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.51395038 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.515637167 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.759175448 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.023616241 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.756401483 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.476398689 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.625518385 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.464943777 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.438692846 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.029641929 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.465301666 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.439142909 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.465501056 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.469202114 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.00621704 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.457865075 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.005665807 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.46519303 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.46622847 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.019209232 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.006278817 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.9945939 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.630823911 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.462507289 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.745283181 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.465426711 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.03144479 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.467079115 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.464296417 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.466387443 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.632599561 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.021795392 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.749195439 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.760466924 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.76047666 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.467905249 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.52597494 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.468559746 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.761227749 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.525533345 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.861085907 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.766709879 seconds)
  done (took 131.647584874 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.722455308 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.575029816 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.830330328 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.047199551 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.967752529 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.599261733 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.571966195 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.700277373 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.466919154 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.550590168 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.108636171 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.558814893 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.24028875 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.524433596 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.567569955 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.584614057 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.876402736 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.454477946 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.122051541 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.077995942 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.460523045 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.562955372 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.979481 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.65556558 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.459276203 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.014799619 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.40409141 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.981145917 seconds)
  done (took 55.000160295 seconds)
done (took 547.203205265 seconds)
SAVING RESULT...
DONE!
