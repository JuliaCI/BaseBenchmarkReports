cset: moving following pidspec: 1786
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.499420287 seconds)
loading group "string"... done (took 0.514594541 seconds)
loading group "linalg"... done (took 8.9093557 seconds)
loading group "parallel"... done (took 0.177795905 seconds)
loading group "find"... done (took 1.302248787 seconds)
loading group "tuple"... done (took 1.922418964 seconds)
loading group "dates"... done (took 1.574912722 seconds)
loading group "micro"... done (took 0.20605114 seconds)
loading group "io"... done (took 0.54169727 seconds)
loading group "scalar"... done (took 50.552205533 seconds)
loading group "sparse"... done (took 13.780275534 seconds)
loading group "broadcast"... done (took 1.30727198 seconds)
loading group "union"... done (took 10.186666584 seconds)
loading group "simd"... done (took 3.045042129 seconds)
loading group "random"... done (took 11.538743643 seconds)
loading group "problem"... done (took 2.224132723 seconds)
loading group "array"... done (took 24.283073469 seconds)
loading group "misc"... done (took 1.146285232 seconds)
loading group "sort"... done (took 3.781398738 seconds)
loading group "collection"... done (took 19.319192221 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.630929695 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126922228 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.267845686 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.28724902 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.238428796 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165862172 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143653007 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.264088724 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.587856737 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.211018441 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13565815 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.500007269 seconds)
done (took 6.315424113 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.257879903 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.184400424 seconds)
    (2/2) benchmarking "String"...
    done (took 0.170060723 seconds)
  done (took 1.049308572 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074899027 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157713048 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109905951 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093144225 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091686109 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107646301 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.091353344 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107652655 seconds)
  done (took 1.455809376 seconds)
done (took 3.54094328 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.52227717 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.883847612 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.4980467 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.146627825 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.319972664 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.301173459 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.320843465 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.204782725 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.106005076 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.091476343 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176128657 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.380377162 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.436150958 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.930857034 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092389927 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.097841902 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.133544735 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.777102037 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079332054 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.124569222 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.491009343 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.19815667 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.099167887 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.123798775 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186055012 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133174768 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.16414072 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102466269 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.664373005 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132913031 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.186986651 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097678384 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161252797 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.194445655 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.210921803 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.09227039 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.683159218 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199802901 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.090799787 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097357432 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672212831 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.117702685 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.186880157 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10252323 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.091121804 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184220099 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.094916905 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077449579 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.115515804 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.08467219 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.164450276 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.439868332 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104833731 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171775386 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092620047 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.69245232 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098829664 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.273580815 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123890263 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.092248397 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090445241 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.08749152 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158123464 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094225639 seconds)
  done (took 20.083140966 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.150666307 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.16773407 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076992064 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155617808 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123596164 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079812033 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.100622672 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07717709 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125675284 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.223545402 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137675428 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.154413694 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090949064 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092354412 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.128862072 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247584068 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.10573403 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121074409 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089488644 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091047346 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140175483 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095194301 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106721537 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094618758 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16849286 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203139015 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10728976 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12270069 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089812885 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096482837 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141270474 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146067285 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09213717 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089401759 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.189064897 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.106371294 seconds)
  done (took 5.246893015 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.205733875 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124362538 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.214518005 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163384494 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143310515 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.168859209 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.151347772 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.281866892 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.22139917 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.121272503 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176240945 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113689503 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.121695628 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078902156 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079912082 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077987727 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.504420565 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.137130651 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.174385389 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.152775108 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089231098 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097490593 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.373614492 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099648464 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081884331 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086599045 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082866617 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.180747893 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103135598 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.188509811 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.102680011 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084203262 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088377646 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.15552824 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12918746 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.083940262 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113193495 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138005746 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087000235 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079903472 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.218644601 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.110191369 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077283508 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108249085 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133639716 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114083468 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100123331 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.108106263 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221386211 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.084470329 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.104701693 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.054917386 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195616187 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.124511618 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.079825489 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289488979 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117042054 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088181783 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081202663 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.248325021 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.114755407 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080931461 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096998743 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08738904 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078488394 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.431584618 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108040372 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.660932065 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08465031 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159583426 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084396688 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104248787 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086468712 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083952895 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118478229 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080734715 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078386022 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096339518 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079805608 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082891737 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.099862048 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095399119 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084128828 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095974787 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145966306 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.100034961 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11687395 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109317396 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099754094 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080213459 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126445457 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08216738 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082831729 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.166192981 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08586424 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110349867 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08550683 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143280408 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080397366 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.202532273 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082984451 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.108484633 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101501024 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127679093 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.10093853 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079042555 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101906738 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078066756 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080094914 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158874223 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080540517 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08208318 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081306254 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109996233 seconds)
  done (took 22.724797359 seconds)
done (took 48.755932693 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.462885747 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086255053 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086255025 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104650572 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08674609 seconds)
  done (took 1.606744524 seconds)
done (took 2.361058487 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.326742547 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.195896356 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098718683 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.190527864 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084889618 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.19569948 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.182677673 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092593206 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.208533959 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082553947 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.190715968 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083079593 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.102049055 seconds)
  done (took 2.812889482 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104203462 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11039126 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101256561 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117637481 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083588873 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100821691 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11677154 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110391042 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09872281 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110818984 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083940978 seconds)
  done (took 1.889841675 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100915303 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105694776 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096729932 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115423278 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083364909 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097286116 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113972772 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108274131 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098325319 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110521737 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084421367 seconds)
  done (took 1.869060406 seconds)
done (took 7.320384389 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.083407812 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.413826492 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.146561956 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.207533763 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.351107346 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.263008756 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.552896736 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.154498489 seconds)
  done (took 14.08411641 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.172855491 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.110785544 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09162666 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.093884931 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09089818 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.107854776 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.095737307 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090707969 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.109269327 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.09338182 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089633287 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.106328684 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092232563 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.094192728 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093208114 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.110643141 seconds)
  done (took 2.457893305 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141248128 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.124094894 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.113335234 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098122961 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093744576 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.11398096 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099079089 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.112349737 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092518257 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093964646 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100945472 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.111117409 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.095835947 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.091446809 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.112434384 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.113401112 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090677929 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.111478068 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.111399695 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.113462611 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099332447 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.093887632 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.111471165 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097681071 seconds)
  done (took 3.378702904 seconds)
done (took 20.676802903 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.152384501 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099169048 seconds)
  done (took 1.008136549 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.148106223 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.159238568 seconds)
  done (took 1.067452792 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114159888 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089743025 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136578163 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102589068 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.088623265 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.103604088 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115559394 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.104619876 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.089608615 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.089199711 seconds)
  done (took 1.799533544 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096824306 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094627176 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.120615326 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.138051867 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.113283192 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092576746 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.093859192 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.092830937 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113766746 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089764666 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094009478 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.124562916 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094818389 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12565145 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094747396 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095375538 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.113608137 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094429781 seconds)
  done (took 2.65196879 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.0920823 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.090397331 seconds)
  done (took 0.950647547 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094660905 seconds)
    (2/7) benchmarking "second"...
    done (took 0.088594862 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091312307 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108367402 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090328457 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088003049 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105101797 seconds)
  done (took 1.433634145 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.498906746 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.267001106 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.371754682 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.106402105 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.143812127 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.35143429 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.145438019 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.102543516 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102324157 seconds)
  done (took 2.891554229 seconds)
done (took 12.568465443 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.095670393 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.218830124 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.632194428 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112061427 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.209582004 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.160132271 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.289375324 seconds)
done (took 2.491580808 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.356671644 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.148975151 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085009574 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.088549796 seconds)
  done (took 1.448160735 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083091617 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097275675 seconds)
  done (took 0.956221141 seconds)
done (took 3.17937164 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091458469 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.088043524 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.137860203 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087939523 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.086301526 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.086677231 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.105351062 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.087765552 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.08794615 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.086274267 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.10534046 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.086553321 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087361332 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103865146 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088089095 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086316984 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.086275445 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102767437 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.086735273 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086793091 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104029843 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087220697 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087147836 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086396195 seconds)
  done (took 3.038493642 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.115170373 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.08987452 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107944298 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092192666 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.09180521 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.10720299 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092154128 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.089358961 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108375055 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.089625085 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092644165 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.091994463 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.105310749 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093449962 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087666069 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.108505981 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.092970947 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088955921 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105912872 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093482126 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091517556 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104559164 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.092997182 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09239067 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.108360767 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092785617 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.088166081 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.10572754 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092885582 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091744235 seconds)
  done (took 3.684502227 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.100343016 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085955766 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089463308 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.112986924 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085407266 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089202918 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.100620325 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.085095312 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089283867 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087470242 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.107064746 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087974262 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.084346834 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.105716102 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.089781937 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.090311954 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.09790385 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.101922156 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085295848 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090787723 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.107750274 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086822528 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.087401115 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088449302 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.104324478 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086459628 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.087952514 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.105784472 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089305743 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.086975571 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.089590277 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.108178378 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088232512 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097753521 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.107279076 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088600768 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093808351 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.102636414 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091294326 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084018898 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.084180142 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.105141126 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086614779 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094431868 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.104660868 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.08955491 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085332661 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.089883899 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.105901574 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092395446 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084252738 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.101756023 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091129451 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090145489 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.107046571 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.086705058 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090054194 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084020382 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.105284219 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088451831 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.08519602 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085136754 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.108800539 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.08892706 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.103037085 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.11128288 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086756334 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089373188 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.105582855 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.093890825 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090064962 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.114826985 seconds)
  done (took 7.560208288 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.104264071 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098097738 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.088926563 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.105536622 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089254432 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089378325 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108775447 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08977009 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089639799 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.111009896 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089767686 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090075571 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088926111 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106951655 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089653475 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090274368 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11116052 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089196316 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08867744 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106028795 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09012089 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093260712 seconds)
  done (took 2.891603465 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.233463715 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094737185 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137417234 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.117755368 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107594057 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.117179281 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.093398454 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093329277 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109291853 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097934091 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098107705 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109264946 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106642339 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097138456 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115202538 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098868105 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111756705 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099772091 seconds)
  done (took 2.826774135 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104693553 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.090502153 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.127893999 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09137847 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.091558587 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089698988 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113811203 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112589123 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.108048314 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092086467 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.097345298 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090807389 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.107816212 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091791057 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089920662 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111057656 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.091891683 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089556569 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114736582 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098050252 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095663231 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11427745 seconds)
  done (took 3.002418896 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106919641 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091029243 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.125066594 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09405719 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.088783861 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089678929 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.113685893 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091541973 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.096008769 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.106746191 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091379736 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08945971 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.121945982 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090854203 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096253649 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106914094 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091343113 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090614002 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106834931 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091474328 seconds)
  done (took 2.7694663 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.176098713 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12298676 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106772396 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115293701 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123830432 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.1077488 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113855781 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125161563 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106706423 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133449067 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108162525 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105958592 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132890973 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113615225 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122955882 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116926305 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114986589 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132156292 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107445309 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106793975 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136795592 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108718607 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133016898 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106557423 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107031499 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124737875 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108386798 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.126722687 seconds)
  done (took 4.136258064 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092790958 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090465018 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088499356 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.105436929 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089214413 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089192399 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089141247 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.106326251 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089717386 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08833573 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107417131 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.089918598 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08818475 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.088846965 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106516686 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.090939274 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088554084 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.105291898 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090213032 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090334574 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08943981 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106757657 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.09014126 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088637972 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105571391 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.090721808 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091124811 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089310264 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105421273 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090148694 seconds)
  done (took 3.612813348 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.10595465 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099272751 seconds)
  done (took 0.999234158 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.102736596 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104293592 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.088945177 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106845889 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096841031 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089666705 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113666984 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096436909 seconds)
  done (took 1.593556037 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.148345647 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.162776521 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095305477 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102480637 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.163675209 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.154192422 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135360259 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.096085295 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107138258 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083624509 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.157843751 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083153035 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091684097 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10513598 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091702185 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096531206 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.108119793 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101461512 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.098081774 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.092149774 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113401306 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096487475 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109235208 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10213907 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084986859 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092180484 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112521171 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103587712 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104504924 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.09458955 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089563508 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089800356 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.112772706 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095409558 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.090960959 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.164915493 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098977813 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105553053 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09215349 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095944554 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.142532003 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092475284 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092264625 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107019569 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09669837 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.093645106 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.112489492 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092520136 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084515917 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085694718 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.108182902 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087299485 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.088896285 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109632644 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092557993 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097325556 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.110750821 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087407412 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087233603 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104063495 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091046088 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08725075 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109979236 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094424816 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092508638 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.109243378 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090742264 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.090072224 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.107869042 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.092315714 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090810801 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122590404 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09341409 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.095128909 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110953955 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093042081 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089576195 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096726778 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107547956 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09240486 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.094014111 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.13710524 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093474731 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086589901 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.10454472 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098054868 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.092457171 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.110864535 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085445566 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100831591 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.111225248 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092919633 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084029039 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.106047007 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088095723 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094434379 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083424659 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110312532 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091137541 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.095686831 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11491293 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090415422 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092370558 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114049921 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098335712 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089939248 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.157611909 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088060153 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104332044 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095068584 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095925175 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084653644 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109497042 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089738047 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087557483 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.10476578 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.097294926 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091683727 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.110773877 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096865307 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093544984 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110388084 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094385836 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.090957595 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086092953 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.113456616 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099786709 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092631435 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.11260376 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.0930563 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.091460813 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.108272081 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.095931409 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088885825 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112857677 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089921728 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091514953 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.109726235 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.097295426 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092460087 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085936916 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.109103003 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.09249884 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.107226721 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.094572997 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092631085 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086742448 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102174098 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093941194 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087150987 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.110037678 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101008596 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086552184 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.111813568 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089550066 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099529869 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106596085 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.09676283 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094250689 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.114827681 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096748027 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08383585 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088632033 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.11285999 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094620007 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087796297 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.109775656 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.0913151 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099382061 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.102941195 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096822426 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084465251 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105994563 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.097456998 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.091835153 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.094001461 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.10546042 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132335083 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103561883 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114548588 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091746908 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092564247 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.114792231 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091993324 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095446439 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115278545 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.097392895 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091407425 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108179073 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098048273 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088005656 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.112599915 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092642323 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093206456 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083883057 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.111600983 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083796757 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096419156 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.112450279 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.096302661 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097057369 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.112253698 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092388648 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099211556 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.107041741 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.095932954 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084570037 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.11490252 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100731234 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.09692215 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097640353 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112747067 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09009229 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.091919242 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120016722 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093338356 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091998824 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.111377606 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086126241 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084840775 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.117218401 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.095950497 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088515576 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.090003101 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113791551 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095276498 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.088288548 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.103018362 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.0965395 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095555065 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.105906971 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092958531 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08871884 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109066562 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100536407 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084128317 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106968381 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09499824 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.095911542 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.108663847 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.09279142 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095353716 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.115398683 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.095932774 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.094400114 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089840599 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119168804 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091289126 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.091113423 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10693704 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095573234 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085546527 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.111772706 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094174305 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088722577 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087276005 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115953242 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098985493 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.09687995 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10975886 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097150527 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.097181943 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.115861246 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090960478 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.097671625 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106436404 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086957312 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088545288 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102709327 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095292955 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087382941 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.09618038 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.108829892 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091408508 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.094996365 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113655946 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090388134 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.099195139 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122869169 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085753405 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08423982 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109965899 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092129202 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.088825279 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.107592025 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.093100234 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093995163 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.116148472 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095994766 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088543465 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.110504074 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.099587389 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089402144 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.11690771 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.097974149 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098884025 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08678954 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.115720964 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.099563153 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096641133 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.10499578 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.100547009 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090703499 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110044797 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090353761 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.090483058 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107068096 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085941801 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088222855 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.116368081 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091213831 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.096293206 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110475537 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091535641 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089343761 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105917351 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.098869873 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.091161053 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.097829039 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.111632449 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086057953 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085744857 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.116025196 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093716603 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.097686993 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106086614 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.09671373 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098128179 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.094817852 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.111382942 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.101239482 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099084558 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.116361003 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099866373 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084728321 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.109774173 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097932142 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09081798 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.114891965 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095100975 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086334977 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113600403 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.098730195 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093964421 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.108319804 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087538408 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.093383701 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.097932362 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.115464704 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096901086 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.093726185 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112091393 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088272816 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095964387 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.117057453 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.093863531 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098660241 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110164455 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.096844752 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090221385 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.096899653 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.112420032 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087386625 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085454252 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108479596 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.098915816 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.086770036 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.115435569 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.098046693 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089186314 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088865146 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.115789022 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089334563 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094100127 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116415413 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090794052 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101405897 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.112385226 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092105433 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.095636686 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.11517532 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087367294 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090428561 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109859645 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099755946 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090998216 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.097062535 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111345836 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098064547 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.093538591 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.115129799 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.098527657 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098791674 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.104683835 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.099853311 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096482377 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.112767705 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090700743 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091739275 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086849821 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.110550045 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.098856026 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089071041 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119640429 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.098226703 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090353713 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109847724 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.099655375 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092542419 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117556544 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090637998 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095371173 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.104472883 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09671856 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091830624 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.116843503 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090842202 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087351626 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097420245 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.116638334 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096904574 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095232024 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.118514832 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.0874214 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086533934 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.11310981 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091606623 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10231424 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114562293 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.091406523 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09189586 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.093850733 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.112808062 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100404126 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086309988 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.109003714 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.09466311 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094526703 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.110469391 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088974921 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.096781234 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110178612 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096466576 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091258204 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.10612592 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092671531 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.099480491 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.109310975 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089965467 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.090817211 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098216641 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111852128 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090373979 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087126316 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118790986 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095373506 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098720715 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.108899133 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094489213 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.089937114 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.113182743 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10139564 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.090207935 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111556624 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091953364 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098495187 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117069489 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088022394 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.089839888 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120727019 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099344812 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097586575 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.093934865 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.112597265 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100501448 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10003655 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.114193825 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08816157 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.087874964 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.110692103 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088127391 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.095649893 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117427403 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093829911 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090665125 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096196255 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117748665 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.095887236 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09440468 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10615013 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100965353 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090437315 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116265399 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088537949 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08732489 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095217554 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119085008 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093947221 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094469024 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.114755313 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096012962 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087849689 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.110278404 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098366384 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098107409 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.117692993 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093809175 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.091249273 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.113922735 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104810787 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094295558 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091585475 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121349696 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.101239588 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093124263 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.112549435 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09827603 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.099068727 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.115818152 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101347289 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.09040029 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.113232516 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.101167369 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.099996166 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122769878 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093289769 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087142654 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.117489092 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.09267098 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088585288 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11607618 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101833497 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.09990122 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.111934239 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091843603 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103760004 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096984307 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114108695 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091729282 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089970514 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.119064222 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092074963 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.09650384 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.110912294 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.101997002 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101147389 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119264881 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104620166 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088322925 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118854703 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097964964 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.101986077 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.093373474 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.108688533 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08890632 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.096794791 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.119786756 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100689144 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.097966272 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.116941343 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100335192 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095077345 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092976844 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112295853 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.101561416 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.099267667 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.115615354 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.096774277 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09228722 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114920574 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097366375 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.099504687 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.120453099 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.096542835 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104607645 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.119674499 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094994938 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091392126 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113207377 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097176699 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095742842 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098540111 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.111036622 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089478684 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099579032 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.121465523 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096112197 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100234294 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120749207 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.093540845 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096498204 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120500984 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100653475 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096744842 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094118888 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.1163734 seconds)
  done (took 60.585193176 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150475019 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102513401 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116274467 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096809939 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11483612 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117045613 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09630088 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098197958 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.117247127 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106227462 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.095889158 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115972478 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113260842 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118000409 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137199087 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106855856 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115151369 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097903028 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096205395 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116420138 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112553656 seconds)
  done (took 3.186809347 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.118867142 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110521757 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12722466 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111309978 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102850459 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127805389 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108136524 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129219962 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111019654 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104336265 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131316273 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106998508 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.123542704 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105496491 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104599203 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124942678 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11129893 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102996964 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.129279933 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10840175 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.123579295 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109309908 seconds)
  done (took 3.38004496 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.10962055 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099166233 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098635153 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.116301386 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101103613 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096312672 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122525339 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.097370737 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105380205 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.114881457 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.09106733 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095317724 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098704164 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117078889 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091239853 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.096448351 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126722876 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.099991887 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101741657 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.115592412 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109336892 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.096185806 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.116133511 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.091492054 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.107537489 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.100745298 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.117029444 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.099959303 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089157762 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.11892992 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.098002081 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094015092 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.115663987 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.091334254 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.089103033 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.119048641 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100906144 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.097189239 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.096285397 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.11527151 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.097941735 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.100495212 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.118903115 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.097249707 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.096511186 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.112787971 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101360532 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.098083597 seconds)
  done (took 5.830648555 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.131306286 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163489661 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101594084 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136950554 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.132784314 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106749935 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.098760409 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137856768 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.097758187 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.121501403 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113203875 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.111601722 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125055381 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.104487343 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102522813 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125536218 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102123895 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099065758 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.124615158 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101215998 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.125644508 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.103330383 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.109213358 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130512204 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104517951 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10027065 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122125485 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105070775 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109682014 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128924876 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10516146 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104709947 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.371446282 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102496883 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.120734586 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104052786 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.112451482 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.121805317 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103076411 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099031748 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.122784427 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105419674 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103018347 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.132425133 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10248596 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102177172 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12241648 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100249517 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.109753192 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.122905164 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.107783698 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.131126912 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104041953 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.101312124 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.122321697 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.111072889 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.1019981 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.120679353 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.10432803 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.10870386 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.119381108 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104711981 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.110252652 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.121568413 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.106871623 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.109938379 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.123756738 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104172214 seconds)
  done (took 8.946048126 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.140898336 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104856828 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133191699 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112329785 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102800658 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.125634185 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105213373 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.103906797 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125394577 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10902955 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123437394 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.204600406 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122841146 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109264182 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103729897 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.126294579 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10425159 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104376527 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126121432 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10484255 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.102258971 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132832911 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105536145 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131434136 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115883936 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100560542 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.126413532 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105433745 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111983266 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125891075 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114037986 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.124886981 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106392399 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111573419 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.137764079 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.104478727 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099077952 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127307054 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105058266 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126473091 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101539846 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112736183 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125197836 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102205147 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105193487 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125757073 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113816457 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.115171478 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.1311643 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110376987 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.125598401 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113271187 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10542242 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.126454208 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11319317 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.13962863 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114970062 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112449543 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126981444 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113982204 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134073614 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121962089 seconds)
  done (took 8.159456936 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103462549 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097581471 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097367064 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119656848 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099994385 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097805448 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098124784 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119451003 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098652145 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09728184 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119363593 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099680487 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09805496 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097055945 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11891736 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09847189 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097027142 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118915126 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098923275 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097124936 seconds)
  done (took 2.935494013 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.112590634 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114938516 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120754916 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105981977 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.100018416 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127015134 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101008387 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100829822 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100040063 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122743737 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108917546 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.128333416 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101930186 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106232388 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.12708644 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107264811 seconds)
  done (took 2.649844541 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.125176951 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116869845 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.192447205 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103009737 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.122297174 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109048814 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100500166 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125566647 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10167865 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106078747 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104128299 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.125715843 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100622997 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102072855 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122440765 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104275359 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.09892463 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127483948 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102100849 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.188564637 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104946498 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.101489165 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123463589 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106464058 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102059757 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.126367253 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107616395 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101411881 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.102840121 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.123831552 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103830793 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.107798018 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.122352447 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105605032 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101788555 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.125294579 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101695882 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101256736 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.124743762 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102188943 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103895216 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.12360512 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102175212 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103640133 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.099406738 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.123750774 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101268213 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106530024 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.124511553 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103722823 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.100828555 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.131957402 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106220907 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.10831785 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.130368436 seconds)
  done (took 7.111399609 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.119682357 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102159035 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133856789 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099825387 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10114584 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102290802 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123979998 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104315338 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10076433 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121298148 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103905295 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102554039 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123087326 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10431323 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101595521 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124016489 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.099954377 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102606143 seconds)
  done (took 2.838285694 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112477803 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100702058 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104852785 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.122653822 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101932735 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100428986 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121900969 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100638008 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099328507 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100460613 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124353253 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102054208 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099033511 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12269645 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101522735 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10111234 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.12179583 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101821232 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099864641 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099103005 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121648533 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100838502 seconds)
  done (took 3.231020578 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.117636503 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.185665018 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107266996 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.193237081 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098232246 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095307148 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.130423373 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098449433 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.113776397 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.118430717 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.09654774 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095381515 seconds)
  done (took 2.321971187 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13701222 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139231458 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123364482 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102779954 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11041549 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127875936 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106993755 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106368567 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136049684 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117501745 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12679134 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114728743 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111900813 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134829305 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110576913 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1322892 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107320243 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105091784 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122781283 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121534357 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106134148 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134610216 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106862754 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104910411 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127593686 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114641035 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134710627 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118644052 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105714455 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134825975 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110243677 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126313433 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11441238 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117958061 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124491291 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113359864 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10615836 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142980774 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110969855 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136888288 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101493968 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110201713 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135487885 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112120275 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1345843 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108162779 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110666826 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126880249 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106752651 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147644406 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111559406 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113220842 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131477707 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113637014 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134794527 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12718235 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118064851 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136996879 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11065244 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1395466 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114768964 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133403323 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117173689 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117002982 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132610722 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11489913 seconds)
  done (took 8.826773377 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147567944 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103459229 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126779747 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118480565 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135727797 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107618591 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105583788 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12848419 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107033835 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102648281 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172732915 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105889106 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137723905 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116139908 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105681881 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128802224 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108011684 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114583507 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125902569 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127994445 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127584402 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115053416 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115476898 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137179928 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118169954 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131677801 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107537962 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106738778 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128422433 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107667116 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110804249 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128345353 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115201928 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102452501 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137570916 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106141859 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127518981 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112640082 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107093496 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133638473 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115035551 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141807478 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108763834 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106887408 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140726317 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108083058 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107948952 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126195267 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107623116 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103491891 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140868829 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119042618 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139983087 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116146813 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107070144 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129946795 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107852792 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107023222 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128273696 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110470134 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136407124 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107733916 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127180044 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129046693 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106582107 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13492892 seconds)
  done (took 8.800051367 seconds)
done (took 165.695530315 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.153935857 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.190395894 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.145077326 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.178512336 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093734871 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12925005 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.149368551 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148035441 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091573281 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.116373066 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094216672 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096435318 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.185346074 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093589114 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093463933 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.118501034 seconds)
  done (took 2.95305584 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19709511 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.310816558 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10953136 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.11882861 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10242215 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100775817 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119192782 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099992529 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097576253 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127534359 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101535037 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095920299 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126726545 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096761795 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097683117 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122533657 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105329231 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099821007 seconds)
  done (took 3.11183532 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122989905 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141932758 seconds)
  done (took 1.154778362 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.13612563 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.197756052 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.274790467 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171085669 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122221353 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.137425165 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150952878 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135305651 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.179691943 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133883885 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112988728 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097874472 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146508577 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104804343 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113874457 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121592207 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127055199 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.13464094 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114575471 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100657218 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.142508814 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102028354 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103779183 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.13495336 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.168523976 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132970843 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.101875822 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101194813 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122867931 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114016067 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.103849292 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13729166 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111231805 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173991281 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103843611 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.169419435 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.107096101 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.121501681 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113808174 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098270094 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125506919 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102642732 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.136329004 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100870474 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101327484 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.128939626 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.102757978 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101201679 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.128773174 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108082677 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.106463608 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128621662 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.167032974 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109598497 seconds)
  done (took 7.814573064 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.858298979 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141571427 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100048181 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.012646135 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150170676 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113888068 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.862545545 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145257384 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253837589 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.874038027 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115838167 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.133478313 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239376918 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.231827337 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.010385751 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.330900197 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.713056896 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113137848 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.126344513 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164371463 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107771294 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146792608 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119231852 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.418604714 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100207184 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119999756 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108961015 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110220982 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177702526 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098868153 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.125309817 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194049474 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.242672569 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207383861 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121837204 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09855326 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097402257 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.182968759 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271128704 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218882954 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182868134 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096083373 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096622441 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130016984 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118111795 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.116114499 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159083613 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188322029 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188185375 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102134214 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.134734921 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109515468 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127805604 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.157504468 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.118963979 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.330662128 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.333181248 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097495637 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130248925 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114803904 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265432919 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.120958821 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234002999 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126045584 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213451158 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098071369 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.831760867 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.161622964 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.119605285 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107744072 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105193895 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126694583 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.106731454 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181288561 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.37298744 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133252554 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102480369 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097613428 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.242656423 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.120936884 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100009538 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181803062 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100516903 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106235065 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135758475 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110165124 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188822248 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.247950617 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.110288196 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130483921 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104989216 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109040841 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.122942987 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231381801 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229781934 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.152428189 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23403966 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129708258 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.159364093 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.182912194 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127275328 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.1640464 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129218595 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11450153 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127322848 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225629096 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133255505 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.121610833 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105922831 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107306336 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160378165 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101763865 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13079731 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.162066508 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456225572 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.182799871 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.09652877 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124113807 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109857812 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179224419 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106884966 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260563986 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108167801 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.183254358 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12858251 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.096719627 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10678507 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180592212 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129577826 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10974935 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106619891 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133011571 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.230994923 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.244344546 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11325059 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240851263 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.188542792 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107793708 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190425145 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107540931 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188222597 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108934315 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13034956 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101649017 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797503251 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111795879 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131708864 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104317035 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.206371129 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100143502 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.099098604 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.122068258 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099526851 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.810199699 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100911554 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.119519944 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100574846 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105690034 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129404729 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108348939 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103816438 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178865295 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23996295 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.135483376 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106041687 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.121551587 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.156880074 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.122814666 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101373537 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.099242763 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.121137997 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110176006 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.103441941 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.122631711 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167573617 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.176853667 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.228190572 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.523374424 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122223734 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100931006 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237333604 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097969714 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.322918063 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109483147 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.234093689 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186601986 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097579255 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.328891144 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187180809 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.206681383 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102489792 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.18930109 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096378225 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129516579 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.156785671 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122396665 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10836167 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177581834 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114041095 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.134694517 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.036799217 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100078692 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250056254 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096601268 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.187964014 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100329912 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129575131 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.307276769 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099705933 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138248129 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.157418843 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127935254 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101364332 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.605389424 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100361463 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133771275 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109364584 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.235184118 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185618002 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106765419 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133550204 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112683857 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181050879 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.235799011 seconds)
  done (took 45.197267867 seconds)
done (took 61.111587691 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.29609156 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.258089836 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.303757533 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.2095209 seconds)
  done (took 2.051113687 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.268705592 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.162760647 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.23604464 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097563879 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.24586768 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097253906 seconds)
  done (took 2.024635578 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.499029052 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.372305361 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.307601493 seconds)
  done (took 2.101342789 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.256555117 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246490443 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.353270359 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.407735711 seconds)
  done (took 2.297292287 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.302950759 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129932797 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126846314 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.212368317 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.25546609 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.232045779 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.148552205 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.198805151 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.153837657 seconds)
  done (took 2.725674308 seconds)
done (took 12.11603004 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.270449835 seconds)
    (2/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.3535478 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.230221776 seconds)
    (4/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.278523991 seconds)
    (5/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.366973561 seconds)
    (6/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.245856009 seconds)
    (7/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.168419284 seconds)
    (8/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.107402723 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.16885961 seconds)
    (10/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.30764432 seconds)
    (11/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.113013982 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.109225124 seconds)
    (13/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.33479161 seconds)
    (14/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.230076316 seconds)
    (15/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.22915994 seconds)
    (16/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.241794302 seconds)
    (17/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.083260431 seconds)
    (18/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.187336851 seconds)
    (19/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.236456895 seconds)
    (20/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.160923384 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.151314814 seconds)
    (22/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.15012957 seconds)
    (23/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.331075203 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.102980842 seconds)
    (25/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.132124143 seconds)
    (26/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.216508216 seconds)
    (27/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.224654709 seconds)
    (28/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.31555732 seconds)
    (29/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.291137629 seconds)
    (30/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.304484751 seconds)
    (31/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.13356696 seconds)
    (32/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.173568011 seconds)
    (33/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.209108395 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.158105413 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.126072383 seconds)
    (36/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.209784347 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.136189948 seconds)
    (38/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.114497988 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.127341164 seconds)
    (40/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.145826601 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110444216 seconds)
    (42/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.174404711 seconds)
    (43/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.083074086 seconds)
    (44/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.080637053 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.102128721 seconds)
    (46/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.106167237 seconds)
    (47/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.190342392 seconds)
    (48/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.214962996 seconds)
    (49/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.237801362 seconds)
    (50/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.114231806 seconds)
    (51/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.126543756 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.103512896 seconds)
    (53/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.1090187 seconds)
    (54/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.171496582 seconds)
    (55/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.093083017 seconds)
    (56/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.103771259 seconds)
    (57/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.34362468 seconds)
    (58/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.236742059 seconds)
    (59/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.192002669 seconds)
    (60/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.190012865 seconds)
    (61/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.134937673 seconds)
    (62/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.109714914 seconds)
    (63/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.173127481 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.133880516 seconds)
    (65/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.188675794 seconds)
    (66/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.181348415 seconds)
    (67/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.213844869 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.159454512 seconds)
    (69/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.081665817 seconds)
    (70/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.144811009 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.127695148 seconds)
    (72/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.10940115 seconds)
    (73/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.184859231 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.150451493 seconds)
    (75/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091707929 seconds)
    (76/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11010147 seconds)
    (77/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.128684985 seconds)
    (78/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.171578633 seconds)
    (79/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.082725865 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.081779685 seconds)
    (81/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.10703658 seconds)
    (82/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.113280878 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123702151 seconds)
    (84/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.082994287 seconds)
    (85/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.175229682 seconds)
    (86/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10459554 seconds)
    (87/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.083323746 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.129250681 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.126053705 seconds)
    (90/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.188454589 seconds)
    (91/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.104689277 seconds)
    (92/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.175056967 seconds)
    (93/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.110133082 seconds)
    (94/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.084710521 seconds)
    (95/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.133851586 seconds)
    (96/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.093302443 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098593323 seconds)
    (98/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.102878483 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.13672567 seconds)
    (100/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.08278513 seconds)
    (101/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.088508858 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.160455788 seconds)
    (103/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.111113151 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.104365459 seconds)
    (105/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.122697968 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.128562481 seconds)
    (107/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.083313926 seconds)
    (108/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.087366554 seconds)
    (109/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.081384856 seconds)
    (110/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.23624912 seconds)
    (111/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.127384617 seconds)
    (112/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.107909036 seconds)
    (113/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.083031762 seconds)
    (114/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.106213337 seconds)
    (115/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.083526194 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.127777109 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.105725013 seconds)
    (118/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.10960473 seconds)
    (119/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.172653308 seconds)
    (120/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.092217644 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.109377787 seconds)
    (122/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.104948602 seconds)
    (123/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.214407096 seconds)
    (124/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.099119928 seconds)
    (125/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.083382826 seconds)
    (126/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.111055694 seconds)
    (127/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.188488378 seconds)
    (128/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.111772615 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.12927897 seconds)
    (130/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.094548413 seconds)
    (131/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.082202895 seconds)
    (132/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.187649175 seconds)
    (133/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.131019178 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126278303 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125855299 seconds)
    (136/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.107832453 seconds)
    (137/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106021683 seconds)
    (138/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.081764909 seconds)
    (139/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.082802716 seconds)
    (140/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.106030191 seconds)
    (141/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.084075469 seconds)
    (142/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.082566759 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.110633076 seconds)
    (144/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.134289027 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.105261086 seconds)
    (146/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.083401596 seconds)
    (147/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.083186962 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.128622053 seconds)
    (149/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.193662408 seconds)
    (150/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.099380709 seconds)
    (151/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.106310929 seconds)
    (152/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.10994496 seconds)
    (153/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.086257238 seconds)
    (154/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099088964 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.129400072 seconds)
    (156/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.089329232 seconds)
    (157/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.15502323 seconds)
    (158/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.081687048 seconds)
    (159/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.106571716 seconds)
    (160/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.101460099 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109355318 seconds)
    (162/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.151219932 seconds)
    (163/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.144256766 seconds)
    (164/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.108934262 seconds)
    (165/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.087667396 seconds)
    (166/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.123955916 seconds)
    (167/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.088555614 seconds)
    (168/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.083796689 seconds)
    (169/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.082661058 seconds)
    (170/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.133652445 seconds)
    (171/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.083921692 seconds)
    (172/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102608725 seconds)
    (173/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.081825737 seconds)
    (174/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.082522452 seconds)
    (175/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.112280593 seconds)
    (176/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.0831313 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123994454 seconds)
    (178/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.098453292 seconds)
    (179/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.107117258 seconds)
    (180/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.083220521 seconds)
    (181/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.105001477 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.127055722 seconds)
    (183/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.082708392 seconds)
    (184/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.082137424 seconds)
    (185/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.084242914 seconds)
    (186/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.092818263 seconds)
    (187/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.133125255 seconds)
    (188/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.084646214 seconds)
    (189/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.08246475 seconds)
    (190/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.081712195 seconds)
    (191/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.131761926 seconds)
    (192/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.08434224 seconds)
  done (took 27.640022485 seconds)
done (took 28.563621897 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.220344793 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.128872745 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.107830726 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.107621172 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.205577828 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.114103207 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.146879625 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111917947 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.117471065 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.13451151 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100100894 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.120072879 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.132442791 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.180070481 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.135585562 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103027405 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100898916 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117086466 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.146983144 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.121819823 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.205949837 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103339267 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.117619679 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125983113 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.179987745 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127843111 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.108325174 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.108331081 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.143851474 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.109680307 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.107941523 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.124606107 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.122790502 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.121147743 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.123887957 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111570805 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100637599 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088925367 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.134754398 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112107818 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.119989992 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.134699183 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110192207 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101592393 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.135707067 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110991768 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101295157 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.135660209 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101124609 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.108582217 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102545554 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.146894973 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110980482 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.098969944 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.124434245 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102496302 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117122417 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.125843663 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.120950444 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100653462 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.125404989 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101941315 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112290363 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.124286617 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111272705 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101711345 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.1095231 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.138304443 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110228795 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10320267 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126129344 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111487152 seconds)
done (took 9.785622436 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.111061335 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147988216 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.201634584 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.215200472 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.127798507 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.140793403 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116356941 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126240552 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138175492 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120275805 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138689329 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.159144921 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.182579994 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.142611049 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116147984 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.112359665 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.139954199 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109531712 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.212740355 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.1251843 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152423699 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.1181249 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128993108 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.142888028 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106183058 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.125856404 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132772308 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113967855 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.104417313 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.147625628 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126343331 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.104283698 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.132769517 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125207809 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123030376 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.141865019 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.115799462 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112706887 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.130797734 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106932585 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.136710085 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123194386 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105301085 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.140337534 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114136051 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121805616 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.136608123 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119611704 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106458852 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.111826525 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.131667318 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132923355 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.141564623 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124395846 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.116944306 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.143495487 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120082231 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.120035655 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.131968586 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119947613 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105995663 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.128531884 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.107503801 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126648705 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.13273132 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120199843 seconds)
  done (took 9.555571406 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.130546189 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136404648 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139944826 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117011734 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109163506 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123861544 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.09900018 seconds)
  done (took 1.834118388 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.106365074 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.188009703 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209756125 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.208275814 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.207816641 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.193400266 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149896341 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100565701 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135072296 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.136686231 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188038555 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.2429352 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109991977 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142138389 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.210429304 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.100875761 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.213301253 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.102835838 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114928978 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.212121451 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117876261 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.157218484 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.1136462 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101349251 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.208807663 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101778543 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.263836111 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118856242 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13502158 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.114846896 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11532801 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204826517 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.210645317 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.114226279 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10800973 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.208879603 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.207842393 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11506314 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.224634175 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.104794992 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.20941043 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.11488284 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115483234 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.142262615 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116617206 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.195991091 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.1200128 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115211579 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.140986078 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.194117079 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.137228897 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.186163395 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.138635664 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.114660717 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111146849 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142624528 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123874168 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116033589 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.220790735 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117646395 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.209856504 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.210444648 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.185151796 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.211159414 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125517838 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.215488305 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.205428151 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.113704729 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108129782 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.142977159 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184866012 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.140542678 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.112144069 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.200531957 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118946413 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.213254319 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.185031549 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.140701373 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.113661512 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.103808586 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.140421947 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.101994537 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.201300646 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114205833 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112984297 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144797251 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115837487 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115007572 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.132321185 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.124094493 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.115445917 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.138056174 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.119935644 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115242483 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14302165 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.214316683 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112472028 seconds)
  done (took 15.677609969 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.112096015 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102626562 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106685635 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129181615 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103791275 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102586725 seconds)
  done (took 1.652499599 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14768111 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115793947 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152516402 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118320413 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.169168864 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.218892403 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.222149567 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110744497 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.159993949 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126878159 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.220906598 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.19537671 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.220064004 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118234888 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.224676158 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118313118 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.224859491 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.139843342 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126640106 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114309411 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.143879916 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120783233 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113637627 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.21307193 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116949734 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.145550843 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.110158485 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125107341 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.152090705 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.110500584 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120320314 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.144115798 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.109469823 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.13495922 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.201005253 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.134328545 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113455521 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119479097 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.146751098 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.1192502 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.224954793 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114519809 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123228752 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.147031791 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.111901156 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.108298808 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.148510826 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11044639 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.2251843 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.11879787 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.145400241 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119839653 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117562566 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.146268484 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.111028673 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110687961 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.146160704 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.200135093 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.147134992 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.110149787 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117672627 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.144727098 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.111783147 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121021725 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.145109057 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120247646 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110404597 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.144939928 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115158182 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118639131 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.147006477 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119689288 seconds)
  done (took 11.242561593 seconds)
done (took 40.931498609 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.635869629 seconds)
  done (took 2.627728112 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.91123616 seconds)
  done (took 1.904529703 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.364354815 seconds)
  done (took 19.390459576 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.529270475 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.604608714 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.023165102 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.151301869 seconds)
  done (took 3.302135395 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.015710055 seconds)
  done (took 2.028204349 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.301183797 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.26836342 seconds)
  done (took 1.569167562 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.73259454 seconds)
  done (took 1.745505294 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.537318211 seconds)
  done (took 2.535045382 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.357022798 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.178084732 seconds)
  done (took 1.550367364 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.629282949 seconds)
  done (took 1.644626503 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.668908545 seconds)
  done (took 20.6875392 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.244818408 seconds)
  done (took 1.265467835 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.288923001 seconds)
  done (took 1.30801967 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.655678196 seconds)
  done (took 4.675810215 seconds)
done (took 67.244140125 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.118307938 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115854458 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115516612 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.139277068 seconds)
  done (took 1.496100551 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.127083182 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117365842 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.120261457 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.143655743 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123901184 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116965098 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143150387 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119970136 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117010549 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144058611 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117576915 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11613793 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145828443 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117574724 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114369579 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.14482633 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121352246 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116761589 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143707827 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119836289 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117996541 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.143450213 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.120216244 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120549791 seconds)
  done (took 4.054324539 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.118601931 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107877609 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.107639256 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.13211071 seconds)
  done (took 1.493842369 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.131340466 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130292777 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153550222 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12515022 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128091307 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153125381 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116276064 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113129376 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142503654 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126023299 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132634727 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155589082 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129703888 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118739731 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153106025 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.111209989 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118298217 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154927759 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123815477 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124728126 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144382499 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124304831 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.121799914 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.153010526 seconds)
  done (took 4.204143191 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.196776601 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.127355463 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.167637326 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161691288 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.169149338 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.114656456 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.137314367 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.14893151 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.121866644 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.116668779 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.144013088 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161852568 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.148445212 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120289357 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116956128 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.146674297 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.129333381 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122814391 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.185836896 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.120579968 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.148577181 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.128357064 seconds)
  done (took 4.159956604 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122997017 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107563809 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.102447483 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.132900849 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119140487 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.108792098 seconds)
  done (took 1.726005724 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.11202234 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101219018 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101650549 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126855747 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106585267 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101974777 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.100157548 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.128208405 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101445699 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101487849 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127498456 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.10235767 seconds)
  done (took 2.342132845 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.338751646 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107146486 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134441845 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110561077 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112278155 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104038417 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.144585184 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106115601 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.267554788 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.101601193 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.142992397 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.194821112 seconds)
  done (took 2.895984191 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211775836 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144025918 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297644121 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365877864 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164592562 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188692681 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.268677803 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190362409 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206051036 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136664711 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245184369 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154092257 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177710594 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174700826 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163833507 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.15673315 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194939174 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189637117 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176352909 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226509252 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156331364 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192273856 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180345863 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176260492 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133455561 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189094338 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.117340997 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125898093 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193605306 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190205893 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169547201 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17242937 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142094582 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218811448 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258436802 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169624164 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.311217282 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131814117 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.196579774 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.181645728 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257588758 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164416334 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18772579 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179988477 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127392846 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204255896 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150938409 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.201382778 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129327645 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167197473 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178546776 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19979946 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.204395216 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13499 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312622044 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163337534 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167110077 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168772821 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209340832 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215131231 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164254351 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.147121037 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179463722 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206982988 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203906451 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140825542 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.19041735 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123188255 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189732807 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193112194 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206764335 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155509478 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.225902155 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157303222 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156730684 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197536878 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177414486 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202713818 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157467702 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.143575073 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148519078 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158727955 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125413435 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195768012 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147443874 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197152326 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15677474 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.339921628 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183260907 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183002712 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156019733 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183568494 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182572168 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144455708 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.103899348 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170471492 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.160554457 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181176521 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129742943 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181169784 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136413417 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.124972772 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175848022 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12066551 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18495317 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.127893154 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189770012 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158855058 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.156963981 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165142294 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173413794 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151518738 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193875559 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181773152 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157346202 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130486839 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215550681 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155179488 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.157171943 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176888033 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210961374 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.141430936 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161679862 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164453538 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21395709 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138226182 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213543598 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134023064 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161859283 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.140691984 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186007239 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156325252 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.17938565 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125927697 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.176016133 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195124566 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.152964665 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135366244 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1941764 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130463145 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122429576 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164612037 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133225703 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.166971926 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142600236 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131941732 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180301573 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18133197 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154673818 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178926082 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132919994 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203601685 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131084402 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.183090749 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144212867 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.116514041 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.200598736 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209051556 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128119256 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225046457 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161464858 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215919227 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183190367 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129376934 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201381453 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126660369 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117654077 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1889757 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154067823 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186749159 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.178872697 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214866537 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.19205941 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.148602074 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173548233 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163542834 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.203268915 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178096626 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.143010144 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153900379 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193047213 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.117609114 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.149900146 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126533025 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133958076 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15531112 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132954713 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201287624 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160760898 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210046524 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183200731 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136657892 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210792235 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.125447319 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187082508 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.162858773 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166704111 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.180880941 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210253399 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189082113 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140031221 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185198313 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119870904 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12354793 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.157991156 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161897964 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131403175 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160800186 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139579368 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209489704 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198091203 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145153056 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222651415 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192336232 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192831454 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.146642066 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.164704899 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196400608 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155555979 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183489963 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159085487 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.155913861 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20609981 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136940287 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214202366 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183207673 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160917859 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215660342 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.154176832 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157539345 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147411248 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185944092 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135819361 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190179205 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144486081 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126529839 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178430392 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134566694 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150852086 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180509333 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169171622 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165996118 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.186183949 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196066086 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123653213 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138691769 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186137174 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141162919 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.135869473 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168252031 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212829777 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144133287 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182733958 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17235365 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156663705 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.313614129 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216356264 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203834928 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133755782 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138006494 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189699915 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186282757 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161640983 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206241435 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138991285 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205916953 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157024733 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.168733884 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129788707 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146280029 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176784399 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.139839745 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.158307893 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.155473624 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.166939029 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183349097 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165658466 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157075197 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186303759 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.145465019 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.171386995 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138351779 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221461642 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153702678 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200951495 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151922775 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.193878266 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187030025 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149978146 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126102905 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.155977749 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177868739 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125905523 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187660416 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.201095258 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214562294 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161600914 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188297667 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135114485 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.152453504 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156271885 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14429436 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217420023 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160003176 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134381102 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219950816 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129363212 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155946211 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158728213 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303665831 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143173868 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199669366 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.112829924 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.295176549 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127172836 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156626189 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162794967 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197287752 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.130851817 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181244411 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184064094 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139043958 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191114868 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133726878 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211715722 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21755159 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165321442 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201282875 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.169586302 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160218649 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186676865 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17559713 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169313679 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.143524963 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187955217 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182197296 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.210665156 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129521698 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184083631 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156727262 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18191786 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170152691 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163166762 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189152678 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154766585 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161485195 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165636053 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124019153 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154593596 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.204901817 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155899613 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17836851 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185763006 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129987332 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153493668 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144244047 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154448883 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166604995 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127086789 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208754813 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126081647 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190507747 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177074196 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155647989 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154531638 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171920312 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128369802 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138362509 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168024604 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129167902 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.168769216 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204087385 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127152929 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205751503 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189876723 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162477176 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183205216 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139935789 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.697809786 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.125802628 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208646346 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146159803 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216767274 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147148107 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188689826 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156653894 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174508071 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163681251 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174376862 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.236671966 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188481794 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.154968758 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157443174 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139559647 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137435251 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.160214837 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150027704 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184109423 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138220315 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.160829129 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.156740887 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13865116 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.172312332 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135483165 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211789758 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149026784 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210535893 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209412844 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135121798 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186692156 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170996142 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156309137 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.161530511 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199212714 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138140876 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175055769 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.131870464 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133497684 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208460077 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.121353087 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186663825 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158259025 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184740043 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156430148 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.160353381 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161392806 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137116822 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188540442 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124793575 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.181003111 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156879773 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160087117 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.12550331 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155307209 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186019777 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151247814 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154647377 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168014677 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20903725 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121548186 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12904745 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300769393 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185832761 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186842051 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.168325493 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132794964 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140575926 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182082927 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.153359455 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188706862 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126763887 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156436911 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.128901647 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.189226474 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.147778242 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1578627 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202810394 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184862654 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191806555 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.160440737 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.289589013 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16480682 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15745189 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118575551 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.155187315 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141994142 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131202158 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167128587 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212162031 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179400911 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.181014351 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.142541745 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160435827 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125264729 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128613291 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194042724 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149584326 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186988612 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142440759 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.105752159 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170435942 seconds)
  done (took 83.491705561 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170169336 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150995911 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.165579098 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.223244422 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193607201 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.295921409 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.23231945 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.261508854 seconds)
  done (took 2.802783131 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.125287013 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155530134 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.13901361 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143076509 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.116532052 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.443524384 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.156863705 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.118278389 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.164478528 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.158460667 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.140889668 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.626410046 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.112832664 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143142172 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.125139863 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.117064888 seconds)
  done (took 4.090309479 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.415734718 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.5838467 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.126237162 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.27843224 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.23315053 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.179049047 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.792264116 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.692971967 seconds)
  done (took 13.421807399 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.15207369 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135648886 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.315070627 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.259509866 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.150369282 seconds)
  done (took 2.131954581 seconds)
done (took 129.319344141 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.127900188 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12184988 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121388484 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15204154 seconds)
  done (took 1.625748122 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.188401951 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.09307189 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095049301 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.119759922 seconds)
  done (took 1.609708971 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.445876476 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092754457 seconds)
  done (took 1.68383019 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.153100516 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.148487223 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.165935086 seconds)
  done (took 1.598286602 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.147502584 seconds)
  done (took 1.263467665 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.131839463 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.118985996 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.236258669 seconds)
  done (took 1.609480734 seconds)
done (took 10.517321786 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12508274 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.414730448 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.429732143 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133413297 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.709217344 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.424423764 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.038077583 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172343894 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172991569 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.134054095 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131012723 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.686475061 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.055037148 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.357868847 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.012376107 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.477075975 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.69514344 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.10956752 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.14378923 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110776481 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.017789412 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.134492171 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110275343 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110327419 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.715178274 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42004495 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107590013 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.490316147 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108313938 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111317831 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.425519901 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109504477 seconds)
  done (took 17.498908096 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122194821 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17157236 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143502985 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110634228 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111690523 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.136428842 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120030074 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12008695 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202714847 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107323847 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159806519 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.107745933 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113204796 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.136535906 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135394273 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107308739 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.138710461 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111501944 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11550342 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.137229014 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132097301 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.10736235 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.136978959 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111296239 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107589319 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156701932 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.1099449 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120613517 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.134829933 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113782799 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113139988 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.13536126 seconds)
  done (took 5.217883956 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.162601124 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178376477 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145046057 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.147682601 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184295671 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110513867 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.220396189 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146020558 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200865279 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109651448 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131368608 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.134935305 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150111301 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108372915 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.163145992 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.10921038 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.11141287 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.138108098 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117029673 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110659895 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.160265618 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.10744596 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110319736 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139122916 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110515863 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13279559 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.13674191 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121784022 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107776821 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.140956781 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114305097 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108379034 seconds)
  done (took 5.493354615 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12976534 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124724807 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132246586 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.161314338 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.11954393 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122693656 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.151767863 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118864042 seconds)
  done (took 2.19514202 seconds)
done (took 31.526398816 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.141764114 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128284979 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128021683 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.150466401 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.19247433 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.149469684 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.12636552 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116420905 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.150678454 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.130886257 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.10861813 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.11572772 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.158740493 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.12002169 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.222847755 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.123211408 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.226881578 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.193787495 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.145757339 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12357127 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.11630507 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.227542142 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.119561575 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.144189455 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.201804474 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111602457 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.213618742 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118525793 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.148216834 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.11063662 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.221520045 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.121229402 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115531563 seconds)
  done (took 6.039177125 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.214805257 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.117622028 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.148485405 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118023579 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.117923481 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.145255386 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.211745651 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.146281753 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.117529879 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117036995 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.116557326 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.223780186 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.122778285 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.141948291 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.119949295 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.113849955 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.241218227 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.119452265 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.107831173 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.123584058 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.11376829 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.115882746 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.252583479 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.111900886 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.116199547 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.147051311 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120402065 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.12157383 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.147981312 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.118972471 seconds)
  done (took 5.390670886 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.129777873 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130536431 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.135428587 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.212109554 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.144608754 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.15854229 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140567518 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131426784 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.169074166 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111553371 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.125827249 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.177450884 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127758912 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121296837 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.143855563 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130686485 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133538563 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.140843575 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.118670141 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128492025 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.161242839 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129852151 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137650876 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.147723336 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.110654647 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117778303 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.150194238 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126963324 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.118385837 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.153640811 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.113593036 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114258944 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.140240011 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.147914479 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.112890107 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.152988164 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.13658532 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121870958 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.15309381 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.142580794 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114573785 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.142553285 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138357463 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167489453 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.142428869 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.124923152 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121761312 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.153379165 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.110275013 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12885757 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.181737839 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.11135348 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132390036 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.139917111 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.110361577 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119330921 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.111432677 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.14466765 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127277552 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.11361285 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.165120766 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.118411244 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.121357089 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.142253141 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123010923 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.109486024 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.138870618 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.116971185 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.138537326 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.145618366 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149215528 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111294249 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122631039 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.153335997 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122531392 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.122631487 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.140021266 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122771934 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120582681 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.146745173 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.123871455 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.11370953 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.143492005 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129173766 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.131460111 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.154789758 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123674583 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12419943 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.143620974 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.113953158 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127925799 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.140022124 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118881891 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.124227798 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11156698 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.144191103 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125148847 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122468398 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.138683426 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137929668 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115354072 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.140046176 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137852366 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.11679686 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.145152797 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122198447 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.153543792 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.139678045 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124276986 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124537958 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.139053093 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.12043732 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.115014321 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110888216 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.159137051 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.126922247 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.117960182 seconds)
  done (took 16.720099546 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.328599084 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.308285601 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.1787351 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.310016938 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.155754196 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.206554333 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.306168649 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.306926006 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.111353778 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.177611828 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162548062 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.275575714 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.144001344 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.13967164 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.307610653 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.359713958 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.170416254 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.148109609 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.178093054 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125898842 seconds)
  done (took 5.553990331 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.138198941 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.147743127 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164656743 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142626848 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121219585 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.155206445 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.111991063 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132695874 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.152691461 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123686385 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.11369202 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.156894289 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124381611 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.127995562 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.156255581 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.152111081 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119343164 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.146538046 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134851053 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.115348594 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.133878027 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139184739 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12043234 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163688138 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131950109 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123572518 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.140322128 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.117784539 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118952524 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.148840112 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.117846477 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.129305752 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.147212721 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108264715 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124545483 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128482591 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.147252014 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.115675803 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116343675 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.143876042 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127775807 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.124955144 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.148667751 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101891148 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.130825476 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.113628741 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.153620417 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125656797 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.108373379 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129843041 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.154345431 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.126276405 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.118443874 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.163058329 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.118688562 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.129019628 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.15211824 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.125398004 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.116656514 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.13895147 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.110841275 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.115915456 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.148306768 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.127759991 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125259124 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.16049686 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.131238648 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.111318291 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.144502449 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.118782553 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.117916769 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.126190801 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.164060271 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.120753348 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.118449391 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.154258022 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.119766689 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096970923 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.150305122 seconds)
  done (took 11.588630899 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.14466722 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121500756 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131132191 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.177508564 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.124377778 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117156818 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.149604689 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132733692 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.125107447 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.158997302 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.12667408 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125226697 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16366601 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.122198734 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.120100169 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.158113786 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127007909 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.150406402 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.16032638 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.14024547 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.153819722 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.119274445 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.125190564 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123695797 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.170882893 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.123840753 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.167141903 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.126256063 seconds)
  done (took 5.043311905 seconds)
done (took 51.467641971 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.277241542 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.471410352 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.253676829 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.256849214 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.285882665 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.273807847 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.251469449 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.263156115 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.606237061 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.229913307 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.256260805 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.255627325 seconds)
done (took 28.836801496 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.316223002 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.769540184 seconds)
    (2/2) benchmarking "String"...
    done (took 1.536545015 seconds)
  done (took 4.452724351 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.247315286 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.246145443 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.468934907 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.245098957 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.247033239 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.24670036 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.249816697 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.263665013 seconds)
  done (took 16.11292743 seconds)
done (took 26.277044263 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.325029054 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.445517586 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.485435352 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.243349918 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.265746391 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.255240478 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.245574233 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.26630349 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.250039063 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.248267138 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.669506247 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.510107946 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.260058109 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.625275601 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.245405898 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.246772785 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.257983102 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.478055376 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.244654782 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.283654046 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.227937198 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.234717117 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.252034533 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.254260551 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.253400391 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.24628352 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.302546294 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.251249289 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.433993534 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.267310956 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.281089815 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.251765325 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.303363244 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.25412729 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.244083969 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.255531502 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.441487478 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.25188412 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.233389727 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.258733701 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.441228837 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.26149059 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.253143183 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.25904496 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.254596111 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.281935945 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.232886494 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.355752307 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.264771548 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.257280523 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.322230773 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.613471978 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.252097998 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.258389866 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.26369936 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.470190565 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.261962089 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.306221634 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.275871339 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.259832346 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.254397857 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.250114635 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.253265151 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.267535181 seconds)
  done (took 146.667443578 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.25289779 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.25130874 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.252495819 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.2673135 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.251759926 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.25170906 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.250068165 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.252820453 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.252636687 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.253924431 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.251436231 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.251798428 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.250624508 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.21091706 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.260535306 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.267902374 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.251470943 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.264755773 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.270426442 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.250582336 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.254522478 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.250731472 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.248359978 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.249785263 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.295720571 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.322141362 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.275542955 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.273765436 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.259275851 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.251848133 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.283491705 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.255848895 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.840680735 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.11828455 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.257788397 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.263517456 seconds)
  done (took 81.919897778 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.249096924 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.251369927 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.251072025 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.284844671 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.252395501 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.806168167 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.803821951 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.786694115 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.672403224 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.252639256 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.541203431 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.51351041 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.251257726 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.343735898 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.2589842 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.248057868 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.265397312 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.278412073 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.251862951 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.251915526 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.797893246 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.262470823 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.244850122 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.423423784 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.259600842 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.283495816 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.643921256 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.245295498 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.280029666 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.360094614 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.57479696 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.294358914 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.245545299 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.248243605 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.604295293 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.250024795 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.361966006 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.248049242 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.280935678 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.247283893 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.528986666 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.249406825 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.252637096 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.252583615 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.882524887 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.244641668 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.788933937 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.248922605 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.166460974 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.246552521 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.25137031 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.242179224 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.822485859 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.247935425 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.251057601 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.25258644 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.249260869 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.251917571 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.282133181 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.24034444 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.341957402 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.253519524 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.256457587 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.279216659 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.250890265 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.286213858 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.249593922 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.421657109 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.307101481 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.371998395 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.789107086 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.253724324 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.348604597 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.365839079 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.246710066 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.250879111 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.251437674 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.251440021 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.361877331 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.24839519 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.251771377 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.631874523 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.419539011 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.264330577 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.502583659 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.348798157 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.24901161 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.608025235 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.253092629 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.251495703 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.980441467 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.345404101 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.247419268 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.25118062 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.252390653 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.63669359 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.788447021 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.463975353 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.255470313 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.455238919 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.252085942 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.651678032 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.782258772 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.920555364 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.253529024 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.364583877 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.419375355 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.265523882 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.253550186 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.492495434 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.254838864 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.3110599 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.25397128 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.654839258 seconds)
  done (took 371.049591123 seconds)
done (took 600.785378094 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.13674803 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.075635246 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.220272982 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.078253803 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.060877356 seconds)
  done (took 11.716895826 seconds)
done (took 12.865789498 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.436472973 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.435453075 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.308933106 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.439056117 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.285105722 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.452681885 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.431177237 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.275926048 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.364554598 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.331428006 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.361235867 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.303437238 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.28514959 seconds)
  done (took 18.861283695 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.52459651 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.260944941 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.3211032 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.505780486 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.300665323 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.532999714 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.554767426 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.264097664 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.406360794 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.276944423 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.27462178 seconds)
  done (took 18.372533452 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.533813877 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.267671551 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.317571971 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.505242717 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.299515255 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.528225426 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.576053823 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.267928265 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.405432869 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.278285239 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.274755763 seconds)
  done (took 18.401647289 seconds)
done (took 56.784723075 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.290294543 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.350242342 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.284234988 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.270386038 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.26872709 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.272253186 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.274250654 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.271902886 seconds)
  done (took 11.430591845 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.27245117 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.268232587 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.269816889 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.270285125 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.270727362 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.272118024 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.271641686 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.270580965 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.274284734 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.269170475 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.268321195 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.26830829 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.268840248 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.269182742 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.269377879 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.26815617 seconds)
  done (took 21.469688744 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.272163829 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.270188709 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.269542346 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.269152478 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.270167567 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.26928684 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.267903323 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.274075258 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.271989155 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.269301135 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.270686668 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.272206673 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.269312228 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.270426022 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.270029214 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.272924545 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.270959121 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.267869266 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.274730729 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.270982419 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.26909854 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.268719509 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.268700992 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.27321855 seconds)
  done (took 31.644663306 seconds)
done (took 65.696745203 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.254227627 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.26211702 seconds)
  done (took 5.664187281 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.331980506 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.327469309 seconds)
  done (took 3.809705158 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.268780958 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.271669346 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.271934398 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.26956844 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.27072966 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.275012583 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.27209152 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.268840912 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.269613145 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.270131439 seconds)
  done (took 13.858151896 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.269824002 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.271457896 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.272139423 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.269753601 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.271955547 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.27098972 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.270874319 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.269872725 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.268644216 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.271409281 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.273239138 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.272785923 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.269895772 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.270777746 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.272805194 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.27079096 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.272834588 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.271686183 seconds)
  done (took 24.032867567 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.285223413 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.292626364 seconds)
  done (took 3.730408199 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.413127461 seconds)
    (2/7) benchmarking "second"...
    done (took 1.313783702 seconds)
    (3/7) benchmarking "month"...
    done (took 1.386646337 seconds)
    (4/7) benchmarking "year"...
    done (took 1.378779476 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.316565723 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.293170488 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.312677136 seconds)
  done (took 10.564631043 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.272770915 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.479982416 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.601390235 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.800395778 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.271171348 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.275209148 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.077158274 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.272862516 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.27703477 seconds)
  done (took 14.479505896 seconds)
done (took 77.291042654 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.257046537 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.297564869 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.282745568 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.279071976 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.564246599 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.294358501 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.254620438 seconds)
done (took 16.38202652 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.249306705 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.251159017 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.24460612 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.262831264 seconds)
  done (took 10.15682733 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.254389652 seconds)
    (2/2) benchmarking "read"...
    done (took 1.54587337 seconds)
  done (took 4.951535881 seconds)
done (took 16.260773044 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271460274 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.27107873 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.270767049 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.270090421 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.271511535 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.275105131 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.269834547 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.271267463 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.272652276 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.271516795 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.271644578 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.272892292 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271404312 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273094571 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271015723 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272430239 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.27508332 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271966775 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.272138279 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.274306287 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271578868 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.27341769 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.273436459 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.275530794 seconds)
  done (took 31.68598839 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.268607035 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.272362095 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.273079096 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.269958758 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.271944786 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.271920011 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.272254951 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.273542818 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.271485689 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.268761687 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270819706 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.274742947 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.27045768 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.271450159 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270823229 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.272971792 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.270731219 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27146644 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272108554 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.274692868 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.272332548 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270938713 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.2726682 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.271849611 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.272045281 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.272234716 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.274236264 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.272404819 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.272829894 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.270014677 seconds)
  done (took 39.308295833 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.277259559 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.277170294 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.274331477 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.271096496 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.271515435 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.270844914 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.27370995 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.272646676 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.271582356 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.271719082 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.274124076 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.272431129 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.273057224 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.270193379 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.274153012 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.272767823 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.274776553 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.272400545 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.273453746 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.274685071 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.274540449 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.274279642 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.272198895 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.272580216 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.273235026 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.275909298 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.275201434 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.272464117 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.27428219 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.275451424 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.273795246 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.274043532 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.277468312 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.273798293 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.274703015 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.273582764 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.27819933 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.278537224 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.274343699 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.272653841 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.274303662 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.274099356 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.27382262 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.274454649 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.274821592 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.274490352 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.274916812 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.274450493 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.274024355 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.275803671 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.273475264 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.278221931 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.276156925 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.275442409 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.274596458 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.274803387 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.275312853 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.27474152 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.27504969 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.274814865 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.274032379 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.275007509 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.275474396 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.275294264 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.274679679 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.275726128 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.276216095 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.277069963 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.2762092 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.276954462 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.275873151 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.276194741 seconds)
  done (took 92.91523653 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.279617298 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276529857 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.274159341 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.275037598 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278382712 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.275370397 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.277304578 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279022068 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276087028 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.276276401 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27674969 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.27671198 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276214862 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27697723 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276113338 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.277557812 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.276764451 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.275525953 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.277624198 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.275465471 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279734572 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.28015741 seconds)
  done (took 29.250196223 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.278650366 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.279127443 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.276808364 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.278166244 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.279202297 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.278734898 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.276081565 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.278352726 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278131694 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280223315 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279892786 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277911686 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.279894679 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277564513 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278515093 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.278781561 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276980008 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.278668642 seconds)
  done (took 24.167716757 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.279978895 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.276721497 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.278557382 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.277480317 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.276574007 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.27796611 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277168114 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.279944508 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.279736909 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.278997244 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.277185531 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278586012 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.277558458 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279625938 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278586977 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.280678326 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.279006651 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278226576 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278449254 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279429169 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.277346421 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278726123 seconds)
  done (took 29.285394523 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280359103 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.278734275 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.279658567 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.278199057 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.278599518 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.280974914 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.279758544 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.279696534 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.283988122 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.281552982 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279577321 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.279069769 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.282099908 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.280625891 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.278146538 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278491272 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.281749078 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.280987155 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280766044 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.278358468 seconds)
  done (took 26.759247029 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.279339143 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280009006 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281642464 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279550272 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279723741 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.279936064 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281302561 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.280934151 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.281418105 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.283306644 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.281835114 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.281617341 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281581747 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.28154356 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282571499 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281218982 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282700039 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.282909968 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.281571048 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283812879 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.283519057 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281722626 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.281684203 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284086297 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.284044908 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.282451726 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2830278 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.284396572 seconds)
  done (took 37.053506351 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283982811 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.283764379 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.282851932 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.286069948 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.284442887 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.285848187 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.286319279 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.287625461 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.286673428 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.287594755 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.285133088 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.286564975 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.288823665 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.285525639 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.286738805 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.287484245 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285536836 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.28604591 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285921144 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282123571 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.285762812 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283847448 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.282252884 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.283236103 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282346945 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.283553208 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287179089 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.283947151 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286065421 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.282721971 seconds)
  done (took 39.716438211 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.302854994 seconds)
    (2/2) benchmarking "in"...
    done (took 1.305449087 seconds)
  done (took 3.768542719 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.285024478 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284246781 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.286746649 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.284869882 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.286409182 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.283161186 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.28365314 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283529614 seconds)
  done (took 11.438898037 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.2772201 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.287459436 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.283232677 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.282722705 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.282002369 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.277226413 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.284850745 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.289876104 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.281136426 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.282217623 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.282722762 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.286592567 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.278819374 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.279545507 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.279486103 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.280937215 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.290500338 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.286998997 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.283472331 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.28716052 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.284266931 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.281125896 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.285222012 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.289469288 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.282084175 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.286222807 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.285645814 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.290227486 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.278709817 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.285626847 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.280891231 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.288116192 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.289044371 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.285975048 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.287493998 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.287065445 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.288943908 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.284238882 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.287303064 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290214981 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.289886851 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.287474991 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.280194959 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.282890678 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280436613 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.289528038 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.288189755 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.287121726 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.27891556 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.282068127 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.292876811 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.278212008 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.286878672 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.28196007 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.282977209 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.287670425 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.28968058 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.281754413 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.283136271 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.287758593 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.292595565 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.289771501 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282662295 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.288460053 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.288945416 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.294196926 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.288639759 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.29309538 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.288745098 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.28984008 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.284459136 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.295017666 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.291793352 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.286924937 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.286871057 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.288574838 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.281465015 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.290521222 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.286857125 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.286525936 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.289515795 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.285911145 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.290972758 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.293541661 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.283192578 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.288649342 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.28926123 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.289691305 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.284063586 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.293096279 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.292483471 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.291195292 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.280621982 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.281389902 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.284116424 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.289412789 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.280265195 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.286241926 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.292032631 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.293104534 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.291112973 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.285944882 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.288598278 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.292074644 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.289583762 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.288087253 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.292867625 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.282065728 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.288745145 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.297514875 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.290644318 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.284509226 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.286405416 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.29386588 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.285091014 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.2875423 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.292381978 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.285309386 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.292189442 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.292355464 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.292226682 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.301391371 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.293255273 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.293178743 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.287199499 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.296071407 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.291910319 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.287301854 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.292590242 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.293832964 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.292165016 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.286392694 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.295408839 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.284481385 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.291665193 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.284384303 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.293098969 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.293532246 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.289429543 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.284766042 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.28803178 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.287601135 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.287449923 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.288356518 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.294586621 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.286814111 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.293847094 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.288793999 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.28830606 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.289171864 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.295139519 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.294095264 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.28824322 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.293529447 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.285365173 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.292481074 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.284311726 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.294670345 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.293550283 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.295712384 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.294470334 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.287475369 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.290146755 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.297564478 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.293691852 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.28900772 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.296894376 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.295604588 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.294783609 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.286618579 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.296166423 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.287877598 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.289007929 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.298273622 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.296494521 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.29618984 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.290460923 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.295878837 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.296754763 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.29648923 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.290251198 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.292162065 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.296940829 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.293561584 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.298800922 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.296553153 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.29671545 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.290076735 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.288435355 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.294654453 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.292892328 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.301732761 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.298183524 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.298910353 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.290159056 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.297897685 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.288217678 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.296643588 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.290977113 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.297225374 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.297509926 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.297031794 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.287691648 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.297596918 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.291876679 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.29715985 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.287782233 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.299698473 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.301614871 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.296214503 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.299041969 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.288909043 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.288563158 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.296477738 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.299056099 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.295848284 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.289613279 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.296265418 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.2884168 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.288694977 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.297872065 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.295965257 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.295370388 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.300115105 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.292299287 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.292001417 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.29285602 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.29060717 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.296729579 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.294512108 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.292902492 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.295917989 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.294544613 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.291883347 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.299269936 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.293887917 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.291733042 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.296002168 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.300603329 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.298570174 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.292756461 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.300583646 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.297224676 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.298612026 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.296021722 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.291067783 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.298944735 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.296997574 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.301791894 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.291942638 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.29870628 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.291550496 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.299281342 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.291604538 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.294666582 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.292128455 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.296022403 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.302876033 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.299153162 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.294158318 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.301322742 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.298587494 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.300952259 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.296836356 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.303476853 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.299351409 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.294202641 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.297294334 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.293329701 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.304923727 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.292364858 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.299702611 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.292612546 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.304636335 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.308960781 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.299068168 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.297094112 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.301555837 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.299329374 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.294670105 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.2938434 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.292542554 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.293277245 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.294118294 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.294673104 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.301126706 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.29102204 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.299211818 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.295940773 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.295080827 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.302444639 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.301156753 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.292990246 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.301803697 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.299862955 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.30260692 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.294584108 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.298950227 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.294516676 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.296025091 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.295098538 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.294191018 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.301376126 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.297996044 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.297408827 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.295044234 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.296412615 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.294907413 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.298756913 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.305939616 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.298282034 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.305011241 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.297926071 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.300277696 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.297815568 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.304575676 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.305068118 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.299178713 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.305342906 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.302222579 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.292981494 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.296237069 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.305831135 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.303236234 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.306531498 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.297780107 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.305476781 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.3030655 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.305165659 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.301912281 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.302405091 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.30295147 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.304405001 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.305700765 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.29842392 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.300618586 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.299484773 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.304341347 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.303516005 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.305177225 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.294721657 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.298943216 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.305598548 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.297548146 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.296616397 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.296949363 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.305578233 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.303216843 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.304689556 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.305728326 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.305632662 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.304283263 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.302305852 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.306451622 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.304718433 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.304460324 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.306578983 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.306834921 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.310028288 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.297922683 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.307029289 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.303804752 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.300082282 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.298428602 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.299834298 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.30603718 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.299909942 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.308628577 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.304675123 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.300143088 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.300860395 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.308258945 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.29724551 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.308636646 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.316608605 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.301143241 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.309058528 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.305001782 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.301203019 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.308825301 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.30662897 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.299428228 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.302061826 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.307564969 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.310352391 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.300040254 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.30578928 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.300373117 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.310569942 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.308233151 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.307796882 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.306359108 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.307015059 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.300516992 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.30904282 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.303234593 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.309485446 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.301067794 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.303323891 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.302740019 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.308991627 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.311253143 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.300751215 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.306043328 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.310393461 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.300840578 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.302172974 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.306567857 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.301652226 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.309721926 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.30475317 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302507895 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.304972377 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.304394593 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.305125687 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.308577013 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.303316468 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.302785534 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.309735591 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.306711707 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.309049302 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.302311346 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.30833058 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.30272108 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.299620544 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.311901928 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.304818242 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.312533929 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.303767534 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.306601679 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.302592898 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.307993373 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.310863009 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.309430777 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.301970043 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.302534122 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.310608218 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.306951043 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.308889276 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.306888496 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.312023969 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.302673906 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.30406348 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.30777634 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.304520663 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.301270856 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.310992802 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.303916518 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.302875625 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.303803605 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.310839292 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.311331653 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.305845454 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.304292853 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.311097928 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.311429938 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.313654207 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.30473456 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.304714133 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.305433309 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.311667746 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.313083395 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.306657464 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.315218321 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.310252419 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.311522099 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.305647648 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.305434206 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.30368403 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.313126962 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.31003728 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.30594554 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.313580916 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.305518354 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.314475475 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.31288881 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.312590371 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.30505781 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.304712714 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.307686344 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.305806292 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.310645616 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.307498457 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.306071099 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.304271697 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.312036315 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.312168468 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.306321503 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.302111082 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.294544324 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.298937261 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.29509391 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.299377584 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.296805511 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.297185343 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.297357115 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.295391549 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.288185921 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.291747041 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.299056673 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.294572389 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.286702262 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.287147914 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.284023614 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289051415 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.287143743 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.28280505 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.282049923 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.29008286 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.28856072 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.289003601 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.281254792 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.290987689 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.291141668 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.278974196 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.279445643 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.28278966 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.288753305 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.286841416 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.280836623 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.276179507 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.279356237 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.287087628 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.28240145 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283026865 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.28143822 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.273796144 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.2832114 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.274786286 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.277326308 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.278352637 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.280857407 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.278116788 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.279488667 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.281072205 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279828143 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278377995 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.291485423 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.275450553 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.271523575 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.279323773 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273292925 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.277922983 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.270790633 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.276865398 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.276859055 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276504979 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.277842557 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.269217657 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275148857 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.272719304 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.279045081 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.276577412 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.269267449 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.270102529 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.278392529 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.277060187 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.279357953 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.277833679 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.277938798 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.276427794 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.26916335 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282250461 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.283317915 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.277755355 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.277790169 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.274790964 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.272117783 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.270847812 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273975265 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.279224634 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.274440151 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.276783003 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.265560756 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273686906 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.273521877 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.265141114 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.264263484 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263944249 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.273773286 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.278733184 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275908826 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.263815587 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.261122642 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.270005131 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.269461731 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261585241 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267516234 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271118978 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.260631089 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.26137406 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267228809 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.266807167 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.266917276 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.261501866 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.271628056 seconds)
  done (took 772.056841498 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.26765572 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26770131 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266820691 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.266491772 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265634141 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265320153 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267206466 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.269710209 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.267756045 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.267131469 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.267025749 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267150962 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268174197 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267806313 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26783458 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.269392712 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267449911 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.264784877 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.264968187 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265167072 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.264337439 seconds)
  done (took 27.755841044 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.265782417 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.266769584 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.261845196 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.264916496 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.263246248 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.263169812 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.264225113 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265956555 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.265005567 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263583422 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.260235068 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260874335 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.261731963 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.26200144 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262279969 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260318787 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.260198259 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26216321 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.259159333 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.257142201 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.258786735 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.258150583 seconds)
  done (took 28.916399517 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.260098593 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.258367244 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.250736649 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.257867156 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.260450024 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.260575884 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.257085096 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.259917338 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.258119076 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.254561241 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.252168132 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.25348826 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.256321606 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.26210262 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.253965152 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.261892236 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.259743703 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.25838491 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.259251596 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.260544242 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.258859984 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.263758577 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.259422163 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.252578741 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.261261228 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.260195687 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.264154779 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.25954865 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.253040524 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.261420081 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.259781215 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.252485511 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.256678239 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.25415497 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.25634945 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.264769621 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.259856276 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.259968398 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.260245195 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.263242102 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.272848681 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.261162126 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.258636553 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.264155632 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.261000445 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.257065339 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.265499428 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.26118998 seconds)
  done (took 61.583418271 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.262601842 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.261885231 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.262801321 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.262774538 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.26148963 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.261525543 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.261702181 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.261684597 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.263363711 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.263049017 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.262953744 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.262775437 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.260443795 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.262543216 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.264421344 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.261690571 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.261182771 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.261096852 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.263168877 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.262963389 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.262069143 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.262888348 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.263778164 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.263226911 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.264309399 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.264032921 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.262978844 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.262877429 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.260607298 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.263724852 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.263378205 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.263795695 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.263711344 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.265048664 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.264244166 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.263121827 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.26416772 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.264599877 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.264894534 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.264353119 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.262599703 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.265951068 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.265184555 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.262618941 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.261769134 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.263712256 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.265288637 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.260713246 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.263531623 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.264124749 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.264769937 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.265370187 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.266528576 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.266592811 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.264284116 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.264783782 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.265385825 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.265724091 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.264160363 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.264266665 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.263480653 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.265022084 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.264647896 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.264653935 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.266505661 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.264218176 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.264717811 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.266517923 seconds)
  done (took 87.07421673 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266328101 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.263997294 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266343502 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265745288 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.265543127 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.264854648 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.263325322 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.264966466 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.264960502 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.266391319 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.265915938 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.266382054 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.265140103 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.266844126 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.264431739 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.265809146 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.267790959 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.267868586 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267439451 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266335209 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.265821708 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.266621082 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.265089834 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.265782352 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.266331003 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.2661007 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265967027 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.263885845 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266017093 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.266324959 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.266786583 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.268534758 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.265145595 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.267503809 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.270566232 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.264019417 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.264048284 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263503449 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.264979401 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.265309583 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.264477827 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.2623165 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.267440775 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.261268016 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.260240592 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.261129327 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.261840602 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.264104189 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.262624388 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.262317004 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.262432576 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.260228778 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261170081 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.258548538 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.261812516 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.261188047 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258547447 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.260040876 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259370084 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.258016769 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.258002868 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.258556482 seconds)
  done (took 79.532698156 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.259493397 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.258292755 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.259161849 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.260707472 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.258221199 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.257815134 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.259185976 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.259614372 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.259843751 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.259654219 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261039628 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.260729687 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26111652 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261057619 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.260282889 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260929636 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257927921 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.260961454 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260065792 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.258668949 seconds)
  done (took 26.337949604 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.261763525 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.260751432 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.261512598 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.259721941 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.260596137 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.259180621 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.261061831 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260287928 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2603986 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259971566 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.260498328 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.261316823 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260524499 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.261205689 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.26164751 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.261836642 seconds)
  done (took 21.315926197 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.262446488 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.261366235 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.261684594 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.261008333 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.263072234 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.26050962 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.262108148 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.261431884 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.261373645 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.261529888 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.261973512 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.261882108 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.2611165 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.259856328 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.261523219 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.25871407 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.261498572 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.261095984 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.261710249 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.261381064 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.26310877 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.261576357 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.263678217 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.262789976 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.263211 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.261549549 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.264126695 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.263032758 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.262168395 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.262517317 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.264188276 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.263305382 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.261701163 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.262128633 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.26308737 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.264549776 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.26326326 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.264958459 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.264048674 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.263027669 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.265116991 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.264688421 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.264845145 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.263285531 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.264120707 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.264539469 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.263163807 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.264146245 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.263017989 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.264276454 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.265611152 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.263067687 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.26324191 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.266190833 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.265811771 seconds)
  done (took 70.600996321 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.264594222 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.264290014 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.265600523 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.264899032 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.266218681 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.266614817 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.265817033 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.267842045 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265837485 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.265870368 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.265393639 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.267656728 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266171195 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.266279834 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.2663878 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.265287376 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.266531357 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.266720641 seconds)
  done (took 23.934498838 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.26673713 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.266946216 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.266955525 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.267692696 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.266314557 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.26652868 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.266295226 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.266549476 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2684346 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.268696179 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270011677 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.26996958 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268268943 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.265790186 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.26840917 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267133974 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.266356831 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268348807 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.26866233 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.268161184 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.26815108 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.26744176 seconds)
  done (took 29.03742088 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.258760918 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.259519438 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.259077549 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.272626007 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.269638927 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.259087852 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.258563654 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.258098203 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.279663388 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.297308625 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.292032766 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.271809633 seconds)
  done (took 16.38650372 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266935726 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269613277 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26900564 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269945973 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265985162 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269634932 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26654084 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267916749 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268843275 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269964709 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269035496 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266407034 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269146873 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268628381 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269591044 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267883259 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269786992 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269008726 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270280456 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26975068 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268900788 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268658214 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2682821 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270914728 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270818537 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269726505 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270345051 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26854994 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269047112 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27172007 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27075532 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268912219 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270720126 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271809215 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269804551 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269991181 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269255915 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26987115 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270005226 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269711691 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.270754351 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266445892 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271177821 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268676918 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270981601 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271718082 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272312327 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270550842 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271579159 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271194252 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270002988 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272079523 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272359977 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27198879 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272364495 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270724091 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271914037 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27232628 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270880894 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273102075 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273377551 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273731275 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270708114 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271099145 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272820603 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27012956 seconds)
  done (took 84.979255368 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27268185 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.272871209 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274027667 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272776009 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272703079 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27160636 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273496142 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271277457 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273356031 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272746376 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272783909 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272907642 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273076052 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272788256 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273526726 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274663964 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274844042 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273290693 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271956361 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274341409 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271490611 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273118871 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274747215 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275282289 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273787808 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273451288 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276590337 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27297211 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273224364 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273657146 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275812781 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273330387 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273383873 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.272838351 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275606979 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274831943 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274085089 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278072612 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27593926 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273951344 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274707542 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275470364 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274322896 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274300784 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275373708 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274682971 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274491737 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275465132 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276472242 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275390681 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276063122 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276439453 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276713365 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274831314 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277320689 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275965257 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275524773 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277105554 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275800939 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274783517 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275711495 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27647018 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280088645 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276193277 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278541082 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280816847 seconds)
  done (took 85.283513882 seconds)
done (took 1781.296124769 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.431553155 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.38878367 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.264888279 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.274997539 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.263465458 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.264024434 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.276432521 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.263554867 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.267957187 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.268958842 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.267520209 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.461480012 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.301940791 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.265827518 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.268437475 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.364319195 seconds)
  done (took 26.052249686 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.291899862 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.277532883 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.382753635 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.27564736 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.300764693 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.452303256 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.329709693 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.281695927 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.437021431 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.29115179 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.274764738 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.295152581 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.277049908 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.281027211 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.291765079 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.452080243 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.509116635 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.27377538 seconds)
  done (took 28.135297722 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.689897467 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.294780493 seconds)
  done (took 5.15117119 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.298619716 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.279068274 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.280146086 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.276139724 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.273692152 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.266213645 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.278383128 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.27883826 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.274789312 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.394959649 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.276281496 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.291084919 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.277096655 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.279357009 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.285753782 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.321171695 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.416712977 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.287548759 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.285943779 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.284928215 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.278061614 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.37287526 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.318833031 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.288113674 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.39279126 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.283553974 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.280941262 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.285860989 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.402807109 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.287936555 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.277929564 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.277815902 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.280271379 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.272186574 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.73473127 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.280171594 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.299667102 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.28829595 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.286731538 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.425919386 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.281655804 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.28683853 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.281327076 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.717752708 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.423278281 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.396232553 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.277474443 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.277070005 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.281063725 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.347171807 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.281732723 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.282110882 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.336154069 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.094725661 seconds)
  done (took 82.25716791 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.315433199 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.272851072 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.444618631 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.296230869 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.274177846 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.275248091 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.274972528 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.542751808 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.312755941 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.285542935 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.552609991 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.776940835 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.272990123 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.292448201 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.879698726 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.298663924 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.275407709 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.273829646 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.273077284 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.277585931 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.779432788 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.272812378 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.271090234 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.317687766 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.3125264 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.742833266 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.276583447 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.275718379 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.293926984 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.27370105 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.738794534 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.279714986 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.292628965 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.273903572 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.54286967 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.628594654 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.59497274 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.273919446 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.281130148 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.274794882 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.301965222 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.728555574 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.607061079 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.274433865 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.272399716 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.726987742 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.273624964 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.278543805 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.281708105 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.495716404 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.275772182 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.278663106 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.280718549 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.277059122 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.286137871 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.344996499 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.296241408 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.76488795 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.276349721 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.287026253 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.321953056 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.281505684 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.280096737 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.283284734 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.282509395 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.617704996 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.467657116 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.283249303 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.618300506 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.726546204 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.275699277 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.802181218 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.276981962 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.292157409 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.499707013 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.281415524 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.274328958 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.778675123 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.275605956 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.274079922 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.60529029 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.283266629 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.569937218 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.291003221 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.275550906 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.800701356 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.283758198 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.329769702 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.27950303 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.276850684 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.278844162 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.283209939 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.551135645 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.33901145 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.281596183 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.280050141 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.308327583 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.279898697 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.290514815 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.284859526 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.804228058 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.289786473 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.280762072 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.281291995 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.278472515 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.282533861 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.280681265 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.283225667 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.517177859 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.281811486 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.285537317 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.283583786 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.279533339 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.283907919 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.333308382 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.279477148 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.564870716 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.280516805 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.281269772 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.285490793 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.28233187 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.286447684 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.279146129 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.286908255 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.143638038 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.514466901 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.297346121 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.280093104 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.284589178 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.287994098 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.278362691 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.280452323 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.315471706 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.280745226 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.017300989 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.299380128 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.307148684 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.283238951 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.287149402 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.284943935 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.282289357 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.283317987 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.579373027 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.548700961 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.459453278 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.283211757 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.28343308 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.013084518 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.294632116 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.419974331 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.298933791 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.279773586 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.503250345 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.522960797 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.287616437 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.280682176 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.283882876 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.510560009 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.283937363 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.596405686 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.771977763 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.28451999 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.284081713 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.015794957 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.985911928 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.285951715 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.285960011 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.56096896 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.297755293 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.2828113 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.284794089 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.2864096 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.282178658 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.288726216 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.282268458 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.284651537 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.286422092 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.554221569 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.460604518 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.302532859 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.288131349 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.744488375 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.286581255 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.282468018 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.292504735 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.288683744 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.286259104 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.372548653 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.287769059 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.29178738 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.283249604 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.291371393 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.763016708 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.282984378 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.287571385 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.441381046 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.932806096 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.285640424 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.289543418 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.282142094 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.906804216 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.802180117 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.354311511 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.575713843 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.293804466 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.326070024 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.288454926 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.301618594 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.767917282 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.286714763 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.288179708 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.904699439 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.284190523 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.696764939 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.287295617 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.288472495 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.819345632 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.286258501 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.291339062 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.284933878 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.286004118 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.564573961 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.288211189 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.293079606 seconds)
  done (took 483.923960343 seconds)
done (took 626.678450243 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.291707483 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.289191849 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.273301013 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.28982533 seconds)
  done (took 10.324169381 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.306980059 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.294651865 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.304240893 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.293926815 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.304748669 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.292177512 seconds)
  done (took 8.978491072 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.290837444 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.288865992 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.289336347 seconds)
  done (took 8.049519297 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.499638961 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.308358275 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.630529294 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.294158894 seconds)
  done (took 8.916093795 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.304980126 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.304082909 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.304666829 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.306301038 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.308709499 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.307298508 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.307729212 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.306532847 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.310096606 seconds)
  done (took 12.940615964 seconds)
done (took 50.389130007 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.284236153 seconds)
    (2/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.123450294 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.36296238 seconds)
    (4/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.513219277 seconds)
    (5/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.999513243 seconds)
    (6/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.466993285 seconds)
    (7/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.13660279 seconds)
    (8/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.359565498 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.399807422 seconds)
    (10/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.271773131 seconds)
    (11/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.328103323 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.325458601 seconds)
    (13/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.275639583 seconds)
    (14/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.4303495 seconds)
    (15/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.298280745 seconds)
    (16/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.274075815 seconds)
    (17/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.040476703 seconds)
    (18/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.106183457 seconds)
    (19/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.415056848 seconds)
    (20/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.328588822 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.363601648 seconds)
    (22/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.323651694 seconds)
    (23/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.473705621 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.39777027 seconds)
    (25/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.379400068 seconds)
    (26/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.100644265 seconds)
    (27/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.291855756 seconds)
    (28/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.517994332 seconds)
    (29/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.291990994 seconds)
    (30/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.615123876 seconds)
    (31/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.294308744 seconds)
    (32/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.377337852 seconds)
    (33/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.275099586 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.424414566 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.385795541 seconds)
    (36/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.993601243 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.435310334 seconds)
    (38/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.30523979 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.38971387 seconds)
    (40/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.500854539 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.356536755 seconds)
    (42/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.398658852 seconds)
    (43/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.479723391 seconds)
    (44/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.436182495 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.392506907 seconds)
    (46/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.13086278 seconds)
    (47/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.478684305 seconds)
    (48/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.276585986 seconds)
    (49/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.274719735 seconds)
    (50/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.328961507 seconds)
    (51/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.307647112 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.402291468 seconds)
    (53/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.277790778 seconds)
    (54/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.417490844 seconds)
    (55/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.277691923 seconds)
    (56/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.305082819 seconds)
    (57/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.405157028 seconds)
    (58/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.061488856 seconds)
    (59/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.368516802 seconds)
    (60/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.435563456 seconds)
    (61/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.456216493 seconds)
    (62/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.334453368 seconds)
    (63/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.419207343 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.448204775 seconds)
    (65/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.284304828 seconds)
    (66/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.502734533 seconds)
    (67/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.437566738 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.415727193 seconds)
    (69/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.230434022 seconds)
    (70/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.280727654 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.458072056 seconds)
    (72/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.340331354 seconds)
    (73/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.437942085 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.387609632 seconds)
    (75/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.277837693 seconds)
    (76/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.328845542 seconds)
    (77/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.469260875 seconds)
    (78/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.277333581 seconds)
    (79/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.276829442 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.299940658 seconds)
    (81/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.279452702 seconds)
    (82/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.462175884 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.379770593 seconds)
    (84/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.29302338 seconds)
    (85/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.53847146 seconds)
    (86/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.409199558 seconds)
    (87/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.047083129 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.405668448 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.379948327 seconds)
    (90/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.27915907 seconds)
    (91/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.437546166 seconds)
    (92/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.278573621 seconds)
    (93/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.366354877 seconds)
    (94/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.998958804 seconds)
    (95/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.33037305 seconds)
    (96/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.278536039 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.411924495 seconds)
    (98/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.431868601 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.330666983 seconds)
    (100/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.280444707 seconds)
    (101/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.276051908 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.538721904 seconds)
    (103/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.332559228 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.518592728 seconds)
    (105/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.464688972 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.368119406 seconds)
    (107/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.561535025 seconds)
    (108/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.422348474 seconds)
    (109/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.399518742 seconds)
    (110/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.091482389 seconds)
    (111/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.375862096 seconds)
    (112/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.280307233 seconds)
    (113/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.373547381 seconds)
    (114/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.413461468 seconds)
    (115/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.091797109 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.453750938 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.520683557 seconds)
    (118/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.331310935 seconds)
    (119/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.516522081 seconds)
    (120/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.281434521 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.336354239 seconds)
    (122/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.298584978 seconds)
    (123/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.438379635 seconds)
    (124/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.402649753 seconds)
    (125/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.280900004 seconds)
    (126/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.500483074 seconds)
    (127/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.289261786 seconds)
    (128/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.358982561 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.300325807 seconds)
    (130/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.279999503 seconds)
    (131/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.960948809 seconds)
    (132/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.067998667 seconds)
    (133/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.376068011 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.432131308 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.389087092 seconds)
    (136/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.457574565 seconds)
    (137/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.411426293 seconds)
    (138/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.380191605 seconds)
    (139/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.275422544 seconds)
    (140/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.443879033 seconds)
    (141/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.283310007 seconds)
    (142/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.429718915 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.360726535 seconds)
    (144/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.369102582 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.413483577 seconds)
    (146/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.000443277 seconds)
    (147/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.282854486 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.424419248 seconds)
    (149/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.411604532 seconds)
    (150/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.408891098 seconds)
    (151/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.108985888 seconds)
    (152/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.33617332 seconds)
    (153/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.199136044 seconds)
    (154/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.358113985 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.450789495 seconds)
    (156/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.543532742 seconds)
    (157/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.365096257 seconds)
    (158/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.177391356 seconds)
    (159/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.396842007 seconds)
    (160/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.409580454 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.336936063 seconds)
    (162/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.418959012 seconds)
    (163/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.367688429 seconds)
    (164/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.332218163 seconds)
    (165/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.4719868 seconds)
    (166/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.386232121 seconds)
    (167/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.563948819 seconds)
    (168/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.142363972 seconds)
    (169/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.2834041 seconds)
    (170/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.338696393 seconds)
    (171/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.28334712 seconds)
    (172/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.321585126 seconds)
    (173/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.17561117 seconds)
    (174/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.284166984 seconds)
    (175/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.464776049 seconds)
    (176/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.284299205 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.514682679 seconds)
    (178/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.365079382 seconds)
    (179/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.335269855 seconds)
    (180/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.402885383 seconds)
    (181/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.3011784 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.446102262 seconds)
    (183/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.290419908 seconds)
    (184/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.329928613 seconds)
    (185/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.285622145 seconds)
    (186/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.266555779 seconds)
    (187/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.342941379 seconds)
    (188/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.283230794 seconds)
    (189/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.965402298 seconds)
    (190/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.450560981 seconds)
    (191/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.333134162 seconds)
    (192/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.293031115 seconds)
  done (took 332.549327338 seconds)
done (took 333.732591123 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.327815233 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.389982134 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.309823859 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.308219665 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.311714668 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.310822698 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.332518534 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.313251062 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.325190803 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.326300103 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.308556287 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.319336674 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.325138815 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.322623257 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.345808824 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.311445089 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.313477585 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.321994645 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.326867266 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.329824515 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.315351591 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.313017136 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.338372134 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.312629622 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.322046604 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.321514232 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.320321526 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.303790073 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.316986548 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.327817665 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.306831918 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.31498705 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.328361 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.324924357 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.314078331 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.323178121 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.314097217 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.393632725 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.331841922 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.322183557 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.32025728 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.329059227 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.32012105 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.318658306 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.325258429 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.333793744 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.322302913 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.32837143 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.309096487 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.29949224 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.327866033 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.325758615 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.321851174 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.305110257 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.307340042 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.325605095 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.325581815 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.330023344 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.324882615 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.316805906 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.349905081 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.331582128 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.328054515 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.322118296 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.322169112 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.326436361 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.325124148 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.331214091 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.323861065 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.316205314 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.318538325 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.326633288 seconds)
done (took 104.48153258 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.439198167 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.313773629 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.450538791 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.323661361 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.47288407 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.441192662 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.32195329 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.324325923 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.321631565 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.108266452 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.322956788 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.322131638 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.315381396 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.324152717 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.440904954 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.324914299 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.322467729 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.035592146 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.322528287 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.454245698 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.314515988 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.325110347 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.323016119 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.116742687 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.315928528 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.311476555 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.455507726 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.325082633 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.040084359 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.312262939 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.314587227 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.014723707 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.455837777 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.344865948 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.334887957 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.332833774 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.475475162 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.328102693 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.435609319 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.437940716 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.453035414 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.361023153 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.31142462 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.316630748 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.328409015 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.324808959 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.32507657 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.354687072 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.316444411 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.326624498 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.013568269 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.336155725 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.324835531 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.32501058 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.326781098 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.354040327 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.326245929 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.324536227 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.457252752 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.326914969 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.440938644 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.147846602 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.148688298 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.32587858 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.31619258 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.328048864 seconds)
  done (took 107.454953446 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.388697267 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.393237087 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.42820417 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.318209848 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.371903287 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.42865812 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.317737425 seconds)
  done (took 10.848027066 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.326300631 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.32825357 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.369863075 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.369646187 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.327957866 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.476860809 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.326628231 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.330593657 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.329057792 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.372082048 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.328901392 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.329929543 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.337378273 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.32008647 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.366960976 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.331266921 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.435761686 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.319297416 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.326365459 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.474332746 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.326559398 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.33775932 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.371042503 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.33160676 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.330634467 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.326453344 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.087297981 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.326923958 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.328369717 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.329026075 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.329474988 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.376146944 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.328711629 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.31853758 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.330282834 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.437428542 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.326137156 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.327484006 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.33082404 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.321478765 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.331046334 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.331217804 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.328040287 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.329985944 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.328557805 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.345707594 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.327351153 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.330889133 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.329997312 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.330122734 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.372612995 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.331689164 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.329365217 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.330020024 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.377775408 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.339105546 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.329587602 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.331564225 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.331228844 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.33293214 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.476010484 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.371150784 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.32944026 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.370177193 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.331604927 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.329312647 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.328756568 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.330479529 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.376380351 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.331828292 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.36906155 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.330833469 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.501229605 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.346770711 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.332490198 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.325467976 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.324838448 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.332399715 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.323802682 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.330076127 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.331824297 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.32482982 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.33174543 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.333019313 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.333431438 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.484227658 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.432900039 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.333429996 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.33671488 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.331296886 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.332529806 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.375953359 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.33287067 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.332435119 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.377087132 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.440243226 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.376892669 seconds)
  done (took 136.806316811 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.337968047 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.337192948 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.3282784 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.35236401 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.322705345 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.326018749 seconds)
  done (took 9.211140186 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.327912008 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.337399438 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.335589797 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.333949751 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.333289025 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.33161702 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.334432759 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.329411556 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.338339893 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.335260316 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.33550738 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.336695168 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.334952596 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.333178941 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.335508302 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.335143068 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.33301816 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.33468646 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.332889214 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.334198822 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.324929793 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.334447869 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.335076495 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.32808805 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.338355307 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.332166352 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.348238882 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.334907485 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.335756259 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.332467794 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.337923396 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.336502129 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.328692087 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.331622217 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.337753496 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.329616535 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.33826638 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.339985123 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.333565857 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.335265827 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.342704961 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.34033578 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.337757982 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.34070495 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.330653623 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.332594665 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.344655107 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.353892012 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.337400768 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.341862934 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.343116394 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.333366411 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.337755115 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.34220276 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.331817325 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.33373926 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.344188712 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.337172028 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.33654565 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.33140098 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.34047666 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.337484409 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.330384001 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.338758816 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.33844058 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.338794523 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.330019756 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.34004232 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.336946902 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.336335736 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.339607508 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.3353718 seconds)
  done (took 98.400831786 seconds)
done (took 363.916050835 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.686542423 seconds)
  done (took 3.897763734 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.342178498 seconds)
  done (took 3.55551726 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.253493712 seconds)
  done (took 22.468115275 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.341979084 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.404248802 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.320028406 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.3245613 seconds)
  done (took 10.602093898 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.592419535 seconds)
  done (took 3.803670089 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.342091811 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.330533221 seconds)
  done (took 5.886830766 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.516531442 seconds)
  done (took 3.728533668 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.543823437 seconds)
  done (took 3.755757878 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.36399716 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.349703733 seconds)
  done (took 5.934813219 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.308798912 seconds)
  done (took 3.521334312 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.239585932 seconds)
  done (took 20.45149793 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.347401897 seconds)
  done (took 3.562314614 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.340788047 seconds)
  done (took 3.554292957 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.808638179 seconds)
  done (took 6.021780983 seconds)
done (took 101.954783697 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.327917383 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.324897452 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.325857431 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.323828713 seconds)
  done (took 10.514741644 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.392608687 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.391821065 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.399383078 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.39270434 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.392358469 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.393161673 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.366415196 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.367505097 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.39294933 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.393671755 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.399944352 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.390819864 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.392746462 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.367916262 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.393442696 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.398948096 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.392710056 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.397896261 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.366901595 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.39224041 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.341889938 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.393760397 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.393999026 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.342451277 seconds)
  done (took 34.461680506 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.853231861 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.404551622 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.489586338 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.388976027 seconds)
  done (took 7.351874873 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.420046149 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.424989073 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.441226054 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.47836128 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.509500022 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.442043408 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.363909257 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.363075993 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.3495473 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.424501768 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.476470527 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.406368541 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.511264342 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.343274487 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.561794594 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.343544773 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.342632992 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.423126122 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.474263381 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.504063113 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.343136134 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.420239881 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.427653318 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.407862038 seconds)
  done (took 35.42074738 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.351331966 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.36492074 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.345636972 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.360208736 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.346983424 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.346335272 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.346412012 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.351321878 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.343388365 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.346073975 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.345244856 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.358883322 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.345400679 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.346860172 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.352796845 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.345688965 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.347860161 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.353651463 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.353819115 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.345181659 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.346438669 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.35217513 seconds)
  done (took 30.913389474 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.334424889 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.333930469 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.682724786 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.588203369 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.331722683 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.328580898 seconds)
  done (took 13.816367679 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.405236984 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.539204138 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.332046576 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.674826641 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.751084419 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.334414654 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.338441525 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.575326066 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.860204922 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.846261887 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.39281662 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.403776679 seconds)
  done (took 19.673304743 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.345588598 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.333371372 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.345121255 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.350428444 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.389499317 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.336673458 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.348424754 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.335218704 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.394046196 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.397468254 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.345105294 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.395034912 seconds)
  done (took 21.534541381 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43144461 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343661051 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.344808424 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411213135 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340631468 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.180472434 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.410876753 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.038943935 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.343076127 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619804227 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34450312 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430256467 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.597535924 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341636957 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357730412 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.31064393 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.569999855 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813424437 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344701057 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343917753 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375794053 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354682162 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347007113 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.543807958 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.227466006 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344892733 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.611565145 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344780448 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613645598 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588828582 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.587054623 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349340125 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622206184 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980628618 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440421996 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544323177 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339939572 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346508955 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.328726811 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.362996729 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354700526 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.348455706 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585816448 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348986884 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347316404 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351767307 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047731892 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.350765226 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.346078017 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345773601 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587572111 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442872452 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.351707913 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345783864 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38026261 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344489222 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.351762194 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466307595 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910745255 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346182222 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356031797 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.348808203 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342804841 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349736643 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985416954 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.356928105 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.352232207 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.351937602 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348318956 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.354401555 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370776485 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347294649 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.362368503 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348604277 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077490498 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.350631243 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350052208 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879915727 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349714763 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.361016851 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.578217608 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348131971 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348627944 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.347308681 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348074829 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.060197739 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355718684 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.322633957 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40739576 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.042876945 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.541603196 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370593841 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37943783 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.571447896 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.322240662 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352162946 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.348577219 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366471037 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368685545 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.054314883 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344370986 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.351728819 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604940599 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.559325971 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350856568 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.322402756 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.812363096 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358638177 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.374909144 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.350841437 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.546454124 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.950290514 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595464974 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356724648 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381587804 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34917379 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120142642 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366592237 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.355252229 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.3509287 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616616235 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.14774943 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354298071 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423682595 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356044204 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.35504349 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353110985 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36997461 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.353976407 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.531574635 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356379535 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610158834 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.355953475 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354670683 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.359080744 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358182214 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.354033246 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.575196307 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365734197 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630111217 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352218995 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353491517 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347601993 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.569532098 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.353784928 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.358507585 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612521463 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352692612 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353663038 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596895888 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38565378 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462493702 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384616654 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.359498061 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.61119095 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.35857487 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.360567612 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354722278 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371777329 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355577012 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.363050751 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351380114 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94913547 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33219675 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350991182 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356169306 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.370823471 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421490766 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.364172621 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.552523909 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.355574158 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354649459 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.372285312 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.365406342 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.578708923 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59689577 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.358306146 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432963494 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.817383884 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.950237827 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371207771 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.354872907 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.354722213 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.355396596 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356722347 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355069388 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356695251 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555341711 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601907944 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354046396 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.958853483 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360883122 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.366489948 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.362866911 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598189457 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.365547212 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358204979 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.35813675 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361445555 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367846452 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.595951759 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495195637 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.372210264 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359764683 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.876024643 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.365800377 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357015787 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359047776 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389526864 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368518071 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18783109 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.614428328 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360621666 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601037644 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366079539 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.3744225 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.360251924 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356818277 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376392196 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.368637361 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379626259 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.55725924 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.362652778 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358831976 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914882236 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105165673 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904701937 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371007081 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.355723346 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360042775 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.063516414 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354563412 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361102956 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592020977 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.062798399 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355680274 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818983817 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.359791937 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094523611 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601854826 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.591810141 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361326764 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.374424076 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605519694 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571900849 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390061343 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364650305 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361423668 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.330735211 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898269001 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35986909 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441666511 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067572713 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355156384 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379182659 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.422251042 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.355946579 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.742895244 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359148626 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361045155 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363719496 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35996392 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193627437 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358434019 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359135589 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981211351 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37193774 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.823760778 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354694104 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.559605785 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.606383051 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.585761075 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.362426427 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.365011145 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.614606848 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603775881 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364673109 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369304149 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908185217 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.233523408 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.370689265 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360757997 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129909337 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378834347 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.630137035 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.365333269 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.383315137 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372149036 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.363050944 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362617195 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.362464339 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367995144 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337335133 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831089779 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.359980771 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361126023 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367059516 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364420092 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.61825718 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.381034739 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.965597071 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592750326 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359838559 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41054604 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.368280455 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36202871 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.338342063 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363244705 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364511902 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396270442 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.584886953 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.36306482 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.336771601 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.374543686 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.573526889 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362798824 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362608156 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571678519 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.363636416 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.380631407 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135788009 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39742237 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364765086 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363138357 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358109497 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404007478 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430305344 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561386461 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.607657708 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.610658861 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.749081077 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365259502 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36751823 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.38189558 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459449256 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367840252 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.376029125 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.140024932 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969212305 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116203499 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.975391163 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611473198 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.366275274 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372392274 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367803204 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498844558 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366968969 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640926111 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367301444 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.355390538 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385846776 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364953962 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389164084 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576861028 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640782399 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366407045 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369532922 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366267041 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.365907541 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616425318 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.577766194 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846286565 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911145484 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367724051 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371403493 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.073169297 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639204928 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37013474 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367880372 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367698703 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.384595283 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.40058924 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.376255843 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372743782 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500880372 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611953533 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007890374 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.60771724 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.405125581 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.887734987 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366700587 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623614234 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.133477853 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.570046502 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975522886 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.077244792 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634728278 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438760961 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569945193 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.371970894 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506650745 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.382919664 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.3681874 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370954902 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370542562 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.371767792 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.615093041 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983336699 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635930631 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.376550791 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.375780887 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396259145 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.57114417 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.592812035 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091537793 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.5938424 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619585793 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375869478 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370252772 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981629829 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619424809 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372990302 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.374862563 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584168829 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372368299 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400647462 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.06070169 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.369834836 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90967929 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.262580802 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393439189 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377067309 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.082281852 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983867699 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.372704847 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847933435 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375254251 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386975433 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648061964 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.380944035 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.37490437 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651562824 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.37623493 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.371818117 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587599065 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.983024593 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11824038 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.375260119 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392849991 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.37638887 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375370562 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379447367 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373481631 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375416826 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.767545726 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373656497 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375559351 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382746041 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.377311828 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375026402 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.374034982 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374197583 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.379090674 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.372379755 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.369478884 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37515508 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498034843 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914762245 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378395072 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.054253994 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.72563875 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.628433005 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38630715 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.350436937 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.379690054 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37704513 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374929095 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372452734 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365455631 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914546139 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.388031664 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.623481883 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381504889 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.587171818 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585024398 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388168187 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.578380864 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389767435 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397422657 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.350466158 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376718776 seconds)
  done (took 971.593772361 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.396650576 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.388413629 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.368730656 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.378145011 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.387266969 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.415115887 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.418526323 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.448477126 seconds)
  done (took 20.449990375 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.382589379 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.376158066 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.382096483 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.374983869 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.375863352 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.835174235 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.377389998 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.373056584 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.391662198 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.382235495 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.377588871 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.034000524 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.397225332 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.380574312 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.360257951 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.379687009 seconds)
  done (took 32.429443515 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.455362455 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.550878879 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.309271442 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.422611148 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.410759264 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.369696242 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.615381865 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.381560655 seconds)
  done (took 26.765087899 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.384463236 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.381097771 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.382358914 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.384964557 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.382775261 seconds)
  done (took 8.166178044 seconds)
done (took 1234.305199941 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.384849817 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.384198168 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.383899167 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.384986725 seconds)
  done (took 6.788790591 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.353439156 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.354720631 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.353615752 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.366331884 seconds)
  done (took 9.680152483 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.047050318 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.98196258 seconds)
  done (took 5.280524118 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.866196495 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.869018843 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.866752344 seconds)
  done (took 6.856564229 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.659206567 seconds)
  done (took 2.913767524 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.287645032 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.371068238 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.031006202 seconds)
  done (took 7.942863009 seconds)
done (took 40.715927816 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.370656814 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.628811259 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.525525372 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.375401301 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.530036443 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.526390819 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.108439031 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.378508057 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.377093288 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.381731685 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.380530696 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.54504932 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.090062753 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.61781703 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.094257205 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.711580859 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.533416104 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.377802871 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.36968328 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.368954374 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.105648666 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.37980708 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.379315184 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.36839384 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.587097125 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.518123413 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.375376412 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.714337765 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.387076691 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.369951222 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.518532844 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.384059649 seconds)
  done (took 82.632519953 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.386385139 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.370018289 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.368611509 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.402471332 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.370975358 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.387516599 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.371389556 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.372054436 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.369472365 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.38833323 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.377352583 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.369502502 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.385197878 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.370801126 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.385323432 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.371241261 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.371054241 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.375492675 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.375748696 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.373207362 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.371216346 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.369759809 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.371260628 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.369580604 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.374877846 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.388238688 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.389222873 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.372132286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.370302708 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.383377365 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.374991816 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.400049539 seconds)
  done (took 77.333353439 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.387829853 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.373127572 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.392934138 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.374813111 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.375000093 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.376144894 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.376446982 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.389177384 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.376675957 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.393194236 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.376362125 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.383341085 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.375530625 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.376826369 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.37715411 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.376921249 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.378030675 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.393340862 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.378691085 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.377761453 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.377747864 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.38285176 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.376454174 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.389503665 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.377304654 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.37825779 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.377200352 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.384499017 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.378163112 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.405251443 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.377452386 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.381002138 seconds)
  done (took 77.451812759 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.615916725 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.39277963 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.39611741 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.386312737 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.394609327 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.390415339 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.387871797 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.622995911 seconds)
  done (took 14.844009102 seconds)
done (took 253.515567234 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.393946861 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.883172803 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.412516704 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.387854148 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.400866343 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.415100307 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.603854441 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.413020922 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.608403854 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.403793881 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.39807388 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.400807383 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.183912461 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.535357205 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.221737613 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.328204077 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.257663734 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.388684937 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.951913574 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.663183772 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.414234 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.376919479 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.212367874 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.279776031 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.362257278 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.459920106 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.479661957 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.606662394 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.546469195 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.461751646 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.892743483 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.391090465 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.384263972 seconds)
  done (took 64.377401248 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.385220535 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.396434467 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.394896729 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.394504476 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.395484206 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.395298927 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.387330225 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.395544868 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.39405666 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.396333849 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.395802849 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.394629012 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.393397595 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.395963389 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.395817223 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.372100955 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.38477764 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.395374932 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.38573333 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.374302026 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.393780355 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.395147285 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.393154415 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.394566733 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.396150178 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.394324403 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.396442678 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.394650811 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.394908732 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.39908692 seconds)
  done (took 43.036704927 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.397510672 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.968177356 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.099832486 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.392690163 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.38805948 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.392159759 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.670073136 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.394264992 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.393732208 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.391870349 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.86128989 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.400067001 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.420531342 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.111405179 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.388271633 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.39690976 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.398898012 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.390227465 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.97303811 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.397876839 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.670021928 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.398713157 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.672842084 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.39906622 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.392923024 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.390543538 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.392778154 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.195361477 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.407949564 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.866400797 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.145701162 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.66458898 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.133644783 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.157543563 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.143471775 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.40154114 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.399259425 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.86510347 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.393415328 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.391157481 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.668131892 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.389287581 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.12428521 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.059162128 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.407127904 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.398023638 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.218109999 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.865967141 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.627430625 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.394580911 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.156325756 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.393999011 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.402562543 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.394870535 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.628984898 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.392748427 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.391006338 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.235019468 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.393161612 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.671383905 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.399845667 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.393141288 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.976982345 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.388685514 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.971739098 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.393509321 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.399949945 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.394612435 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.119377319 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.390816104 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.074504265 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.40765784 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.402283695 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.866994921 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.966252903 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.260481133 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.392270267 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.974168085 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.141379674 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.683747572 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.393326244 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.182839279 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.683348368 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.394526378 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.404140057 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.403824759 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.400258823 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.468738235 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.671962373 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.005495232 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.064724846 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.235752895 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.668580287 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.403752288 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.394114072 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.238665703 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.398169497 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.404532104 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.114235842 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.067006739 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.407509322 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.401929491 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.062218057 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.406113849 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.674011377 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.400310014 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.156561729 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.39100217 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.472375198 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.40426693 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.403308521 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.398252605 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.676842691 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.399086632 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.403670442 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.061288356 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.896093929 seconds)
  done (took 194.196122296 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.389884708 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.384239639 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.390853818 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.386990145 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.391793817 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.401016991 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.391388159 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.391209812 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.397421351 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.390838009 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.393908759 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.400143909 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.396874682 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.391919712 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.394477918 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.387637759 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.390689969 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.407124429 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.387810772 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.392937347 seconds)
  done (took 45.128576586 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.40574832 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.94636033 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.907572672 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.406701726 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.407251598 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.398744781 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.453161141 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.407817877 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.407301475 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.692794357 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.565283016 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.407607896 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.406761241 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.408993698 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.912647691 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.385757128 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.690768894 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.939728777 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.402388424 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.952037687 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.383073012 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.407567137 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.398052423 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.954321845 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.703279898 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.677147919 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.455878584 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.951179401 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.403031071 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.410134149 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.951522933 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.408918891 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.401391736 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.939732753 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.408417448 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.421919492 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.407381967 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.456784282 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.457078337 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.696645145 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.957357787 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.68555026 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.420029178 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.570545708 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.406292876 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.387050284 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.962734773 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.407331435 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.385961121 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.410035631 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.415047909 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.927030313 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.401488196 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.923283119 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.409652447 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.411268775 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.955029703 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.926002829 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.919035601 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.568616337 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.403729529 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.680915348 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.410645025 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.967162333 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.410047397 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.409286633 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.411728458 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.571875876 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.957004023 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.680963043 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.698625958 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.699665265 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.410951643 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.468699501 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.413093491 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.699343651 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.467859174 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.803053848 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.699135682 seconds)
  done (took 126.785535885 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.663821991 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.519123808 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.775342817 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.992355751 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.912634379 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.535826249 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.513921671 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.638929 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.408492774 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.495789739 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.050875361 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.501922796 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.125439978 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.464847585 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.510822195 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.532328105 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.805523755 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.380906381 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.055101366 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.014671267 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.406395454 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.522076417 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.916345537 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.592935288 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.399653041 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.004550772 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.354663742 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.925965575 seconds)
  done (took 53.295983527 seconds)
done (took 528.079800482 seconds)
SAVING RESULT...
DONE!
